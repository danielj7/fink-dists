diff -Nurd -x'*~' pyobjc-1.4.orig/setup.py pyobjc-1.4/setup.py
--- pyobjc-1.4.orig/setup.py	2006-06-16 18:52:31.000000000 -0400
+++ pyobjc-1.4/setup.py	2009-09-27 12:14:24.000000000 -0400
@@ -86,7 +86,7 @@
         print ""
         raise SystemExit("ObjC runtime not found")
 
-    CFLAGS=[
+    _CFLAGS=[
         "-DMACOSX",
         "-DAPPLE_RUNTIME",
         "-no-cpp-precomp",
@@ -122,6 +122,7 @@
         # g5 optimized
         #"-fast", "-fPIC",
         ]
+    CFLAGS=[]
 
     OBJC_LDFLAGS = frameworks('Foundation', 'Carbon')
     CF_LDFLAGS = frameworks('CoreFoundation', 'Foundation')
@@ -136,7 +137,7 @@
     BASE_LDFLAGS = []
     if AUTO_UNIVERSAL:
         if os.path.exists('/Developer/SDKs/MacOSX10.4u.sdk') and int(os.uname()[2].split('.')[0]) >= 8:
-            CFLAGS.extend([
+            _CFLAGS.extend([
                     '-arch', 'i386', 
                     '-arch', 'ppc',
                     '-isysroot', '/Developer/SDKs/MacOSX10.4u.sdk',
@@ -179,7 +180,7 @@
                 return packages, extensions
         return [], []
 
-    CFLAGS=[
+    _CFLAGS=[
         '-g',
         ##'-O0',
         '-Wno-import',
@@ -189,7 +190,8 @@
         '-DGNU_RUNTIME=1',
         '-DGNUSTEP_BASE_LIBRARY=1',
         '-fconstant-string-class=NSConstantString',
-        '-fgnu-runtime',
+        '-fgnu-runtime']
+    CFLAGS=[
         '-I' + gs_root + '/Headers',
         '-I' + gs_root + '/Headers/gnustep',
         '-I' + gs_root + '/Headers/' + gs_lib_dir
@@ -214,10 +216,13 @@
     SECURITY_INTERFACE_LDFLAGS = []
     EXCEPTION_HANDLING_LDFLAGS = []
 
-CFLAGS.append('-Ibuild/codegen/')
+CFLAGS.insert(0,'-Ibuild/codegen/')
 
 FFI_CFLAGS=['-Ilibffi-src/include']
 
+if os.environ.has_key("CPPFLAGS"):
+    _CFLAGS.insert(0,os.environ.pop("CPPFLAGS"))
+
 # The list below includes the source files for all CPU types that we run on
 # this makes it easier to build fat binaries on Mac OS X.
 FFI_SOURCE=[
