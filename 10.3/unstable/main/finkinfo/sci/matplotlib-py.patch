--- matplotlib/setupext.py.orig	Sat Dec 18 10:54:14 2004
+++ matplotlib/setupext.py	Sat Dec 18 11:03:27 2004
@@ -35,7 +35,7 @@
     'win32'  : ['win32_static',],
     'linux2' : ['/usr/local', '/usr',],
     'linux'  : ['/usr/local', '/usr',],
-    'darwin' : ['/usr/local', '/usr', '/sw', '/usr/X11R6'],
+    'darwin' : ['/usr/X11R6', '/usr' ],
     'freebsd4' : ['/usr/local', '/usr'],
     'sunos5' : [os.getenv('MPLIB_BASE') or '/usr/local',],
 }
@@ -201,10 +201,10 @@
 	print "Using default library and include directories for Tcl and Tk because a"
 	print "Tk window failed to open.  You may need to define DISPLAY for Tk to work"
 	print "so that setup can determine where your libraries are located."
-	o.tcl_lib = "/usr/local/lib"
-	o.tcl_inc = "/usr/local/include"
-	o.tk_lib = "/usr/local/lib"
-        o.tk_inc = "/usr/local/include"
+        o.tcl_lib = "@PREFIX@/lib"
+        o.tcl_inc = "@PREFIX@/include"
+        o.tk_lib = "@PREFIX@/lib"
+        o.tk_inc = "@PREFIX@/include"
 	o.tkv = ""
     else:
 	tk.withdraw()
@@ -250,53 +250,6 @@
         else:
             raise RuntimeError('No tk/win32 support for this python version yet')
         return
-
-    elif sys.platform == 'darwin' :
-        # this config section lifted directly from Imaging - thanks to
-        # the effbot!
-
-        # First test for a MacOSX/darwin framework install
-        from os.path import join, exists
-        framework_dirs = [
-            '/System/Library/Frameworks/',
-            '/Library/Frameworks',
-            join(os.getenv('HOME'), '/Library/Frameworks')
-        ]
-
-        # Find the directory that contains the Tcl.framwork and Tk.framework
-        # bundles.
-        # XXX distutils should support -F!
-	tk_framework_found = 0
-        for F in framework_dirs:
-            # both Tcl.framework and Tk.framework should be present
-            for fw in 'Tcl', 'Tk':
-                if not exists(join(F, fw + '.framework')):
-                    break
-            else:
-                # ok, F is now directory with both frameworks. Continure
-                # building
-                tk_framework_found = 1
-                break
-        if tk_framework_found:
-            # For 8.4a2, we must add -I options that point inside the Tcl and Tk
-            # frameworks. In later release we should hopefully be able to pass
-            # the -F option to gcc, which specifies a framework lookup path.
-            #
-            tk_include_dirs = [
-                join(F, fw + '.framework', H)
-                for fw in 'Tcl', 'Tk'
-                for H in 'Headers', 'Versions/Current/PrivateHeaders'
-            ]
-
-            # For 8.4a2, the X11 headers are not included. Rather than include a
-            # complicated search, this is a hard-coded path. It could bail out
-            # if X11 libs are not found...
-            # tk_include_dirs.append('/usr/X11R6/include')
-            frameworks = ['-framework', 'Tcl', '-framework', 'Tk']
-            module.include_dirs.extend(tk_include_dirs)
-            module.extra_link_args.extend(frameworks)
-            module.extra_compile_args.extend(frameworks)
-            return
 
     # you're still here? ok we'll try it this way
     o = find_tcltk()
--- matplotlib/src/ft2font.cpp	Sat Dec 18 10:55:22 2004
+++ matplotlib/src/ft2font.cpp.orig	Sat Dec 18 10:54:55 2004
@@ -373,7 +373,7 @@
     if ( use_kerning && previous && glyph_index ) { 
       FT_Vector delta;
       FT_Get_Kerning( face, previous, glyph_index,
-		      FT_KERNING_DEFAULT, &delta );
+		      ft_kerning_default, &delta );
       pen.x += delta.x;
     }
     error = FT_Load_Glyph( face, glyph_index, FT_LOAD_DEFAULT ); 
--- matplotlib/setup.py.orig	Sat Dec 18 10:54:01 2004
+++ matplotlib/setup.py	Sat Dec 18 10:58:38 2004
@@ -33,7 +33,7 @@
 #BUILD_TKAGG        = 'auto'
 
 # build a small extension to manage the focus on win32 platforms.
-BUILD_WINDOWING        = 1
+BUILD_WINDOWING        = 0
 #BUILD_WINDOWING        = 'auto'
 
 
@@ -68,7 +68,7 @@
 data.extend(glob.glob('images/*.ppm'))
 data.append('.matplotlibrc')
 
-data_files=[('share/matplotlib', data),]
+data_files=[('share/matplotlib-py@PYVER@', data),]
 
 # Figure out which array packages to provide binary support for
 # and define the NUMERIX value: Numeric, numarray, or both.
@@ -135,23 +135,12 @@
 build_transforms(ext_modules, packages, NUMERIX)
 
 if BUILD_GTKAGG:
-    try:
-        import gtk
-    except ImportError:
-        print 'GTKAgg requires pygtk'
-        BUILD_GTKAGG=0
-    except RuntimeError:
-        print 'pygtk present but import failed'
-if BUILD_GTKAGG:
     BUILD_AGG = 1
     build_gtkagg(ext_modules, packages)
 
 if BUILD_TKAGG:
-    try: import Tkinter
-    except ImportError: print 'TKAgg requires TkInter'
-    else:
-        BUILD_AGG = 1
-        build_tkagg(ext_modules, packages)
+    BUILD_AGG = 1
+    build_tkagg(ext_modules, packages)
 
 
 if BUILD_AGG:
@@ -172,6 +161,8 @@
 for mod in ext_modules:
     if VERBOSE:
         mod.extra_compile_args.append('-DVERBOSE')
+    mod.include_dirs.append('@PREFIX@/include')
+    mod.library_dirs.append('@PREFIX@/lib')
     
 setup(name="matplotlib",
       version= __version__,
--- matplotlib/lib/matplotlib/__init__.py.orig	Mon Dec 13 09:29:53 2004
+++ matplotlib/lib/matplotlib/__init__.py	Wed Dec 22 07:22:40 2004
@@ -291,15 +291,15 @@
         path = os.environ['MATPLOTLIBDATA']
         if os.path.isdir(path): return path
 
-    path = os.path.join(distutils.sysconfig.PREFIX, 'share', 'matplotlib')
+    path = os.path.join(distutils.sysconfig.PREFIX, 'share', 'matplotlib-py@PYVER@')
     if os.path.isdir(path): return path
 
     path = os.path.join(os.sep.join(__file__.split(os.sep)[:-1]), 
-                        'share','matplotlib')
+                        'share','matplotlib-py@PYVER@')
     if os.path.isdir(path): return path
 
     path = os.path.join(os.sep.join(__file__.split(os.sep)[:-5]), 
-                        'share','matplotlib')
+                        'share','matplotlib-py@PYVER@')
     if os.path.isdir(path): return path
 
 	
