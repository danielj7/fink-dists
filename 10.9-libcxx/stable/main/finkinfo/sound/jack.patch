diff -urN jack-audio-connection-kit-0.124.1-orig/config/os/macosx/pThreadUtilities.h jack-audio-connection-kit-0.124.1/config/os/macosx/pThreadUtilities.h
--- jack-audio-connection-kit-0.124.1-orig/config/os/macosx/pThreadUtilities.h	2013-10-03 19:45:25.000000000 -0500
+++ jack-audio-connection-kit-0.124.1/config/os/macosx/pThreadUtilities.h	2016-10-19 22:53:38.000000000 -0500
@@ -66,7 +66,7 @@
 #define __PTHREADUTILITIES_H__
 
 #import "pthread.h"
-#import <CoreServices/../Frameworks/CarbonCore.framework/Headers/MacTypes.h>
+#import <MacTypes.h>
 
 #define THREAD_SET_PRIORITY			0
 #define THREAD_SCHEDULED_PRIORITY		1
diff -urN jack-audio-connection-kit-0.124.1-orig/configure.ac jack-audio-connection-kit-0.124.1/configure.ac
--- jack-audio-connection-kit-0.124.1-orig/configure.ac	2014-01-22 14:23:36.000000000 -0600
+++ jack-audio-connection-kit-0.124.1/configure.ac	2016-10-19 23:23:41.000000000 -0500
@@ -161,7 +161,7 @@
     JACK_CPP_VARARGS_BROKEN=1
     JACK_DO_NOT_MLOCK=1
     JACK_USE_MACH_THREADS=1
-    OS_LDFLAGS="-framework CoreAudio -framework CoreServices -framework AudioUnit"
+    OS_LDFLAGS="-Wl,-framework,CoreAudio -Wl,-framework,CoreServices -Wl,-framework,AudioUnit"
     TRY_POSIX_SHM=yes			# POSIX shm works better
     HOST_DEFAULT_TMP_DIR=/tmp
     ;;
@@ -264,6 +264,20 @@
 	   ])
 )	  
 
+AC_CHECK_FUNC(clock_nanosleep,
+       [
+           AC_DEFINE(HAVE_CLOCK_NANOSLEEP,0,"Whether or not clock_nanosleep can be found in system libraries")
+       ],
+       #
+       # if not found, check librt specifically
+       #
+       AC_CHECK_LIB(rt, clock_nanosleep,
+           [
+              AC_DEFINE(HAVE_CLOCK_NANOSLEEP,1,"Whether or not clock_nanosleep can be found in system libraries")
+	      OS_LDFLAGS="$OS_LDFLAGS -lrt"
+	   ])
+)
+
 # should we use mlockall() on this platform?
 if test "x$JACK_DO_NOT_MLOCK" = "x"; then
     AC_CHECK_HEADER(sys/mman.h,
@@ -309,11 +323,6 @@
 	 
 JACK_CORE_CFLAGS="$JACK_CORE_CFLAGS $JACK_LIBC_HELPER_FLAGS"   
 
-case $build_os in
-     # we need weak linkage which appeared in 10.2, but lets ask for 10.4 anyway
-     darwin*) JACK_CORE_CFLAGS="$JACK_CORE_CFLAGS -mmacosx-version-min=10.4" ;;
-esac    
-
 AC_ARG_WITH(cpu-target,
             [  --with-cpu-target=cpu-type    explicit, overriding argument for gcc -march= flag])
 
diff -urN jack-audio-connection-kit-0.124.1-orig/drivers/dummy/dummy_driver.c jack-audio-connection-kit-0.124.1/drivers/dummy/dummy_driver.c
--- jack-audio-connection-kit-0.124.1-orig/drivers/dummy/dummy_driver.c	2013-10-03 19:45:25.000000000 -0500
+++ jack-audio-connection-kit-0.124.1/drivers/dummy/dummy_driver.c	2016-10-19 23:23:41.000000000 -0500
@@ -73,7 +73,7 @@
         }
 }
 
-#ifdef HAVE_CLOCK_GETTIME
+#if defined(HAVE_CLOCK_GETTIME) && defined(HAVE_CLOCK_NANOSLEEP)
 static inline unsigned long long ts_to_nsec(struct timespec ts)
 {
     return ts.tv_sec * 1000000000LL + ts.tv_nsec;
diff -urN jack-audio-connection-kit-0.124.1-orig/drivers/dummy/dummy_driver.h jack-audio-connection-kit-0.124.1/drivers/dummy/dummy_driver.h
--- jack-audio-connection-kit-0.124.1-orig/drivers/dummy/dummy_driver.h	2013-10-03 19:45:25.000000000 -0500
+++ jack-audio-connection-kit-0.124.1/drivers/dummy/dummy_driver.h	2016-10-19 23:23:41.000000000 -0500
@@ -44,7 +44,7 @@
     jack_nframes_t  period_size;
     unsigned long   wait_time;
 
-#ifdef HAVE_CLOCK_GETTIME
+#if defined(HAVE_CLOCK_GETTIME) && defined(HAVE_CLOCK_NANOSLEEP)
     struct timespec next_wakeup;
 #else
     jack_time_t     next_time;
