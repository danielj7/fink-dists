Package: labplot
Version: 1.6.0.rel2
Revision: 3

Source: mirror:sourceforge:labplot/LabPlot-1.6.0.2.tar.bz2
Source-MD5: 59a9448190b2ebc9b23670f9262a1947

Maintainer: None <fink-devel@lists.sourceforge.net>
Homepage: http://labplot.sourceforge.net
License: GPL

Depends: <<
	%N-shlibs (= %v-%r),
	audiofile-shlibs,
	fftw3-shlibs,
	ghostscript,
	gsl-shlibs,
	hdf5-shlibs,
	imagemagick2-shlibs,
	kdelibs3-unified-shlibs (>= 3.4.0-1),
	koffice-shlibs (>= 1.6.3-1),
	libjasper.1-shlibs,
	libpng14-shlibs,
	libtiff-shlibs,
	netcdf-shlibs,
	qt3-shlibs (>= 3.3.6-2),
	qwtplot3d-shlibs ( >= 0.2.6-6),
	r-base (>= 2.7),
	x11
<<
BuildDepends: <<
	audiofile,
	autoconf2.6,
	automake1.11,
	dpkg-base-files,
	fftw3,
	fink (>= 0.24.12),
	fink-package-precedence,
	gsl,
	hdf5,
	imagemagick2-dev,
	kdelibs3-unified-dev (>= 3.4.0-1),
	koffice-dev (>= 1.6.3-1),
	libjasper.1,
	libtool2,
	libpng14,
	libtiff,
	netcdf,
	qt3 (>= 3.3.6-2),
	qwtplot3d ( >= 0.2.6-6),
	x11-dev,
	xmkmf
<<

TarFilesRename: src/labplot.desktop

PatchFile: %n.patch
PatchFile-MD5: 86e5a12a6708a636a641cb0df3c4ce93
PatchScript: <<
	%{default_script}

## configure searches a hard-coded list of paths
	perl -pi.bak -e 's,^jpeg_incdirs=",$&%p/include ,' acinclude.in

## those Magick++ ldflags could cause eg the lib to link against against the -lqwtplot3d
# of the previous version of labplot (in %p/lib), rather than that of the qwtplot3d pkg.
# dmacks: not sure the above is still a concern now that we *do* use
# external libqwtplot3d and libtool knows to use local .la before
# external -L/-l detection, but still no need to propagate inherited
# builddepends that are only internal-implementaion details.

## USE_QHULL fix added
	perl -pi -e 's, --ldflags,,; s,USE_LIBUNDO,USE_QHULL,' configure.in

## trailing slashes are bad practice, and throw /bin/ln in disarray. Also, use relative paths.
	perl -pi.bak -e 's,/( |$),\1,g; s,ln \-fs \$\(kde_htmldir\),ln -fs ../..,' doc/*/Makefile.am

## with the latest KDE, kexidb/parser.h seems to have disappeared. Zap it.
  perl -pi -e 's/.*parser.h.*//' src/FilterKexiDB.cc

## remove the '--silent' flag from libtool
	perl -pi -e 's,(libtool) --silent,\1,' configure.in

## fink-standard kde doc-location fix
	perl -pi -e "s,doc/HTML,doc/kde," acinclude.m4
<<

SetCPPFLAGS: -I%p/Library/Frameworks/R.framework/Versions/Current/Resources/include

ConfigureParams: <<
 ac_cv_prog_TEXVC="no" --mandir=%p/share/man \
 --with-qt-includes=%p/lib/qt3/include --with-qt-libraries=%p/lib/qt3/lib \
 --disable-fftw --enable-fftw3 --with-extra-includes=%p/include/gsl \
 --enable-netcdf --enable-tiff --enable-gsl \
 --enable-ImageMagick --enable-audiofile --enable-jasper \
 --enable-ocaml --enable-system-qwtplot3d --disable-system-liborigin \
 --disable-qsa --disable-cdf --enable-R --enable-texvc --disable-qhull \
 --enable-dependency-tracking --disable-static ac_cv_header_GL_glu_h=yes
<<
# using disable-qhull to force labplot to use Fink's qhull.
# ^-- ??

DocFiles: COPYING ChangeLog FEATURES TODO AUTHORS CHANGES NEWS README

SetCFLAGS: -Os -fPIC -ffast-math
SetCXXFLAGS: -Os -fPIC -ffast-math
NoSetMAKEFLAGS: true
SetMAKEFLAGS: -j1
CompileScript: <<
#!/bin/sh -ev

	export QWT3D_PATH=%p/lib/qt3/qwtplot3d

	if [ %m = "ppc" ]; then
		export CFLAGS="$CFLAGS -mtune=970 -maltivec"
		export CXXFLAGS="$CXXFLAGS -mtune=970 -maltivec"
	fi

	export PATH=$PATH:%p/lib/xmkmf/bin

	libtoolize
	autoreconf -fi
	./configure %c
	make
	fink-package-precedence --prohibit-bdep=liborigin .
<<

InstallScript: <<
#!/bin/sh -ev

make install DESTDIR=%d

mkdir -p %i/share/doc/%n
cp -R examples %i/share/doc/%n

mkdir -p %i/etc/profile.d
cat >> %i/etc/profile.d/%N.sh <<'EOF'
#!/bin/sh
export R_HOME=`R RHOME`
if [ ${SSH_TTY} ]; then
    export LIBGL_ALWAYS_INDIRECT=1
fi
EOF
cat >> %i/etc/profile.d/%N.csh <<'EOF'
#!/bin/csh
setenv R_HOME `R RHOME`
if ( $?SSH_TTY ) then
    setenv LIBGL_ALWAYS_INDIRECT 1
endif
EOF
chmod 755 %i/etc/profile.d/*
<<

SplitOff: <<
	Package: %N-shlibs
	Depends: <<
		pstoedit-bin
	<<

	Files: lib/*.*.dylib

	Shlibs: <<
	%p/lib/libLabPlotcephes.1.dylib 7.0.0 %n (>=1.6.0-1)
	%p/lib/libLabPlot.1.dylib  8.0.0 %n (>=1.6.0.rel2-3)
	<<

	DocFiles: COPYING ChangeLog FEATURES TODO AUTHORS CHANGES NEWS README
<<

DescPackaging: <<
Many thanks goes to Jean-Francois Mertens for cleaning
up the info file, big-time.

Previously maintained by Murali Vadivelu

qsa and cdf are not avilable yet, in fink.
Will add qsa support sooner than later!

Fink's liborigin not new enough, so make sure we *don't* see it. Also
fix internal use to be more consistent with autotools file handling,
correct variable-names, alternatives, and precedence for variable that
might be a local -I flag.

Liborigin has no clue about interface stability, so sanest just to use
internal implementation instead of trying to track that developer
silliness. Debian has some patches if anyone cares to try though.
<<

DescPort: <<
GL/glu.h test fails because -I for X11 isn't in CPPFLAGS yet. Just
hardcode test result instead of messing with CPPFLAGS (avoids passing
that -I before fink's own--potential overlaying problems)

Clean up some null-variable mistakes (passing -I$FOO/include without
protecting likely/possible case that $FOO is not defined)

ac_cv_prog_TEXVC="no" in order that texvc be rebuilt even
if one (from a previous version) is already installed

Some symbols in libLabPlot do not seem resolveable anywhere, so cannot
use -no-undefined for sanity-checking. They don't appear to be
required for linking of final executable, so not fixing anything
related to it.

But do add direct links for executable for things that had been
inherited via .la (BDep:dpkg-base-files to make sure they have no
data)

Don't symlink among different filename cases because we are often on
case-insensitive FS.

No direct use of bzip (just internal for magick) so omit checks for
it.

Use pkg-config to test for imagemagick rather than relying on older
-config and associated tests. But completely overhaul rather than
debian's simple change from "Magick++-config" to "pkg-config
ImageMagick++".
<<

Description: Data analysis and visualisation
DescDetail: <<
LabPlot is a KDE program for two- and three-dimensional
graphical presentation of data sets and functions.
LabPlot allows you to work with multiple plots
which each can have multiple graphs. The graphs can be
produced from data or from functions, including user
defined (up to 9 parameters).
<<
