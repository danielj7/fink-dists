Package: arts
Version: 1.1.2
Revision: 1
Description: KDE - analog realtime synthesizer
License: GPL
Maintainer: Benjamin Reed <ranger@befunk.com>

Depends: %N-shlibs (>= %v-%r), audiofile-shlibs, dlcompat-shlibs (>= 20021117-2), esound-shlibs, libogg-shlibs, libpoll-shlibs (>= 1.1-1), libvorbis0-shlibs, mad-shlibs
BuildDepends: audiofile, autoconf2.54, automake1.6, cctools (>= 446-1), dlcompat-dev (>= 20021117-2), esound, fink (>= 0.12.1-1), glib2, libogg, libpng3 (>= 1.2.5-4), libpoll (>= 1.1-1), libvorbis0, mad, pkgconfig (>= 0.12.1-1), qt3 (>= 3.1.0-1), x11
Replaces: %N-dev (<< %v-%r)
GCC: 3.1

CustomMirror: <<
  nam-US: http://ranger.befunk.com/fink
  nam-US: http://astrange.ithinksw.net/ranger-fink
  nam-CA: http://www.southofheaven.net/befunk
<<
Source: mirror:kde:stable/3.1.2/src/%n-%v.tar.bz2
Source-MD5: 5d5a1858f8dcf0d88600291899dff75b
Source2: mirror:custom:kde-admindir-20030506.tar.bz2
Source2-MD5: 7b9c78d99df465f0fb7db434205657aa
Source2ExtractDir: %n-%v

PatchScript: sed -e 's|@PREFIX@|%p|g' <%a/%f.patch | patch -p0

SetCPPFLAGS: -no-cpp-precomp -g -DMACOSX -DARTS_NO_ALARM -isystem %p/include -I%p/include
SetLIBS: -L%p/lib
NoSetLDFLAGS: true
SetMACOSX_DEPLOYMENT_TARGET: 10.2
ConfigureParams: --includedir=%p/include --libdir=%p/lib --with-extra-includes=%p/include --with-extra-libs=%p/lib --with-qt-dir=%p --with-qt-includes=%p/include/qt --enable-rpath --with-pic --enable-shared=yes --enable-static=no --mandir=%p/share/man --infodir=%p/share/info --libexecdir=%p/lib --with-xinerama --with-pam --enable-final
CompileScript: <<
#!/bin/sh
  export LD_TWOLEVEL_NAMESPACE=1
  mkdir -p /tmp/kde-build

  date > /tmp/kde-build/%N-%v-%r.cvs && \
  (make -f admin/Makefile.common cvs 2>&1 | tee -a /tmp/kde-build/%N-%v-%r.cvs) && \
  date > /tmp/kde-build/%N-%v-%r.configure && \
  (sh ./configure %c 2>&1 | tee -a /tmp/kde-build/%N-%v-%r.configure) && \
  date > /tmp/kde-build/%N-%v-%r.make && \
  (make -j2 all 2>&1 | tee -a /tmp/kde-build/%N-%v-%r.make)
<<

InstallScript: <<
#!/bin/sh
  mkdir -p /tmp/kde-build
  mkdir -p %i/share/doc/kde-installed-packages
  touch %i/share/doc/kde-installed-packages/%N

  date > /tmp/kde-build/%N-%v-%r.install && \
  (make install DESTDIR=%d 2>&1 | tee -a /tmp/kde-build/%N-%v-%r.install)
<<
DocFiles: COPYING COPYING.LIB INSTALL
SplitOff: <<
  Package: %N-shlibs
  Description: KDE - arts shared libraries
  Depends: audiofile-shlibs, dlcompat-shlibs (>= 20021117-2), esound-shlibs, glib2-shlibs, libogg-shlibs, libpng3-shlibs (>= 1.2.5-4), libpoll-shlibs (>= 1.1-1), libvorbis0-shlibs, mad-shlibs, qt3-shlibs (>= 3.1.0-1), x11
  Replaces: %N (<< %v-%r)
  Recommends: %N (>= %v-%r)
  BuildDependsOnly: true
  Files: <<
    lib/libartsc.1*.dylib
    lib/libartsflow.1*.dylib
    lib/libartsflow_idl.1*.dylib
    lib/libgmcop.1*.dylib
    lib/libkmedia2.1*.dylib
    lib/libkmedia2_idl.1*.dylib
    lib/libmcop.1*.dylib
    lib/libmcop_mt.1*.dylib
    lib/libqtmcop.1*.dylib
    lib/libsoundserver_idl.1*.dylib
    lib/libx11globalcomm.1*.so
  <<
  Shlibs: <<
    %p/lib/libartsc.1.dylib 1.1.0 %N-shlibs (>= 1.1.0-10)
    %p/lib/libartsflow.1.dylib 2.0.0 %N-shlibs (>= 1.1.0-10)
    %p/lib/libartsflow_idl.1.dylib 2.0.0 %N-shlibs (>= 1.1.0-10)
    %p/lib/libgmcop.1.dylib 2.0.0 %N-shlibs (>= 1.1.0-10)
    %p/lib/libkmedia2.1.dylib 2.0.0 %N-shlibs (>= 1.1.0-10)
    %p/lib/libkmedia2_idl.1.dylib 2.0.0 %N-shlibs (>= 1.1.0-10)
    %p/lib/libmcop.1.dylib 2.0.0 %N-shlibs (>= 1.1.0-10)
    %p/lib/libmcop_mt.1.dylib 2.0.0 %N-shlibs (>= 1.1.0-10)
    %p/lib/libqtmcop.1.dylib 2.0.0 %N-shlibs (>= 1.1.0-10)
    %p/lib/libsoundserver_idl.1.dylib 2.0.0 %N-shlibs (>= 1.1.0-10)
  <<
<<
SplitOff2: <<
  Package: %N-dev
  Description: KDE - arts development headers and libraries
  Depends: %N-shlibs (>= %v-%r), %N (>= %v-%r)
  Replaces: %N (<< %v-%r)
  Recommends: audiofile, autoconf2.54, automake1.6, dlcompat-dev (>= 20021117-2), esound, fink (>= 0.12.1-1), glib2, libogg, libpng3 (>= 1.2.5-4), libpoll (>= 1.1-1), libvorbis0, mad, pkgconfig (>= 0.12.1-1), qt3 (>= 3.1.0-1), x11
  BuildDependsOnly: true
  Files: <<
    bin/artsc-config
    bin/mcopidl
    include/
    lib/libartsc.dylib
    lib/libartsdsp.dylib
    lib/libartsdsp_st.dylib
    lib/libartsflow.dylib
    lib/libartsflow_idl.dylib
    lib/libgmcop.dylib
    lib/libkmedia2.dylib
    lib/libkmedia2_idl.dylib
    lib/libmcop.dylib
    lib/libmcop_mt.dylib
    lib/libqtmcop.dylib
    lib/libsoundserver_idl.dylib
    lib/libx11globalcomm.so
  <<
<<

DaemonicFile: <<
  <service>
    <description>Analog Realtime Synthesizer Server</description>
    <message>Analog Realtime Synthesizer Server</message>

    <daemon name="artsd">
      <executable background="yes">%p/bin/artsd</executable>
      <!-- the daemon will background itself, but may take a while
           to start up to the point where it does so -->
      <pidfile>%p/var/run/arts.pid</pidfile>
    </daemon>

  </service>
<<
DaemonicName: arts

Homepage: http://linux.twc.de/arts/
DescDetail: <<
aRts is a framework for developing modular multimedia applications. The
sound server, artsd, allows multiple applications to cooperatively process
and output sound and music. aRts is designed to provide its filter and
synthesis capabilities to other applications using the multimedia
communication protocol (MCOP). aRts is also capable of modular realtime
synthesis. It can create sounds & music (realtime midi synthesis) using
small modules like oscillators for creating waveforms, various filters,
mixers, faders, etc.
<<
DescUsage: <<
---[ Installation ]---------------------------------------------------

To install all of the official KDE packages, install "bundle-kde" or
"bundle-kde-ssl" (depending on whether crypotgraphic laws permit
downloading strong cryptography).

---[ Configuration ]--------------------------------------------------

To use KDE as your windowing system in XDarwin, create a file called
".xinitrc" in your home directory, with the following commands (it is
safe to cut and paste these):

  echo "source /sw/bin/init.sh" > ~/.xinitrc
  echo "/sw/bin/startkde >/tmp/kde.log 2>&1" >> ~/.xinitrc

Note that this will overwrite an existing .xinitrc file!

---[ Startup ]--------------------------------------------------------

Once you have created an ~/.xinitrc file, you should be able to start
KDE by clicking on the "XDarwin" icon in your Applications folder.

NOTE: If you plan on running in rootless mode, you will likely want to
disable desktop icons, or else the root window desktop will cover up
your Aqua destkop.  You can do this by starting the KDE control
center, expanding the "Desktop" list, click "Behavior", and uncheck
the "Enable icons on desktop" checkbox.

---[ Removal ]--------------------------------------------------------

To remove all of the official KDE packages, you can remove aRts and
anything that depends on it, by running (in a terminal):

  sudo apt-get remove arts
<<
DescPackaging: <<
Patches were generated from the KDE-Darwin tree:
http://www.opendarwin.org/projects/KDE-Darwin/
<<
