diff -uNr nant-0.85-rc3/src/NAnt.DotNet/Tasks/AssemblyInfoTask.cs nant-0.85-rc3-patched/src/NAnt.DotNet/Tasks/AssemblyInfoTask.cs
--- nant-0.85-rc3/src/NAnt.DotNet/Tasks/AssemblyInfoTask.cs	2005-04-16 07:55:12.000000000 -0400
+++ nant-0.85-rc3-patched/src/NAnt.DotNet/Tasks/AssemblyInfoTask.cs	2005-06-05 20:44:00.000000000 -0400
@@ -323,7 +323,6 @@
 
             private CodeLanguage _language;
             private readonly ICodeGenerator _generator;
-            private readonly AssemblyInfoTask _assemblyInfoTask;
 
             #endregion Private Instance Fields
 
@@ -353,7 +352,6 @@
 
                 _generator = provider.CreateGenerator();
                 _language = codeLanguage;
-                _assemblyInfoTask = assemblyInfoTask;
             }
 
             #endregion Public Instance Constructors
diff -uNr nant-0.85-rc3/src/NAnt.DotNet/Tasks/ScriptTask.cs nant-0.85-rc3-patched/src/NAnt.DotNet/Tasks/ScriptTask.cs
--- nant-0.85-rc3/src/NAnt.DotNet/Tasks/ScriptTask.cs	2005-04-16 07:55:12.000000000 -0400
+++ nant-0.85-rc3-patched/src/NAnt.DotNet/Tasks/ScriptTask.cs	2005-06-05 20:44:00.000000000 -0400
@@ -502,12 +502,10 @@
         }
 
         internal class CompilerInfo {
-            private LanguageId _lang;
             public readonly ICodeCompiler Compiler;
             public readonly ICodeGenerator CodeGen;
 
             public CompilerInfo(LanguageId languageId, CodeDomProvider provider) {
-                _lang = languageId;
 
                 Compiler = provider.CreateCompiler();
                 CodeGen = provider.CreateGenerator();
diff -uNr nant-0.85-rc3/src/NAnt.NUnit/NUnit1/XmlResultFormatter.cs nant-0.85-rc3-patched/src/NAnt.NUnit/NUnit1/XmlResultFormatter.cs
--- nant-0.85-rc3/src/NAnt.NUnit/NUnit1/XmlResultFormatter.cs	2004-12-23 22:54:08.000000000 -0500
+++ nant-0.85-rc3-patched/src/NAnt.NUnit/NUnit1/XmlResultFormatter.cs	2005-06-05 20:44:00.000000000 -0400
@@ -172,13 +172,11 @@
 
         #region Private Static Fields
 
-        const string ElementTestSuites = "testsuites";
         const string ElementTestSuite = "testsuite";
         const string ElementTestCase = "testcase";
         const string ElementError = "error";
         const string ElementFailure = "failure";
 
-        const string AttributePackage = "package";
         const string AttributeName = "name";
         const string AttributeTime = "time";
         const string AttributeErrors = "errors";
diff -uNr nant-0.85-rc3/src/NAnt.SourceControl/Tasks/ChangeLogTask.cs nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/ChangeLogTask.cs
--- nant-0.85-rc3/src/NAnt.SourceControl/Tasks/ChangeLogTask.cs	2004-11-10 02:33:44.000000000 -0500
+++ nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/ChangeLogTask.cs	2005-06-05 20:44:00.000000000 -0400
@@ -65,7 +65,6 @@
 
         #region Private Static Fields
 
-        private static readonly log4net.ILog Logger = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
 
         #endregion Private Static Fields
 
diff -uNr nant-0.85-rc3/src/NAnt.SourceControl/Tasks/CvsTask.cs nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/CvsTask.cs
--- nant-0.85-rc3/src/NAnt.SourceControl/Tasks/CvsTask.cs	2005-02-13 14:29:26.000000000 -0500
+++ nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/CvsTask.cs	2005-06-05 20:44:00.000000000 -0400
@@ -50,7 +50,6 @@
     public class CvsTask : AbstractCvsTask {
 
         #region Private Instance Fields
-        private static readonly log4net.ILog Logger = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
 
         private string _commandName;
         #endregion
diff -uNr nant-0.85-rc3/src/NAnt.SourceControl/Tasks/ExportTask.cs nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/ExportTask.cs
--- nant-0.85-rc3/src/NAnt.SourceControl/Tasks/ExportTask.cs	2004-12-30 14:45:54.000000000 -0500
+++ nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/ExportTask.cs	2005-06-05 20:44:00.000000000 -0400
@@ -76,9 +76,7 @@
     public class ExportTask : AbstractCvsTask {
         #region Private Instance Fields
 
-        private static readonly log4net.ILog Logger = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
 
-        private ArgumentCollection _exportFiles = new ArgumentCollection();
 
         #endregion
 
@@ -190,9 +188,6 @@
             set {SetCommandOption("date", String.Format(CultureInfo.InvariantCulture,"\"-D {0}\"", DateParser.GetCvsDateString(value)), true);}
         }
 
-        private bool HasDate {
-            get {return !(null == CommandOptions["date"]);}
-        }
 
         /// <summary>
         /// Specify a directory name to replace the module name.  Valid names
diff -uNr nant-0.85-rc3/src/NAnt.SourceControl/Tasks/RTagTask.cs nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/RTagTask.cs
--- nant-0.85-rc3/src/NAnt.SourceControl/Tasks/RTagTask.cs	2005-04-13 16:16:50.000000000 -0400
+++ nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/RTagTask.cs	2005-06-05 20:44:00.000000000 -0400
@@ -86,7 +86,6 @@
 
         #region Private Static Fields
 
-        private static readonly log4net.ILog Logger = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
 
         #endregion Private Static Fields
 
diff -uNr nant-0.85-rc3/src/NAnt.SourceControl/Tasks/TagTask.cs nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/TagTask.cs
--- nant-0.85-rc3/src/NAnt.SourceControl/Tasks/TagTask.cs	2005-04-13 16:16:52.000000000 -0400
+++ nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/TagTask.cs	2005-06-05 20:44:00.000000000 -0400
@@ -87,7 +87,6 @@
 
         #region Private Static Fields
 
-        private static readonly log4net.ILog Logger = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
 
         #endregion Private Static Fields
 
diff -uNr nant-0.85-rc3/src/NAnt.SourceControl/Tasks/UpdateTask.cs nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/UpdateTask.cs
--- nant-0.85-rc3/src/NAnt.SourceControl/Tasks/UpdateTask.cs	2004-07-21 07:51:46.000000000 -0400
+++ nant-0.85-rc3-patched/src/NAnt.SourceControl/Tasks/UpdateTask.cs	2005-06-05 20:44:00.000000000 -0400
@@ -198,9 +198,6 @@
 
         #region Private Static Fields
 
-        private static readonly log4net.ILog Logger = 
-            log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
-
         #endregion Private Static Fields
 
         #region Public Constants
diff -uNr nant-0.85-rc3/tests/NAnt.Core/ExceptionTest.cs nant-0.85-rc3-patched/tests/NAnt.Core/ExceptionTest.cs
--- nant-0.85-rc3/tests/NAnt.Core/ExceptionTest.cs	2004-12-26 23:11:18.000000000 -0500
+++ nant-0.85-rc3-patched/tests/NAnt.Core/ExceptionTest.cs	2005-06-05 20:44:00.000000000 -0400
@@ -130,20 +130,6 @@
             Assert.IsTrue(ci.IsFamily, t.Name + description + " is not protected, must be protected.");
         }
 
-        private void CheckPublicOrProtectedConstructor(Type t, string description, params Type[] parameters) {
-            // locate constructor
-            ConstructorInfo ci = t.GetConstructor(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance, null, parameters, null);
-            // fail if constructor does not exist
-            Assert.IsNotNull(ci, t.Name + description + " is a required constructor.");
-            // fail if constructor is private
-            Assert.IsFalse(ci.IsPrivate, t.Name + description + " is private, must be public or protected.");
-            // fail if constructor is internal
-            Assert.IsFalse(ci.IsAssembly, t.Name + description + " is internal, must be public or protected.");
-            // fail if constructor is protected internal
-            Assert.IsFalse(ci.IsFamilyOrAssembly, t.Name + description + " is protected internal, must be public or protected.");
-            // sainty check to make sure the constructor is protected or public
-            Assert.IsTrue(ci.IsPublic || ci.IsFamily, t.Name + description + " is not public or protected, must be public or protected.");
-        }
 
         private void CheckPrivateConstructor(Type t, string description, params Type[] parameters) {
             // locate constructor
