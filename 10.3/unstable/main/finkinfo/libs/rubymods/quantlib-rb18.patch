--- QuantLib-Ruby-0.3.6.orig/setup.rb	Thu Apr 15 06:53:35 2004
+++ QuantLib-Ruby-0.3.6/setup.rb	Thu May 20 21:47:52 2004
@@ -57,11 +57,16 @@
 Version = "0.3.6"
 
 # Files
+cfg = Config::MAKEFILE_CONFIG
 Info     =    [ 'Authors.txt', 'ChangeLog.txt', 'Contributors.txt',
                 'LICENSE.TXT', 'README.txt', 'History.txt', 'News.txt',
                 'QuantLib-Ruby.spec' ]
 Sources  =    [ 'QuantLib.rb', 'quantlib_wrap.cpp' ]
-Binaries =    [ 'QuantLibc.so' ]
+if cfg['host_os']=='darwin'
+	Binaries = 'QuantLibc.bundle'
+else
+	Binaries = 'QuantLibc.so'
+end
 Scripts  =    [ 'setup.rb' ]
 
 Interfaces =  [ 'quantlib.i',
@@ -151,7 +156,7 @@
     case cfg['host_os']
       when 'mswin32'
         system "zip -q -r #{distDir}.zip #{distDir}/"
-      when 'linux','linux-gnu'
+      when 'linux','linux-gnu','darwin'
         system "tar cfz #{distDir}.tar.gz #{distDir}/"
       else
         puts "Unknown host: " + cfg['host_os']
@@ -170,7 +175,7 @@
         $CPPFLAGS += " /DNOMINMAX"
         $CPPFLAGS += " /I#{QL_DIR}"
         $LIBPATH  += ["#{QL_DIR}\\lib\\Win32\\VisualStudio"]
-      when 'linux','linux-gnu'
+      when 'linux','linux-gnu','darwin'
         $CFLAGS   += " " + (ENV['CFLAGS'] || "")
         $CPPFLAGS += " " + IO.popen("quantlib-config --cflags").gets.strip
         $CPPFLAGS += " -Wno-uninitialized -Wno-unused-function"
@@ -180,6 +185,10 @@
         cfg['CC'] = ENV['CXX'] || "g++"
         cfg['CPP'].sub!(old_cc,cfg['CC'])
         cfg['LDSHARED'].sub!(old_cc,cfg['CC'])
+	if cfg['host_os']=='darwin'
+	  cfg['LDSHARED'].sub!('cc',cfg['CC'])
+  	  cfg['LDSHARED'] += " -flat_namespace -undefined suppress"
+	end
       else
         puts "Unknown host: " + cfg['host_os']
     end
@@ -213,10 +222,10 @@
     [distDir,swigDir,testDir].each { |path| File.makedirs path }
     Info.each       { |file| File.syscopy file, distDir }
     Sources.each    { |file| File.syscopy file, distDir }
-    Binaries.each   { |file| File.syscopy file, distDir }
     Scripts.each    { |file| File.syscopy file, distDir }
     Interfaces.each { |file| File.syscopy '../SWIG/'+file, swigDir }
     Tests.each      { |file| File.syscopy 'test/'+file, testDir }
+    File.syscopy Binaries, distDir
     system "tar cfz #{distDir}.#{Config::CONFIG['arch']}.tar.gz #{distDir}/"
 }
 
@@ -230,17 +239,17 @@
         # strip old prefix and add the new one
         oldPrefix = Config::CONFIG["prefix"]
         archDir    = Prefix + \
-                     Config::CONFIG["archdir"].gsub(/^#{oldPrefix}/,"")
+                     Config::CONFIG["sitearchdir"].gsub(/^#{oldPrefix}/,"")
         libDir     = Prefix + \
-                     Config::CONFIG["rubylibdir"].gsub(/^#{oldPrefix}/,"")
+                     Config::CONFIG["sitelibdir"].gsub(/^#{oldPrefix}/,"")
     end
     [archDir,libDir].each { |path| File.makedirs path }
-    File.install "./QuantLibc.so", archDir+"/QuantLibc.so", 0555, true
+    File.install "./"+Binaries, archDir+"/"+Binaries, 0555, true
     File.install "./QuantLib.rb", libDir+"/QuantLib.rb", 0555, true
 }
 
 Clean = Command.new {
-    ['QuantLibc.so','quantlib_wrap.cpp','quantlib_wrap.o',
+    [Binaries,'quantlib_wrap.cpp','quantlib_wrap.o',
      'Makefile','mkmf.log'].each { |file|
       File.safe_unlink file if File.exists? file
     }
