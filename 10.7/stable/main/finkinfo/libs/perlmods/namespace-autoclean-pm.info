Info3: <<
Package: namespace-autoclean-pm%type_pkg[perl]
Version: 0.15
Revision: 1
Description: Keep imports out of namespace
Type: perl(5.12.3 5.12.4 5.16.2)
License: Artistic
Maintainer: Benjamin Reed <namespace-autoclean-pm@fink.raccoonfink.com>

Depends: <<
	b-hooks-endofscope-pm%type_pkg[perl],
	list-util-pm%type_pkg[perl],
	moose-pm%type_pkg[perl] (>= 2.0002-2),
	namespace-clean-pm%type_pkg[perl] (>= 0.20-1),
	perl%type_pkg[perl]-core,
<<
BuildDepends: <<
	module-build-tiny-pm%type_pkg[perl],
	sub-name-pm%type_pkg[perl]
<<

Source: mirror:cpan:modules/by-module/namespace/namespace-autoclean-%v.tar.gz
Source-MD5: 2171cadd3d6f3bf11679f380c7c6656d

UpdatePOD: true
InstallScript: <<
%{default_script}
mv %i/share/man %i/lib/perl5/%type_raw[perl]
<<
DocFiles: CONTRIBUTING Changes LICENSE README

Homepage: http://search.cpan.org/dist/namespace-autoclean
DescDetail: <<
When you import a function into a Perl package, it will naturally also be
available as a method.

The namespace::autoclean pragma will remove all imported symbols at the end
of the current package's compile cycle.  Functions called in the package
itself will still be bound by their name, but they won't show up as methods
on your class or instances.

This module is very similar to namespace::clean, except it will clean all
imported functions, no matter if you imported them before or after you used
the pragma.  It will also not touch anything that looks like a method,
according to Class::MOP::Class::get_method_list.
<<
<<

