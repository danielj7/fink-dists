Package: wine
Version: 0.9.21
Revision: 2
Description: Microsoft Windows compatibility layer
License: LGPL
Maintainer: Trevor Harmon <trevor@vocaro.com>

# Does not compile on PowerPC.
# error: encode_type: VT_USERDEFINED - unhandled type 17
Architecture: i386

# According to the Wine README, any GCC higher than 2.7.2 should work, but only GCC 4.x has been tested.
# See Wine's documentation/PACKAGING file for more details about dependencies.
# I may have gone overboard on these dependencies, but better safe than sorry.
BuildDepends: arts-dev, audiofile, bison, dbus-dev, esound, fontconfig2-dev, flex (>= 2.5), fontforge, freeglut, gcc4.0, giflib | libungif, glib2-dev, jack-dev, lcms, lcms-bin, libgettext3-dev, libgl-dev, libiconv-dev, libicu32-dev, libjpeg, libusb, libxml2, libxml2-bin, libxslt, libxslt-bin, openldap23-dev, openssl097-dev, sane-backends-dev, x11-dev
Depends: arts-shlibs, audiofile-shlibs, dbus-shlibs, esound-shlibs, fontconfig2-shlibs, freeglut-shlibs, freetype2-hinting-shlibs | freetype2-shlibs, giflib-shlibs | libungif-shlibs, glib2-shlibs, jack-shlibs, lcms-shlibs, libgettext3-shlibs, libgl-shlibs, libiconv, libjpeg-shlibs, libusb-shlibs, libxml2-shlibs, libxslt-shlibs, openldap23-shlibs, openssl097-shlibs, sane-backends-shlibs, x11

Source: mirror:sourceforge:%n/%n-%v.tar.bz2
Source-MD5: 4f9528529153399034ab807478887456
GCC: 4.0
NoSetCPPFLAGS: true
SetCPPFLAGS: -DDBUS_API_SUBJECT_TO_CHANGE
NoSetLDFLAGS: true
SetLIBRARY_PATH: %p/lib
# A custom CompileScript is necessary for the extra "make depend" step
CompileScript: <<
#!/bin/sh -ev
 export CPATH=%p/include/dbus-1.0:%p/lib/dbus-1.0/include:/usr/X11R6/include:%p/include
 ./configure %c
 make depend
 make
<<

DocFiles: ANNOUNCE AUTHORS COPYING.LIB ChangeLog LICENSE README VERSION
DescPort: <<
Didn't find "dbus/dbus.h" : added %p/include/dbus-1.0:%p/lib/dbus-1.0/include to search path, and required CPPFLAGS
fontconfig.h : added /usr/X11R6/include
<<

DescDetail: <<
Wine is a translation layer (a program loader) capable of running Windows
applications on Linux and other POSIX compatible operating systems. Windows
programs running in Wine act as native programs would, running without the
performance or memory usage penalties of an emulator, with a similar look and
feel to other applications on your desktop.
<<
DescUsage: <<
Wine uses X Windows for its backend, so you need to start your X Server
(e.g. X11) before running Wine. In addition, Wine needs a valid DISPLAY
variable in order to find the X server. For example:

  export DISPLAY=:0.0

Also, Wine is unable to find the FreeType libraries unless you add Fink's lib
directory to the library path. For example:

  export LD_LIBRARY_PATH=%p/lib

Another note: The ~/.wine directory is supposed to be created and set up
automatically the first time you launch Wine. However, I have experienced
"wineserver: could not save registry branch" errors during the initial launch.
To fix this problem, run wineprefixcreate before launching Wine. This should
create the ~/.wine directory and populate it with the necessary files. You may
still see error messages, but the directory will be created. For example:

  export LD_LIBRARY_PATH=%p/lib
  %p/bin/wineprefixcreate

This only needs to be done once.
<<

Homepage: http://www.winehq.org/

SplitOff: <<
  Package: %N-dev
  Depends: %N (= %v-%r)
  BuildDependsOnly: true
  Files: include
<<
