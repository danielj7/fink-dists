diff -uNr kdenetwork-3.3.1/admin/ltmain.sh kdenetwork-3.3.1-new/admin/ltmain.sh
--- kdenetwork-3.3.1/admin/ltmain.sh	Tue Jun 15 12:47:06 2004
+++ kdenetwork-3.3.1-new/admin/ltmain.sh	Tue Nov  9 13:04:20 2004
@@ -4397,6 +4397,7 @@
 	# We should set the shlibpath_var
 	rpath=
 	for dir in $temp_rpath; do
+     if test "$dir" != "@FINKPREFIX@/lib"; then
 	  case $dir in
 	  [\\/]* | [A-Za-z]:[\\/]*)
 	    # Absolute path.
@@ -4407,6 +4408,7 @@
 	    rpath="$rpath\$thisdir/$dir:"
 	    ;;
 	  esac
+     fi
 	done
 	temp_rpath="$rpath"
       fi
diff -uNr kdenetwork-3.3.1/configure kdenetwork-3.3.1-new/configure
--- kdenetwork-3.3.1/configure	Sun Oct  3 10:30:31 2004
+++ kdenetwork-3.3.1-new/configure	Tue Nov  9 13:04:20 2004
@@ -9622,10 +9622,21 @@
       archive_cmds_need_lc=no
       case "$host_os" in
       rhapsody* | darwin1.[012])
-	allow_undefined_flag='-undefined suppress'
+	allow_undefined_flag='-Wl,-undefined -Wl,suppress'
 	;;
       *) # Darwin 1.3 on
-	test -z ${LD_TWOLEVEL_NAMESPACE} && allow_undefined_flag='-flat_namespace -undefined suppress'
+	if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+	  allow_undefined_flag='-Wl,-flat_namespace -Wl,-undefined -Wl,suppress'
+	else
+	  case ${MACOSX_DEPLOYMENT_TARGET} in
+	    10.[012])
+	      allow_undefined_flag='-Wl,-flat_namespace -Wl,-undefined -Wl,suppress'
+	      ;;
+	    10.*)
+	      allow_undefined_flag='-Wl,-undefined -Wl,dynamic_lookup'
+	      ;;
+	  esac
+	fi
 	;;
       esac
     	lt_int_apple_cc_single_mod=no
@@ -11475,7 +11486,18 @@
       allow_undefined_flag='-undefined suppress'
       ;;
     *) # Darwin 1.3 on
-      test -z ${LD_TWOLEVEL_NAMESPACE} && allow_undefined_flag='-flat_namespace -undefined suppress'
+	if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+	  allow_undefined_flag='-Wl,-flat_namespace -Wl,-undefined -Wl,suppress'
+	else
+	  case ${MACOSX_DEPLOYMENT_TARGET} in
+	    10.[012])
+	      allow_undefined_flag='-Wl,-flat_namespace -Wl,-undefined -Wl,suppress'
+	      ;;
+	    10.*)
+	      allow_undefined_flag='-Wl,-undefined -Wl,dynamic_lookup'
+	      ;;
+	  esac
+	fi
       ;;
     esac
     output_verbose_link_cmd='echo'
@@ -12526,7 +12548,18 @@
       allow_undefined_flag_CXX='-undefined suppress'
       ;;
     *) # Darwin 1.3 on
-      test -z ${LD_TWOLEVEL_NAMESPACE} && allow_undefined_flag_CXX='-flat_namespace -undefined suppress'
+	if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+	  allow_undefined_flag_CXX='-Wl,-flat_namespace -Wl,-undefined -Wl,suppress'
+	else
+	  case ${MACOSX_DEPLOYMENT_TARGET} in
+	    10.[012])
+	      allow_undefined_flag_CXX='-Wl,-flat_namespace -Wl,-undefined -Wl,suppress'
+	      ;;
+	    10.*)
+	      allow_undefined_flag_CXX='-Wl,-undefined -Wl,dynamic_lookup'
+	      ;;
+	  esac
+	fi
       ;;
     esac
     lt_int_apple_cc_single_mod=no
@@ -16349,7 +16382,18 @@
 	allow_undefined_flag_F77='-undefined suppress'
 	;;
       *) # Darwin 1.3 on
-	test -z ${LD_TWOLEVEL_NAMESPACE} && allow_undefined_flag_F77='-flat_namespace -undefined suppress'
+	if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+	  allow_undefined_flag_F77='-Wl,-flat_namespace -Wl,-undefined -Wl,suppress'
+	else
+	  case ${MACOSX_DEPLOYMENT_TARGET} in
+	    10.[012])
+	      allow_undefined_flag_F77='-Wl,-flat_namespace -Wl,-undefined -Wl,suppress'
+	      ;;
+	    10.*)
+	      allow_undefined_flag_F77='-Wl,-undefined -Wl,dynamic_lookup'
+	      ;;
+	  esac
+	fi
 	;;
       esac
     	lt_int_apple_cc_single_mod=no
@@ -18631,7 +18675,18 @@
 	allow_undefined_flag_GCJ='-undefined suppress'
 	;;
       *) # Darwin 1.3 on
-	test -z ${LD_TWOLEVEL_NAMESPACE} && allow_undefined_flag_GCJ='-flat_namespace -undefined suppress'
+	if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then
+	  allow_undefined_flag_GCJ='-Wl,-flat_namespace -Wl,-undefined -Wl,suppress'
+	else
+	  case ${MACOSX_DEPLOYMENT_TARGET} in
+	    10.[012])
+	      allow_undefined_flag_GCJ='-Wl,-flat_namespace -Wl,-undefined -Wl,suppress'
+	      ;;
+	    10.*)
+	      allow_undefined_flag_GCJ='-Wl,-undefined -Wl,dynamic_lookup'
+	      ;;
+	  esac
+	fi
 	;;
       esac
     	lt_int_apple_cc_single_mod=no
diff -uNr kdenetwork-3.3.1/kopete/protocols/irc/libkirc/dcchandler.cpp kdenetwork-3.3.1-new/kopete/protocols/irc/libkirc/dcchandler.cpp
--- kdenetwork-3.3.1/kopete/protocols/irc/libkirc/dcchandler.cpp	Sat May 22 16:57:20 2004
+++ kdenetwork-3.3.1-new/kopete/protocols/irc/libkirc/dcchandler.cpp	Tue Nov  9 13:04:20 2004
@@ -19,6 +19,7 @@
     *************************************************************************
 */
 
+#include "config.h"
 #include "dcchandler.h"
 
 #include <kglobal.h>
@@ -28,7 +29,7 @@
 #include <qregexp.h>
 #include <qtextcodec.h>
 
-#ifdef NEED_TYPES_H
+#ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #ifdef HAVE_INTTYPES_H
diff -uNr kdenetwork-3.3.1/ktalkd/ktalkd/talkd.cpp kdenetwork-3.3.1-new/ktalkd/ktalkd/talkd.cpp
--- kdenetwork-3.3.1/ktalkd/ktalkd/talkd.cpp	Wed Mar  5 11:04:56 2003
+++ kdenetwork-3.3.1-new/ktalkd/ktalkd/talkd.cpp	Tue Nov  9 13:05:42 2004
@@ -183,7 +183,7 @@
 	struct hostent *hp;
 	struct sockaddr_in sn;
 	int cc, i, ok;
-	socklen_t addrlen;
+	kde_socklen_t addrlen;
 	int ret_value = PROC_REQ_OK; /* return value from process_request */
 
 	addrlen = sizeof(sn);
@@ -347,7 +347,7 @@
 main(int argc, char *argv[])
 {
 	struct sockaddr_in sn;
-	socklen_t sz = sizeof(sn);
+	kde_socklen_t sz = sizeof(sn);
 	int do_debug=0, do_badpackets=0, ch;
 
 	new KInstance("ktalkd"); // for KConfig and friends
diff -uNr kdenetwork-3.3.1/lanbrowsing/lisa/netmanager.cpp kdenetwork-3.3.1-new/lanbrowsing/lisa/netmanager.cpp
--- kdenetwork-3.3.1/lanbrowsing/lisa/netmanager.cpp	Sat May 22 16:57:35 2004
+++ kdenetwork-3.3.1-new/lanbrowsing/lisa/netmanager.cpp	Tue Nov  9 13:08:22 2004
@@ -413,7 +413,7 @@
          {
             mdcerr<<"NetManager::run: on m_listenFD"<<std::endl;
             struct sockaddr_in clientAddress;
-            socklen_t clilen(sizeof(clientAddress));
+            kde_socklen_t clilen(sizeof(clientAddress));
 //            bzero((char*)&clientAddress, clilen);
             memset((void*)&clientAddress,0,sizeof(clientAddress));
             int connectionFD=::accept(m_listenFD,(struct sockaddr *) &clientAddress, &clilen);
@@ -501,7 +501,7 @@
    
    mdcerr<<"NetManager::answerBroadcast: received BC"<<std::endl;
    struct sockaddr_in sAddr;
-   socklen_t length(sizeof(sockaddr_in));
+   kde_socklen_t length(sizeof(sockaddr_in));
    char buf[1024];
    int result=recvfrom(m_bcFD, (char*)buf, 1024, 0, (sockaddr*)&sAddr,&length);
    mdcerr<<"NetManager::answerBroadcast: received successfully"<<std::endl;
@@ -936,7 +936,7 @@
    sAddr.sin_addr.s_addr=m_broadcastAddress;
    sAddr.sin_family=AF_INET;
    sAddr.sin_port=htons(m_basePort);
-   socklen_t length(sizeof(sockaddr_in));
+   kde_socklen_t length(sizeof(sockaddr_in));
    mdcerr<<" NetManager::findServerServer: broadcasting to: "
    <<std::ios::hex<<m_broadcastAddress<<std::ios::dec<<std::endl;
    
diff -uNr kdenetwork-3.3.1/lanbrowsing/lisa/netscanner.cpp kdenetwork-3.3.1-new/lanbrowsing/lisa/netscanner.cpp
--- kdenetwork-3.3.1/lanbrowsing/lisa/netscanner.cpp	Sat May 22 16:57:35 2004
+++ kdenetwork-3.3.1-new/lanbrowsing/lisa/netscanner.cpp	Tue Nov  9 13:08:53 2004
@@ -561,7 +561,7 @@
          select(0,0,0,0,&tv1);
          //now read the answers, hopefully
          struct sockaddr_in fromAddr;
-         socklen_t length(sizeof(fromAddr));
+         kde_socklen_t length(sizeof(fromAddr));
          int received(0);
 
          fd_set sockFDset;
