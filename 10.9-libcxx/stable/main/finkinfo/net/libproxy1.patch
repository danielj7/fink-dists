diff -Nurd -x'*~' libproxy-0.4.7.orig/CMakeLists.txt libproxy-0.4.7/CMakeLists.txt
--- libproxy-0.4.7.orig/CMakeLists.txt	2011-06-06 17:44:37.000000000 -0400
+++ libproxy-0.4.7/CMakeLists.txt	2011-09-16 06:21:31.000000000 -0400
@@ -29,7 +29,6 @@
 ### Subdirectories
 # Conditionally build bundled libmodman
 option(FORCE_SYSTEM_LIBMODMAN "Force using system libmodman" OFF)
-find_package(libmodman QUIET)
 if(LIBMODMAN_FOUND)
     if("${LIBMODMAN_VERSION_MAJOR}" STREQUAL "2")
       message(STATUS "Building with system libmodman")    
@@ -48,7 +47,6 @@
 
 # Conditionally build bindings
 if(NOT WIN32)
-    add_subdirectory(bindings)
 endif()
 
 # Always build these
diff -Nurd -x'*~' libproxy-0.4.7.orig/libproxy/cmake/modules/pacrunner_webkit.cmk libproxy-0.4.7/libproxy/cmake/modules/pacrunner_webkit.cmk
--- libproxy-0.4.7.orig/libproxy/cmake/modules/pacrunner_webkit.cmk	2011-06-06 17:44:37.000000000 -0400
+++ libproxy-0.4.7/libproxy/cmake/modules/pacrunner_webkit.cmk	2011-09-16 05:01:43.000000000 -0400
@@ -7,10 +7,6 @@
     include_directories("${WEBKIT_INCLUDE_DIR}")
   endif()
 elseif(APPLE)
-  find_library(WEBKIT_LIBRARIES JavaScriptCore)
-  if(WEBKIT_LIBRARIES)
-    set(WEBKIT_FOUND 1)
-  endif()
 else()
   if(WITH_WEBKIT3)
     px_check_modules(WEBKIT webkitgtk-3.0)
--- libproxy-0.4.11/libproxy/modules/config_macosx.cpp.orig	2013-10-18 21:14:37.000000000 -0400
+++ libproxy-0.4.11/libproxy/modules/config_macosx.cpp	2013-10-18 21:15:38.000000000 -0400
@@ -114,7 +114,7 @@
 
 class macosx_config_extension : public config_extension {
 public:
-	vector<url> get_config(const url &url) throw (runtime_error) {
+	vector<url> get_config(const url &the_url) throw (runtime_error) {
 		string tmp;
 		CFDictionaryRef proxies = SCDynamicStoreCopyProxies(NULL);
 		vector<url> response;
@@ -136,8 +136,8 @@
 		}
 
 		// http:// or socks:// (TODO: gopher:// and rtsp:// ???)
-		else if ((protocol_url(proxies, toupper(url.get_scheme()), tmp)    && url::is_valid(tmp)) ||
-		    (protocol_url(proxies, capitalize(url.get_scheme()), tmp) && url::is_valid(tmp)) ||
+		else if ((protocol_url(proxies, toupper(the_url.get_scheme()), tmp)    && url::is_valid(tmp)) ||
+		    (protocol_url(proxies, capitalize(the_url.get_scheme()), tmp) && url::is_valid(tmp)) ||
 		    (protocol_url(proxies, toupper("http"), tmp)              && url::is_valid(tmp)) ||
 	            (protocol_url(proxies, toupper("socks"), tmp)             && url::is_valid(tmp))) {
 			CFRelease(proxies);
--- libproxy-0.4.11/libproxy/test/CMakeLists.txt.orig	2013-10-18 21:36:01.000000000 -0400
+++ libproxy-0.4.11/libproxy/test/CMakeLists.txt	2013-10-18 21:36:24.000000000 -0400
@@ -19,7 +19,7 @@
 add_test(NAME url-encode COMMAND ${CMAKE_CURRENT_BINARY_DIR}/url-encode)
 
 # Get PAC
-if (NOT WIN32)
+if (NOT WIN32 AND NOT APPLE)
 add_executable(get-pac-test ${CMAKE_CURRENT_SOURCE_DIR}/get-pac-test.cpp ${PROJECT_SOURCE_DIR}/url.cpp)
 target_link_libraries(get-pac-test pthread)
 add_test(NAME get-pac-test COMMAND ${CMAKE_CURRENT_BINARY_DIR}/get-pac-test)
