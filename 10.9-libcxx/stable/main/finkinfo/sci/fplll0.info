# DISCLAIMER: Max Horn is the sole maintainer of this package.
# Please DO NOT MAKE MODIFICATIONS without informing the maintainer.
# Preferably, send a patch to me instead of making changes yourself!
# If that is not possible due to extra urgency, at least send me a mail.
#
# Explanation: I am sick and tired of getting back to my packages and
# discovering that people have messed with it. I am then forced to
# retrace their steps, find out who, when and why did make a certain
# change etc. -- i.e. it makes my life as maintainer harder.
# Furthermore, as maintainer I am responsible for problems caused by my
# packages. But I am not willing to take responsibility for something I
# did not do. In particular, for changes that other people introduced
# behind my back, no matter how good and noble their intentions were. As
# such, I may see myself forced to drop responsibility for (and hence,
# maintainership of) the affected package.

Info4: <<
Package: fplll0
Version: 4.0.4
Revision: 1
Maintainer: Max Horn <max@quendi.de>

BuildDepends: <<
  fink-package-precedence,
  gmp5,
  libmpfr4,
<<
Depends: %N-shlibs (= %v-%r)
BuildDependsOnly: True

Source: http://perso.ens-lyon.fr/damien.stehle/fplll/libfplll-%v.tar.gz
Source-MD5: 5f418674e20908a9e105b999fa4ab3a6

#ConfigureParams: TODO

# TODO what about bin/fplll and bin/latticegen ?

InfoTest: TestScript: make check || exit 2

CompileScript: <<
  ./configure %c
  make
  fink-package-precedence .
<<
InstallScript: make install DESTDIR=%d
DocFiles: AUTHORS COPYING INSTALL NEWS README README.html
SplitOff: <<
  Package: %N-shlibs
  Depends: gmp5-shlibs, libmpfr4-shlibs
  Files: lib/libfplll.0.dylib
  Shlibs: %p/lib/libfplll.0.dylib 2.0.0 %n (>= 4.0.0-1)
  DocFiles: AUTHORS COPYING INSTALL NEWS README README.html
<<

Description: LLL-reduction of euclidean lattices
DescDetail: <<
fplll contains several algorithms on lattices that rely on floating-point
computations. This includes implementations of the floating-point LLL
reduction algorithm, offering different speed/guarantees ratios. It contains
a 'wrapper' choosing the estimated best sequence of variants in order to
provide a guaranteed output as fast as possible. In the case of the wrapper,
the succession of variants is oblivious to the user. It also includes a
rigorous floating-point implementation of the Kannan-Fincke-Pohst algorithm
that finds a shortest non-zero lattice vector, and the BKZ reduction
algorithm.
<<
Homepage: http://perso.ens-lyon.fr/damien.stehle/fplll/
License: GPL
<<
