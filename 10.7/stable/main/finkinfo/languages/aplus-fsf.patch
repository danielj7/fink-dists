diff -Nurd aplus-fsf-4.22.orig/src/a/beamconv.c aplus-fsf-4.22/src/a/beamconv.c
--- aplus-fsf-4.22.orig/src/a/beamconv.c	2008-03-27 15:09:34.000000000 -0400
+++ aplus-fsf-4.22/src/a/beamconv.c	2008-04-19 13:35:46.000000000 -0400
@@ -11,6 +11,7 @@
  * formats of mmap'd files used by A+
  */
 
+#include <string.h>
 #include <a/fncdcls.h>
 #include <sys/types.h>
 #include <sys/stat.h>
diff -Nurd aplus-fsf-4.22.orig/src/a/bstub.c aplus-fsf-4.22/src/a/bstub.c
--- aplus-fsf-4.22.orig/src/a/bstub.c	2008-03-31 12:45:24.000000000 -0400
+++ aplus-fsf-4.22/src/a/bstub.c	2008-04-19 13:34:32.000000000 -0400
@@ -19,6 +19,7 @@
 
 #include <pthread.h>		/* Needed for locking in *_cover()  */
 #include <stdio.h>
+#include <string.h>
 #include <stdlib.h>
 #include <errno.h>
 
diff -Nurd aplus-fsf-4.22.orig/src/cxc/c.c aplus-fsf-4.22/src/cxc/c.c
--- aplus-fsf-4.22.orig/src/cxc/c.c	2008-03-27 15:09:32.000000000 -0400
+++ aplus-fsf-4.22/src/cxc/c.c	2008-04-19 13:26:04.000000000 -0400
@@ -9,6 +9,7 @@
 
 #include <a/development.h>
 #include <stdio.h>
+#include <string.h>
 
 #include <a/k.h>
 #include <a/fncdcls.h>
diff -Nurd aplus-fsf-4.22.orig/src/cxsys/asock.c aplus-fsf-4.22/src/cxsys/asock.c
--- aplus-fsf-4.22.orig/src/cxsys/asock.c	2008-03-27 15:09:32.000000000 -0400
+++ aplus-fsf-4.22/src/cxsys/asock.c	2008-04-19 13:27:41.000000000 -0400
@@ -7,6 +7,7 @@
 /*****************************************************************************/
 #include <a/development.h>
 #include <stdio.h>
+#include <string.h>
 #include <signal.h>
 #include <netdb.h>
 #include <errno.h>
diff -Nurd aplus-fsf-4.22.orig/src/cxsys/eponymous.c aplus-fsf-4.22/src/cxsys/eponymous.c
--- aplus-fsf-4.22.orig/src/cxsys/eponymous.c	2008-03-27 15:09:31.000000000 -0400
+++ aplus-fsf-4.22/src/cxsys/eponymous.c	2008-04-19 13:45:48.000000000 -0400
@@ -531,7 +531,7 @@
   lt.tm_sec=a->p[5];       /* second           */
   lt.tm_isdst=0;  	   /* daylight savings NOT in effect */
 /*   z->p[0]=mktime(&lt)-altzone;  */
-#if defined(_AIX) || defined(HAVE_SVR4) || defined (__osf__) || defined(HAVE_MKTIME)
+#if ( defined(_AIX) || defined(HAVE_SVR4) || defined (__osf__) || defined(HAVE_MKTIME) ) && !defined(NO_TIMEZONE)
   z->p[0]=mktime(&lt); 
   if( z->p[0] != -1) 
     z->p[0]=z->p[0]-timezone;  
diff -Nurd aplus-fsf-4.22.orig/src/cxsys/sfe.c aplus-fsf-4.22/src/cxsys/sfe.c
--- aplus-fsf-4.22.orig/src/cxsys/sfe.c	2008-03-27 15:09:32.000000000 -0400
+++ aplus-fsf-4.22/src/cxsys/sfe.c	2008-04-19 13:31:22.000000000 -0400
@@ -13,7 +13,9 @@
 * Creation Date:	Sat Jan 21 13:52:42 EST 1989
 \*********************************************************************/
 
+#include <unistd.h>
 #include <stdio.h>
+#include <string.h>
 #include <sys/types.h>
 #include <sys/socket.h>
 
diff -Nurd aplus-fsf-4.22.orig/src/esf/primpro.c aplus-fsf-4.22/src/esf/primpro.c
--- aplus-fsf-4.22.orig/src/esf/primpro.c	2008-03-27 15:09:33.000000000 -0400
+++ aplus-fsf-4.22/src/esf/primpro.c	2008-04-19 13:32:26.000000000 -0400
@@ -7,6 +7,7 @@
 /*****************************************************************************/
 #include <unistd.h>
 #include <stdio.h>
+#include <string.h>
 #include <sys/times.h>
 #include <limits.h>
 #include <a/fir.h>
--- aplus-fsf-4.22/src/MSTypes/MSFloatMatrix.H,orig	2012-03-05 20:37:58.000000000 -0500
+++ aplus-fsf-4.22/src/MSTypes/MSFloatMatrix.H	2012-03-05 20:38:36.000000000 -0500
@@ -27,7 +27,7 @@
 template<class Type> class MSMatrixSTypePick; // MSTypeMatrix indexed by an unsigned int
 
 #if !defined(MS_NO_PREDECLARE_SPECIALIZATION)
-class MSMatrixSTypePick<double>; 
+template<> class MSMatrixSTypePick<double>; 
 #endif
 
 
--- aplus-fsf-4.22/src/MSTypes/MSObservableTree.C.orig	2012-03-05 20:45:20.000000000 -0500
+++ aplus-fsf-4.22/src/MSTypes/MSObservableTree.C	2012-03-05 20:47:44.000000000 -0500
@@ -94,7 +94,7 @@
 void MSObservableTree<Element>::removeSubtree(const MSTabularTreeCursor<Element>& cursor_)
 {
   MSTabularTreeCursor<Element> cursor2(cursor_);
-  unsigned long pos=position(cursor2);
+  unsigned long pos=this->position(cursor2);
   cursor2.setToParent();
   MSTabularTree<Element>::removeSubtree(cursor_);
   if (cursor2.isValid()) changed(cursor2,pos,MSObservableTreeDelete);
@@ -162,7 +162,7 @@
 void MSObservableTree<Element>::replaceAt(MSTabularTreeCursor<Element> const& cursor_,Element const& element_)
 {
   MSTabularTree<Element>::replaceAt(cursor_,element_);
-  changed(cursor_,position(cursor_),MSObservableTreeAssign);
+  changed(cursor_,this->position(cursor_),MSObservableTreeAssign);
 }
 
 template <class Element>
@@ -170,10 +170,10 @@
 {
   if (&tree_!=this)
    {
-     if (isRoot(cursor_)) copy(tree_);
+     if (this->isRoot(cursor_)) copy(tree_);
      else
       {
-	unsigned long pos=position(cursor_);
+	unsigned long pos=this->position(cursor_);
 	MSTabularTreeCursor<Element> cursor=cursor_;
 	cursor.setToParent();
 	MSTabularTree<Element>::removeSubtree(cursor_);
@@ -199,7 +199,7 @@
 template <class Element>
 void MSObservableTree<Element>::elementChanged(MSTabularTreeCursor<Element> const& cursor_)
 {
-  changed(cursor_,position(cursor_),MSObservableTreeAssign);
+  changed(cursor_,this->position(cursor_),MSObservableTreeAssign);
 }
 
 template <class Element>
--- aplus-fsf-4.22/src/MSTypes/MSObjectTypeVectorInlines.C.orig	2012-03-05 21:02:04.000000000 -0500
+++ aplus-fsf-4.22/src/MSTypes/MSObjectTypeVectorInlines.C	2012-03-05 21:02:35.000000000 -0500
@@ -87,7 +87,7 @@
 template <class Type>
 INLINELINKAGE MSObjectVector<Type> MSObjectVector<Type>::operator[] (const MSBinaryVector & bVect_) const
 {
-  return compress (*this, bVect_);
+  return this->compress (*this, bVect_);
 }
 
 
--- aplus-fsf-4.22/src/MSTypes/MSBuiltinTypeVectorInlines.C.orig	2012-03-05 21:19:51.000000000 -0500
+++ aplus-fsf-4.22/src/MSTypes/MSBuiltinTypeVectorInlines.C	2012-03-05 21:20:13.000000000 -0500
@@ -77,7 +77,7 @@
 template <class Type>
 INLINELINKAGE MSBuiltinVector<Type> MSBuiltinVector<Type>::operator[] (const MSBinaryVector & bVect_) const
 {
-  return compress (*this, bVect_);
+  return this->compress (*this, bVect_);
 }
 
 
