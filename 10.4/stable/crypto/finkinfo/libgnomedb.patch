diff -Nurd libgnomedb-3.1.2.orig/configure libgnomedb-3.1.2/configure
--- libgnomedb-3.1.2.orig/configure	2007-10-24 15:44:07.000000000 -0400
+++ libgnomedb-3.1.2/configure	2008-03-06 14:51:57.000000000 -0500
@@ -23288,7 +23288,7 @@
 			LIBGCRYPT_LIBS=""
 
 
-if 0; then
+if false; then
   HAVE_LIBGCRYPT_TRUE=
   HAVE_LIBGCRYPT_FALSE='#'
 else
@@ -23316,7 +23316,7 @@
       	LIBGCRYPT_LIBS=""
 
 
-if 0; then
+if false; then
   HAVE_LIBGCRYPT_TRUE=
   HAVE_LIBGCRYPT_FALSE='#'
 else
@@ -23527,6 +23527,7 @@
 
 GRAPHVIZ_MODULES="libgvc"
 
+if false; then
 pkg_failed=no
 { echo "$as_me:$LINENO: checking for GRAPHVIZ" >&5
 echo $ECHO_N "checking for GRAPHVIZ... $ECHO_C" >&6; }
@@ -23597,6 +23598,8 @@
 echo "${ECHO_T}yes" >&6; }
 	have_graphviz=yes
 fi
+fi
+have_graphviz=no
 
 
 if test x"$have_graphviz" = "xyes"; then
@@ -24092,6 +24095,7 @@
 
 
 
+if false; then
 pkg_failed=no
 { echo "$as_me:$LINENO: checking for GDA_EVOLUTION" >&5
 echo $ECHO_N "checking for GDA_EVOLUTION... $ECHO_C" >&6; }
@@ -24167,6 +24171,8 @@
 	EVOLUTION_VERSION=`pkg-config --modversion libedataserver-1.2`
 
 fi
+fi
+have_evolution=no
 
 
 if test x"$have_evolution" = "xyes"; then
diff -Nurd libgnomedb-3.1.2.orig/glade3/Makefile.in libgnomedb-3.1.2/glade3/Makefile.in
--- libgnomedb-3.1.2.orig/glade3/Makefile.in	2007-10-24 16:22:18.000000000 -0400
+++ libgnomedb-3.1.2/glade3/Makefile.in	2008-11-06 04:27:02.000000000 -0500
@@ -62,7 +62,6 @@
 	$(am__DEPENDENCIES_1) \
 	$(top_builddir)/libgnomedb/libgnomedb-3.0.la \
 	$(top_builddir)/libgnomedb-extra/libgnomedb_extra-3.0.la \
-	$(top_builddir)/libgnomedb/plugins/libgnomedb_entry_builtin_plugins.la \
 	$(am__DEPENDENCIES_2)
 am_libgladegnomedb_la_OBJECTS = libgladegnomedb_la-glade3-gnomedb.lo
 libgladegnomedb_la_OBJECTS = $(am_libgladegnomedb_la_OBJECTS)
@@ -319,7 +318,7 @@
 @HAVE_LIBGNOMECANVAS_TRUE@graphlib = $(top_builddir)/libgnomedb-graph/libgnomedb_graph-3.0.la
 gladegnomedb_LTLIBRARIES = libgladegnomedb.la
 libgladegnomedb_la_SOURCES = glade3-gnomedb.c
-libgladegnomedb_la_CFLAGS = -g -Wall -I$(top_srcdir) -I$(top_builddir) \
+AM_CPPFLAGS = -g -Wall -I$(top_srcdir) -I$(top_builddir) \
                             -DG_LOG_DOMAIN=\"GnomeDB\" \
                             $(GLADE3_CFLAGS) $(LIBGNOMEDB_CFLAGS) $(LIBGLADE_CFLAGS)
 
@@ -328,7 +327,6 @@
 			    $(LIBGNOMEDB_LIBS) $(GLADE3_LIBS) \
 			    $(top_builddir)/libgnomedb/libgnomedb-3.0.la \
                             $(top_builddir)/libgnomedb-extra/libgnomedb_extra-3.0.la \
-			    $(top_builddir)/libgnomedb/plugins/libgnomedb_entry_builtin_plugins.la \
 			    $(graphlib)
 
 gladegnomedbdir = @GLADE3_MODULES_DIR@
diff -Nurd -x'*~' libgnomedb-3.1.2.orig/ltmain.sh libgnomedb-3.1.2/ltmain.sh
--- libgnomedb-3.1.2.orig/ltmain.sh	2007-08-14 13:43:36.000000000 -0400
+++ libgnomedb-3.1.2/ltmain.sh	2009-07-02 00:36:17.000000000 -0400
@@ -2909,94 +2909,72 @@
 	    fi
 	    tmp_libs="$tmp_libs $deplib"
 	  done
-
-	  if test "$link_all_deplibs" != no; then
-	    # Add the search paths of all dependency libraries
-	    for deplib in $dependency_libs; do
-	      case $deplib in
-	      -L*) path="$deplib" ;;
-	      *.la)
-		dir=`$echo "X$deplib" | $Xsed -e 's%/[^/]*$%%'`
-		test "X$dir" = "X$deplib" && dir="."
-		# We need an absolute path.
-		case $dir in
-		[\\/]* | [A-Za-z]:[\\/]*) absdir="$dir" ;;
-		*)
-		  absdir=`cd "$dir" && pwd`
-		  if test -z "$absdir"; then
-		    $echo "$modename: warning: cannot determine absolute directory name of \`$dir'" 1>&2
-		    absdir="$dir"
-		  fi
-		  ;;
-		esac
-		if grep "^installed=no" $deplib > /dev/null; then
-		  path="$absdir/$objdir"
-		else
-		  eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
-		  if test -z "$libdir"; then
-		    $echo "$modename: \`$deplib' is not a valid libtool archive" 1>&2
-		    exit $EXIT_FAILURE
-		  fi
-		  if test "$absdir" != "$libdir"; then
-		    $echo "$modename: warning: \`$deplib' seems to be moved" 1>&2
-		  fi
-		  path="$absdir"
-		fi
-		depdepl=
-		case $host in
-		*-*-darwin*)
-		  # we do not want to link against static libs,
-		  # but need to link against shared
-		  eval deplibrary_names=`${SED} -n -e 's/^library_names=\(.*\)$/\1/p' $deplib`
-		  if test -n "$deplibrary_names" ; then
-		    for tmp in $deplibrary_names ; do
-		      depdepl=$tmp
-		    done
-		    if test -f "$path/$depdepl" ; then
-		      depdepl="$path/$depdepl"
-		    fi
-		    # do not add paths which are already there
-		    case " $newlib_search_path " in
-		    *" $path "*) ;;
-		    *) newlib_search_path="$newlib_search_path $path";;
-		    esac
-		  fi
-		  path=""
-		  ;;
-		*)
-		  path="-L$path"
-		  ;;
-		esac
-		;;
-	      -l*)
-		case $host in
-		*-*-darwin*)
-		  # Again, we only want to link against shared libraries
-		  eval tmp_libs=`$echo "X$deplib" | $Xsed -e "s,^\-l,,"`
-		  for tmp in $newlib_search_path ; do
-		    if test -f "$tmp/lib$tmp_libs.dylib" ; then
-		      eval depdepl="$tmp/lib$tmp_libs.dylib"
-		      break
-		    fi
-		  done
-		  path=""
-		  ;;
-		*) continue ;;
-		esac
-		;;
-	      *) continue ;;
-	      esac
-	      case " $deplibs " in
-	      *" $path "*) ;;
-	      *) deplibs="$path $deplibs" ;;
-	      esac
-	      case " $deplibs " in
-	      *" $depdepl "*) ;;
-	      *) deplibs="$depdepl $deplibs" ;;
-	      esac
-	    done
-	  fi # link_all_deplibs != no
-	fi # linkmode = lib
+          if test "$link_all_deplibs" != no; then
+            # Add the search paths of all dependency libraries
+            for deplib in $dependency_libs; do
+              case $deplib in
+              -L*) path="$deplib" ;;
+              *.la)
+#               func_dirname "$deplib" "" "."
+#               dir="$func_dirname_result"
+                case "$deplib" in
+                  */*) dir="${deplib%/*}" ;;
+                  *  ) dir="." ;;
+                esac
+                # We need an absolute path.
+                case $dir in
+                [\\/]* | [A-Za-z]:[\\/]*) absdir="$dir" ;;
+                *)
+                  absdir=`cd "$dir" && pwd`
+                  if test -z "$absdir"; then
+                    $echo "$modename: warning: cannot determine absolute directory name of \`$dir'" 1>&2
+                    absdir="$dir"
+                  fi
+                  ;;
+                esac
+                if grep "^installed=no" $deplib > /dev/null; then
+                case $host in
+                *-*-darwin*)
+                  depdepl=
+                  eval deplibrary_names=`${SED} -n -e 's/^library_names=\(.*\)$/\1/p' $deplib`
+                  if test -n "$deplibrary_names" ; then
+                    for tmp in $deplibrary_names ; do
+                      depdepl=$tmp
+                    done
+                    if test -f "$absdir/$objdir/$depdepl" ; then
+                      depdepl="$absdir/$objdir/$depdepl"
+                      darwin_install_name=`otool -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`
+                      if test -z "$darwin_install_name"; then
+                          darwin_install_name=`otool64 -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`
+                      fi
+                      compiler_flags="$compiler_flags ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}"
+                      linker_flags="$linker_flags -dylib_file ${darwin_install_name}:${depdepl}"
+                      path=
+                    fi
+                  fi
+                  ;;
+                *)
+                  path="-L$absdir/$objdir"
+                  ;;
+                esac
+                else
+                  eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
+                  test -z "$libdir" && \
+                    $echo "\`$deplib' is not a valid libtool archive" 1>&2
+                  test -z "$libdir" && exit 1
+                  test "$absdir" != "$libdir" && \
+                    $echo "\`$deplib' seems to be moved" 1>&2
+                  path="-L$absdir"
+                fi
+                ;;
+              esac
+              case " $deplibs " in
+              *" $path "*) ;;
+              *) deplibs="$path $deplibs" ;;
+              esac
+            done
+          fi # link_all_deplibs != no
+        fi # linkmode = lib
       done # for deplib in $libs
       dependency_libs="$newdependency_libs"
       if test "$pass" = dlpreopen; then
