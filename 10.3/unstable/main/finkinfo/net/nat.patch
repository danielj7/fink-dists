diff -uNr nat10/smb.h nat10-1/smb.h
--- nat10/smb.h	Sun Feb 16 19:18:04 1997
+++ nat10-1/smb.h	Wed Nov  6 18:44:20 2002
@@ -598,7 +598,7 @@
 int sys_select(fd_set *fds,struct timeval *tval);
 int sys_unlink(char *fname);
 int sys_open(char *fname,int flags,int mode);
-DIR *sys_opendir(char *dname);
+int sys_opendir(char *dname);
 int sys_stat(char *fname,struct stat *sbuf);
 int sys_lstat(char *fname,struct stat *sbuf);
 int sys_mkdir(char *dname,int mode);
diff -uNr nat10/system.c nat10-1/system.c
--- nat10/system.c	Sun Feb 16 19:18:04 1997
+++ nat10-1/system.c	Wed Nov  6 18:47:03 2002
@@ -132,7 +132,7 @@
 /*******************************************************************
 a simple opendir() wrapper
 ********************************************************************/
-DIR *sys_opendir(char *dname)
+int sys_opendir(char *dname)
 {
   return(opendir(dos_to_unix(dname,False)));
 }
diff -uNr nat10/util.c nat10-1/util.c
--- nat10/util.c	Sun Feb 16 19:18:04 1997
+++ nat10-1/util.c	Wed Nov  6 18:46:25 2002
@@ -4054,58 +4054,6 @@
 ****************************************************************************/
 struct hostent *Get_Hostbyname(char *name)
 {
-  char *name2 = strdup(name);
-  struct hostent *ret;
-
-  if (!name2)
-    {
-      DEBUG(0,("Memory allocation error in Get_Hostbyname! panic\n"));
-      exit(0);
-    }
-
-  if (!isalnum(*name2))
-    {
-      free(name2);
-      return(NULL);
-    }
-
-#ifdef GH_SLEAZE
-  signal (SIGALRM, tmx);
-  alarm (5);
-  if (setjmp (gh_buf) > 0)
-    return (NULL);
-#endif
-  ret = gethostbyname(name2);
-#ifdef GH_SLEAZE
-  signal (SIGALRM, SIG_DFL);
-  alarm (0);
-#endif
-  if (ret != NULL)
-    {
-      free(name2);
-      return(ret);
-    }
-
-  /* try with all lowercase */
-  strlower(name2);
-  ret = gethostbyname(name2);
-  if (ret != NULL)
-    {
-      free(name2);
-      return(ret);
-    }
-
-  /* try with all uppercase */
-  strupper(name2);
-  ret = gethostbyname(name2);
-  if (ret != NULL)
-    {
-      free(name2);
-      return(ret);
-    }
-  
-  /* nothing works :-( */
-  free(name2);
   return(NULL);
 }
 
@@ -4204,35 +4152,6 @@
   ptr = (struct DIRECT *)readdir(p);
   if (!ptr) return(NULL);
 
-  dname = ptr->d_name;
-
-#ifdef KANJI
-  {
-    static pstring buf;
-    strcpy(buf, dname);
-    unix_to_dos(buf, True);
-    dname = buf;
-  }
-#endif
-
-#ifdef NEXT2
-  if (telldir(p) < 0) return(NULL);
-#endif
-
-#ifdef SUNOS5
-  /* this handles a broken compiler setup, causing a mixture
-   of BSD and SYSV headers and libraries */
-  {
-    static BOOL broken_readdir = False;
-    if (!broken_readdir && !(*(dname)) && strequal("..",dname-2))
-      {
-	DEBUG(0,("Your readdir() is broken. You have somehow mixed SYSV and BSD headers and libraries\n"));
-	broken_readdir = True;
-      }
-    if (broken_readdir)
-      return(dname-2);
-  }
-#endif
 
   return(dname);
 }
