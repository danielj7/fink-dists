Package: fpprofiler-cross
Version: 20110108
Revision: 1
Description: Profiler for the FreePascal cross compiler
Architecture: powerpc, i386, x86_64
Source: http://michael-ep3.physik.uni-halle.de/fink-sources/fpprofiler-%v.tar.bz2
Source-MD5: f798933eecda64a4a7cb9e284c862e52
Depends: <<
  fpprofiler,
  (%m = i386)     fpc-cross-x86-64-darwin,
  (%m = x86_64)   fpc-cross-i386-darwin,
  (%m != powerpc) fpc-cross-powerpc-darwin,
  (%m != powerpc) fpc-cross-powerpc-linux,
  (%m != powerpc) fpc-cross-i386-linux,
  (%m != powerpc) fpc-cross-i386-freebsd,
  (%m != powerpc) fpc-cross-i386-win32,
  (%m != powerpc) fpc-cross-i386-wince,
  (%m != powerpc) fpc-cross-x86-64-linux,
  (%m != powerpc) fpc-cross-x86-64-win64
<<
Recommends: graphviz
License: GPL

CompileScript: <<
#!/bin/sh -ev
  cd fpprof

  if [ "%m" = "i386" ]; then
    SYSTEMS='powerpc-darwin x86_64-darwin'
  fi  
  if [ "%m" = "x86_64" ]; then
    SYSTEMS='powerpc-darwin i386-darwin'
  fi  
  for system in $SYSTEMS
  do
    cpu_target=`echo $system |cut -d '-' -f 1`
    os_target=` echo $system |cut -d '-' -f 2`
    mkdir -p units/$system/fpprof
    fpc   -FEunits/$system/fpprof -P$cpu_target -T$os_target fpprof.pp
  done

  SYSTEMS=''
  if [ "%m" != "powerpc" ]; then
    SYSTEMS=$SYSTEMS' powerpc-linux arm-linux i386-linux i386-freebsd i386-win32 i386-wince'
    SYSTEMS=$SYSTEMS' x86_64-linux x86_64-win64'
  fi  
  for system in $SYSTEMS
  do
    cpu_target=`echo $system |cut -d '-' -f 1`
    os_target=` echo $system |cut -d '-' -f 2`
    mkdir -p units/$system/fpprof
    fpc   -FEunits/$system/fpprof -P$cpu_target -T$os_target -XP$cpu_target-$os_target- fpprof.pp
  done

<<

InstallScript: <<
#!/bin/sh -ev
  FPC_VERSION=`fpc -iV`
  mkdir -p             %i/lib/fpc/$FPC_VERSION/units
  cp -r fpprof/units/* %i/lib/fpc/$FPC_VERSION/units
<<

DocFiles: docs/COPYING.GPL docs/develop.txt

DescDetail: <<
Compile your program by using fpp as a replacement of fpc. 
This creates a profile file (Default: fpprof.xml), 
from which fppview creates output. Output in the dot language 
can be converted to a graph with the program "dot" from the 
package "graphviz".

More details about options can be obtained with
  fpp -h
and
  fppview -h

Usage Example:

  fpp MyProgram.pp
  fppview --format=graphviz --stat=callgraph >MyProgram.dot
  dot -Tpng MyProgram.dot -o MyProgram.png
  open MyProgram.png

Please check also the home page: http://wiki.lazarus.freepascal.org/FPProfiler
<<

DescPort: <<
  Crosscompilers on powerpc still have some problems, although all powerpc and
  arm targets (except arm-darwin) should work.
<<

Homepage: http://wiki.lazarus.freepascal.org/FPProfiler
Maintainer: Karl-Michael Schindler <karl-michael.schindler@web.de>
