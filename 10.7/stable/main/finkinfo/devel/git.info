Info2:<<
Package: git
Version: 1.9.0
Revision: 1
Type: pm 5.12.3
Distribution: 10.7

Depends: <<
	expat1-shlibs (>= 2.1.0-1),
	libcurl4-shlibs (>= 7.25.0-1),
	libgettext8-shlibs,
	libiconv,
	locale-textdomain-pm%type_pkg[pm],
	libpcre1-shlibs,
	openssl100-shlibs (>= 1.0.1f-1)
<<
BuildDepends: <<
	expat1 (>= 2.1.0-1),
	fink (>= 0.32),
	gettext-tools,
	libcurl4 (>= 7.25.0-1),
	libgettext8-dev,
	libiconv-dev,
	libpcre1,
	openssl100-dev (>= 1.0.1f-1)
<<
Replaces: git-core, git-cvsimport (<< 1.7.2.3-1002), git-archimport (<< 1.7.2.3-1002), git-svn (<< 1.7.2.3-1002)
Conflicts: git-cvsimport (<< 1.7.2.3-1002), git-archimport (<< 1.7.2.3-1002), git-svn (<< 1.7.2.3-1002)

Source: http://git-core.googlecode.com/files/git-%v.tar.gz
Source-MD5: e16c14b27c644b8e0dd72bdb5ff77450
Source2: http://git-core.googlecode.com/files/git-htmldocs-%v.tar.gz
Source2-MD5: cc03d2803aed85d9136f0af1e16d460f
Source2ExtractDir: doc
Source3: http://git-core.googlecode.com/files/git-manpages-%v.tar.gz
Source3-MD5: a7c78336e2d3f9a0f5fc120c16fabcba

PatchFile: %n.patch
PatchFile-MD5: 94888883d974322ec4801de649289b1a
PatchScript: <<
	#!/bin/bash -ev
	%{default_script}
	# Fix up paths in documentation to point to %p.
	perl -pi -e 's,/usr/(share|bin)/git,%p/\1/git,g; s,/usr/libexec,%p/lib,g' ../man1/* ../doc/*
	# Setting these variables in 'config.mak' lets Makefile import them
	# automatically instead of always manually passing them to make.
	cat >> config.mak << EOF
NO_FINK=1
NO_DARWIN_PORTS=1
#NO_SVN_TESTS=1
GITWEB_CONFIG_SYSTEM=%p/gitweb.conf
CC_LD_DYNPATH=-L
AR=ar
htmldir=share/doc/git
NO_CROSS_DIRECTORY_HARDLINKS=1
NO_INSTALL_HARDLINKS=1
NO_REGEX=1
NO_APPLE_COMMON_CRYPTO=1
PERLLIB_EXTRA=%p/lib/perl5
EOF
	perl -pi -e 's/\"\$PERL\"/\$PERL/' git-instaweb.sh
	perl -pi -e 's/svnrdump/svnrdump18/' remote-testsvn.c
	#perl -pi -e 's|use 5.008;|use 5.008;\nuse lib "%p/lib/perl5";|' *.perl
<<

UseMaxBuildJobs: true

# Let configure do the work of setting up the environment instead of
# patching and passing things manually to make.
SetLDFLAGS: -Wl,-dead_strip_dylibs
# Darwin needs no special flags for pthreads, so set flags to ' ' because
# "-pthreads" causes problems for gcc-4.0.
ConfigureParams: <<
	--libexecdir='${exec_prefix}/lib' \
	--enable-pthreads=' ' \
	--with-python='/usr/bin/python' \
	--with-tcltk='/usr/bin/wish' \
	--with-openssl=%p \
	--with-libpcre=%p
<<

CompileScript: <<
	#!/bin/bash -ev
	let version=`uname -r | cut -f 1 -d .`
	if [ $version -eq 10 ]; then
		./configure --with-perl='/usr/bin/arch -%m perl5.10.0' %c
	elif [ $version -ge 11 ]; then
		./configure --with-perl='/usr/bin/arch -%m perl5.12' %c
	else 
		./configure --with-perl='/usr/bin/perl' %c
	fi
	make
	
	# Build OS X Keychain integration.
	cd contrib/credential/osxkeychain
	make
<<

InfoTest: <<
 	TestDepends: <<
 		libwww-pm%type_pkg[pm],
 		svn-swig-pm%type_pkg[pm] (>= 1.8.0-1),
 		svn18,
 		term-readkey-pm%type_pkg[pm],
 		test-harness-pm%type_pkg[pm] (>= 3.25-1)
 	<<

	TestScript: <<
		#!/bin/bash -ev
		
		PERL_PATH=/usr/bin/perl
		
		ln -s %p/bin/svn18 bin-wrappers/svn
		ln -s %p/bin/svnadmin18 bin-wrappers/svnadmin
		ln -s %p/bin/svnserve18 bin-wrappers/svnserve
		
		# Need to pass -j1 to 'prove' since some tests don't seem to like running in parallel.

		if [ $UID = 0 ]; then
			# Some tests fail when run as root.
			GIT_SKIP_TESTS="t9020" make -k DEFAULT_TEST_TARGET="prove" PROVE="%p/bin/prove-%type_pkg[pm]" GIT_PROVE_OPTS="--timer --failures -j1" test PERL_PATH="$PERL_PATH" || exit 1
		else
			GIT_SKIP_TESTS="t9020" make -k DEFAULT_TEST_TARGET="prove" PROVE="%p/bin/prove-%type_pkg[pm]" GIT_PROVE_OPTS="--timer --failures -j1" test PERL_PATH="$PERL_PATH" || exit 2
		fi
	<<
	TestSuiteSize: large
<<

InstallScript: <<
	make install DESTDIR=%d NO_PYTHON=1
	
	mkdir -p %i/share/man %i/share/doc
	cp -R ../man* %i/share/man
	cp -R ../doc %i/share/doc/%n
	mkdir -p %i/share/emacs/site-lisp
	cp contrib/emacs/*.el %i/share/emacs/site-lisp
	mkdir -p %i/etc/bash_completion.d
	install -m 755 contrib/completion/git-completion.bash %i/etc/bash_completion.d/
	install -m 755 contrib/credential/osxkeychain/git-credential-osxkeychain %i/lib/git-core
	mkdir -p %i/etc/profile.d
	install -m 755 contrib/completion/git-prompt.sh %i/etc/profile.d
	
	# These go in separate packages.
	rm %i/lib/git-core/git-cvsimport
	rm %i/share/doc/%n/git-cvsimport.*
	rm %i/share/man/man1/git-cvsimport.1
	rm %i/lib/git-core/git-archimport
	rm %i/share/doc/%n/git-archimport.*
	rm %i/share/man/man1/git-archimport.1
	rm %i/lib/git-core/git-svn
	rm %i/share/doc/%n/git-svn.*
	rm %i/share/man/man1/git-svn.1
	rm %i/lib/git-core/git-send-email
	rm %i/share/doc/%n/git-send-email.*
	rm %i/share/man/man1/git-send-email.1
<<

SplitOff: <<
	Package: git-remote-testsvn
	Description: SVN remote helper for git
	DescDetail: <<
		This is the testsvn remote helper from git.
		It allows one to import an svn repository into git using the
		remote mechanism.
		
		This should be considered experimental (hence 'testsvn')
		and used with caution.
		
		Use like: git clone testsvn::http://some.svn.repo
	<<
	RuntimeDepends: git (>= %v), svn18
	Files: lib/git-core/%n
	DocFiles: COPYING README
<<

UpdatePOD: true
DocFiles: COPYING README contrib

Description: Distributed version control system
DescDetail: <<
Git is an open source, distributed version control system designed to
handle everything from small to very large projects with speed and
efficiency.

Every Git clone is a full-fledged repository with complete history and
full revision tracking capabilities, not dependent on network access or
a central server. Branching and merging are fast and easy to do.
<<
DescPackaging: <<
Patched Makefile to use symlinks instead of hard links since it causes
problems if %p is a symlink to a different volume.

Previously maintained by Brendan Cully <brendan@finkproject.org>
<<
License: GPL
Homepage: http://git-scm.com/
Maintainer: Daniel Johnson <daniel@daniel-johnson.org>
<<
