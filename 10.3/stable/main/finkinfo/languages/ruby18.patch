diff -ru ruby-1.8.1/Makefile.in ruby-1.8.1-patched/Makefile.in
--- ruby-1.8.1/Makefile.in	Mon Dec 15 07:57:10 2003
+++ ruby-1.8.1-patched/Makefile.in	Tue May  4 01:00:37 2004
@@ -119,7 +119,7 @@
 
 $(PROGRAM):     $(LIBRUBY) $(MAINOBJ) $(EXTOBJS) $(SETUP) miniruby$(EXEEXT)
 		@rm -f $@
-		$(PURIFY) $(CC) $(LDFLAGS) $(XLDFLAGS) $(MAINLIBS) $(MAINOBJ) $(EXTOBJS) $(LIBRUBYARG) $(LIBS) -o $@
+		$(PURIFY) $(CC) $(XLDFLAGS) $(LDFLAGS) $(MAINLIBS) $(MAINOBJ) $(EXTOBJS) $(LIBRUBYARG) $(LIBS) -o $@
 
 # We must `rm' the library each time this rule is invoked because "updating" a
 # MAB library on Apple/NeXT (see --enable-fat-binary in configure) is not
diff -ru ruby-1.8.1/configure ruby-1.8.1-patched/configure
--- ruby-1.8.1/configure	Wed Dec 24 20:21:24 2003
+++ ruby-1.8.1-patched/configure	Tue May  4 00:54:36 2004
@@ -13769,7 +13769,7 @@
 	rhapsody*)	: ${LDSHARED='cc -dynamic -bundle -undefined suppress'}
 			: ${LDFLAGS=""}
 			rb_cv_dlopen=yes ;;
-	darwin*)	: ${LDSHARED='cc -dynamic -bundle -undefined suppress -flat_namespace'}
+	darwin*)	: ${LDSHARED='cc -dynamic -bundle'}
 			: ${LDFLAGS=""}
 			rb_cv_dlopen=yes ;;
 	aix*)		: ${LDSHARED='/usr/ccs/bin/ld'}
@@ -14411,7 +14411,7 @@
     ;;
 esac
 
-RUBY_SO_NAME='$(RUBY_INSTALL_NAME)'
+RUBY_SO_NAME=ruby
 LIBRUBY_LDSHARED=$LDSHARED
 LIBRUBY_DLDFLAGS=$DLDFLAGS
 LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR).$(MINOR).$(TEENY)'
@@ -14495,9 +14495,9 @@
 	;;
     darwin*)
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(MAJOR).$(MINOR).$(TEENY).dylib'
-	LIBRUBY_LDSHARED='cc -dynamiclib -undefined suppress -flat_namespace'
-	LIBRUBY_DLDFLAGS='-install_name $(libdir)/lib$(RUBY_SO_NAME).dylib -current_version $(MAJOR).$(MINOR).$(TEENY) -compatibility_version $(MAJOR).$(MINOR)'
-	LIBRUBY_ALIASES='lib$(RUBY_SO_NAME).$(MAJOR).$(MINOR).dylib lib$(RUBY_SO_NAME).dylib'
+	LIBRUBY_LDSHARED='cc -dynamiclib'
+	LIBRUBY_DLDFLAGS='-install_name $(libdir)/lib$(RUBY_SO_NAME).$(MAJOR).$(MINOR).dylib -current_version $(MAJOR).$(MINOR).$(TEENY) -compatibility_version $(MAJOR).$(MINOR)'
+	LIBRUBY_ALIASES='lib$(RUBY_SO_NAME).$(MAJOR).$(MINOR).dylib lib$(RUBY_SO_NAME).dylib libruby.2.dylib'
 	;;
     atheos*)
 	LIBRUBY_DLDFLAGS='-Wl,-soname,lib$(RUBY_SO_NAME).so.$(MAJOR).$(MINOR)'
diff -ru ruby-1.8.1/ext/tcltklib/extconf.rb ruby-1.8.1-patched/ext/tcltklib/extconf.rb
--- ruby-1.8.1/ext/tcltklib/extconf.rb	Fri Jul 25 18:05:25 2003
+++ ruby-1.8.1-patched/ext/tcltklib/extconf.rb	Tue May  4 00:56:22 2004
@@ -11,14 +11,14 @@
 
 dir_config("tk")
 dir_config("tcl")
-dir_config("X11")
+dir_config("X11", "/usr/X11R6/include", "/usr/X11R6/lib")
 
 tklib = with_config("tklib")
 tcllib = with_config("tcllib")
 stubs = enable_config("tcltk_stubs") || with_config("tcltk_stubs")
 
 def find_tcl(tcllib, stubs)
-  paths = ["/usr/local/lib", "/usr/pkg/lib", "/usr/lib"]
+  paths = ["@PREFIX@/lib", "/usr/local/lib", "/usr/pkg/lib", "/usr/lib"]
   func = stubs ? "Tcl_InitStubs" : "Tcl_FindExecutable"
   if tcllib
     find_library(tcllib, func, *paths)
@@ -33,7 +33,7 @@
 end
 
 def find_tk(tklib, stubs)
-  paths = ["/usr/local/lib", "/usr/pkg/lib", "/usr/lib"]
+  paths = ["@PREFIX@/lib", "/usr/local/lib", "/usr/pkg/lib", "/usr/lib"]
   func = stubs ? "Tk_InitStubs" : "Tk_Init"
   if tklib
     find_library(tklib, func, *paths)
diff -ru ruby-1.8.1/lib/mkmf.rb ruby-1.8.1-patched/lib/mkmf.rb
--- ruby-1.8.1/lib/mkmf.rb	Fri Dec 19 00:01:04 2003
+++ ruby-1.8.1-patched/lib/mkmf.rb	Tue May  4 00:58:54 2004
@@ -1018,7 +1018,7 @@
   if CONFIG["DLEXT"] == $OBJEXT
     "ld $(DLDFLAGS) -r -o $(DLLIB) $(OBJS)\n"
   else
-    "$(LDSHARED) $(DLDFLAGS) $(LIBPATH) #{OUTFLAG}$(DLLIB) " \
+    "$(LDSHARED) $(LIBPATH) $(DLDFLAGS) #{OUTFLAG}$(DLLIB) " \
     "$(OBJS) $(LOCAL_LIBS) $(LIBS)"
   end
 LIBPATHFLAG = config_string('LIBPATHFLAG') || ' -L%s'
