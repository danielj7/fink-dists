
--- kmailcvt/filter_plain.cxx	14 Aug 2002 19:13:56 -0000	1.1.1.2
+++ kmailcvt/filter_plain.cxx	14 Aug 2002 19:36:48 -0000	1.3
@@ -24,7 +24,6 @@
 #include <kfiledialog.h>
 #include <kdirlister.h>
 #include <qregexp.h>
-#include <libgen.h>
 #include <qdir.h>
 
 #include "filter_plain.hxx"
--- kpf/src/WebServer.cpp	15 Jan 2003 05:14:48 -0000	1.1.1.6
+++ kpf/src/WebServer.cpp	27 Nov 2002 02:26:50 -0000	1.5
@@ -230,8 +230,13 @@
         fd,
         SOL_SOCKET,
         SO_REUSEADDR,
-        ( char* )&on,
-        sizeof( on ) );
+        reinterpret_cast<const void *>(&on),
+#ifdef __osf__
+        (size_t) sizeof(on)
+#else
+	(socklen_t) sizeof(on)
+#endif
+      );
 
     on = 0;
 
@@ -240,8 +245,13 @@
         fd,
         SOL_SOCKET,
         SO_LINGER,
-        ( char* ) &on,
-        sizeof( on ) );
+        reinterpret_cast<const void *>(&on),
+#ifdef __osf__
+        (size_t) sizeof(on)
+#else
+        (socklen_t) sizeof(on)
+#endif
+      );
 
     Server * s = new Server(d->root, d->followSymlinks, fd, this);
 
--- krdc/rfbproto.h	20 Nov 2002 02:57:22 -0000	1.1.1.3
+++ krdc/rfbproto.h	20 Nov 2002 03:11:12 -0000	1.4
@@ -43,6 +43,9 @@
  *      messages have to be explained by comments.
  */
 
+#ifndef RFBPROTO_H
+#define RFBPROTO_H
+
 #include "vnctypes.h"
 
 /*****************************************************************************
@@ -833,3 +836,5 @@
     rfbPointerEventMsg pe;
     rfbClientCutTextMsg cct;
 } rfbClientToServerMsg;
+
+#endif
--- krdc/vnctypes.h	14 Aug 2002 19:12:45 -0000	1.1.1.2
+++ krdc/vnctypes.h	17 Aug 2002 17:34:19 -0000	1.4
@@ -30,7 +30,6 @@
 
 #include <X11/Xmd.h>
 
-
 typedef struct {
   int shareDesktop; /* bool */
   int viewOnly; /* bool */
--- krdc/vncviewer.h	14 Aug 2002 19:12:46 -0000	1.1.1.2
+++ krdc/vncviewer.h	17 Aug 2002 17:34:19 -0000	1.4
@@ -177,4 +177,5 @@
 #if(defined __cplusplus)
 }
 #endif
-#endif
+
+#endif /* VNCVIEWER_H */
--- krfb/kinetd/Makefile.am	29 Oct 2002 17:41:27 -0000	1.1.1.4
+++ krfb/kinetd/Makefile.am	29 Nov 2002 19:01:21 -0000	1.9
@@ -5,15 +5,14 @@
 
 kded_kinetd_la_SOURCES = kinetd.cpp kinetd.skel
 kded_kinetd_la_LDFLAGS  = $(all_libraries) -module -avoid-version
-kded_kinetd_la_LIBADD   = ../srvloc/libsrvloc.la $(LIB_KIO) 
+kded_kinetd_la_LIBADD   = $(top_builddir)/krfb/srvloc/libsrvloc.la $(LIB_KIO) $(LIB_KDED) -lkdeui -lDCOP
 
 # Services
 kde_servicetypes_DATA = kinetdmodule.desktop
 kdeddir = $(kde_servicesdir)/kded
 kded_DATA = kinetd.desktop
 
-EXTRA_DIST = $(kded_kinetd_la_SOURCES)\
-             $(kded_DATA) \
+EXTRA_DIST = $(kded_DATA) \
              $(kde_servicetypes_DATA) \
 	     eventsrc README.debugging
 
--- krfb/libvncserver/rfb.h	10 Dec 2002 22:11:57 -0000	1.1.1.3
+++ krfb/libvncserver/rfb.h	10 Dec 2002 22:20:46 -0000	1.4
@@ -31,6 +31,8 @@
 {
 #endif
 
+typedef unsigned int socklen_t;
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
RCS file: krfb/srvloc/inet_ntop.c
diff -N krfb/srvloc/inet_ntop.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ krfb/srvloc/inet_ntop.c	23 Aug 2002 21:19:36 -0000	1.1
@@ -0,0 +1,195 @@
+/*
+ * Copyright (c) 1996-1999 by Internet Software Consortium.
+ *
+ * Permission to use, copy, modify, and distribute this software for any
+ * purpose with or without fee is hereby granted, provided that the above
+ * copyright notice and this permission notice appear in all copies.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM DISCLAIMS
+ * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL INTERNET SOFTWARE
+ * CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ */
+
+#if defined(LIBC_SCCS) && !defined(lint)
+static const char rcsid[] = "$Id: inet_ntop.c,v 1.1 2002/08/23 21:19:36 ranger Exp $";
+#endif /* LIBC_SCCS and not lint */
+
+/*#include "port_before.h"*/
+
+#include <sys/param.h>
+#include <sys/types.h>
+#include <sys/socket.h>
+
+#include <netinet/in.h>
+#include <arpa/inet.h>
+#include <arpa/nameser.h>
+
+#include <errno.h>
+#include <stdio.h>
+#include <string.h>
+
+/*#include "port_after.h"*/
+
+#define NS_INT16SZ      2
+#define NS_IN6ADDRSZ   16
+ 
+#ifdef SPRINTF_CHAR
+# define SPRINTF(x) strlen(sprintf/**/x)
+#else
+# define SPRINTF(x) ((size_t)sprintf x)
+#endif
+
+/*
+ * WARNING: Don't even consider trying to compile this on a system where
+ * sizeof(int) < 4.  sizeof(int) > 4 is fine; all the world's not a VAX.
+ */
+
+static const char *inet_ntop4 __P((const u_char *src, char *dst, size_t size));
+static const char *inet_ntop6 __P((const u_char *src, char *dst, size_t size));
+
+/* char *
+ * inet_ntop(af, src, dst, size)
+ *	convert a network format address to presentation format.
+ * return:
+ *	pointer to presentation format address (`dst'), or NULL (see errno).
+ * author:
+ *	Paul Vixie, 1996.
+ */
+const char *
+inet_ntop(int af, const void *src, char *dst, size_t size)
+{
+	switch (af) {
+	case AF_INET:
+		return (inet_ntop4(src, dst, size));
+	case AF_INET6:
+		return (inet_ntop6(src, dst, size));
+	default:
+		errno = EAFNOSUPPORT;
+		return (NULL);
+	}
+	/* NOTREACHED */
+}
+
+/* const char *
+ * inet_ntop4(src, dst, size)
+ *	format an IPv4 address
+ * return:
+ *	`dst' (as a const)
+ * notes:
+ *	(1) uses no statics
+ *	(2) takes a u_char* not an in_addr as input
+ * author:
+ *	Paul Vixie, 1996.
+ */
+static const char *
+inet_ntop4(const u_char *src, char *dst, size_t size)
+{
+	static const char fmt[] = "%u.%u.%u.%u";
+	char tmp[sizeof "255.255.255.255"];
+
+	if (SPRINTF((tmp, fmt, src[0], src[1], src[2], src[3])) >= size) {
+		errno = ENOSPC;
+		return (NULL);
+	}
+	strcpy(dst, tmp);
+	return (dst);
+}
+
+/* const char *
+ * inet_ntop6(src, dst, size)
+ *	convert IPv6 binary address into presentation (printable) format
+ * author:
+ *	Paul Vixie, 1996.
+ */
+static const char *
+inet_ntop6(const u_char *src, char *dst, size_t size)
+{
+	/*
+	 * Note that int32_t and int16_t need only be "at least" large enough
+	 * to contain a value of the specified size.  On some systems, like
+	 * Crays, there is no such thing as an integer variable with 16 bits.
+	 * Keep this in mind if you think this function should have been coded
+	 * to use pointer overlays.  All the world's not a VAX.
+	 */
+	char tmp[sizeof "ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"], *tp;
+	struct { int base, len; } best, cur;
+	u_int words[NS_IN6ADDRSZ / NS_INT16SZ];
+	int i;
+
+	/*
+	 * Preprocess:
+	 *	Copy the input (bytewise) array into a wordwise array.
+	 *	Find the longest run of 0x00's in src[] for :: shorthanding.
+	 */
+	memset(words, '\0', sizeof words);
+	for (i = 0; i < NS_IN6ADDRSZ; i++)
+		words[i / 2] |= (src[i] << ((1 - (i % 2)) << 3));
+	best.base = -1;
+	cur.base = -1;
+	for (i = 0; i < (NS_IN6ADDRSZ / NS_INT16SZ); i++) {
+		if (words[i] == 0) {
+			if (cur.base == -1)
+				cur.base = i, cur.len = 1;
+			else
+				cur.len++;
+		} else {
+			if (cur.base != -1) {
+				if (best.base == -1 || cur.len > best.len)
+					best = cur;
+				cur.base = -1;
+			}
+		}
+	}
+	if (cur.base != -1) {
+		if (best.base == -1 || cur.len > best.len)
+			best = cur;
+	}
+	if (best.base != -1 && best.len < 2)
+		best.base = -1;
+
+	/*
+	 * Format the result.
+	 */
+	tp = tmp;
+	for (i = 0; i < (NS_IN6ADDRSZ / NS_INT16SZ); i++) {
+		/* Are we inside the best run of 0x00's? */
+		if (best.base != -1 && i >= best.base &&
+		    i < (best.base + best.len)) {
+			if (i == best.base)
+				*tp++ = ':';
+			continue;
+		}
+		/* Are we following an initial run of 0x00s or any real hex? */
+		if (i != 0)
+			*tp++ = ':';
+		/* Is this address an encapsulated IPv4? */
+		if (i == 6 && best.base == 0 &&
+		    (best.len == 6 || (best.len == 5 && words[5] == 0xffff))) {
+			if (!inet_ntop4(src+12, tp, sizeof tmp - (tp - tmp)))
+				return (NULL);
+			tp += strlen(tp);
+			break;
+		}
+		tp += SPRINTF((tp, "%x", words[i]));
+	}
+	/* Was it a trailing run of 0x00's? */
+	if (best.base != -1 && (best.base + best.len) == 
+	    (NS_IN6ADDRSZ / NS_INT16SZ))
+		*tp++ = ':';
+	*tp++ = '\0';
+
+	/*
+	 * Check for overflow, copy, and we're done.
+	 */
+	if ((size_t)(tp - tmp) > size) {
+		errno = ENOSPC;
+		return (NULL);
+	}
+	strcpy(dst, tmp);
+	return (dst);
+}
--- krfb/srvloc/kinetaddr.cpp	29 Oct 2002 17:41:41 -0000	1.1.1.3
+++ krfb/srvloc/kinetaddr.cpp	31 Oct 2002 19:24:26 -0000	1.6
@@ -28,6 +28,8 @@
 
 #include <limits.h>
 #include <string.h>
+#include <sys/types.h>
+#include <sys/socket.h>
 
 #include <kdebug.h>
 #include <klocale.h>
--- ksirc/Makefile.am	5 Nov 2002 02:44:24 -0000	1.1.1.6
+++ ksirc/Makefile.am	12 Jan 2003 18:00:03 -0000	1.11
@@ -17,17 +17,16 @@
 testview_LDADD = kstextview.lo $(LIB_KDEUI)
 testview_LDFLAGS = $(all_libraries) $(KDE_RPATH)
 
-lib_LTLIBRARIES = ksirc.la
+lib_LTLIBRARIES = ksirc.la libksirc_main.la
 
 noinst_PROGRAMS = getdate
 
 # Which sources should be compiled for ksirc.
 
-ksirc_la_SOURCES = \
+libksirc_main_la_SOURCES = \
 	toplevel.cpp \
 	charSelector.cpp \
 	chanButtons.cpp \
-	ksirc.cpp \
 	alistbox.cpp \
 	ahistlineedit.cpp \
 	iocontroller.cpp \
@@ -57,8 +56,7 @@
         colorpicker.cpp
 
 # the library search path
-ksirc_la_LDFLAGS = $(all_libraries) -module -avoid-version
-ksirc_la_COMPILE_FIRST = cdate.h
+libksirc_main_la_LDFLAGS = $(all_libraries) -avoid-version
 
 all_ksirc_libraries = \
 	./KSPrefs/libksprefs.la \
@@ -68,10 +66,20 @@
 
 # the libraries to link against. Be aware of the order. First the libraries,
 # that depend on the following ones.
-ksirc_la_LIBADD   = $(all_ksirc_libraries)
+libksirc_main_la_LIBADD   = $(all_ksirc_libraries) -lkdecore -lkdeui $(LIB_QT)
+
+ksirc_la_COMPILE_FIRST = cdate.h
+ksirc_la_SOURCES = ksirc_la_main.cpp
+ksirc_la_LIBADD  = libksirc_main.la
+ksirc_la_LDFLAGS = $(all_libraries) $(KDE_RPATH) -module -avoid-version
+
+ksirc_la_main.cpp: ksirc.cpp
+	cat ksirc.cpp > ksirc_la_main.cpp
+
+ksirc.cpp: cdate.h
 
-ksirc_SOURCES = dummy.cpp
-ksirc_LDADD = ksirc.la
+ksirc_SOURCES = ksirc.cpp
+ksirc_LDADD = libksirc_main.la
 ksirc_LDFLAGS = $(all_libraries) $(KDE_RPATH)
 
 kdoc:
--- ktalkd/ktalkd/machines/answmach.cpp	4 Jan 2003 20:03:10 -0000	1.1.1.2
+++ ktalkd/ktalkd/machines/answmach.cpp	4 Jan 2003 20:08:04 -0000	1.3
@@ -32,6 +32,10 @@
  *
  */
 
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
 #include "answmach.h"
 
 #include <stdio.h>
--- ktalkd/ktalkd/machines/forwmach.cpp	4 Jan 2003 20:03:11 -0000	1.1.1.2
+++ ktalkd/ktalkd/machines/forwmach.cpp	4 Jan 2003 20:08:04 -0000	1.3
@@ -31,6 +31,9 @@
  * (BSD License, from kdelibs/doc/common/bsd-license.html)
  */
 
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
 #include "../includ.h"
 #include "forwmach.h"
 #include <stdio.h>
--- kxmlrpc/Makefile.am	3 Oct 2002 00:44:41 -0000	1.1.1.2
+++ kxmlrpc/Makefile.am	29 Nov 2002 19:01:21 -0000	1.5
@@ -1,21 +1,31 @@
 # Makefile for kxmlrpcd.
 # Written by Kurt Granroth using tons of KDE Makefiles as examples
 
+METASOURCES      = AUTO
 INCLUDES         = $(all_includes)
 
 bin_PROGRAMS     = kxmlrpcd
-kxmlrpcd_LDADD   = kxmlrpcd.la
+kxmlrpcd_LDADD   = libkxmlrpcd_main.la
 kxmlrpcd_LDFLAGS = $(all_libraries) $(KDE_RPATH)
-kxmlrpcd_SOURCES = dummy.cpp
+kxmlrpcd_SOURCES = kxmlrpcd_main.cpp
 
-lib_LTLIBRARIES        = kxmlrpcd.la
+kxmlrpcd_main.cpp: stub_main.cpp
+	cat stub_main.cpp > kxmlrpcd_main.cpp
+
+lib_LTLIBRARIES        = kxmlrpcd.la libkxmlrpcd_main.la
 kde_module_LTLIBRARIES = kcm_xmlrpcd.la
 
-kxmlrpcd_la_LIBADD  = $(LIB_KSYCOCA)
-kxmlrpcd_la_LDFLAGS = $(all_libraries) -module -avoid-version 
-kxmlrpcd_la_SOURCES = kxmlrpcserver.cpp kxmlrpcparser.cpp \
+libkxmlrpcd_main_la_LIBADD  = $(LIB_KSYCOCA) $(LIB_QT) -lkdecore -lDCOP
+libkxmlrpcd_main_la_LDFLAGS = $(all_libraries) -avoid-version 
+libkxmlrpcd_main_la_SOURCES = kxmlrpcserver.cpp kxmlrpcparser.cpp \
 	kxmlrpcdaemon.cpp kxmlrpcutil.cpp
-kxmlrpcd_la_METASOURCES = AUTO
+
+kxmlrpcd_la_LIBADD  = libkxmlrpcd_main.la
+kxmlrpcd_la_LDFLAGS = $(all_libraries) -avoid-version -module
+kxmlrpcd_la_SOURCES = kxmlrpcd_la_main.cpp
+
+kxmlrpcd_la_main.cpp: stub_main.cpp
+	cat stub_main.cpp > kxmlrpcd_la_main.cpp
 
 kcm_xmlrpcd_la_LIBADD = $(LIB_KDECORE)
 kcm_xmlrpcd_la_LDFLAGS = $(all_libraries) $(KDE_PLUGIN) -module
@@ -28,6 +38,3 @@
 
 messages: rc.cpp
 	$(XGETTEXT) *.cpp -o $(podir)/kxmlrpcd.pot
-
-dummy.cpp:
-	echo > dummy.cpp
--- kxmlrpc/kxmlrpcdaemon.cpp	25 Jun 2002 03:12:42 -0000	1.1.1.1
+++ kxmlrpc/kxmlrpcdaemon.cpp	29 Nov 2002 19:01:21 -0000	1.2
@@ -358,7 +358,8 @@
    { 0, 0, 0 }
 };
 
-int main(int argc, char **argv)
+extern "C" int kdemain(int, char**);
+int kdemain(int argc, char **argv)
 {
     KAboutData about("kxmlrpcd", I18N_NOOP("KXmlRpc Daemon"),
                      version, description, KAboutData::License_BSD);
RCS file: kxmlrpc/stub_main.cpp
diff -N kxmlrpc/stub_main.cpp
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ kxmlrpc/stub_main.cpp	29 Nov 2002 19:01:21 -0000	1.1
@@ -0,0 +1,28 @@
+/*
+ *
+ * Copyright (c) 2001 Nick Hudson <skrll@netbsd.org>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
+ * AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
+ * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+extern "C" int kdemain(int, char* []);
+
+int main( int argc, char* argv[] )
+{
+        return kdemain(argc, argv);
+}
+
--- libkdenetwork/Makefile.am	15 Jan 2003 05:16:05 -0000	1.1.1.5
+++ libkdenetwork/Makefile.am	15 Jan 2003 05:25:30 -0000	1.6
@@ -43,8 +43,7 @@
 
 libkdenetwork_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 2:0
 noinst_HEADERS = kpgpbase.h
-
-libkdenetwork_la_LIBADD = $(LIB_KDEUI)
+libkdenetwork_la_LIBADD = $(LIB_KDEUI) $(LIB_POLL)
 
 METASOURCES = AUTO
 
--- mimelib/mimelib/config.h	25 Jun 2002 03:12:43 -0000	1.1.1.1
+++ mimelib/mimelib/config.h	25 Jun 2002 03:14:13 -0000	1.2
@@ -35,7 +35,7 @@
 #   define DW_WIN32
 #endif
 
-#if defined(__unix__) || defined(__unix) || defined(_AIX) || defined(__NetBSD__)
+#if defined(__unix__) || defined(__unix) || defined(_AIX) || defined(__NetBSD__) || defined(__MACH__)
 #   define DW_UNIX
 #endif
 
