Binary files gdal-2.0.1-orig/ogr/ogrsf_frmts/.DS_Store and gdal-2.0.1/ogr/ogrsf_frmts/.DS_Store differ
diff -ruN gdal-2.0.1-orig/ogr/ogrsf_frmts/sqlite/ogrsqlitevfs.cpp gdal-2.0.1/ogr/ogrsf_frmts/sqlite/ogrsqlitevfs.cpp
--- gdal-2.0.1-orig/ogr/ogrsf_frmts/sqlite/ogrsqlitevfs.cpp	2016-03-13 07:57:30.000000000 +0900
+++ gdal-2.0.1/ogr/ogrsf_frmts/sqlite/ogrsqlitevfs.cpp	2016-03-14 06:40:18.000000000 +0900
@@ -380,11 +380,24 @@
     return pUnderlyingVFS->xSleep(pUnderlyingVFS, microseconds);
 }
 
-static int OGRSQLiteVFSCurrentTime (sqlite3_vfs* pVFS, double* p1)
+// Derived for sqlite3.c implementation of unixCurrentTime64 and winCurrentTime64
+#include <sys/time.h>
+static int OGRSQLiteVFSCurrentTimeInt64 (sqlite3_vfs* /*pVFS*/, sqlite3_int64 *piNow)
 {
-    sqlite3_vfs* pUnderlyingVFS = GET_UNDERLYING_VFS(pVFS);
-    //CPLDebug("SQLITE", "OGRSQLiteVFSCurrentTime()");
-    return pUnderlyingVFS->xCurrentTime(pUnderlyingVFS, p1);
+    struct timeval sNow;
+    static const sqlite3_int64 unixEpoch = 24405875*(sqlite3_int64)8640000;
+    (void)gettimeofday(&sNow, NULL);  /* Cannot fail given valid arguments */
+    *piNow = unixEpoch + 1000*(sqlite3_int64)sNow.tv_sec + sNow.tv_usec/1000;
+
+    return SQLITE_OK;
+}
+
+static int OGRSQLiteVFSCurrentTime (sqlite3_vfs* /*pVFS*/, double* p1)
+{
+    sqlite3_int64 i = 0;
+    int rc = OGRSQLiteVFSCurrentTimeInt64(NULL, &i);
+    *p1 = i/86400000.0;
+    return rc;
 }
 
 static int OGRSQLiteVFSGetLastError (sqlite3_vfs* pVFS, int p1, char *p2)
@@ -407,7 +420,6 @@
     pVFSAppData->pfnUserData = pfnUserData;
     pVFSAppData->nCounter = 0;
 
-    pMyVFS->iVersion = 1;
     pMyVFS->szOsFile = sizeof(OGRSQLiteFileStruct);
     pMyVFS->mxPathname = pDefaultVFS->mxPathname;
     pMyVFS->zName = pVFSAppData->szVFSName;
@@ -424,6 +436,8 @@
     pMyVFS->xSleep = OGRSQLiteVFSSleep;
     pMyVFS->xCurrentTime = OGRSQLiteVFSCurrentTime;
     pMyVFS->xGetLastError = OGRSQLiteVFSGetLastError;
+    pMyVFS->xCurrentTimeInt64 = OGRSQLiteVFSCurrentTimeInt64;
+
     return pMyVFS;
 }
 
