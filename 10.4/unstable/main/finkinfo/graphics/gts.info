Package: gts
Version: 0.7.3
Revision: 1003
Description: GNU triangulated surface library
Source: mirror:sourceforge:%n/%n-%v.tar.gz
DocFiles: AUTHORS COPYING README
Maintainer: Patrick Stein <fink@nklein.com>
HomePage: http://gts.sourceforge.net/
License: LGPL
BuildDepends: glib2-dev (>= 2.12.0-1), libiconv-dev, libgettext3-dev
Depends: %n-shlibs (= %v-%r), pkgconfig
BuildDependsOnly: True
Source-MD5: c02209e38229eb2abb1370dadd0020b4
PatchScript: perl -pi -e 's/(AC_DEFUN\()([^[]+)(,)/\1\[\2]\3/' src/gts.m4
ConfigureParams: --with-glib-prefix=%p
SetCPPFLAGS: -I%p/include/glib-2.0 -I%p/lib/glib-2.0/include
SplitOff: <<
    Package: %N-shlibs
    Depends: glib2-shlibs (>= 2.12.0-1), libiconv, libgettext3-shlibs
    Files: lib/lib%N-*.dylib
    Shlibs: %p/lib/lib%N-0.7.3.dylib 4.0.0 %n (>= 0.7.3-2)
    DocFiles: AUTHORS COPYING README
<<
SplitOff2: <<
    Package: %N-bin
    Depends: <<
	%N-shlibs (= %v-%r),
	glib2-shlibs (>= 2.12.0-1), libiconv, libgettext3-shlibs
<<
    Files: <<
	bin/gts2dxf bin/gts2oogl bin/gts2stl
	bin/gtscheck bin/gtscompare bin/gtstemplate
	bin/stl2gts bin/transform
<<
    DocFiles: AUTHORS COPYING README
<<
DescDetail: <<
    GTS stands for the GNU Triangulated Surface Library. It is an
    Open Source Free Software Library intended to provide a set of
    useful functions to deal with 3D surfaces meshed with interconnected
    triangles. The source code is available free of charge under
    the Free Software LGPL license.

    The code is written entirely in C with an object-oriented
    approach based mostly on the design of GTK+. Careful attention
    is paid to performance related issues as the initial goal of
    GTS is to provide a simple and efficient library to scientists
    dealing with 3D computational surface meshes.

    A brief summary of its main features:
	* Simple object-oriented structure giving easy access to
	    topological properties.
	* 2D dynamic Delaunay and constrained Delaunay triangulations.
	* Robust geometric predicates (orientation, in circle) using
	    fast adaptive floating point arithmetic (adapted from the
	    fine work of Jonathan R. Shewchuk).
	* Robust set operations on surfaces (union, intersection,
	    difference).
	* Surface refinement and coarsening (multiresolution models).
	* Dynamic view-independent continuous level-of-detail.
	* Preliminary support for view-dependent level-of-detail.
	* Bounding-boxes trees and Kd-trees for efficient point
	    location and collision/intersection detection.
	* Graph operations: traversal, graph partitioning.
	* Metric operations (area, volume, curvature ...).
	* Triangle strips generation for fast rendering.
<<
DescPackaging: <<
	netpbm10 is not a dependency because it is only used (if
	present) during tests, not for installed files
<<
