--- libgd-2.1.0-orig/config/gdlib-config.in	2013-06-25 05:58:23.000000000 -0400
+++ libgd-2.1.0/config/gdlib-config.in	2013-07-11 09:24:44.000000000 -0400
@@ -68,10 +68,10 @@
 	echo @GDLIB_REVISION@
 	;;
     --ldflags)
-	echo @LDFLAGS@
+	echo -L@libdir@
 	;;
     --libs)
-	echo -lgd @LIBS@ @LIBICONV@
+	echo 
 	;;
     --cflags|--includes)
 	echo -I@includedir@
@@ -83,8 +83,8 @@
 	echo "GD library  @VERSION@"
 	echo "includedir: $includedir"
 	echo "cflags:     -I@includedir@"
-	echo "ldflags:    @LDFLAGS@"
-	echo "libs:       @LIBS@ @LIBICONV@"
+	echo "ldflags:    -L@libdir@"
+	echo "libs:       "
 	echo "libdir:     $libdir"
 	echo "features:   @FEATURES@"
 	;;
From c9b601a658a79e6ea2aad29fbf60ca6e24ccef1e Mon Sep 17 00:00:00 2001
From: "Christoph M. Becker" <cmbecker69@gmx.de>
Date: Wed, 18 Jan 2017 13:59:02 +0100
Subject: [PATCH] Fix build issue regarding INT_MAX

For portability gd_gd2.c needs to include <limits.h>.
---
 src/gd_gd2.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/gd_gd2.c b/src/gd_gd2.c
index c2904ca..049c4c5 100644
--- a/src/gd_gd2.c
+++ b/src/gd_gd2.c
@@ -74,6 +74,7 @@
 
 /* 2.0.29: no more errno.h, makes windows happy */
 #include <math.h>
+#include <limits.h>
 #include <string.h>
 #include "gd.h"
 #include "gd_errors.h"
From 55ac28a293eaa8c531870c8bb8ecc04b333975f4 Mon Sep 17 00:00:00 2001
From: "Christoph M. Becker" <cmbecker69@gmx.de>
Date: Thu, 19 Jan 2017 01:02:58 +0100
Subject: [PATCH] Fix #357: 2.2.4: Segfault in test suite.

We make sure to never pass a negative `int` as argument to a `size_t`
parameter.
---
 src/gd_io_dp.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/gd_io_dp.c b/src/gd_io_dp.c
index eda2eeb..cb38794 100644
--- a/src/gd_io_dp.c
+++ b/src/gd_io_dp.c
@@ -292,6 +292,10 @@ static int dynamicGetbuf(gdIOCtxPtr ctx, void *buf, int len)
 		rlen = dp->realSize - dp->pos;
 	}
 
+	if (rlen < 0) {
+		return 0;
+	}
+
 	memcpy(buf, (void *) ((char *)dp->data + dp->pos), rlen);
 	dp->pos += rlen;
 
From 2c42d366e770a9f5a925ae9d66a10017f6a179a7 Mon Sep 17 00:00:00 2001
From: "Christoph M. Becker" <cmbecker69@gmx.de>
Date: Fri, 20 Jan 2017 19:16:56 +0100
Subject: [PATCH] Fix and improve assert messages of the test case

---
 tests/gdimagefile/gdnametest.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/tests/gdimagefile/gdnametest.c b/tests/gdimagefile/gdnametest.c
index 66da484..e87457b 100644
--- a/tests/gdimagefile/gdnametest.c
+++ b/tests/gdimagefile/gdnametest.c
@@ -83,7 +83,8 @@ do_test() {
     for (n = 0; names[n].nm; n++) {
         gdImagePtr orig, copy;
         int status;
-        char *full_filename = NULL;
+        char *full_filename = NULL;
+        unsigned int pixels;
 
         /* Some image readers are buggy and crash the program so we
          * skip them.  Bug fixers should remove these from the list of
@@ -97,7 +98,7 @@ do_test() {
          * it.  (If it's one of the built-in types, *that* a different
          * problem; we assert that here.) */
         if (!gdSupportsFileType(names[n].nm, 0)) {
-            gdTestAssertMsg(!names[n].required, "GD doesn't support required file type: %s\n", full_filename);
+            gdTestAssertMsg(!names[n].required, "GD doesn't support required file type: %s\n", names[n].nm);
             continue;
         }/* if */
 
@@ -119,8 +120,9 @@ do_test() {
         copy = gdImageCreateFromFile(full_filename);
         gdTestAssertMsg(!!copy, "Failed to load %s\n", full_filename);
         if (!copy) continue;
-
-        gdTestAssertMsg(gdMaxPixelDiff(orig, copy) <= names[n].maxdiff,"Pixels different on %s\n", full_filename, full_filename);
+
+        pixels = gdMaxPixelDiff(orig, copy);
+        gdTestAssertMsg(pixels <= names[n].maxdiff, "%u pixels different on %s\n", pixels, full_filename);
 
         if (!names[n].readonly) {
             status = remove(full_filename);
