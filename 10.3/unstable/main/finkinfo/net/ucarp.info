Package: ucarp 
Version: 1.1
Revision: 11
Depends: libpcap-shlibs
BuildDepends: gawk, libpcap
Description: Userland CARP, alternative to the VRRP
DescDetail: <<
UCARP allows a pair of hosts to share common virtual 
IP addresses in order to provide automatic failover. 
It is a portable userland implementation of the secure 
and patent-free Common Address Redundancy Protocol 
(CARP, OpenBSD's alternative to the VRRP).

Strong points of the CARP protocol are : very low overhead, 
cryptographically signed messages, interoperability between
different operating systems and no need for any dedicated
extra network link between redundant hosts. 
<<

DescPort: <<
------------------------ USAGE ------------------------

The server will usually be installed as : /sw/sbin/ucarp
Everything is driven through command-line options.
In order to see the list of available options, try : /sw/sbin/ucarp -h

Better than a long technical discussion, here's a real-life setup example.
This is tailored for Linux and merely shows the concept.

Your company has an internal mail relay whose IP address is 10.1.1.252. Every
user has configured his mail client with that host or IP address and the
service must always be up and running without reconfiguring mail clients in
case of a failure.

It's why you set up two mail servers hosts with an identical configuration.
Their real IP addresses are 10.1.1.1 and 10.1.1.2.
Let's see how to assign the same additionnal IP address (10.1.1.252) to both
servers, so that when one goes down, the other one goes up.

Right. What we need now is an identifier for the virtual IP. Let's take "42".
And we also need a password. Let's take "love".

Now, on the first host (whoose real IP is 10.1.1.1), run :

/sw/sbin/ucarp -v 42 -p love -a 10.1.1.252 -s 10.1.1.1 &

On the second host, whose real IP is 10.1.1.2, run :

/sw/sbin/ucarp -v 42 -p love -a 10.1.1.252 -s 10.1.1.2 &

You should see that one of those hosts quickly becomes the master, and the
other one the backup. Related scripts are spawned on change.

Now unplug the master. After a few seconds, the other host becomes the new
master.

By changing the base (the -b switch) you can have a "preferred" master. The
lower the value is, the more likely it's going to be a master.

Please note that by default, and if everything's ok, a master will stay a
master as long as possible. If you want a "preferred" master to immediately
become a master even if the other host is, add the --preempt (or -P) switch.

The "dead ratio" (--deadratio=...) knob basically changes how long a backup
server will wait for an unresponsive master before considering it as dead, and
becoming the new master. In the original protocol, the ratio is 3. This is
also the default when this command-line switch is missing.
<<

License: BSD
Source: http://www.pureftpd.org/ucarp/%n-%v.tar.bz2
Source-MD5: f907752bd1654a6e8aa42e717aee9774 
DocFiles: AUTHORS COPYING ChangeLog INSTALL.txt NEWS README
PatchScript: <<
      mv INSTALL INSTALL.txt
<<
SetLDFLAGS: -L%p/lib
SetCFLAGS: -no-cpp-precomp
ConfigureParams: --prefix=%p --mandir=%d/share/man infodir=%d/share/info

CompileScript: <<
	./configure %c
	make
<<
InstallScript: <<
	#!/bin/sh -ex
	echo -e "I am calling make install now"
	make install DESTDIR=%d
<<
Homepage: http://www.ucarp.org/ 
Maintainer: Darian Lanx <dmalloc@users.sourceforge.net>
