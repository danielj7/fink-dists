diff -Naur alpine-2.00.orig/configure alpine-2.00/configure
--- alpine-2.00.orig/configure	2009-07-25 18:19:58.000000000 -0700
+++ alpine-2.00/configure	2009-08-02 17:17:50.000000000 -0700
@@ -24351,7 +24351,7 @@
       ;;
     *-apple-darwin*)
       alpine_SSLTYPE="nopwd"
-      alpine_SSLCERTS="/System/Library/OpenSSL/certs"
+      alpine_SSLCERTS="%p/ssl/certs"
       ;;
     *-openbsd*)
       alpine_SSLTYPE="nopwd"
diff -Naur alpine-2.00.orig/imap/Makefile alpine-2.00/imap/Makefile
--- alpine-2.00.orig/imap/Makefile	2009-07-25 18:19:58.000000000 -0700
+++ alpine-2.00/imap/Makefile	2009-08-02 18:13:37.000000000 -0700
@@ -1,5 +1,5 @@
 # ========================================================================
-# Copyright 1988-2008 University of Washington
+# Copyright 988-2008 University of Washington
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
@@ -14,11 +14,11 @@
 #
 # Author:	Mark Crispin
 #		UW Technology
-#		Seattle, WA  98195
+#		Seattle, WA  9895
 #		Internet: MRC@Washington.EDU
 #
-# Date:		7 December 1989
-# Last Edited:	12 May 2008
+# Date:		7 December 989
+# Last Edited:	2 May 2008
 
 
 # Normal command to build IMAP toolkit:
@@ -36,26 +36,26 @@
 #
 # The following ports are bundled:
 # a32	AIX 3.2 for RS/6000
-# a41	AIX 4.1 for RS/6000
+# a4	AIX 4.1 for RS/6000
 # aix	AIX/370 (not RS/6000!!)
 # ami	AmigaDOS
 # am2	AmigaDOS with a 68020+
 # ama	AmigaDOS using AS225R2
 # amn	AmigaDOS with a 680x0 using "new" socket library
 # aos	AOS for RT
-# art	AIX 2.2.1 for RT
+# art	AIX 2.2. for RT
 # asv	Altos SVR4
 # aux	A/UX
 # bs3	BSD/i386 3.0 and higher
-# bsd	generic BSD 4.3 (as in ancient 1980s version)
+# bsd	generic BSD 4.3 (as in ancient 980s version)
 # bsf	FreeBSD
 # bsi	BSD/i386
 # bso	OpenBSD (yes, yet another one...)
 # cvx	Convex
 # cyg	Cygwin
-# d-g	Data General DG/UX prior to 5.4 (d41 port no longer exists)
+# d-g	Data General DG/UX prior to 5.4 (d4 port no longer exists)
 # d54	Data General DG/UX 5.4
-# do4	Apollo Domain/OS sr10.4
+# do4	Apollo Domain/OS sr0.4
 # dpx	Bull DPX/2 B.O.S.
 # drs	ICL DRS/NX
 # dyn	Dynix
@@ -64,18 +64,18 @@
 # gas	GCC Altos SVR4
 # gcs	GCC Solaris with Blastwave Community Open Source Software
 # gh9   GCC HP-UX 9.x
-# ghp	GCC HP-UX 10.x
-# ghs	GCC HP-UX 10.x with Trusted Computer Base
-# go5	GCC 2.7.1 (95q4 from Skunkware _not_ 98q2!) SCO Open Server 5.0.x
+# ghp	GCC HP-UX 0.x
+# ghs	GCC HP-UX 0.x with Trusted Computer Base
+# go5	GCC 2.7. (95q4 from Skunkware _not_ 98q2!) SCO Open Server 5.0.x
 # gsc	GCC Santa Cruz Operation
 # gsg	GCC SGI
 # gso	GCC Solaris
 # gsu	GCC SUN-OS
 # gul	GCC RISC Ultrix (DEC-5000)
-# h11	HP-UX 11i
+# h1	HP-UX 11i
 # hpp	HP-UX 9.x (see gh9)
-# hpx	HP-UX 10.x (see ghp, ghs, hxd, and shp)
-# hxd	HP-UX 10.x with DCE security (see shp)
+# hpx	HP-UX 0.x (see ghp, ghs, hxd, and shp)
+# hxd	HP-UX 0.x with DCE security (see shp)
 # isc	Interactive Systems
 # ldb	Debian Linux
 # lfd	Fedora Core 4
@@ -95,8 +95,8 @@
 # nto	QNX Neutrine RTP
 # nxt	NEXTSTEP
 # nx3	NEXTSTEP 3.x
-# osf	OSF/1 (see sos, os4)
-# os4	OSF/1 (Digital UNIX) 4
+# osf	OSF/ (see sos, os4)
+# os4	OSF/ (Digital UNIX) 4
 # osi	Apple iPhone and iPod Touch
 # osx	Mac OS X
 # oxp	Mac OS X with Pluggable Authentication Modules (PAM)
@@ -115,10 +115,10 @@
 # snx	Siemens Nixdorf SININX or Reliant UNIX
 # soc	Solaris with /opt/SUNWspro/bin/cc
 # sol	Solaris (won't work unless "ucbcc" works -- use gso instead)
-# sos	OSF/1 with SecureWare
+# sos	OSF/ with SecureWare
 # ssn	SUN-OS with shadow password security
 # sua	Windows Vista (Enterprise or Ultima) Subsystem for Unix Applications
-# sun	SUN-OS 4.1 or better (*not* Solaris) (see ssn)
+# sun	SUN-OS 4. or better (*not* Solaris) (see ssn)
 # sv2	SVR2 on AT&T PC-7300 (incomplete port)
 # sv4	generic SVR4
 # ult	RISC Ultrix (DEC-5000)
@@ -177,7 +177,7 @@
 # unix.nopwd	same as nopwd
 # sco.nopwd	same as nopwd, plaintext authentication in SSL/TLS only
 #
-# SSLTYPE=nopwd is now the default as required by RFC 3501
+# SSLTYPE=nopwd is now the default as required by RFC 350
 
 SSLTYPE=nopwd
 
@@ -207,24 +207,24 @@
 #	"old".
 #
 # -DSTRICT_RFC822_TIMEZONES
-#	Disable recognition of the non-standard UTC (0000), MET (+0100),
+#	Disable recognition of the non-standard UTC (0000), MET (+000),
 #	EET (+0200), JST (+0900), ADT (-0300), AST (-0400), YDT (-0800),
-#	YST (-0900), and HST (-1000) symbolic timezones.
+#	YST (-0900), and HST (-000) symbolic timezones.
 #
 # -DBRITISH_SUMMER_TIME
-#	Enables recognition of non-standard symbolic timezone BST as +0100.
+#	Enables recognition of non-standard symbolic timezone BST as +000.
 #
 # -DBERING_STANDARD_TIME
-#	Enables recognition of non-standard symbolic timezone BST as -1100.
+#	Enables recognition of non-standard symbolic timezone BST as -100.
 #
 # -DNEWFOUNDLAND_STANDARD_TIME
 #	Enables recognition of non-standard symbolic timezone NST as -0330.
 #
 # -DNOME_STANDARD_TIME
-#	Enables recognition of non-standard symbolic timezone NST as -1100.
+#	Enables recognition of non-standard symbolic timezone NST as -100.
 #
 # -DSAMOA_STANDARD_TIME
-#	Enables recognition of non-standard symbolic timezone SST as -1100.
+#	Enables recognition of non-standard symbolic timezone SST as -100.
 #				
 # -DY4KBUGFIX
 #	Turn on the Y4K bugfix (yes, that's year 4000).  It isn't well-known,
@@ -237,7 +237,7 @@
 #	Use the more accurate Eastern Orthodox calendar instead of the
 #	Gregorian calendar.  The century years which are leap years happen
 #	at alternating 400 and 500 year intervals without shifts every 4000
-#	years.  The Orthodox and Gregorian calendars diverge by 1 day for
+#	years.  The Orthodox and Gregorian calendars diverge by  day for
 #	gradually-increasing intervals, starting at 2800-2900, and becoming
 #	permanent at 48,300.
 #
@@ -245,12 +245,12 @@
 #	Use the less accurate Julian calendar instead of the Gregorian
 #	calendar.  Leap years are every 4 years, including century years.
 #	My apologies to those in the English-speaking world who object to
-#	the reform of September 2, 1752 -> September 14, 1752, since this
-#	code still uses January 1 (which Julius Ceasar decreed as the start
-#	of the year, which since 153 BCE was the day that Roman consuls
+#	the reform of September 2, 752 -> September 14, 1752, since this
+#	code still uses January  (which Julius Ceasar decreed as the start
+#	of the year, which since 53 BCE was the day that Roman consuls
 #	took office), rather than the traditional March 25 used by the
 #	British.  As of 2005, the Julian calendar and the Gregorian calendar
-#	diverge by 15 days.
+#	diverge by 5 days.
 
 EXTRACFLAGS=
 
@@ -265,6 +265,7 @@
 EXTRASPECIALS=
 SPECIALS=
 
+MAC_OSX_KLUDGE=$(shell if [ -e $(SDKROOT)/usr/include/pam ]; then echo "-DMAC_OSX_KLUDGE="; fi)
 
 # Normal commands
 
@@ -306,7 +307,7 @@
 
 # Note on SCO you may have to set LN to "ln".
 
-a32 a41 aix bs3 bsi d-g d54 do4 drs epx ga4 gas gh9 ghp ghs go5 gsc gsg gso gul h11 hpp hpx lnp lyn mct mnt nec nto nxt nx3 osf os4 ptx qnx sc5 sco sgi sg6 shp sl4 sl5 slx snx soc sol sos uw2: an
+a32 a4 aix bs3 bsi d-g d54 do4 drs epx ga4 gas gh9 ghp ghs go5 gsc gsg gso gul h11 hpp hpx lnp lyn mct mnt nec nto nxt nx3 osf os4 ptx qnx sc5 sco sgi sg6 shp sl4 sl5 slx snx soc sol sos uw2: an
 	$(BUILD) BUILDTYPE=$@
 
 # If you use sv4, you may find that it works to move it to use the an process.
@@ -392,7 +393,7 @@
 	@echo If you want to build for modern RedHat Linux, you should use
 	@echo make lr5 instead.
 	@echo Do you want to continue this build?  Type y or n please:
-	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) exit 1;; esac'
+	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) exit ;; esac'
 	@echo OK, I will remember that you really want to build for old
 	@echo RedHat Linux.  You will not see this message again.
 	@echo If you realize that you really wanted to build for modern
@@ -418,8 +419,8 @@
 	$(TOUCH) ip6
 	$(BUILD) BUILDTYPE=osx IP=$(IP6) EXTRAAUTHENTICATORS="$(EXTRAAUTHENTICATORS) gss" \
 	PASSWDTYPE=pam \
-	EXTRACFLAGS="$(EXTRACFLAGS) -DMAC_OSX_KLUDGE=1" \
-	SPECIALS="SSLINCLUDE=/usr/include/openssl SSLLIB=/usr/lib SSLCERTS=/System/Library/OpenSSL/certs SSLKEYS=/System/Library/OpenSSL/private GSSINCLUDE=/usr/include GSSLIB=/usr/lib PAMDLFLAGS=-lpam"
+	EXTRACFLAGS="$(EXTRACFLAGS) $(MAC_OSX_KLUDGE)" \
+	SPECIALS="SSLINCLUDE=@PREFIX@/include/openssl SSLLIB=@PREFIX@/lib SSLCERTS=@PREFIX@/ssl/certs SSLKEYS=@PREFIX@/ssl/private GSSINCLUDE=@PREFIX@/include GSSLIB=@PREFIX@/lib PAMDLFLAGS=-lpam"
 
 osx:	osxok an
 	$(TOUCH) ip6
@@ -436,7 +437,7 @@
 	@echo which use PAM-based authentication.  If you want to build for
 	@echo modern Mac OS X, you should use make oxp instead.
 	@echo Do you want to continue this build?  Type y or n please:
-	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) exit 1;; esac'
+	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) exit ;; esac'
 	@echo OK, I will remember that you really want to build for old
 	@echo Mac OS X.  You will not see this message again.
 	@echo If you realize that you really wanted to build for modern
@@ -459,7 +460,7 @@
 	@echo You are building for traditional Linux.  Most modern Linux
 	@echo systems require that you build using make slx.
 	@echo Do you want to continue this build?  Type y or n please:
-	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) exit 1;; esac'
+	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) exit ;; esac'
 	@echo OK, I will remember that you really want to build for
 	@echo traditional Linux.  You will not see this message again.
 	@echo If you discover that you can not log in to the POP and IMAP
@@ -491,7 +492,7 @@
 	@echo the modern SVR4-based Solaris.  If you want to build for
 	@echo Solaris, you should use make gso or make sol or make soc.  Do
 	@echo you want to continue this build?  Type y or n please:
-	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) exit 1;; esac'
+	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) exit ;; esac'
 	@echo OK, I will remember that you really want to build for the old
 	@echo BSD-based SUN-OS.  You will not see this message again.
 	@echo If the build fails and you realize that you really wanted to
@@ -524,7 +525,7 @@
 bs2:	an
 	$(BUILD) BUILDTYPE=bsi
 
-pt1:	an
+pt:	an
 	$(BUILD) BUILDTYPE=ptx
 
 
@@ -559,7 +560,7 @@
 
 sslnopwd sslunix.nopwd sslsco.nopwd:
 	@echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-	@echo + Building in full compliance with RFC 3501 security
+	@echo + Building in full compliance with RFC 350 security
 	@echo + requirements:
 	@echo ++ TLS/SSL encryption is supported
 	@echo ++ Unencrypted plaintext passwords are prohibited
@@ -567,7 +568,7 @@
 
 sslunix sslsco:
 	@echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-	@echo + Building in PARTIAL compliance with RFC 3501 security
+	@echo + Building in PARTIAL compliance with RFC 350 security
 	@echo + requirements:
 	@echo + Compliant:
 	@echo ++ TLS/SSL encryption is supported
@@ -579,7 +580,7 @@
 	@echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	@echo
 	@echo Do you want to continue this build anyway?  Type y or n please:
-	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) (make nounenc;exit 1);; esac'
+	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) (make nounenc;exit );; esac'
 
 nounenc:
 	@echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
@@ -591,7 +592,7 @@
 
 sslnone:
 	@echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-	@echo + Building in NON-COMPLIANCE with RFC 3501 security requirements:
+	@echo + Building in NON-COMPLIANCE with RFC 350 security requirements:
 	@echo + Non-compliant:
 	@echo ++ TLS/SSL encryption is NOT supported
 	@echo ++ Unencrypted plaintext passwords are permitted
@@ -602,7 +603,7 @@
 	@echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	@echo
 	@echo Do you want to continue this build anyway?  Type y or n please:
-	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) (make nonossl;exit 1);; esac'
+	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) (make nonossl;exit );; esac'
 
 nonossl:
 	@echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
@@ -638,7 +639,7 @@
 	@echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	@echo
 	@echo Do you want to build with IPv6 anyway?  Type y or n please:
-	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) (make noip6;exit 1);; esac'
+	@$(SH) -c 'read x; case "$$x" in y) exit 0;; *) (make noip6;exit );; esac'
 	@echo OK, I will remember that you really want to build with IPv6.
 	@echo You will not see this message again.
 	@$(TOUCH) ip6
@@ -652,7 +653,7 @@
 	@echo + If you wish to rebuild without IPv6 support, do one of the
 	@echo + following:
 	@echo +
-	@echo + 1. If you specified IP=6 on the make command line, omit it.
+	@echo + . If you specified IP=6 on the make command line, omit it.
 	@echo +
 	@echo + 2. Some of the Linux builds automatically select IPv6.  If
 	@echo + you choose one of those builds, add IP6=4 to the make command
@@ -694,7 +695,7 @@
 	$(TOUCH) rebuild
 
 rebuild:
-	@$(SH) -c '(test $(BUILDTYPE) = rebuild -o $(BUILDTYPE) = `$(CAT) OSTYPE`) || (echo Already built for `$(CAT) OSTYPE` -- you must do \"make clean\" first && exit 1)'
+	@$(SH) -c '(test $(BUILDTYPE) = rebuild -o $(BUILDTYPE) = `$(CAT) OSTYPE`) || (echo Already built for `$(CAT) OSTYPE` -- you must do \"make clean\" first && exit )'
 	@echo Rebuilding c-client for `$(CAT) OSTYPE`...
 	@$(TOUCH) SPECIALS
 	$(CD) c-client;$(MAKE) all CC=`$(CAT) CCTYPE` \
