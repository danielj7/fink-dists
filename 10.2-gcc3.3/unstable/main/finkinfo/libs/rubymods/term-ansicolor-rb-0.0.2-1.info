#Package: term-ansicolor-rb16
#Provides: term-ansicolor-rb
Package: term-ansicolor-rb
Version: 0.0.2
Revision: 1
Description: Color screen text using ANSI escape sequences
DescPort: <<
Fix install.rb script for .deb build (cf. direct install).

The only fink package for ruby is "ruby", but some ruby libs go in a
version-dependend directory hierarchy. We can use two Depends to make
sure the correct version is active, but ruby should really start using
versioned package name and install a versioned executable to simplify
Depends and allow multiple lanages versions to co-exist.

Fortunately, Term::ANSIColor is a pure-Ruby module and so goes in a
versionless part of the hierarchy.
<<
Homepage: http://www.ping.de/~flori/programs.shtml#ruby
License: GPL
Maintainer: Daniel Macks <dmacks@netspace.org>
#Depends: ruby (>= 1.6-0), ruby (<< 1.7-0)
Depends: ruby
Source: http://www.ping.de/~flori/programs/ruby/term-ansicolor/term-ansicolor-%v.tgz
Source-MD5: 1906234d4b653fe637519752521974a1
SourceDirectory: term-ansicolor
PatchScript: <<
  cp install.rb install.rb.BAK
  sed -e 's#CONFIG\["sitedir"\]#File.join("%d",&)#' install.rb.BAK > install.rb
<<
CompileScript: echo "Nothing to compile."
InstallScript: <<
  ruby install.rb
  install -d -m0755 %i/share/doc/%n
  install -m0755 cdiff.rb %i/share/doc/%n
<<
#PreInstScript: <<
#  version=`ruby -e 'require "rbconfig";include Config;print CONFIG["MAJOR"],".",CONFIG["MINOR"]'`
#  if [ $version = "1.6" ]; then
#    echo "Ruby version okay"
#  else
#    echo "Ruby version mismatch"
#    exit 1
#  fi
#<<
DocFiles: CHANGES GPL README.en example.rb
