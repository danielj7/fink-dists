Info2: <<
GCC: 4.0

Package: sqlalchemy-py%type_pkg[python]
Version: 0.8.0
Revision: 1
Source: http://pypi.python.org/packages/source/S/SQLAlchemy/SQLAlchemy-%v.tar.gz
Source-MD5: 11cd07ca81fab78d53f2922b5fb187a3

Type: python (2.7 3.2)
Depends: python%type_pkg[python]
BuildDepends: distribute-py%type_pkg[python]
# Recommends: psycopg2 MySQLdb pg8000 pymysql pyodbc

CompileScript: true
InstallScript: %p/bin/python%type_raw[python] setup.py install --root=%d --single-version-externally-managed

DocFiles: CHANGES LICENSE PKG-INFO
License: OSI-Approved
Homepage: http://www.sqlalchemy.org/
Maintainer: Kurt Schwehr <goatbar@users.sourceforge.net>

# Still some weird failures that don't impact running it.
#InfoTest: <<
#  TestDepends: nose-py%type_pkg[python]
#  TestSuiteSize: medium
#  # Took about 300sec on a 2007 MacBook Pro
#  TestScript: <<
#    %p/bin/python%type_raw[python] setup.py test || exit 2
#  <<
#<<

Description: Python interface to databases
DescDetail: <<

The Python SQL toolkit and Object Relational Mapper that gives
application developers the full power and flexibility of
SQL. SQLAlchemy provides a full suite of well known enterprise-level
persistence patterns, designed for efficient and high-performing
database access, adapted into a simple and Pythonic domain language.

extremely easy to use for all the basic tasks, such as: accessing
thread-safe and pooled connections, constructing SQL from Python
expressions, finding object instances, and commiting object
modifications back to the database.

powerful enough for complicated tasks, such as: eager load a graph of
objects and their dependencies via joins; map recursive adjacency
structures automatically; map objects to not just tables but to any
arbitrary join or select statement; combine multiple tables together
to load whole sets of otherwise unrelated objects from a single result
set; commit entire graphs of object changes in one step.

built to conform to what DBAs demand, including the ability to swap
out generated SQL with hand-optimized statements, full usage of bind
parameters for all literal values, fully transactionalized and
consistent updates using Unit of Work.

modular. Different parts of SQLAlchemy can be used independently of
the rest, including the connection pool, SQL construction, and
ORM. SQLAlchemy is constructed in an open style that allows plenty of
customization, with an architecture that supports custom datatypes,
custom SQL extensions, and ORM plugins which can augment or extend
mapping functionality.
<<

# Info2
<<
