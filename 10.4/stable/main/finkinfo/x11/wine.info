Package: wine
Version: 1.3.21
Revision: 1
Description: Microsoft Windows compatibility layer
License: LGPL
Maintainer: Damian Dimmich <damian@tauri-tec.com>
#Previous maintainer: Robert Cusick <bobniac@gmail.com>
#Additions by Max Horn
# This version updated by Damian Dimmich

#Much love to costabel, jfmertens, and other finkers for rebooting this package.
#
# Does not compile on PowerPC.
# error: encode_type: VT_USERDEFINED - unhandled type 17
Architecture: i386
# Trevor writes:
# According to the Wine README, any GCC higher than 2.7.2 should work, but only GCC 4.x has been tested.
# See Wine's documentation/PACKAGING file for more details about dependencies.
# I may have gone overboard on these dependencies, but better safe than sorry.
BuildDepends: <<
 bison, dbus-dev, fontconfig2-dev, flex-devel (>= 2.5.33),
 freetype219, giflib | libungif,
 glib2-dev, lcms, lcms-bin, libgettext8-dev, libiconv-dev, libicu36-dev,
 libjpeg8, libusb, libxml2 (>=2.6.21), libxml2-bin (>=2.6.21), libxslt, libxslt-bin,
 openldap24-dev, system-openssl-dev, sane-backends-dev, x11-dev, libgphoto2,
 glib2-dev
<<
Depends: <<
 dbus-shlibs, fontconfig2-shlibs,
 freetype219-shlibs, giflib-shlibs | libungif-shlibs,
 glib2-shlibs, lcms-shlibs, libgettext8-shlibs, libiconv,
 libjpeg8-shlibs, libusb-shlibs, libxml2-shlibs, libxslt-shlibs,
 openldap24-shlibs, sane-backends-shlibs, x11, libgphoto2-shlibs, 
 glib2-shlibs
<<
Recommends: <<
 msttcorefonts
<<
BuildConflicts: <<
 flex (<= 1:2.5.33-1)
<<
Conflicts: <<
 wine-stable
<<
Replaces: <<
 wine-stable
<<
Source: mirror:sourceforge:%n/%n-%v.tar.bz2
Source-MD5: dfcefe48a9aae82f7f1aa4d2c6617961

NoSetCPPFLAGS: true
NoSetLDFLAGS: true
SetLIBRARY_PATH: %p/lib
ConfigureParams: <<
  --x-includes=/usr/X11/include \
  --x-libraries=/usr/X11/lib \
  --without-esd \
  --without-gnutls \
  --without-gstreamer \
  --without-jack \
  --without-mpg123 \
  --without-openal \
  --disable-win16
<<
# A custom CompileScript is necessary for the extra "make depend" step
CompileScript: <<
#!/bin/sh -ev
 export CPATH=%p/include/dbus-1.0:%p/lib/dbus-1.0/include:%p/include:/usr/X11/include
 export LDFLAGS="-L/%p/lib/system-openssl/lib"
 export LD_LIBRARY_PATH=%p/lib
 export CPPFLAGS="-I/%p/lib/system-openssl/include"
 # strip out all non ascii to something that sed and gcc script will eat
 tr -cd '\11\12\40-\176' <AUTHORS >AUTHORS.tmp
 mv AUTHORS.tmp AUTHORS
 # change the library detection so that the full path name of the library is retained
 perl -pi.bak -e 's|\^\.\*\\\/\\\(lib|^[^\\/]*\\\(.*lib|g' configure
 ./configure %c
 # small safety measure: preventing libSystem from coming up too early in the link line (and hence also in load commands)
 # (specifically for wineesd.drv.so winearts.drv.so sane.ds.so and msxml3.dll.so).
 # For further safety, we can then as well remove the remaining -L%p/lib and -I%p/include flags ...
 perl -pi.bak -e 's,\-L%p/lib ,,g; s:\-I%p/include( |,):\1:g; s,\-l(m|dl|pthread)([^a-z]),\2,g' config.status
 ./config.status
 make depend
 make
<<
Shlibs: %p/lib/libwine.1.dylib 1.0.0 %n (>= 0.9.21-3)

DocFiles: ANNOUNCE AUTHORS COPYING.LIB LICENSE README VERSION
DescPort: <<
Didn't find "dbus/dbus.h" : added %p/include/dbus-1.0:%p/lib/dbus-1.0/include
to search path, and required CPPFLAGS
fontconfig.h : added /usr/X11/include
<<

DescDetail: <<
Wine is a translation layer (a program loader) capable of running Windows
applications on Linux and other POSIX compatible operating systems. Windows
programs running in Wine act as native programs would, running without the
performance or memory usage penalties of an emulator, with a similar look and
feel to other applications on your desktop.
<<
DescUsage: <<
The ~/.wine directory is supposed to be created and set up automatically the
first time you launch Wine. However, I have experienced "wineserver: could not
save registry branch" errors during the initial launch. To fix this problem,
run wineprefixcreate before launching Wine. This should create the ~/.wine
directory and populate it with the necessary files. You may still see error
messages, but the directory will be created. For example:

  export LD_LIBRARY_PATH=%p/lib
  %p/bin/wineprefixcreate

This only needs to be done once.

It will also warn that wine-gecko is missing during the first launch and ask
to download it. Click "Install" to continue.

For a quick test of Wine, run %p/bin/notepad

For best results install an update X server such as XQuartz from
http://xquartz.macosforge.org/trac/wiki

This is the development version of wine. For stable please install wine-stable.
<<

Homepage: http://www.winehq.org/

SplitOff: <<
  Package: %N-dev
  Depends: %N (= %v-%r)
  BuildDependsOnly: true
  Conflicts: wine-stable-dev
  Files: include lib/libwine.dylib 
<<
