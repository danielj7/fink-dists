--- xc/config/cf/darwin.cf	2004-12-14 23:53:05.000000000 -0500
+++ xc-new/config/cf/darwin.cf	2005-03-07 15:54:30.000000000 -0500
@@ -160,7 +160,7 @@
  * The default cpp-3.3 that ships with Panther inserts spurious #pragmas,
  * so we use the 3.1-based version.
  */
-#if OSMajorVersion >= 7
+#if OSMajorVersion == 7
 # define CppCmd                 /usr/bin/cpp3
 # define StandardCppOptions     -traditional -D__GNUC__
 #else
--- xc/extras/freetype2/builds/unix/detect.mk	2004-04-28 06:38:58.000000000 -0400
+++ xc-new/extras/freetype2/builds/unix/detect.mk	2005-03-07 15:53:23.000000000 -0500
@@ -20,7 +20,8 @@
   #
   is_unix := $(strip $(wildcard /sbin/init) \
                      $(wildcard /usr/sbin/init) \
-                     $(wildcard /hurd/auth))
+                     $(wildcard /hurd/auth) \
+                     $(wildcard /sbin/launchd))
   ifneq ($(is_unix),)
 
     PLATFORM := unix
--- xc/extras/freetype2/include/freetype/freetype.h	2004-04-28 06:38:59.000000000 -0400
+++ xc-new/extras/freetype2/include/freetype/freetype.h	2005-03-07 15:53:24.000000000 -0500
@@ -17,11 +17,7 @@
 
 
 #ifndef FT_FREETYPE_H
-#error "`ft2build.h' hasn't been included yet!"
-#error "Please always use macros to include FreeType header files."
-#error "Example:"
-#error "  #include <ft2build.h>"
-#error "  #include FT_FREETYPE_H"
+#include <ft2build.h>
 #endif
 
 
--- xc/extras/freetype2/src/base/ftapi.c	2003-11-14 11:48:24.000000000 -0500
+++ xc-new/extras/freetype2/src/base/ftapi.c	2005-03-07 15:53:23.000000000 -0500
@@ -118,4 +118,18 @@
   }
                    
 
+  FT_BASE_DEF( FT_Short )
+  FT_Get_Short( FT_Stream stream )
+  {
+    return FT_GET_SHORT();
+  }
+
+
+  FT_BASE_DEF( FT_Long )
+  FT_Get_Long( FT_Stream stream )
+  {
+    return FT_GET_LONG();
+  }
+
+
 /* END */
--- xc/extras/freetype2/src/truetype/ttinterp.c	2004-04-28 06:39:07.000000000 -0400
+++ xc-new/extras/freetype2/src/truetype/ttinterp.c	2005-03-07 15:53:24.000000000 -0500
@@ -2474,7 +2474,7 @@
     W = Vx * Vx + Vy * Vy;
 
     /* Now, we want that Sqrt( W ) = 0x4000 */
-    /* Or 0x1000000 <= W < 0x1004000        */
+    /* Or 0x10000000 <= W < 0x10004000        */
 
     if ( Vx < 0 )
     {
@@ -2492,7 +2492,7 @@
     else
       S2 = FALSE;
 
-    while ( W < 0x1000000L )
+    while ( W < 0x10000000L )
     {
       /* We need to increase W by a minimal amount */
       if ( Vx < Vy )
@@ -2503,7 +2503,7 @@
       W = Vx * Vx + Vy * Vy;
     }
 
-    while ( W >= 0x1004000L )
+    while ( W >= 0x10004000L )
     {
       /* We need to decrease W by a minimal amount */
       if ( Vx < Vy )
