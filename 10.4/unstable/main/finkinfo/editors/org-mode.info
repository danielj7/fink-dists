Package: org-mode
Description: Organize projects and take notes in emacs
Version: 6.01
Homepage: http://orgmode.org/
License: GPL
Revision: 1
Maintainer: Jesse Alama <alama@stanford.edu>
Depends: emacsen
Recommends: remember-el
Enhances: wl, bbdb, erc
DocFiles: ChangeLog README doc/org.pdf doc/orgcard.pdf doc/orgcard_letter.pdf request-assign-future.txt
Source: http://orgmode.org/org-%v.tar.gz
Source-MD5: dc96deab48ff06ce3b94dfc2c2d5f914
PatchScript: sed 's|@PREFIX@|%p|g' < %a/%n.patch | patch -p1
CompileScript: <<
<<
InstallScript: <<
mkdir -p %i/share/emacs/site-lisp/org
install -m 644 lisp/*.el %i/share/emacs/site-lisp/org
install -m 644 Makefile %i/share/emacs/site-lisp/org

mkdir -p %i/share/info
install -m 644 doc/org %i/share/info

mkdir -p %i/lib/emacsen-common/packages/install
mkdir -p %i/lib/emacsen-common/packages/remove
install -m 755 fink/emacsen-install %i/lib/emacsen-common/packages/install/%n
install -m 755 fink/emacsen-remove %i/lib/emacsen-common/packages/remove/%n

mkdir -p %i/etc/emacs/site-start.d
install -m 644 fink/50org.el %i/etc/emacs/site-start.d
<<
InfoDocs: org
PostInstScript: %p/lib/emacsen-common/emacs-package-install %n
PreRmScript: %p/lib/emacsen-common/emacs-package-remove %n
DescDetail: <<
Org-mode is a mode for keeping notes, maintaining TODO lists, and doing
project planning with a fast and effective plain-text system.

Org-mode develops organizational tasks around NOTES files that contain
lists or information about projects as plain text.  Org-mode is
implemented on top of outline-mode, which makes it possible to keep
the content of large files well structured.  Visibility cycling and
structure editing help to work with the tree.  Tables are easily
created with a built-in table editor.  Org-mode supports TODO items,
deadlines, time stamps, and scheduling.  It dynamically compiles
entries into an agenda that utilizes and smoothly integrates much of
the Emacs calendar and diary.  Plain text URL-like links connect to
websites, emails, Usenet messages, BBDB entries, and any files related
to the projects.  For printing and sharing of notes, an Org-mode file
can be exported as a structured ASCII file, as HTML, or (todo and
agenda items only) as an iCalendar file.  It can also serve as a
publishing tool for a set of linked webpages.

An important design aspect that distinguishes Org-mode from for
example Planner/Muse is that it encourages to store every piece of
information only once.  In Planner, you have project pages, day pages
and possibly other files, duplicating some information such as tasks.
In Org-mode, you only have notes files.  In your notes you mark
entries as tasks, label them with tags and timestamps.  All necessary
lists like a schedule for the day, the agenda for a meeting, tasks
lists selected by tags etc are created dynamically when you need them.

Org-mode keeps simple things simple.  When first fired up, it should
feel like a straightforward, easy to use outliner.  Complexity is not
imposed, but a large amount of functionality is available when you
need it.  Org-mode is a toolbox and can be used in different ways, for
example as:

* outline extension with visibility cycling and structure editing
* ASCII system and table editor for taking structured notes
* ASCII table editor with spreadsheet-like capabilities
* TODO list editor
* full agenda and planner with deadlines and work scheduling
* environment to implement David Allen's GTD system
* a basic database application
* simple hypertext system, with HTML and LaTeX export
* publishing tool to create a set of interlinked webpages

Org-mode's automatic, context sensitive table editor with spreadsheet
capabilities can be integrated into any major mode by activating the
minor Orgtbl-mode.  Using a translation step, it can be used to
maintain tables in arbitrary file types, for example in LaTeX.  The
structure editing and list creation capabilities can be used outside
Org-mode with the minor Orgstruct-mode.
<<
DescUsage: <<
The upstream author of org-mode suggests that you assign global
keybindings to the org-mode commands `org-store-link' and
`org-agenda'.  This can be accomplished by adding the following two
forms to your `.emacs' file; they define global keys for the commands
`org-store-link' and `org-agenda'.  Clearly, the precise keys you use
are not important, and these are but suggestions; choose suitable keys
for yourself.

  (global-set-key "\C-cl" 'org-store-link)
  (global-set-key "\C-ca" 'org-agenda)

By default, the org-mode fink package has set up emacs to load
org-mode whenever a file whose extension is ".org" is encountered.  To
manually enable org-mode in an emacs buffer, issue the command
`org-mode'.
<<
