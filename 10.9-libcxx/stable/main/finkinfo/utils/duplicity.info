Package: duplicity
Version: 0.7.14
Revision: 9
Description: Encrypted backup using rsync algorithm
License: GPL
Homepage: http://duplicity.nongnu.org/
Maintainer:  Scott Hannahs <shannahs@users.sourceforge.net>

# Dependencies.
BuildDepends: <<
	fink (>= 0.24.12-1),
	librsync (>= 0.9.7-1002)
<<

Depends: <<
	python27,
	librsync-shlibs (>= 0.9.7-1002),
	gnupg2,
	fasteners-py27,
	intltool40,
	paramiko-py27,
	pycrypto-py27,
	pycryptopp-py27,
	pexpect-py27,
	lftp,
	ncftp,
	par2,
	boto-py27 (>= 2.1.1),
	requests-oauthlib-py27
<<

# Unpack Phase.
Source: https://code.launchpad.net/%n/0.7-series/%v/+download/%n-%v.tar.gz
Source-MD5: dc3b22100c3b5a356f357318c1343673

# Patch Phase.
PatchFile: %n.patch
PatchFile-MD5: bab7bb98698d5558b2ba9d89647d9bc4
PatchScript: <<
    sed 's|@PREFIX@|%p|g' < %{PatchFile} | patch -p1
<<

# Compile Phase.
CompileScript: %p/bin/python2.7 setup.py build  --librsync-dir=%p 

InfoTest: <<
    TestDepends: <<
        pylint-py27,
        librsync-bin,
	mock-py27,
	pluggy-py27,
	py-py27,
	tox-py27
<<
    TestScript: <<
    	#!/bin/sh -ev
    	ulimit -n 5120
		chmod 0700 `pwd`/testing/gnupg
        %p/bin/python2.7 setup.py test
<<
<<

# Install Phase.
InstallScript: %p/bin/python2.7 setup.py install --prefix=%p --root=%d  --librsync-dir=%p
DocFiles: CHANGELOG COPYING Changelog.GNU README README-LOG README-REPO

# Documentation.
DescDetail: <<
Duplicity backs directories by producing encrypted
tar-format volumes and uploading them to a remote
or local file server. Because duplicity uses
librsync, the incremental archives are space
efficient and only record the parts of files that
have changed since the last backup. Because
duplicity uses GnuPG to encrypt and/or sign these
archives, they will be safe from spying and/or
modification by the server.

The duplicity package also includes the rdiffdir
utility. Rdiffdir is an extension of librsync's
rdiff to directories---it can be used to produce
signatures and deltas of directories as well as
regular files. These signatures and deltas are in
GNU tar format.
<<

DescPackaging:  <<
The testing phase needs more than the default 256
maximum files.  Testing phase has 1 failure and 19
errors when built as nobody.  Has 2 failures and 3
errors when built as root.  Upstream is working on
the testing issue.

Does not support Glacier S3 access until Boto
updated to at least version 2.7.0
supports
  ssh parmiko
  ssh pexpect
  rsync
  lftp
  ncftp
  onedrive
  Amazon web services
  Google Cloud Storage

Other backends 
Backend Requirements:
 * scp/sftp paramiko -- python-paramiko, python-pycryptopp
 * scp/sftp pexpect -- openssh, pexpect
 * lftp -- lftp version 3.7.15 or later
 * ncftp -- ncftp 
 * OneDrive -- python-requests & python-requests-oauthlib
 * Azure -- python Azure SDK
 * Boto 2.0 or later for single-processing S3 or GCS access
 * Boto 2.1.1 or later for multi-processing S3 access
 * Boto 2.7.0 or later for Glacier S3 access (not yet)

Previously maintained by Murali Vadivelu
<<
