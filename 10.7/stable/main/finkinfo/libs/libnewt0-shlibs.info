Package: libnewt0-shlibs
Version: 0.52.15
Revision: 3.1
###
Source: mirror:debian:pool/main/n/newt/newt_%v.orig.tar.gz
Source-MD5: 343ee3a0fd0eacdb7c508a1e1cfabf65
SourceDirectory: newt-%v
###
BuildDepends: <<
  fink (>= 0.28),
  slang2,
  popt,
  gettext-tools,
  libgettext8-dev,
  tcltk-dev,
  python33,
  autoconf2.6,
  automake1.11
<<
#  sgmltools-lite,
Depends: <<
  slang2-shlibs,
  libgettext8-shlibs
<<
###
PatchFile: %n.patch
PatchFile-MD5: 805e321c9ed21bcbda35090f6b6ffc36
PatchScript: <<
  sed -e 's,@FINKPREFIX@,%p,g' %{PatchFile} | patch -p1

  # Debian Patches
  patch -p1 < fink/patches/endianness.patch
  patch -p1 < fink/patches/tcl8x.patch
  patch -p1 < fink/patches/python_memory_allocation.patch
  patch -p1 < fink/patches/escape_key.patch
  patch -p1 < fink/patches/python_init_once.patch
  patch -p1 < fink/patches/messagebox_escape.patch
  patch -p1 < fink/patches/python3.patch
  patch -p1 < fink/patches/compiler-warnings.patch

  perl -pi -e 's, -shared \$, -bundle \$,g' Makefile.in
  perl -pi -e 's, --shared \$\$PLDFLAGS, -bundle \$\$PLDFLAGS,g' Makefile.in

  perl -pi -e 's,Tcl_setResult,Tcl_SetResult,g' whiptcl.c

  perl -pi -e 's,LIBTCL = .TCL_LIB_FLAG.,LIBTCL = -ltcl,g' Makefile.in
  perl -pi -e 's,PYTHONVERS = .PYTHONVERS.,PYTHONVERS = python3.3,g' Makefile.in

  perl -pi -e 's, -I/usr/include/slang,,g' Makefile.in

  perl -pi -e 's,SONAME = .SONAME.,SONAME = 0,g' Makefile.in
  perl -pi -e 's,LIBNEWTSH = libnewt\.so\.\$\(VERSION\),LIBNEWTSH = libnewt\.\$\(VERSION\)\.dylib,g' Makefile.in
  perl -pi -e 's,LIBNEWTSONAME = libnewt\.so\.\$\(SONAME\),LIBNEWTSONAME = libnewt\.\$\(SONAME\)\.dylib,g' Makefile.in
  perl -pi -e 's;SHLIBFLAGS=$;SHLIBFLAGS=-dynamiclib -compatibility_version 1 -current_version 1 -install_name %p/lib/\$\(LIBNEWTSONAME\);g' Makefile.in
  perl -pi -e 's,libnewt\.so,libnewt\.dylib,g' Makefile.in

  ### Fix things to work in fink root
  perl -pi -e 's,/usr,%p,' *.py newt.spec nls.h
<<
ConfigureParams: <<
  --without-gpm-support \
  --with-colorsfile=%p/etc/newt/palette
<<
CompileScript: <<
  # Nasty hack. why is it necessary?
  cp %p/share/automake-1.11/install-sh ./install-sh

  #./autogen.sh
  ./configure %c
  make
  #sgmltools --backend html tutorial.sgml
  # ar cqv libnewt_pic.a shared/*.o
<<
InstallScript: <<
  make install DESTDIR=%d

  # examples
  install -d -m 755 examples
  install -m 644 testtree.c test.c testgrid.c examples

  for v in python3.3; do \
    install -d -m 755 %i/lib/$v/dist-packages; \
    install -m 755 snack.py $v/* %i/lib/$v/dist-packages; \
  done

  install -m 644 libnewt.a %i/lib

  install -d -m 755 %i/etc/newt
  install -m 644 %b/fink/palette.original %i/etc/newt/
<<
###
Shlibs: <<
  %p/lib/libnewt.0.dylib 1.0.0 libnewt0-shlibs (>= 0.52.10-1.1)
<<
###
PostInstScript: <<
set -e

case "$1" in
    configure|abort-remove|abort-deconfigure)
        # Install alternatives
        update-alternatives --install %p/etc/newt/palette newt-palette %p/etc/newt/palette.original 20
        [ -e %p/share/doc/libnewt0-shlibs ] || update-alternatives --auto newt-palette
        ;;
    abort-upgrade)
        # Nothing to undo
        :;
        ;;

    *)
        echo "$0: Undocumented call: \"$@\"" >&2
        exit 1
        ;;
esac
<<
PreRmScript: <<
set -e

if [ "$1" = "remove" ] || [ "$1" = "deconfigure" ]; then
       update-alternatives --remove-all newt-palette
fi
<<
ConfFiles: %p/etc/newt/palette.original
DocFiles: CHANGES COPYING
Description: Not Erik's Windowing Toolkit
DescDetail: <<
Newt is a windowing toolkit for text mode built from the slang library.
It allows color text mode applications to easily use stackable windows,
push buttons, check boxes, radio buttons, lists, entry fields, labels,
and displayable text. Scrollbars are supported, and forms may be nested
to provide extra functionality. This package contains the shared library
for programs that have been built with newt.
<<
SplitOff: <<
  Package: libnewt-dev
  BuildDependsOnly: true
  Depends: <<
    %N (= %v-%r)
  <<
  Files: <<
    include
    lib/libnewt.{a,dylib}
    lib/pkgconfig
  <<
  DocFiles: CHANGES COPYING newt.spec examples
  Description: Devel tools for newt windowing library
  DescDetail: <<
These are the header files and libraries for developing applications
which use newt. Newt is a windowing toolkit for text mode, which provides
many widgets and stackable windows.
  <<
<<
SplitOff2: <<
  Package: newt-tcl
  Depends: <<
    %N (= %v-%r),
    tcltk, 
    tcltk-shlibs,
    popt-shlibs,
    libgettext8-shlibs
  <<
  Files: <<
    lib/whiptcl.so
  <<
  DocFiles: CHANGES COPYING
  Description: NEWT module for Tcl
  DescDetail: <<
This module allows you to build a text UI for your Tcl scripts
using newt.
  <<
<<
SplitOff3: <<
  Package: newt-py33
  Depends: <<
    %N (= %v-%r)
  <<
  Files: <<
    lib/python3.3
  <<
  DocFiles: CHANGES COPYING
  Description: NEWT module for Python3
  DescDetail: <<
This module allows you to built a text UI for your Python3 scripts
using newt.
  <<
<<
SplitOff5: <<
  Package: whiptail
  Depends: <<
    %N (= %v-%r),
    slang2-shlibs,
    libgettext8-shlibs,
    popt-shlibs
  <<
  Files: <<
    bin
    share/man
  <<
  DocFiles: CHANGES COPYING
  Description: User-friendly dialog boxes from shell scripts
  DescDetail: <<
Whiptail is a "dialog" replacement using newt instead of ncurses. It
provides a method of displaying several different types of dialog boxes
from shell scripts. This allows a developer of a script to interact with
the user in a much friendlier manner.
  <<
<<
License: GPL
Maintainer: Justin F. Halett <thesin@lists.sourceforge.net>
Homepage: https://fedorahosted.org/newt/
