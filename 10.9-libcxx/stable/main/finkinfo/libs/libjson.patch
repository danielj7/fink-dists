diff -Naur libjson/makefile libjson-makefile-fixed/makefile
--- libjson/makefile	2012-05-30 09:15:42.000000000 +0000
+++ libjson-makefile-fixed/makefile	2012-10-03 13:46:04.000000000 +0000
@@ -1,6 +1,6 @@
 ###############################################################################
-#                                                       
-#  Copyright 2010 Jonathan Wallace. All rights reserved.         
+#
+#  Copyright 2010 Jonathan Wallace. All rights reserved.
 #
 #  Redistribution and use in source and binary forms, with or without
 #  modification, are permitted provided that the following conditions are met:
@@ -12,17 +12,17 @@
 #         notice, this list of conditions and the following disclaimer in the
 #         documentation and/or other materials provided with the distribution.
 #
-#  THIS SOFTWARE IS PROVIDED BY JONATHAN WALLACE ``AS IS'' AND ANY 
-#  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
-#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
+#  THIS SOFTWARE IS PROVIDED BY JONATHAN WALLACE ``AS IS'' AND ANY
+#  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 #  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JONATHAN WALLACE OR
-#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
-#  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED 
-#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
+#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+#  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
+#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 #  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
-#  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
-#  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF 
-#  THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH 
+#  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
+#  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
+#  THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 #  DAMAGE.
 #
 #  The views and conclusions contained in the software and documentation are
@@ -88,7 +88,7 @@
 #
 #    srcdir
 #      The directory where the object source files are located.
-#      Default: _internal/Source
+#      Default: _internal/source
 #
 #    CXX
 #      The compiler to be used. Default: c++
@@ -125,9 +125,9 @@
 
 # JSON source files to build
 objects        = internalJSONNode.o JSONAllocator.o JSONChildren.o \
-                 JSONDebug.o JSONIterators.o JSONMemory.o JSONNode.o \
-                 JSONNode_Mutex.o JSONPreparse.o JSONStream.o JSONValidator.o \
-                 JSONWorker.o JSONWriter.o libjson.o 
+		 JSONDebug.o JSONIterators.o JSONMemory.o JSONNode.o \
+		 JSONNode_Mutex.o JSONPreparse.o JSONStream.o JSONValidator.o \
+		 JSONWorker.o JSONWriter.o libjson.o
 OS=$(shell uname)
 
 # Defaults
@@ -198,7 +198,7 @@
 
 # Phony targets
 .PHONY: all banner installdirs install install_headers clean uninstall \
-        uninstall_headers
+	uninstall_headers
 
 # Targets
 all: $(lib_target)
@@ -266,7 +266,7 @@
 	cp -r ./$(srcdir)/JSONDefs $(include_path)/$(libname_hdr)/$(srcdir)
 	chmod -R a+r $(include_path)/$(libname_hdr)
 	find  $(include_path)/$(libname_hdr) -type d -exec chmod a+x {} \;
-	cp -rv $(srcdir)/Dependencies/ $(include_path)/$(libname_hdr)/$(srcdir)
+	cp -rv _internal/Dependencies/ $(include_path)/$(libname_hdr)/_internal
 	@echo "Install header files: Done."
 
 clean: banner
@@ -299,14 +299,14 @@
 
 test:
 	$(CXX) _internal/TestSuite/main.cpp		_internal/TestSuite/TestAssign.cpp		_internal/TestSuite/TestChildren.cpp \
-	_internal/TestSuite/TestComments.cpp	_internal/TestSuite/TestConverters.cpp 	_internal/TestSuite/TestCtors.cpp \
-	_internal/TestSuite/TestEquality.cpp	_internal/TestSuite/TestFunctions.cpp 	_internal/TestSuite/TestInequality.cpp \
-	_internal/TestSuite/TestInspectors.cpp 	_internal/TestSuite/TestIterators.cpp 	_internal/TestSuite/TestMutex.cpp \
-	_internal/TestSuite/TestNamespace.cpp 	_internal/TestSuite/TestRefCounting.cpp _internal/TestSuite/TestSuite.cpp \
+	_internal/TestSuite/TestComments.cpp	_internal/TestSuite/TestConverters.cpp		_internal/TestSuite/TestCtors.cpp \
+	_internal/TestSuite/TestEquality.cpp	_internal/TestSuite/TestFunctions.cpp	_internal/TestSuite/TestInequality.cpp \
+	_internal/TestSuite/TestInspectors.cpp		_internal/TestSuite/TestIterators.cpp	_internal/TestSuite/TestMutex.cpp \
+	_internal/TestSuite/TestNamespace.cpp	_internal/TestSuite/TestRefCounting.cpp _internal/TestSuite/TestSuite.cpp \
 	_internal/TestSuite/TestWriter.cpp		_internal/TestSuite/TestString.cpp		_internal/TestSuite/UnitTest.cpp \
-	_internal/TestSuite/TestValidator.cpp 	_internal/TestSuite/TestStreams.cpp		_internal/TestSuite/TestBinary.cpp \
-	_internal/TestSuite/RunTestSuite2.cpp 	_internal/TestSuite/TestSharedString.cpp \
-	_internal/Source/internalJSONNode.cpp 	_internal/Source/JSONPreparse.cpp		_internal/Source/JSONChildren.cpp \
+	_internal/TestSuite/TestValidator.cpp	_internal/TestSuite/TestStreams.cpp		_internal/TestSuite/TestBinary.cpp \
+	_internal/TestSuite/RunTestSuite2.cpp	_internal/TestSuite/TestSharedString.cpp \
+	_internal/Source/internalJSONNode.cpp	_internal/Source/JSONPreparse.cpp		_internal/Source/JSONChildren.cpp \
 	_internal/Source/JSONDebug.cpp			_internal/Source/JSONIterators.cpp		_internal/Source/JSONMemory.cpp \
 	_internal/Source/JSONNode_Mutex.cpp		_internal/Source/JSONNode.cpp			_internal/Source/JSONWorker.cpp \
 	_internal/Source/JSONWriter.cpp			_internal/Source/libjson.cpp			_internal/Source/JSONValidator.cpp \
