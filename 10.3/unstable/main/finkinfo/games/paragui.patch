--- paragui-1.1.8/configure.orig	Mon Oct 18 13:58:43 2004
+++ paragui-1.1.8/configure	Fri Apr 15 22:43:09 2005
@@ -19340,7 +19340,7 @@
 LIBTOOL_DEPS="$ac_aux_dir/ltmain.sh"
 
 # Always use our own libtool.
-LIBTOOL='$(SHELL) $(top_builddir)/libtool'
+LIBTOOL='@PREFIX@/bin/glibtool'
 
 # Prevent multiple expansion
 
--- paragui-1.1.8/src/core/pgfilearchive.cpp.orig	Sat Apr 16 18:30:03 2005
+++ paragui-1.1.8/src/core/pgfilearchive.cpp	Sat Apr 16 18:31:15 2005
@@ -39,10 +39,14 @@
 
 Uint32 PG_FileArchive::my_instance_count = 0;
 PG_SurfaceCache PG_FileArchive::my_cache;
+#ifndef EXPLICITLY_LINKING_SDL_IMAGE
 static void* SDL_image_obj = NULL;
 
 typedef SDL_Surface* (*IMG_Load_RW_FT)(SDL_RWops* src, int freesrc);
 static IMG_Load_RW_FT IMG_Load_RW_FUNC = NULL;
+#else
+#    include "SDL_image.h"
+#endif
 
 PG_FileArchive::PG_FileArchive() {
 
@@ -56,6 +60,7 @@
 			return;
 		}
 
+#ifndef EXPLICITLY_LINKING_SDL_IMAGE
 		// try different names to find SDL_image
 		SDL_image_obj = SDL_LoadObject(SDLIMAGE_LIB);
 		if(SDL_image_obj == NULL) {
@@ -69,6 +74,7 @@
 				SDL_image_obj = NULL;
 			}
 		}
+#endif
 	}
 
 }
@@ -84,10 +90,12 @@
 
 	if(my_instance_count == 0) {
 		Deinit();
+#ifndef EXPLICITLY_LINKING_SDL_IMAGE
 		if(SDL_image_obj != NULL) {
 			SDL_UnloadObject(SDL_image_obj);
 			SDL_image_obj = NULL;
 		}
+#endif
 	}
 }
 
@@ -308,12 +316,16 @@
 		return NULL;
 	}
 
+#ifndef EXPLICITLY_LINKING_SDL_IMAGE
 	if(IMG_Load_RW_FUNC != NULL) {
 		surface = IMG_Load_RW_FUNC(rw, 1);
 	}
 	else {
 		surface = SDL_LoadBMP_RW(rw, 1);
 	}
+#else
+	surface = IMG_Load_RW(rw, 1);
+#endif
 
 	if(surface == NULL) {
 		PG_LogWRN("Failed to load imagedata from '%s' !", filename);
