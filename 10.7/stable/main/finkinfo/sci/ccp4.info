Package: ccp4
Version: 6.3.0
Revision: 2
GCC: 4.0
Distribution: 10.6, 10.7, 10.8
UseMaxBuildJobs: false
#
Source: ftp://ftp.%n.ac.uk/%n/%v/%n-%v-core-src.tar.gz
Source-MD5: 5558ed62767ca0b8fbd31742b130eb61
SourceDirectory: %n-%v
#
Source2: ftp://ftp.%n.ac.uk/%n/%v/%n-%v-phaser-cctbx-src.tar.gz
Source2-MD5: 018765c258b70726b281de506e9139c4
#
Source3: http://www.chem.ucsc.edu/~wgscott/xtal/xtalfink/XCCPJiffy-custom.gz
Source3-MD5: 21568dd2475505929573a3fd452c538f
#  
PatchFile: ccp4.patch
PatchFile-MD5: 14418f959400df7232a5c9f1edfa5284
#
#
#
DescPort: <<
    CCP4 is designed to compile with gfortran on OS X >= 10.4 by default. 
    Jack Howarth has provided multiple improvements in the patch file to
    address several bugs and to permit optimization with gfortran at -O3.
    
    Users typically install all of the ccp4 files into /xtal/ccp4-%v or
    into /usr/local/xtal/ccp4-%v.  In the present case, these files are
    installed into %p/share/xtal/ccp4-%v.  The library files are installed 
    into the directory %p/lib/ccp4-%v and this directory is symbolically 
    linked to %p/share/xtal/ccp4-%v/lib which is the canonical location.
    Dynamic libraries are provided in the ccp4-shlibs splitoff package, and
    static libraries are provided in the ccp4-dev splitoff package. The 
    configure files are patched so that the full path to the dynamic 
    libraries is hard-coded, per fink policy.  This obviates the need to
    set the DYLD_LIBRARY_PATH environment variable, which should remain
    unset. The appropriate shell startup files are automatically sourced
    when %p/bin/init.(c)sh is invoked upon shell startup; there is no 
    need to do so manually. The actual files are located (not my choice)
    in $CCP4/include.
    
    The ccp4i mail utility by default will only work on machines that run
    a unix mail server.  As a workaround, a public domain perl script called
    osx_ccp4_mail is installed that glues the ccp4i mail button to the
    Apple OS X Mail.app.
    
    Further adaptations are commented in place in the patch, configure and
    install scripts below. Relevant patches specific to this version that
    are issued by CCP4 are now downloaded and applied individually, helping
    to keep the ccp4.patch file from growing metastatically and also to
    permit the user to verify that the latest patches have been applied.
    These start, when present, with Source2 (above) and are applied 
    individually at the end of the PatchScript field.

    Clipper libraries are not behaving properly when linked to fink fftw
    so we return to the option of having ccp4 build its own private fftw.
    Yes, I hate it too, but now all the examples pass the run-all test.

    64-bit version prior to OS X 10.7 appears to require ccp4\'s own 
    blas/lapak to avoid run-time errors.   I use that in all versions now, 
    but plan to get rid of this as soon as possible.
<<
Depends:  x11, tcltk, blt, gcc47-shlibs, %N-shlibs (= %v-%r)
BuildDepends: gcc47, tcltk-dev, x11-dev, xmkmf (>= 1.0.2-3), fink (>= 0.24.12)
BuildDependsOnly: False
BuildConflicts: gpp4-dev, gpp4, ssm, ssm-dev, mmdb, mmdb-dev, clipper, clipper-bin, clipper-dev, ccp4-onlylibs-dev, python
Replaces: phaser (<= 2.3.0-1), pointless (<= 1.2.18-1), mosflm (<= 7.0.3-3), mosflm-small (<= 7.0.3-3), imosflm (<= 1:1.0.4-4), imosflm-aqua (<= 1:1.0.4-4), refmac (<= 5.5.0070-1), bundle-ccp4-intel, clipper-bin, ccp4-gfortran, ccp4-gfortran-dev, bundle-ccp4-powerpc
Conflicts: <<
	mosflm (<= 7.0.3-3), 
	mosflm-small (<= 7.0.3-3), 
	imosflm (<= 1:1.0.4-4),
	imosflm-aqua (<= 1:1.0.4-4),
	refmac (<= 5.5.0070-1),
    bundle-ccp4-intel, 
    bundle-ccp4-powerpc, 
    ccp4-gfortran, 
    ccp4-gfortran-dev,
	phaser (<= 2.3.0-1),
	pointless (<= 1.2.18-1)
<<
NoSetCPPFLAGS: true
NoSetLDFLAGS: true
#
################################################################################
#################################################################################
PatchScript: <<
    #!/bin/zsh -efv
    #
      umask 0022

    # Now apply the primary patch
      sed 's|@PREFIX@|%p|g' <%{PatchFile} | patch -p1

    # setup script for tcsh, zsh and bash users
      export TEMPXTAL=$PWD:h
    #
      perl -pi.bak -e 's|-traditional-cpp||g' src/harvest_app_/pdb_extract/etc/*.platform*
      perl -pi.bak -e 's|/xtal|\$TEMPXTAL|g' include/ccp4.setup-csh         # build prefix (changed in install)
      perl -pi.bak -e 's|/prefix|%p|g' include/ccp4.setup*               # location of tcktk, blt
      perl -pi.bak -e 's|/usr/local/bin|%p/bin|g' include/ccp4.setup*    # same
      perl -pi.bak -e 's|limit stacksize 65536|limit stacksize unlimited|g' include/ccp4.setup* # same
      perl -pi.bak -e 's|ccp4_first_in_path=1|ccp4_first_in_path=0|g'  include/ccp4.setup*
      perl -pi.bak -e 's|ccp4_first_in_path\ =\ 1|ccp4_first_in_path\ =\ 0|g'  include/ccp4.setup*
      perl -pi.bak -e 's|setenv GFORTRAN_UNBUFFERED_ALL Y|# setenv GFORTRAN_UNBUFFERED_ALL Y|g'   include/ccp4.setup*
      perl -pi.bak -e 's|export GFORTRAN_UNBUFFERED_ALL|# export GFORTRAN_UNBUFFERED_ALL|g'   include/ccp4.setup*
      perl -pi.bak -e 's|share/balbes/BALBES_0.0.1|share/BALBES/Package|g' include/ccp4.setup*
      perl -pi.bak -e 's|Please get the person who installed CCP4i to run it|Please issue the command \\\"sudo -E ccp4i\\\"|g' share/ccp4i/src/system.tcl
      perl -pi.bak -e 's|CCP4/ccp4i|CCP4/share/ccp4i|g' include/ccp4.setup*
      perl -pi.bak -e 's|\{CCP4\}/ccp4i|\{CCP4\}/share/ccp4i|g' include/ccp4.setup*
      if [[ $(sw_vers -productVersion) < 10.6 ]]; then
          true
      else
          /usr/bin/grep -v "char \*strcat( char \*, const char \*);" x-windows/Mosflm/src/dps/index/ind_gen_direct.c >| x-windows/Mosflm/src/dps/index/ind_gen_direct.tmp
          /bin/cp x-windows/Mosflm/src/dps/index/ind_gen_direct.tmp x-windows/Mosflm/src/dps/index/ind_gen_direct.c
          /bin/rm -f  x-windows/Mosflm/src/dps/index/ind_gen_direct.tmp
      fi
    #
      /bin/cp include/ccp4.setup-dist include/ccp4.setup
      # rm -f include/ccp4.setup-sh    
    #
    # Set up XCCPJiffy wrapper scripts in $CCP4/etc
    # These are small wrapper scripts for xplot84driver and xloggraph generated by the patch
      chmod a+x etc/x*
    # Fix the dylib install path in configure
      perl -pi.bak -e 's|\$rpath|%p/lib/ccp4-%v|g' **/configure
    #
      perl -pi.bak -e 's|import sys|import sys\nsys.path.append(\"%p/share/xtal/%n-%v/share/python\")|g'  src/buccaneer_pipeline.py  
    #
      /bin/rm -f  *.bak **/configure*.bak  src/buccaneer_pipeline*.bak include/*.bak
    #
      perl -pi -e 's,\| grep crt1,,g' configure
    #
      perl -pi -e 's|python ../cctbx_sources/cctbx_project/libtbx/configure.py|python ../cctbx_sources/cctbx_project/libtbx/configure.py --compiler=gcc |g' lib/cctbx/ccp4_build
    #
      perl -pi -e 's|phaseropts="\$phaseropts \$1"|phaseropts="\$phaseropts --compiler=gcc \$1"|g' src/phaser/ccp4_build
    #
      NUMPROC="$(sysctl -n hw.ncpu)"
      perl -pi -e "s|libtbx.scons|libtbx.scons -j $NUMPROC |g"  lib/cctbx/ccp4_build
<<
################################################################################
#################################################################################
CompileScript: <<
#!/bin/bash -efv
umask 0022
# These are required for the build environment
TEMPXTAL=$(dirname $PWD)
export TEMPXTAL
export CCP4_VERSION=""
export CCP4_MASTER=""
export BLTWISHPREFIX=""
export CCP4=""
# Fix for problem reported with 10.4
if [[ $(sw_vers -productVersion) < 10.5 ]]; then
    cp $PWD/include/ccp4.setup-bash $PWD/include/ccp4.setup-bash-10.4
    export CURRENT_MASTER=$( dirname $PWD )
    perl -pi -e "s|export CCP4_MASTER|export CCP4_MASTER=$CURRENT_MASTER|g"  $PWD/include/ccp4.setup-bash-10.4
    source $PWD/include/ccp4.setup-bash-10.4
else
    source $PWD/include/ccp4.setup-bash
fi
#
echo $PWD should be the same as $CCP4
[[ $CCP4 == $PWD ]] || exit 1

CLIB="%p/lib/ccp4-6.3.0"
export CLIB
export DYLD_LIBRARY_PATH=$CLIB
export GFORTRAN_UNBUFFERED_ALL="Y"
export rpath=%p/lib/ccp4-%v
export RPATH=%p/lib/ccp4-%v
export PATH=%p/lib/xmkmf/bin:$PATH 
export IMAKEINCLUDE=-I%p/lib/X11/config
export FC="gfortran"
export CC="/usr/bin/gcc"
export CXX="/usr/bin/g++"
export libdir="$PWD/lib"
#
# Uncomment the following line only for testing purposes.  The ccp4 restrictive/commercial
# license forbid disabling the interactive check in this way for the end-user
#
#       touch .agree2ccp4v6
#

    F_LIBS="-L%p/lib/gcc4.7/lib -lgfortran " \
    ./configure --disable-cctbx --disable-phaser --with-netlib-lapack --with-shared-libs  --with-x   Darwin
#
#  fix some post-configure bugs by getting rid of -lg2c
/usr/bin/perl -pi.bak -e "s|-lg2c||g" deprecated/src/beast_/beast_MPI/Makefile  x-windows/XCCPJIFFY/Imakefile
( cd x-windows/XCCPJIFFY; perl -pi.bak -e 's|-lgfortran|-lgfortran -L%p/lib/gcc4.7/lib |g' *akefile* ) || exit 1
if [[ $(sw_vers -productVersion) < 10.5 ]]; then
      perl -pi.bak -e 's| -flat_namespace -undefined suppress| -twolevel_namespace -undefined dynamic_lookup|g' lib/src/Makefile
fi
perl -pi.bak -e "s|-lcrt1.10.6.o||g"  Makefile share/ccp4i/Makefile deprecated/src/Makefile  lib/data/Makefile  lib/Makefile  share/Makefile  src/Makefile
perl -pi.bak -e "s|-lcrt1.10.6.o||g"  src/ccp4mapwish_/Makefile  unsupported/src/Makefile  x-windows/Makefile  x-windows/Mosflm/mosflm/Makefile  x-windows/Rotgen/Makefile

perl -pi.bak -e "s|-lcrt1.10.5.o||g"  Makefile share/ccp4i/Makefile deprecated/src/Makefile  lib/data/Makefile  lib/Makefile  share/Makefile  src/Makefile
perl -pi.bak -e "s|-lcrt1.10.5.o||g"  src/ccp4mapwish_/Makefile  unsupported/src/Makefile  x-windows/Makefile  x-windows/Mosflm/mosflm/Makefile  x-windows/Rotgen/Makefile

perl -pi.bak -e "s|-lcrt1.o||g"  Makefile share/ccp4i/Makefile deprecated/src/Makefile  lib/data/Makefile  lib/Makefile  share/Makefile  src/Makefile
perl -pi.bak -e "s|-lcrt1.o||g"  src/ccp4mapwish_/Makefile  unsupported/src/Makefile  x-windows/Makefile  x-windows/Mosflm/mosflm/Makefile  x-windows/Rotgen/Makefile

# Fix for pointless, bp3 etc to prevent linking to gcc4.7 libraries as this creates a run-time error
perl -pi.mod -e 's|-O2|-O3|g' src/pointless/Makefile
#grep -v "gcc4.7" src/pointless/Makefile.mod > src/pointless/Makefile


# Fix newly indtroduced X11 library error
perl -pi.bak -e 's|/usr/X11R6/lib64|/usr/X11R6/lib|g' Makefile ccp4i/Makefile deprecated/src/Makefile lib/data/Makefile lib/src/Makefile share/Makefile src/Makefile src/ccp4mapwish_/Makefile unsupported/src/Makefile x-windows/Makefile

perl -pi.bak -e 's|R/usr|L/usr|g' x-windows/Mosflm/mosflm/Makefile


# Fix newly intdroduced ccif error

perl -pi.bak -e 's|LD_LIBRARY_PATH|DYLD_LIBRARY_PATH|g' lib/ccif/Makefile 

#### Try rapper fix here

cd $CCP4/src/rapper
./configure --prefix=$PWD CC=%p/bin/gcc-4 CXX=%p/bin/g++-4 

#################
#################
NUMPROC="$(sysctl -n hw.ncpu)"
cd $CCP4
make -i -j $NUMPROC
make -i -j $NUMPROC  install
#################
#################
#  

  cd  x-windows/XCCPJIFFY
  perl -pi -e 's|\-lgfortran| |g' Makefile
  make 
  make xccpjiffy2idraw
  cp  xccpjiffy2idraw $CBIN/.
  cd ..
  make xdlmapman xdldataman
  cp  xdlmapman   $CBIN/.
  cp  xdldataman  $CBIN/.

# Do the rest in the InstallScript to take advantage of zsh.
<<
################################################################################
#################################################################################
InstallScript: <<
    #!/bin/zsh -efv

      umask 0022
      export TEMPXTAL=$PWD:h
      source $PWD/include/ccp4.setup-zsh
      NUMPROC="$(sysctl -n hw.ncpu)"

      cd lib/cctbx
      ./ccp4_build

      cd $CCP4
      
      cd src/pointless
      ./configure --with-clipper=$CCP4 --with-fftw=$CCP4 FFTW_LIBS="-L$CCP4/lib -lrfftw -lfftw" FFTW_CXXFLAGS="-I$CCP4/lib/fftw/fftw -I$CCP4/lib/fftw/rfftw -I$CCP4/include -I$CCP4/lib/libccp4 -I$CCP4/lib/mmdb" --with-ccp4=$CCP4 CXXFLAGS="-O2  " --with-cctbx=$CCP4/lib/cctbx/cctbx_sources --with-cctbx-build=$CCP4/lib/cctbx/cctbx_build CXXFLAGS="-O2  " CXXFLAGS="-O2  " --prefix=$CCP4 --bindir=$CCP4/bin LDFLAGS=-L$CCP4/lib CXX="/usr/bin/g++" CC="/usr/bin/gcc"  
      make -j $NUMPROC install

      cd $CCP4
      cd src/aimless
      ./configure --with-clipper=$CCP4 --with-fftw=$CCP4 FFTW_LIBS="-L$CCP4/lib -lrfftw -lfftw" FFTW_CXXFLAGS="-I$CCP4/lib/fftw/fftw -I$CCP4/lib/fftw/rfftw -I$CCP4/include -I$CCP4/lib/libccp4 -I$CCP4/lib/mmdb" --with-ccp4=$CCP4 CXXFLAGS="-O2  " --with-cctbx=$CCP4/lib/cctbx/cctbx_sources --with-cctbx-build=$CCP4/lib/cctbx/cctbx_build CXXFLAGS="-O2  " CXXFLAGS="-O2  " --prefix=$CCP4 --bindir=$CCP4/bin LDFLAGS=-L$CCP4/lib CXX="/usr/bin/g++" CC="/usr/bin/gcc"  
      make -j $NUMPROC install
      
      cd $CCP4
      cd src/phaser
      mv bin bin.sav
      /usr/bin/python $CCP4/lib/cctbx/cctbx_sources/cctbx_project/libtbx/configure.py --clear-scons-memory --repository=source --compiler=gcc phaser --build-boost-python-extensions=false
      source setpaths.sh
      libtbx.scons -j $NUMPROC .
      cd exe
      cp phaser  $CCP4/bin/.

      cd $CCP4

      # rapper manual install
      if [[ -x  src/rapper/bin/rapper ]]; then
          cp src/rapper/bin/rapper  $CCP4/bin/.
          cp src/rapper/lib/libcord.1.0.3.dylib $CCP4/lib/libcord.1.dylib
          cp src/rapper/lib/libgc.1.0.3.dylib   $CCP4/lib/libgc.1.dylib
          cp src/rapper/lib/libxml2.2.dylib     $CCP4/lib/libxml2.2.dylib
          /bin/rm -rf src/rapper/lib/*.dylib
      fi


      export DYLD_LIBRARY_PATH=$CLIB
      cd $CLIB/libccp4
      gfortran -m64 -fno-second-underscore -O2 -fno-second-underscore -L$CLIB -o data/fontpack data/fontpack.o -lccp4f -lccp4c
      cd data
      ./fontpack
      cp font84.dat $CLIB/.
      cd $CCP4

      cp lib/ccif/data/*.lib       lib/.
      

      ORIGDIR=$(dirname $PWD)

      export PATH=%p/lib/xmkmf/bin:$PATH 
      export IMAKEINCLUDE=-I%p/lib/X11/config

# Cleanup is much easier with zsh recursive globbing
	# several requests made from users to leave
	# source code in place
	/bin/rm -f **/*.o
	/bin/rm -f **/*.bak
	# remove redundant library junk
	# /bin/rm -Rf lib/**/.libs
    /bin/rm -Rf src/leiden/bp3lib/src/.libs   
    /bin/rm -Rf src/Prodrg/.libs
	/bin/rm -f lib/ccif/libccif.dylib
	/bin/rm -f lib/src/libccp4c.dylib
	/bin/rm -f lib/src/libmmdb.dylib
	/bin/rm -R testcomp* 
	/bin/rm -R BINARY*


    # Change environment scripts to match final installation
      perl -pi -e 's|\$TEMPXTAL|%p/share/xtal|g' include/ccp4.setup*      # install prefix
    #
    # Bugzilla number : #3593
      perl -pi -e "s|$PWD|%p/share/xtal/%n-%v|g"  share/pisa/pisa.cfg
    #
    #
      cp ../XCCPJiffy-custom.gz  XCCPJiffy.gz ; gunzip XCCPJiffy.gz; chmod a+x XCCPJiffy
      perl -pi -e 's|5.0.1|%v|g' XCCPJiffy
      mv -f  XCCPJiffy lib/X11/app-defaults/XCCPJiffy
    #  
      perl -pi.bak -e 's|/src/fink.build/ccp4-%v-%r|/share/xtal|g' bin/clipper-config
      rm -f bin/clipper-config.bak
      perl -pi.bak -e 's|lclipper |lclipper-core |g' bin/clipper-config
      rm -f bin/clipper-config.bak                                
      perl -pi.bak -e 's|lib/lib -lrfftw -lfftw |lib/ccp4-%v -lsrfftw -lsfftw |g' bin/clipper-config
      rm -f bin/clipper-config.bak                                
    #
    # Fix path in libfoo.la libtool files:
    #  
      perl -pi.bak -e 's|/src/fink.build/ccp4-%v-%r/ccp4-%v/lib|/lib/ccp4-%v|g' lib/**/*.la
      #/bin/rm -f lib/python*/site-packages/libxml2mod.la
      /bin/rm -f lib/**/*.la.bak
#######

cd $CCP4
#################
# More cleanup:
#/bin/rm -Rf src/leiden/bp3lib/src/.libs
#/bin/rm -f **/*.o
perl -pi.bak -e 's|/src/fink.build/ccp4-%v-%r/ccp4-%v/lib|/lib/ccp4-%v|g' lib/**/*.la
# Remove duplicate header files
/bin/rm -f  include/**/*.h

######
    #
    # Now install:

    # Fix for relative path in the install_name of libboost_python.dylib
    install_name_tool -id %p/lib/%n-%v/cctbx/cctbx_build/lib/libboost_python.dylib   lib/cctbx/cctbx_build/lib/libboost_python.dylib
    #
    # Fix linking to wrong library for afro and bp3
    install_name_tool -change %p/lib/gcc4.7/lib/libstdc++.6.dylib /usr/lib/libstdc++.6.dylib bin/afro
    install_name_tool -change %p/lib/gcc4.7/lib/libstdc++.6.dylib /usr/lib/libstdc++.6.dylib bin/bp3 
    install_name_tool -change %p/lib/gcc4.7/lib/libstdc++.6.dylib /usr/lib/libstdc++.6.dylib bin/gcx
    install_name_tool -change %p/lib/gcc4.7/lib/libstdc++.6.dylib /usr/lib/libstdc++.6.dylib bin/mapro
    #
      cd %b
      mkdir -p %i/lib
    #
      /bin/rm -rf lib/cctbx/cctbx_sources/**/*.pyc
      /bin/rm -f  lib/libclipper-cif.la  lib/libclipper-minimol.la  lib/libclipper-mmdb.la 
      cp -R lib %i/lib/%n-%v
      mkdir -p %i/bin
    #
      mkdir -p %i/share/xtal/%n-%v/help
      mkdir -p %i/share/man/man1
    # set up man pages in a fink-compliant manner
      cd $PWD/doc
      foreach docfilepage ( *.doc )
          cp ${docfilepage}  %i/share/man/man1/${docfilepage:r}.1
          cp ${docfilepage}  %i/share/xtal/%n-%v/help/${docfilepage:r}
      end
    # back to build directory
      cd $CCP4
    #                    
      
      /bin/rm -rf lib    
      cp -R * %i/share/xtal/%n-%v/.
      ln -s   %p/lib/%n-%v      %i/share/xtal/%n-%v/lib
    #
    # making scripts for %p/etc/profile.d  
      mkdir -p %i/etc/profile.d
    #
      echo "source %p/share/xtal/ccp4-%v/include/ccp4.setup"                 > %i/etc/profile.d/ccp4.csh
      echo "setenv CLIB %p/lib/ccp4-%v "                                    >> %i/etc/profile.d/ccp4.csh
    #

      echo "if [ -z \$ZSH_NAME ];then                           "             > %i/etc/profile.d/ccp4.sh 
      echo "    source %p/share/xtal/ccp4-%v/include/ccp4.setup-bash "       >> %i/etc/profile.d/ccp4.sh    
      echo "else                                               "             >> %i/etc/profile.d/ccp4.sh
      echo "    source %p/share/xtal/ccp4-%v/include/ccp4.setup-zsh"         >> %i/etc/profile.d/ccp4.sh
      echo "fi                                                 "             >> %i/etc/profile.d/ccp4.sh
      echo "export CLIB=%p/lib/ccp4-%v "                                     >> %i/etc/profile.d/ccp4.sh
    #
      chmod a+x %i/etc/profile.d/ccp4.*
    #
      #chmod a+x  %i/share/xtal/ccp4-%v/share/ccp4i/etc/osx_ccp4_mail
    #
      chmod a+r,a+x %i/share/xtal/ccp4-%v/etc/* 
      chmod a+r,a+x %i/share/xtal/ccp4-%v/bin/* 
      chmod a+r,a+x %i/share/xtal/ccp4-%v/share/ccp4i/bin/*  
      chmod a+r,a+x %i/share/xtal/ccp4-%v/share/dbccp4i/bin/* 
      chmod a+r,a+x %i/share/xtal/ccp4-6.3.0/share/ccp4i/imosflm/src/*
    #
    # chmod a+x %i/share/xtal/ccp4-%v/etc/ccp4help 
    #
      ranlib %i/lib/%n-%v/*.a
      ranlib %i/lib/%n-%v/**/*.a
    #
      perl -pi -e 's|%p/share/%p/share|%p/share|g' %i/share/xtal/ccp4-%v/include/ccp4.setup*     # fix

    # remove build path from .la files
	# perl -pi -e "s, \-L[^ ']*/%n-%v-%r/%n-%v/src/rapper/libxml2/.libs, \-L %p/lib,g"  %i/lib/%n-%v/python*/site-packages/**/*.la

    # don't package these .la files
    /usr/bin/find    %i/share/xtal/%n-%v/src/rapper -name '*.la' -delete
    /usr/bin/find    %i/share/xtal/%n-%v/x-windows -name '*.la' -delete
    /usr/bin/find    %i/share/xtal/%n-%v/src/leiden/bp3lib/src  -name '*.la' -delete
    /usr/bin/find    %i/share/xtal/%n-%v/src/Prodrg  -name '*.la' -delete
    /usr/bin/find    %i/lib/%n-%v/clipper/clipper -name '*.la' -delete
    
   #   # don't package .pyc files generated in the buildroot
    /usr/bin/find    %i/share/xtal/%n-%v/src/phaser -name '*.pyc' -delete

## Final cleanup:

   cd $CCP4
   echo "Final cleanup in $PWD"
    

   /bin/rm -rf %i/**/.libs
   /bin/rm -rf %i/**/.deps
   /bin/rm -rf %i/**/*.pc   

<<
#################################################################################
#################################################################################
PostInstScript: <<
cd %p/share/xtal/%n-%v  &&  ./src/phaser/bin/libtbx.refresh
cd %p/lib/%n-%v/cctbx && ./cctbx_build/bin/libtbx.refresh
# Make the user read the license conditions
more %p/share/xtal/ccp4-%v/conditions.txt
<<
################################################################################
################################################################################
SplitOff: <<
    Package: %N-shlibs
    Description: CCP4 dynamic libraries
    Files:<<
        lib/ccp4-%v/*.*.dylib       
        lib/ccp4-%v/cctbx/cctbx_build/lib/libboost_python.dylib
    <<
    Shlibs: <<
        %p/lib/ccp4-%v/libDiffractionImage.0.dylib                   1.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/lib_DiffractionImage.0.dylib                  1.0.0  %n   (>= 6.3.0-1)
 		%p/lib/ccp4-%v/libccif.0.dylib 							 	 1.0.0  %n   (>= 6.3.0-1)
		%p/lib/ccp4-%v/libccp4c.0.dylib 							 1.0.0  %n   (>= 6.3.0-1)
		%p/lib/ccp4-%v/libccp4srs.0.dylib 							 1.0.0  %n   (>= 6.3.0-1)
		%p/lib/ccp4-%v/libccp4f.0.dylib 							 1.0.0  %n   (>= 6.3.0-1) 
        %p/lib/ccp4-%v/libclipper-ccp4.2.dylib                       3.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libclipper-cif.2.dylib                        3.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libclipper-cns.0.dylib                        1.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libclipper-contrib.2.dylib                    3.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libclipper-core.2.dylib                       3.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libclipper-minimol.2.dylib                    3.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libclipper-mmdb.2.dylib                       3.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libclipper-phs.2.dylib                        3.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libjwc_c.0.dylib                              2.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libmmdb.0.dylib 								 1.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libssm.0.dylib                                1.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libxdl_view.2.dylib                           3.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libxdl_viewextra.0.dylib                      1.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libfftw.2.dylib                               3.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/librfftw.2.dylib                              3.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/libbp3.1.dylib								 2.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-%v/cctbx/cctbx_build/lib/libboost_python.dylib	 0.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-6.3.0/libxml2.2.dylib 							 10.0.0 %n   (>= 6.3.0-1)
        %p/lib/ccp4-6.3.0/libgc.1.dylib 							 2.0.0  %n   (>= 6.3.0-1)
        %p/lib/ccp4-6.3.0/libcord.1.dylib 							 2.0.0  %n   (>= 6.3.0-1)
    << 
    DocFiles:  CHANGES COPYING INSTALL README PROBLEMS academic_software_licence.pdf
    License: LGPL
<<
################################################################################
################################################################################
SplitOff2: <<
    Package: %N-dev
    BuildDependsOnly: true
    Conflicts: gpp4-dev, ssm-dev, mmdb-dev, clipper-dev, ccp4-onlylibs-dev
    Replaces:  gpp4-dev, ssm-dev, mmdb-dev, clipper-dev, ccp4-onlylibs-dev
    Description: CCP4 static libraries and libtool files
    Files:<<
        lib/ccp4-%v/*.a  
        lib/ccp4-%v/*.la
        lib/ccp4-%v/libccif.dylib   
        lib/ccp4-%v/libccp4c.dylib
        lib/ccp4-%v/libmmdb.dylib
    <<
    DocFiles:  CHANGES COPYING INSTALL   README PROBLEMS academic_software_licence.pdf
    License: LGPL
<<
################################################################################
Description:  Macromolecular crystallography package
DescDetail: <<
    The CCP4 macromolecular crystallography suite has approximately
    200 programs and utilities. This version includes the Clipper
    libraries. Current phaser and cctbx programs are available as 
    separate fink packages.

    Type "ccp4help" for a summary listing of all ccp4 programs.
    Type "ccp4help foo" for a detailed description of program "foo."

    Invoke optional ccp4i gui for the first run using "sudo ccp4i"
    on 10.4, or "sudo -E ccp4i" on 10.5 and above to permit global 
    configuration. Thereafter, you can invoke ccp4i without sudo.

    This version compiles with the Apple Lapack/Blas framework.
    License agreement is part of configure file -- print out form and mail in,
    additional comments at http://sage.ucsc.edu/xtal/ccp4.html
    
    CCP4 files will be installed under /sw/share/xtal/ccp4-6.3.0
    This revision includes all available CCP4 patches, 
    and new bash and zsh command completions specific to ccp4. 
    
    The ccp4-associated molecular graphics display program coot is also
    available as a fink package. It builds against the GPL gpp4 libraries
    rather than those of this package.
    
    Thanks to Jack Howarth for many helpful improvements.
<<
DocFiles: <<
    README CHANGES COPYING PROBLEMS INSTALL  
<<
Homepage: http://www.ccp4.ac.uk  
License: Restrictive
Maintainer: W. G. Scott <wgscott@users.sourceforge.net>
