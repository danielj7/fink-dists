diff --unidirectional-new-file -rux .svn tags/nano_2_2_4/ChangeLog trunk/nano/ChangeLog
--- tags/nano_2_2_4/ChangeLog	2010-06-25 23:30:35.000000000 +0000
+++ trunk/nano/ChangeLog	2010-06-25 23:30:15.000000000 +0000
@@ -1,3 +1,14 @@
+2010-06-20 Chris Allegretta <chrisa@asty.org>
+	* New rc file option allow_insecure_backup, allows the previous security
+	  fixes for backup files to be overridden if you're really positive
+	  you want to.  Fixes Savannah bug 29732 by Brian Szymanski <skibrianski>.
+
+2010-05-23 Chris Allegretta <chrisa@asty.org>
+	* files.c (write_file): Don't even try to chown() the backup
+	  file unless we're root, since it's probably going to fail if
+	  we're editing a file we don't own.  Fixes Savannah bug
+	  29514: [nano 2.2.2] backup should ignore chown errors.
+
 GNU nano 2.2.4 - 2010.04.15
 2010-04-07 Chris Allegretta <chrisa@asty.org>
 	* doc/man/nano.1,nanorc.5: Remove the backup file warnings now
diff --unidirectional-new-file -rux .svn tags/nano_2_2_4/doc/man/nanorc.5 trunk/nano/doc/man/nanorc.5
--- tags/nano_2_2_4/doc/man/nanorc.5	2010-06-25 23:30:19.000000000 +0000
+++ trunk/nano/doc/man/nanorc.5	2010-06-25 23:30:14.000000000 +0000
@@ -57,6 +57,11 @@
 The supported commands and arguments are:
 
 .TP 3
+.B set/unset allow_insecure_backup
+When backing up files, allow the backup to succeed even if its permissions
+can't be (re)set due to special OS considerations.  You should 
+NOT enable this option unless you are sure you need it.
+.TP
 .B set/unset autoindent
 Use auto-indentation.
 .TP
diff --unidirectional-new-file -rux .svn tags/nano_2_2_4/doc/syntax/nanorc.nanorc trunk/nano/doc/syntax/nanorc.nanorc
--- tags/nano_2_2_4/doc/syntax/nanorc.nanorc	2010-06-25 23:30:19.000000000 +0000
+++ trunk/nano/doc/syntax/nanorc.nanorc	2010-06-25 23:30:12.000000000 +0000
@@ -4,7 +4,7 @@
 ## Possible errors and parameters
 icolor brightwhite "^[[:space:]]*((un)?set|include|syntax|i?color).*$"
 ## Keywords
-icolor brightgreen "^[[:space:]]*(set|unset)[[:space:]]+(autoindent|backup|backupdir|backwards|boldtext|brackets|casesensitive|const|cut|fill|historylog|matchbrackets|morespace|mouse|multibuffer|noconvert|nofollow|nohelp|nonewlines|nowrap|operatingdir|preserve|punct)\>" "^[[:space:]]*(set|unset)[[:space:]]+(quickblank|quotestr|rebinddelete|rebindkeypad|regexp|smarthome|smooth|softwrap|speller|suspend|suspendenable|tabsize|tabstospaces|tempfile|undo|view|whitespace|wordbounds)\>"
+icolor brightgreen "^[[:space:]]*(set|unset)[[:space:]]+(allow_insecure_backup|autoindent|backup|backupdir|backwards|boldtext|brackets|casesensitive|const|cut|fill|historylog|matchbrackets|morespace|mouse|multibuffer|noconvert|nofollow|nohelp|nonewlines|nowrap|operatingdir|preserve|punct)\>" "^[[:space:]]*(set|unset)[[:space:]]+(quickblank|quotestr|rebinddelete|rebindkeypad|regexp|smarthome|smooth|softwrap|speller|suspend|suspendenable|tabsize|tabstospaces|tempfile|undo|view|whitespace|wordbounds)\>"
 icolor green "^[[:space:]]*(set|unset|include|syntax|header)\>"
 ## Colors
 icolor yellow "^[[:space:]]*i?color[[:space:]]*(bright)?(white|black|red|blue|green|yellow|magenta|cyan)?(,(white|black|red|blue|green|yellow|magenta|cyan))?\>"
diff --unidirectional-new-file -rux .svn tags/nano_2_2_4/src/files.c trunk/nano/src/files.c
--- tags/nano_2_2_4/src/files.c	2010-06-25 23:30:18.000000000 +0000
+++ trunk/nano/src/files.c	2010-06-25 23:30:12.000000000 +0000
@@ -1458,6 +1458,7 @@
 	/* The actual file, realname, we are writing to. */
     char *tempname = NULL;
 	/* The temp file name we write to on prepend. */
+    int backup_cflags;
 
     assert(name != NULL);
 
@@ -1592,14 +1593,19 @@
 	/* First, unlink any existing backups.  Next, open the backup
 	   file with O_CREAT and O_EXCL.  If it succeeds, we
 	   have a file descriptor to a new backup file. */
-	if (unlink(backupname) < 0 && errno != ENOENT) {
+	if (unlink(backupname) < 0 && errno != ENOENT && !ISSET(INSECURE_BACKUP)) {
 	    statusbar(_("Error writing backup file %s: %s"), backupname,
 			strerror(errno));
 	    free(backupname);
 	    goto cleanup_and_exit;
 	}
 
-	backup_fd = open(backupname, O_WRONLY | O_CREAT | O_EXCL | O_APPEND,
+	if (ISSET(INSECURE_BACKUP))
+	    backup_cflags = O_WRONLY | O_CREAT | O_APPEND;
+        else
+	    backup_cflags = O_WRONLY | O_CREAT | O_EXCL | O_APPEND;
+
+	backup_fd = open(backupname, backup_cflags,
 		S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH);
 	/* Now we've got a safe file stream.  If the previous open()
 	   call failed, this will return NULL. */
@@ -1612,9 +1618,19 @@
 	    goto cleanup_and_exit;
 	}
 
-	if (fchmod(backup_fd, openfile->current_stat->st_mode) == -1 ||
-	    fchown(backup_fd, openfile->current_stat->st_uid,
-		   openfile->current_stat->st_gid) == -1 ) {
+        /* We shouldn't worry about chown()ing something if we're not
+	   root, since it's likely to fail! */
+	if (geteuid() == NANO_ROOT_UID && fchown(backup_fd,
+		openfile->current_stat->st_uid, openfile->current_stat->st_gid) == -1
+                && !ISSET(INSECURE_BACKUP)) {
+	    statusbar(_("Error writing backup file %s: %s"), backupname,
+		strerror(errno));
+	    free(backupname);
+	    fclose(backup_file);
+	    goto cleanup_and_exit;
+	}
+
+	if (fchmod(backup_fd, openfile->current_stat->st_mode) == -1 && !ISSET(INSECURE_BACKUP)) {
 	    statusbar(_("Error writing backup file %s: %s"), backupname,
 		strerror(errno));
 	    free(backupname);
@@ -1633,14 +1649,16 @@
 	/* Copy the file. */
 	copy_status = copy_file(f, backup_file);
 
-	/* And set its metadata. */
-	if (copy_status != 0  || utime(backupname, &filetime) == -1) {
-	    if (copy_status == -1) {
-		statusbar(_("Error reading %s: %s"), realname,
+	if (copy_status != 0) {
+	    statusbar(_("Error reading %s: %s"), realname,
 			strerror(errno));
-		beep();
-	    } else
-		statusbar(_("Error writing backup file %s: %s"), backupname,
+	    beep();
+	    goto cleanup_and_exit;
+	}
+
+	/* And set its metadata. */
+	if (utime(backupname, &filetime) == -1 && !ISSET(INSECURE_BACKUP)) {
+	    statusbar(_("Error writing backup file %s: %s"), backupname,
 			strerror(errno));
 	    /* If we can't write to the backup, DONT go on, since
 	       whatever caused the backup file to fail (e.g. disk
diff --unidirectional-new-file -rux .svn tags/nano_2_2_4/src/nano.h trunk/nano/src/nano.h
--- tags/nano_2_2_4/src/nano.h	2010-06-25 23:30:18.000000000 +0000
+++ trunk/nano/src/nano.h	2010-06-25 23:30:12.000000000 +0000
@@ -480,6 +480,7 @@
     REBIND_KEYPAD,
     NO_CONVERT,
     BACKUP_FILE,
+    INSECURE_BACKUP,
     NO_COLOR_SYNTAX,
     PRESERVE,
     HISTORYLOG,
diff --unidirectional-new-file -rux .svn tags/nano_2_2_4/src/rcfile.c trunk/nano/src/rcfile.c
--- tags/nano_2_2_4/src/rcfile.c	2010-06-25 23:30:18.000000000 +0000
+++ trunk/nano/src/rcfile.c	2010-06-25 23:30:12.000000000 +0000
@@ -77,6 +77,7 @@
 #ifndef NANO_TINY
     {"autoindent", AUTOINDENT},
     {"backup", BACKUP_FILE},
+    {"allow_insecure_backup", INSECURE_BACKUP},
     {"backupdir", 0},
     {"backwards", BACKWARDS_SEARCH},
     {"casesensitive", CASE_SENSITIVE},
