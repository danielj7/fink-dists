diff -ruNp xapian-core-1.2.19-orig/tests/api_matchspy.cc xapian-core-1.2.19/tests/api_matchspy.cc
--- xapian-core-1.2.19-orig/tests/api_matchspy.cc	2014-10-20 22:02:33.000000000 -0500
+++ xapian-core-1.2.19/tests/api_matchspy.cc	2014-11-07 20:44:15.000000000 -0600
@@ -175,6 +175,9 @@ DEFINE_TESTCASE(matchspy2, generated)
 
 DEFINE_TESTCASE(matchspy4, generated)
 {
+    SKIP_TEST_FOR_BACKEND("brass");
+    SKIP_TEST_FOR_BACKEND("chert");
+    SKIP_TEST_FOR_BACKEND("flint");
     Xapian::Database db = get_database("matchspy2", make_matchspy2_db);
 
     // We're going to run the match twice - once sorted by relevance, and once
diff -ruNp xapian-core-1.2.19-orig/tests/api_serialise.cc xapian-core-1.2.19/tests/api_serialise.cc
--- xapian-core-1.2.19-orig/tests/api_serialise.cc	2014-10-20 22:02:33.000000000 -0500
+++ xapian-core-1.2.19/tests/api_serialise.cc	2014-11-07 19:37:26.000000000 -0600
@@ -337,6 +337,7 @@ class ExceptionalPostingSource : public 
 
 /// Check that exceptions when registering a postingsource are handled well.
 DEFINE_TESTCASE(registry1, !backend) {
+    SKIP_TEST_FOR_BACKEND("none");
     // Test that a replacement object throwing bad_alloc is handled.
     {
 	Xapian::Registry reg;
@@ -394,6 +395,7 @@ class ExceptionalWeight : public Xapian:
 
 /// Check that exceptions when registering are handled well.
 DEFINE_TESTCASE(registry2, !backend) {
+    SKIP_TEST_FOR_BACKEND("none");
     // Test that a replacement object throwing bad_alloc is handled.
     {
 	Xapian::Registry reg;
@@ -442,6 +444,7 @@ class ExceptionalMatchSpy : public Xapia
 
 /// Check that exceptions when registering are handled well.
 DEFINE_TESTCASE(registry3, !backend) {
+    SKIP_TEST_FOR_BACKEND("none");
     // Test that a replacement object throwing bad_alloc is handled.
     {
 	Xapian::Registry reg;
