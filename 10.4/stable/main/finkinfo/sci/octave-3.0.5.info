Info2: <<
Package: octave%type_pkg[-atlas]
Type: -atlas (boolean), oct(3.0.5), gcc (4.6)
Version: 3.0.5
Revision: 601
Distribution: 10.6
Maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>

Source: mirror:gnu:%{Ni}/%{Ni}-%v.tar.bz2
Source-MD5: bfba44eeda8fa6e29c2bbcd2604c34eb

BuildDepends: <<
	glpk-dev, hdf5.7-oldapi, readline5, libncurses5, fftw3 (>= 3.1.1-7), libcurl4, 
	pcre, gcc46-compiler, suitesparse-metis, metis, qhull6-dev, fink (>= 0.30.0-1), fink-package-precedence, sed,
	(%type_raw[-atlas] = atlas) atlas, flag-sort
<<
Depends: %{Ni}%type_pkg[oct]%type_pkg[-atlas] (=%v-%r)
BuildConflicts: coot-dev, broken-gcc, lammpi-dev, fort77, 4ti2-dev
Suggests: %{Ni}%type_pkg[oct]-docs
Provides: <<
								octave-interpreter,
(%type_raw[-atlas] = -atlas) 	octave-interpreter-atlas,
(%type_raw[-atlas] != -atlas) 	octave-interpreter-veclib
<<

Conflicts: <<
	(%type_raw[-atlas] = atlas) %{Ni}, (%type_raw[-atlas] != -atlas) %{Ni}-atlas, 
	%{Ni}3.0.2 ( << 3.0.2-5), %{Ni}3.0.2-atlas ( << 3.0.2-5) 
	<<
Replaces: %{Ni}, %{Ni}-atlas, %{Ni}3.0.2 ( << 3.0.2-5), %{Ni}3.0.2-atlas ( << 3.0.2-5) 

UseMaxBuildJobs: false
GCC: 4.0

PatchFile: %{ni}-glpk.patch
PatchFile-MD5: a4861a0803cfbbbb8892019cd5f217d2
PatchFile2: %{ni}-manpages.patch
PatchFile2-MD5: 647cff8601e837e8b8e46d15867b14f0
PatchFile3: %{ni}.patch
PatchFile3-MD5: adc4d6257e51ca5d8a45472c8ee036ca
PatchScript: <<
	#!/bin/sh -ev
	#fix for use of glpk private internals
	patch -p1 < %{PatchFile}
	# create versioned manpages
	cp doc/interpreter/%{Ni}.1 doc/interpreter/%{Ni}-%v.1
	cp doc/interpreter/%{Ni}-bug.1 doc/interpreter/%{Ni}-bug-%v.1
	cp doc/interpreter/%{Ni}-config.1 doc/interpreter/%{Ni}-config-%v.1
	cp doc/interpreter/mkoctfile.1 doc/interpreter/mkoctfile-%v.1
	# fix executable names in versioned manpages
	sed -e 's/@OCTVERSION@/%v/g' %{PatchFile2} | patch -p1 
	#Fink-specific structural changes
	sed -e 's/@OCTVERSION@/%v/g' -e 's|@FINKPREFIX@|%p|g' %{PatchFile3} | patch -p1 
	# Put in the Fink tree.
	sed -i.orig -e 's|@FINKPREFIX@|%p|g'   %{Ni}-forge* %{Ni}rc doc/interpreter/*.1 mkoctfile.in
	# fix lib name for qhull6
	perl -pi.orig -e 's|(qhull[/.])|lib\1|g ; s|lqhull|lqhull6|' configure
	# wrong include dir for qhull6
	for f in `grep -l -r "qhull_a\.h" src`
		do sed -i.orig -e '/include/s|qhull/|lib&|' $f
	done
 	# Put compiler information without 'flag-sort' into oct-conf.h, which in 
 	# turn gets harcoded into the Octave interpreter's 'octave_config_info' 
 	# function, which is then used by some of the octave-forge packages at 
 	# configure time.  Also do this for mkoctfile.in.
 	sed -i.bak 	-e "s|%%OCTAVE_CONF_CC%%|\"`which gcc`\"|" \
 				-e "s|%%OCTAVE_CONF_CXXCPP%%|\"`which g++` -E\"|" \
 				-e "s|%%OCTAVE_CONF_CXX%%|\"`which g++`\"|" \
 				-e "s|%%OCTAVE_CONF_DL_LD%%|\"`which g++`\"|" \
 				-e "s|%%OCTAVE_CONF_LD_CXX%%|\"`which g++`\"|" \
 				-e "s|%%OCTAVE_CONF_SH_LD%%|\"`which g++`\"|" src/oct-conf.h.in mkoctfile.in	
	# Add the BLAS C library for the -atlas variant.
	if [ "%type_pkg[-atlas]" = "-atlas" ]
		then sed -i.bak -e 's|%%OCTAVE_CONF_BLAS_LIBS%%|"%p/lib/liblapack.dylib %p/lib/libf77blas.dylib %p/lib/libcblas.dylib"|' \
							src/oct-conf.h.in mkoctfile.in
	fi
<<

SetCC: flag-sort -r gcc
SetCXX: flag-sort -r g++
SetCPPFLAGS: -I%p/opt/hdf5v1.6/include
SetLDFLAGS: -Wl,-dead_strip_dylibs -L%p/opt/hdf5v1.6/lib
SetLIBS: -lmetis
ConfigureParams: <<
	F77=%p/bin/gfortran-fsf-%type_raw[gcc] --host=%m-apple-darwin --build=%m-apple-darwin \
	--infodir='${prefix}/share/info' --mandir='${prefix}/share/man' --libexecdir='${prefix}/lib' \
	--enable-shared --enable-dl --disable-static --without-mpi --with-hdf5 --with-fftw
<<
CompileScript: <<
 #!/bin/sh -ev
 export CFLAGS='-O3 -MD'
 export CXXFLAGS='-O3 -MD'
 export FFLAGS='-O3'
 if [ "%type_pkg[-atlas]" == "" ]
 then 
	a='--with-lapack=-Wl,-framework,Accelerate --with-blas=-Wl,-framework,Accelerate'
	export FFLAGS='-O3 -ff2c'
 else 
 	a='--with-lapack=%p/lib/liblapack.dylib --with-blas=%p/lib/libf77blas.dylib'
    export FFLAGS='-O3'
 fi
 FLIBDIR="%p/lib/gcc%type_raw[gcc]/lib"
 ./configure FLIBS="${FLIBDIR}/libgfortran.dylib" %c $a
 make
 fink-package-precedence --depfile-ext='\.d$' --prohibit-bdep=%{Ni},%{Ni}-atlas,%{Ni}%type_raw[oct]-dev,%{Ni}%type_raw[oct]-atlas-dev,%{Ni}305-dev,%{Ni}305-atlas-dev,saclib-gcc46,saclib src
<<

InfoTest: <<
	TestScript: make check || exit 2	
<<

InstallScript: <<
 #!/bin/sh -ev
 make install DESTDIR=%d
 # Install versioned manpages
 cp doc/interpreter/*-%v.1 %i/share/man/man1
 # Install Fink-specific octaverc which points at our oct-versioned
 # package directory.
 cp %{Ni}rc %i/share/%{Ni}/%v/m/startup
 mkdir -p %i/var/%{Ni}/%v/
 # install examples
 mkdir -p %i/share/%{Ni}/%v/doc/examples
 cp -R examples %i/share/%{Ni}/%v/doc/examples
 # clear out hardcoded Fink sed.
 pushd %i/bin 
 for file in mkoctfile-%v %{Ni}-bug-%v %{Ni}-config-%v 
 do 
 	perl -pi -e 's|%p/bin/sed|/usr/bin/sed|g' $file
 done
 popd 
 # remove TeX stuff which may have been generated:
 rm %i/share/%{Ni}/ls-R %i/lib/%{Ni}/ls-R
 # remove autogenerated freedesktop.org desktop file
 rm -f %i/share/applications/www.%{Ni}.org-%{Ni}.desktop
 mkdir -p %i/share/%{Ni}/%v/scripts
 # install the octave-forge helper scripts
 cp %{Ni}-forge* %i/share/%{Ni}/%v/scripts
 chmod a+x %i/share/%{Ni}/%v/scripts/*
 # octave-bug needs to use Fink's compiler wrappers, too, since
 # some octave-forge packages use it for configuration.
 sed -i.bak -e "s|flag-sort -r gcc|`which gcc`|g" \
 			-e "s|flag-sort -r g++|`which g++`|g" \
 			%i/bin/%{Ni}-bug-%v 
 # for the -atlas variant, add libcblas.dylib to BLAS_LIBS:
 perl -pi -e 's|(%p/lib/liblapack.dylib %p/lib/libf77blas.dylib)|$1 %p/lib/libcblas.dylib|' \
 	%i/bin/%{ni}-bug-%v
 # generate Fink-gcc enabled mkoctfile
 cp %i/bin/mkoctfile-%type_raw[oct] %i/bin/mkoctfile-%type_raw[oct]-gcc%type_raw[gcc]
 perl -pi -e \
 's,(CC).*(gcc),\1\="%p/bin/\2-fsf-%type_raw[gcc],g; \
  s,(.*=\").*(g\+\+),\1%p/bin/\2-fsf-%type_raw[gcc],g' \
    %i/bin/mkoctfile-%type_raw[oct]-gcc%type_raw[gcc] 
 cd %i/bin
 # create convenience symlink
 ln -s mkoctfile-%type_raw[oct]-gcc%type_raw[gcc] mkoctfile-gcc%type_raw[gcc] 
<<
InfoDocs: %{Ni}.info
RuntimeVars: <<
 GNUTERM: aqua
<<
DocFiles: BUGS COPYING ChangeLog* NEWS* PROJECTS README ROADMAP SENDING-PATCHES THANKS

SplitOff: <<
	Package: octave%type_pkg[oct]%type_pkg[-atlas]-shlibs
	Conflicts: << 
		(%type_raw[-atlas] = atlas) %{Ni}%type_pkg[oct]-shlibs, 
		(%type_raw[-atlas] != atlas) %{Ni}%type_pkg[oct]-atlas-shlibs, 
		(%type_raw[-atlas] = atlas) %{Ni} (<< 3.0.5-5), 
		(%type_raw[-atlas] != atlas) %{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), %{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		(%type_raw[-atlas] = atlas) %{Ni}%type_pkg[oct]-shlibs, 
		(%type_raw[-atlas] != atlas) %{Ni}%type_pkg[oct]-atlas-shlibs, 
		%{Ni} (<< 3.0.5-5), %{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), %{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<	
	Depends:  fftw3-shlibs, gcc%type_pkg[gcc]-shlibs, hdf5.7-oldapi-shlibs, readline5-shlibs, 	(%type_raw[-atlas] = -atlas) atlas-shlibs (>= 3.8.1-1)
	Provides: <<
		
		liboctave%type_pkg[oct],
		(%type_raw[-atlas] = -atlas) liboctave%type_pkg[oct]-atlas,
		(%type_raw[-atlas] != -atlas) liboctave%type_pkg[oct]-veclib
	<<
	Files: <<
		lib/%{Ni}-%v
	<<
	Shlibs: <<
		%p/lib/%{Ni}-%v/libcruft.dylib 0.0.0 %n (>=3.0.5-5)
		%p/lib/%{Ni}-%v/lib%{Ni}.dylib 0.0.0 %n (>=3.0.5-5)
		%p/lib/%{Ni}-%v/liboctinterp.dylib 0.0.0 %n (>=3.0.5-5)
	<<
	DescDetail: <<
	This package contains shared libraries which are used by the Octave
	interpreter itself, as well as for packages that build against Octave, 
	such as the various octave-forge packages.
	<<
	DescUsage: <<
Any package that either links to the libraries in %{Ni}%type_pkg[-atlas]-shlibs or 
installs an extension should Depend on %{Ni}%type_pkg[oct]%type_pkg[-atlas]-shlibs and BuildDepend
on %{Ni}%type_pkg[oct]%type_pkg[-atlas]-dev.  In addition, it will need to BuildDepend on
hdf5-oldapi and fftw3.
	<<
	DocFiles: BUGS ChangeLog README ROADMAP SENDING-PATCHES COPYING
<<
SplitOff2: <<
	Package: octave%type_pkg[oct]%type_pkg[-atlas]-dev
	Depends: octave%type_pkg[oct]%type_pkg[-atlas]-shlibs (=%v-%r), gcc%type_pkg[gcc]-compiler, (%type_raw[-atlas] = atlas) atlas (>= 3.8.1-1)
	Conflicts: << 
		(%type_raw[-atlas] = atlas) %{Ni}%type_pkg[oct]-dev, 
		(%type_raw[-atlas] != atlas) %{Ni}%type_pkg[oct]-atlas-dev, 
		(%type_raw[-atlas] = atlas) %{Ni} (<< 3.0.5-5), 
		(%type_raw[-atlas] != atlas) %{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), %{Ni}3.0.2-atlas ( << 3.0.2-5),
		%{Ni}324-dev, %{Ni}324-atlas-dev, %{Ni}343-dev, %{Ni}343-atlas-dev,
		mkoctfile%type_pkg[oct]-gcc46, mkoctfile%type_pkg[oct]-gcc46-atlas
	<<
	Replaces: <<
		(%type_raw[-atlas] = atlas) %{Ni}%type_pkg[oct]-dev, 
		(%type_raw[-atlas] != atlas) %{Ni}%type_pkg[oct]-atlas-dev, 
		%{Ni} (<< 3.0.5-5), %{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), %{Ni}3.0.2-atlas ( << 3.0.2-5),
		%{Ni}324-dev, %{Ni}324-dev, %{Ni}324-atlas-dev, %{Ni}343-dev, %{Ni}343-atlas-dev,
		mkoctfile%type_pkg[oct]-gcc46, mkoctfile%type_pkg[oct]-gcc46-atlas
	<<
	Provides: <<
		
		liboctave%type_pkg[oct]-dev,
		(%type_raw[-atlas] = -atlas) liboctave%type_pkg[oct]-atlas-dev,
		(%type_raw[-atlas] != -atlas) liboctave%type_pkg[oct]-veclib-dev
	<<

	BuildDependsOnly: true
	
	Files: <<
		include/%{Ni}-%v
		bin/mkoctfile*
		bin/octave-config*
		share/man/man1/mkoctfile*.1
		share/man/man1/octave-config*.1
	<<
	
	DescDetail: <<
	This package contains files needed to build against Octave, including
	headers and the mkoctfile executable.
	<<
	DescUsage: <<
	To use mkoctfile to build dynamically loadable modules, you will need 	
	to install the hdf5-oldapi and fftw3 packages.
 	%n cannot Depend on them since they are BuildDependsOnly.
	<<
	DescPackaging:  <<
	We Make up an extra mkoctfile which uses a Fink gcc for packages that need
	stuff which isn't included in Xcode.
	<<
	DocFiles: BUGS ChangeLog README ROADMAP SENDING-PATCHES COPYING
<<

Splitoff3: <<
	Package: octave%type_pkg[oct]%type_pkg[-atlas]
	Depends: <<
	%{Ni}%type_pkg[oct]%type_pkg[-atlas]-shlibs (=%v-%r),
	glpk-shlibs, gnuplot (>=4.2.0) | gnuplot-nox | gnuplot-nogtk,  
	fftw3-shlibs (>= 3.1.1-7), qhull6-shlibs,
	ncurses, aquaterm, libcurl4-shlibs, 
	pcre-shlibs,
	(%type_raw[-atlas] = -atlas) atlas-shlibs (>= 3.8.1-1)
	<<
	Conflicts: << 
		(%type_raw[-atlas] = atlas) %{Ni}%type_pkg[oct], 
		(%type_raw[-atlas] != atlas) %{Ni}%type_pkg[oct]-atlas, 
		(%type_raw[-atlas] = atlas) %{Ni} (<< 3.0.5-5), 
		(%type_raw[-atlas] != atlas) %{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), %{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		(%type_raw[-atlas] = atlas) %{Ni}%type_pkg[oct]-dev, 
		(%type_raw[-atlas] != atlas) %{Ni}%type_pkg[oct]-atlas-dev, 
		%{Ni} (<< 3.0.5-5), %{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), %{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Provides: <<
									octave%type_pkg[oct]-interpreter,
	(%type_raw[-atlas] = -atlas) 	octave%type_pkg[oct]-interpreter-atlas,
	(%type_raw[-atlas] != -atlas) 	octave%type_pkg[oct]-interpreter-veclib
	<<
	
	Files: <<
		share/%{Ni}/%v
		lib/%{Ni}/%v
		bin/%{Ni}-%v
		bin/%{Ni}-bug-%v
		var/%{Ni}/%v
		share/man/man1/%{Ni}-%v.1
		share/man/man1/%{Ni}-bug-%v.1
	<<
	DescDetail: <<
	The %{Ni}%type_pkg[oct]%type_pkg[-atlas] package contains versioned executables, as well as all of the 
	core functionality of the Octave interpreter.  Note that the GNU info file, 
	which provides the core documentation, is installed as part of the %{Ni}
    package.
    
	Octave provides a convenient command line interface for solving linear and 
	nonlinear problems numerically, and for performing other numerical 
	experiments using a language that is mostly compatible with Matlab.
	It may also be used as a batch-oriented language.

	Octave has extensive tools for solving common numerical linear algebra
	problems, finding the roots of nonlinear equations, integrating ordinary
	functions, manipulating polynomials, and integrating ordinary differential
	and differential-algebraic equations. It is easily extensible and 
	customizable via user-defined functions written in Octave's own language, 
	or using dynamically loaded modules written in C++, C, Fortran, 
	or other languages.
	<<
	DescUsage: <<
	By default the plotting output (via gnuplot) is directed to AquaTerm. 
	This can be overidden in your startup scripts, e.g.
 
 		export GNUTERM=x11
 
	in bash
 
	or
 
		setenv GNUTERM x11
 
	in tcsh.
 
	Note:  Fink's Octave implementation modifies one of the startup files,
	%p/share/%{Ni}/%v/m/startup/octaverc,
	to initialize octave sessions to know about Fink's octave-versioned 
	install location for octave-forge packages.  If you use the '--norc' 
	or '-f' flags in your Octave script, these packages won't be visible.  
	You'll need to run the following command in your script:
 
		pkg global_list %p/var/octave/%v/octave_packages
<<
	DocFiles: BUGS ChangeLog README ROADMAP SENDING-PATCHES COPYING
<<

Description: MATLAB-like language for computations
DescDetail: <<
The %{Ni}%type_pkg[-atlas] package contains unversioned executables and an 
unversioned directory tree.  

Octave provides a convenient command line interface for solving linear and 
nonlinear problems numerically, and for performing other numerical 
experiments using a language that is mostly compatible with Matlab.
It may also be used as a batch-oriented language.

Octave has extensive tools for solving common numerical linear algebra
problems, finding the roots of nonlinear equations, integrating ordinary
functions, manipulating polynomials, and integrating ordinary differential
and differential-algebraic equations. It is easily extensible and 
customizable via user-defined functions written in Octave's own language, 
or using dynamically loaded modules written in C++, C, Fortran, 
or other languages.
<<
DescUsage: << 
By default the plotting output (via gnuplot) is directed to AquaTerm. 
This can be overidden in your startup scripts, e.g.
 
	export GNUTERM=x11
 
in bash
 
or
 
	setenv GNUTERM x11
 
in tcsh.
 
Note:  Fink's Octave implementation modifies one of the startup files,
%p/share/%{Ni}/%v/m/startup/octaverc,
to initialize octave sessions to know about Fink's octave-versioned 
install location for octave-forge packages.  If you use the '--norc' or '-f'
flags in your Octave script, these packages won't be visible.  You'll need to
run the following command in your script:
 
 	pkg global_list %p/var/octave/%v/octave_packages
 
<<
DescPort: <<
Thanks to Per Persson for most (if not all) of the work on the macos X port.

As of revision 225:  the non-atlas variant is built with -ff2c in the FFLAGS, 
because this appears to be necessary when using the Accelerate framework.
<<
DescPackaging:  <<
Set the GNUTERM environment variable to AquaTerm because autodetection
of DISPLAY seems to cause options to be fed to our gnuplot that it doesn't understand.
AquaTerm seems to be a sensible default, particularly since gnuplot-nox is also a 
legal dependency.

Not sane (and now not even compilable) to use private code
from glpk. Import the functions needed so can still use it
even when glpk stops exporting its internals. See:
	http://octave.1599824.n4.nabble.com/GLPK-interface-was-Re-Multithreaded-Atlas-td1654632.html
 
Remove a desktop file that gets generated only for users with GNOME/KDE installed.

As of 3.0.5-5, we have split the package up into runtime, development, and library packages,
to make upgrades easier for us and for users.
	
As of 3.0.5-5:  generate common octave-forge bash and octave scripts, 
based on the ones by Johnathan Stickel in the original octave-forge-foo 
packages, in _this_ package, so that any required changes can be made in 
a common location rather than spread out over many packages.
Unfortunately, Octave's 'pkg' tool doesn't seem to know how to deal with 
variables, and the individual octave-forge  packages have to make copies
of the octave scripts during their build process and edit them to use the
package's name.

As of revision 225:  

Patch oct-conf.h, mkoctfile, and octave-bug not to put "flag-sort -r" in the 
name of the compiler used, and to use the full path of Fink's compiler wrappers.
Also, we add the BLAS C library to BLAS_LIBS in the -atlas variant.  This makes
sure that anything that builds against Octave has the proper information when 
installed manually as well as via Fink, and is critical for 10.6/i386 (and 10.5
/x86_64) users.  Unfortunately, this requires a rebuild on OS upgrades, because
the information in oct-conf.h gets hardcoded into the Octave interpreter 
executable, and some octave-forge packages get information from that.

As of revision 226:

Get rid of the ugly construction previously used for setting the BLAS and 
LAPACK libraries.

Now includes an additional mkoctfile which uses Fink's gcc46 compilers instead
of Xcode's.

As of revision 601:

Actually _install_ the manpages for the versioned executables.
<<
Homepage: http://www.octave.org/
License: GPL
<<
