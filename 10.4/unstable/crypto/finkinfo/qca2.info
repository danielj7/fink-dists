Info3: <<
Package: qca2-%type_pkg[qca]
Version: 2.0.2
Revision: 1
Type: qca (x11 mac)
Description: Cross-platform Crypto API
License: LGPL
Maintainer: Benjamin Reed <qca2@fink.racoonfink.com>

Depends: <<
	%N-shlibs (= %v-%r)
<<
BuildDepends: <<
	fink (>= 0.24.12-1),
	(%type_pkg[qca] = x11) glib2-dev (>= 2.12.0-1),
	(%type_pkg[qca] = x11) x11-dev,
	libgettext3-dev,
	libiconv-dev (>= 1.12-3),
	system-openssl-dev,
	qt4-%type_pkg[qca] (>= 4.4.0-1)
<<
GCC: 4.0

Source: http://delta.affinix.com/download/qca/2.0/qca-%v.tar.bz2
Source-MD5: 27ebdfbd9869d90dae078a6decd029f4
PatchFile: qca2.patch
PatchFile-MD5: a7fccb386d0011775c1884112619dfc7

CompileScript: <<
#!/bin/sh -ev

	QTDIR="%p/lib/qt4-%type_pkg[qca]"
	export PATH="$QTDIR/bin:$PATH"
	./configure --prefix="%p/opt/qca2/%type_pkg[qca]" --no-framework --release --no-separate-debug-info
	make
<<

InstallScript: <<
#!/bin/sh -ev

	make -j1 install INSTALL_ROOT="%d"
	QCALIBDIR="%p/opt/qca2/%type_pkg[qca]/lib"
	install_name_tool -id $QCALIBDIR/libqca.2.dylib "%d/$QCALIBDIR/libqca.%v.dylib"
	install_name_tool -change libqca.2.dylib $QCALIBDIR/libqca.2.dylib "%d/$QCALIBDIR/../bin/qcatool2"
	perl -pi -e 's,-lqca_debug,-lqca,g' %i/lib/qt4-%type_pkg[qca]/mkspecs/features/crypto.prf
	install -d -m 755 %i/share/doc/%N
	find examples -name Makefile -exec rm -rf {} \;
	mv apidocs/* examples %i/share/doc/%N/
<<

DocFiles: COPYING INSTALL README TODO

SplitOff: <<
	Package: %N-shlibs
	Description: Shared libraries for QCA
	Depends: <<
		qt4-%type_pkg[qca]-gui-shlibs (>= 4.4.0-1)
	<<
	DocFiles: COPYING
	Recommends: %N (>= %v-%r)
	Files: opt/qca2/%type_pkg[qca]/lib/libqca.2*.dylib
	Shlibs: %p/opt/qca2/%type_pkg[qca]/lib/libqca.2.dylib 2.0.0 %n (>= 2.0.2-1)
<<

DescDetail: <<
Taking a hint from the similarly-named Java Cryptography Architecture,
QCA aims to provide a straightforward and cross-platform crypto API,
using Qt datatypes and conventions.  QCA separates the API from the
implementation, using plugins known as Providers.  The advantage of
this model is to allow applications to avoid linking to or explicitly
depending on any particular cryptographic library.  This allows one
to easily change or upgrade crypto implementations without even
needing to recompile the application! 
<<
<<
