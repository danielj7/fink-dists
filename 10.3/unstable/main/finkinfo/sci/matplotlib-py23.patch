--- matplotlib/src/_tkagg.cpp.orig	Sun Apr 25 19:37:42 2004
+++ matplotlib/src/_tkagg.cpp	Sun Apr 25 19:38:12 2004
@@ -13,12 +13,7 @@
 #include <stdlib.h>
 
 extern "C" {
-#ifdef __APPLE__
-#  include <Tcl/tcl.h>
-#  include <Tk/tk.h>
-#else
 #  include <tk.h> 
-#endif
 };
 
 #include "_backend_agg.h"
--- matplotlib/setup.py.orig	Sun Apr 25 21:38:37 2004
+++ matplotlib/setup.py	Sun Apr 25 21:39:06 2004
@@ -29,14 +29,14 @@
 # Agg) to render to the GTK canvas.  The idea is to could use a single
 # high quality image renderer to render to all the GUI windows
 #BUILD_GTKAGG       = 0
-BUILD_GTKAGG       = 'auto'
+BUILD_GTKAGG       = 1
 
 
 # build TK GUI with Agg renderer ; requires Tkinter Python extension
 # and Tk includes
 # Use False or 0 if you don't want to build
 #BUILD_TKAGG        = 0
-BUILD_TKAGG        = 'auto'
+BUILD_TKAGG        = 1
 
 # build a small extension to manage the focus on win32 platforms.
 #BUILD_WINDOWING        = 0
@@ -89,19 +89,12 @@
 
     
 if BUILD_GTKAGG:
-    
-    try: import gtk
-    except ImportError: print 'GTKAgg requires pygtk'
-    else:
-        BUILD_AGG = 1
-        build_gtkagg(ext_modules, packages)
+    BUILD_AGG = 1
+    build_gtkagg(ext_modules, packages)
 
 if BUILD_TKAGG:
-    try: import Tkinter
-    except ImportError: print 'GTKAgg requires pygtk'
-    else:
-        BUILD_AGG = 1
-        build_tkagg(ext_modules, packages)
+    BUILD_AGG = 1
+    build_tkagg(ext_modules, packages)
 
 
 if BUILD_AGG:
--- matplotlib/setupext.py.orig	Mon May 24 05:30:12 2004
+++ matplotlib/setupext.py	Mon May 24 05:41:48 2004
@@ -36,7 +36,7 @@
     'win32'  : ['win32_static',],
     'linux2' : ['/usr/local', '/usr',],
     'linux'  : ['/usr/local', '/usr',],
-    'darwin' : ['/usr/local', '/usr', '/sw'],
+    'darwin' : ['/usr/X11R6'],
     'sunos5' : [os.getenv('MPLIB_BASE') or '/usr/local',],
 }
 
@@ -110,6 +110,9 @@
         p = os.path.join(d, 'freetype2/lib')
         if os.path.exists(p): module.library_dirs.append(p)
             
+    module.include_dirs.append('@PREFIX@/include')
+    module.library_dirs.append('@PREFIX@/lib')
+
     if sys.platform == 'win32':
         module.libraries.append('gw32c')
 
@@ -179,9 +182,10 @@
 	print "Using default library and include directories for Tcl and Tk because a"
 	print "Tk window failed to open.  You may need to define DISPLAY for Tk to work"
 	print "so that setup can determine where your libraries are located."
-	o.tcl_lib = "/usr/local/lib"
-	o.tcl_inc = "/usr/local/include"
-	o.tk_lib = "/usr/local/lib"
+	o.tcl_lib = "@PREFIX@/lib"
+	o.tcl_inc = "@PREFIX@include"
+	o.tk_lib = "@PREFIX@/lib"
+	o.tk_inc = "@PREFIX@/lib"
 	o.tkv = ""
     else:
 	tk.withdraw()
@@ -210,7 +214,7 @@
         module.include_dirs.extend(['win32_static/include/tcl'])
         module.library_dirs.extend(['C:/Python23/dlls'])
         module.libraries.extend(['tk84', 'tcl84'])
-    elif sys.platform == 'darwin':
-        module.extra_link_args.extend(['-framework','Tcl'])
-        module.extra_link_args.extend(['-framework','Tk'])
+#   elif sys.platform == 'darwin':
+#       module.extra_link_args.extend(['-framework','Tcl'])
+#       module.extra_link_args.extend(['-framework','Tk'])
     else:
