Info2: <<
Package: sbcl-%type_pkg[sbcl]-maxima
Architecture: powerpc
Type: sbcl (1.0.49)
Version: 1.0.49
Revision: 1
License: BSD
Description: ANSI Common Lisp implementation
Maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>
# Based on sbcl-powerpc.info from David Fang <fangism@users.sourceforge.net>

# NOTE: The version of the bootstrap binary does not automatically
# change when the version field is updated.  CompileScript and Source2
# need to be updated by hand when moving to a new version of the
# bootstap binary

BuildDepends: texinfo (>= 4.6), fink (>= 0.24.12)

Recommends: gnupg | gnupg-idea | gnupg-testing

Source: mirror:sourceforge:sbcl/sbcl-%v-source.tar.bz2
Source2: mirror:sourceforge:sbcl/sbcl-1.0.2-powerpc-darwin-binary.tar.bz2
Source-MD5: 8d15c6af6388fcd9efbd13f301b7ba33
Source2-MD5: 5135c1e202ee1351263d0c2c015f17b6
SourceDirectory: sbcl-%v

CompileScript: <<
  sh make.sh "../sbcl-1.0.2-powerpc-darwin/src/runtime/sbcl \
     	      --core ../sbcl-1.0.2-powerpc-darwin/output/sbcl.core \
              --disable-debugger --no-sysinit --no-userinit"
  cd doc/manual ; make html
<<

InstallScript: <<
  #!/bin/sh -ev
  find %b -type d -name CVS -depth -exec rm -rf {} \;
  find %b -type f -name .cvsignore -depth -exec rm -f {} \;
  find %b -type f -name a.out -depth -exec rm -f {} \;
  unset SBCL_HOME ; INSTALL_ROOT=%i/opt/sbcl-%type_raw[sbcl] sh install.sh

  cd %i/opt/sbcl-%type_raw[sbcl]
  mv bin/sbcl lib/sbcl/sbcl
  echo '#! /bin/sh' > bin/sbcl
  echo 'SBCL_HOME=%p/opt/sbcl-%type_raw[sbcl]/lib/sbcl/ exec %p/opt/sbcl-%type_raw[sbcl]/lib/sbcl/sbcl "$@"' >> bin/sbcl
  chmod 755 bin/sbcl
  rm -rf share/info share/man
<<

Homepage: http://www.sbcl.org/

DescDetail: <<
Steel Bank Common Lisp is an open source development system for ANSI
Common Lisp.  It provides an interactive environment including an
integrated native compiler, interpreter, and debugger.  Several
extensions, such as a foreign function interface, and support for Unix
(POSIX) system calls are also included.  SBCL is derived from CMU CL.
<<

DescPackaging: <<
Installs in a versioned private directory to avoid dependency deadlocks
when updating maxima.

Keep sbcl Type in sync with that in maxima.info

Doesn't build info files, because of overlap with normal 'sbcl' package.

Also leaves out manpages.

Doesn't use threading from 'sbcl' because maxima doesn't like it.
<<

DescPort: <<
Uses a pre-compiled SBCL binary for bootstrapping.

At one point, the HTML documentation for this package included a file
whose name was so long that it was killing dpkg.  Thus, the following
bit used to be in the InstallScript section, but as of version 1.0.44,
it seems not to be needed anymore.  I include this because upstream
may reintroduce the problem, and we may need to reintroduce our solution.

# Due to a limitation with dpkg, we need to kill the following file,
# whose name is simply too long.  See 
#
#  http://article.gmane.org/gmane.os.macosx.fink.devel/18731
#
# to learn more about the strangeness that can ensue because of
# this limitation of dpkg.

# rm %i/share/doc/sbcl/html/sbcl/Method-sb_002dbsd_002dsockets_003asocket_002dmake_002dstream-_0028_0028socket-socket_0029-_0026key-input-output-_0028element_002dtype-_0027character_0029-_0028buffering-full_0029-_0028external_002dformat-default_0029-timeout_0029.html
<<

DescUsage: <<
NOTE:  this package installs in a version-specific private directory

%p/opt/sbcl-%type_raw[sbcl]

because of upgrade issues involving maxima.  You will either need to 
add %p/opt/sbcl-%type_raw[sbcl]/bin to your PATH or run the executables
with full paths.
<<
<<