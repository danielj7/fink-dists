diff -Naur Python-2.2.1.old/Lib/distutils/util.py Python-2.2.1/Lib/distutils/util.py
--- Python-2.2.1.old/Lib/distutils/util.py	Fri Dec  7 05:51:35 2001
+++ Python-2.2.1/Lib/distutils/util.py	Wed Aug  7 21:56:01 2002
@@ -41,6 +41,11 @@
     # Try to distinguish various flavours of Unix
 
     (osname, host, release, version, machine) = os.uname()
+    
+    # On MacOS X, remove space from machine name
+
+    if machine == "Power Macintosh":
+       machine = "PowerMacintosh"
 
     # Convert the OS name to lowercase and remove '/' characters
     # (to accommodate BSD/OS)
diff -Naur Python-2.2.1.old/Makefile.pre.in Python-2.2.1/Makefile.pre.in
--- Python-2.2.1.old/Makefile.pre.in	Tue Mar  5 22:52:29 2002
+++ Python-2.2.1/Makefile.pre.in	Wed Aug  7 21:56:01 2002
@@ -56,7 +56,7 @@
 OPT=		@OPT@
 DEFS=		@DEFS@
 CFLAGS=		$(OPT)
-CPPFLAGS=	-I. -I$(srcdir)/Include $(DEFS)
+CPPFLAGS=	-I. -I<PREFIX>/include -I$(srcdir)/Include $(DEFS)
 LDFLAGS=	@LDFLAGS@
 LDLAST=		@LDLAST@
 SGI_ABI=	@SGI_ABI@
@@ -407,7 +407,7 @@
 		-$(PGEN) $(GRAMMAR_INPUT) $(GRAMMAR_H) $(GRAMMAR_C)
 
 $(PGEN):	$(PGENOBJS)
-		$(CC) $(OPT) $(PGENOBJS) $(LIBS) -o $(PGEN)
+		$(CC) $(OPT) $(PGENOBJS) $(LDFLAGS) $(LIBS) -o $(PGEN)
 
 Parser/grammar.o:	$(srcdir)/Parser/grammar.c \
 				$(srcdir)/Include/token.h \
diff -Naur Python-2.2.1.old/Misc/setuid-prog.c Python-2.2.1/Misc/setuid-prog.c
--- Python-2.2.1.old/Misc/setuid-prog.c	Fri Sep 11 05:18:09 1998
+++ Python-2.2.1/Misc/setuid-prog.c	Wed Aug  7 21:56:01 2002
@@ -70,6 +70,12 @@
 #define environ _environ
 #endif
 
+#if defined(__APPLE__)
+# include <sys/time.h>
+# include <crt_externs.h>
+# define environ (*_NSGetEnviron())
+#endif /* __APPLE__ */
+
 /* don't change def_IFS */
 char def_IFS[] = "IFS= \t\n";
 /* you may want to change def_PATH, but you should really change it in */
diff -Naur Python-2.2.1.old/Modules/posixmodule.c Python-2.2.1/Modules/posixmodule.c
--- Python-2.2.1.old/Modules/posixmodule.c	Wed Mar 13 06:38:31 2002
+++ Python-2.2.1/Modules/posixmodule.c	Wed Aug  7 21:56:01 2002
@@ -19,6 +19,11 @@
 #include "Python.h"
 #include "structseq.h"
 
+#if defined(__APPLE__)
+# include <sys/time.h>
+# include <crt_externs.h>
+# define environ (*_NSGetEnviron())
+#endif /* __APPLE__ */
 #if defined(PYOS_OS2)
 #define  INCL_DOS
 #define  INCL_DOSERRORS
--- Python-2.2.2.orig/configure	Fri Oct 11 00:26:41 2002
+++ Python-2.2.2/configure	Thu Feb  6 21:28:19 2003
@@ -3207,8 +3207,8 @@
 			LDSHARED="$LDSHARED "'-framework $(PYTHONFRAMEWORK)'
 		else
 			# No framework, use the Python app as bundle-loader
-			BLDSHARED="$LDSHARED "'-bundle_loader $(BUILDPYTHON)'
-			LDSHARED="$LDSHARED "'-bundle_loader $(BINDIR)/$(PYTHON)'
+			BLDSHARED="$LDSHARED "'-flat_namespace -undefined suppress'
+			LDSHARED="$LDSHARED "'-flat_namespace -undefined suppress'
 		fi ;;
 	Linux*) LDSHARED='$(CC) -shared';;
 	dgux*) LDSHARED="ld -G";;
diff -ru Python-2.2.2/setup.py Python-2.2.2-patched/setup.py
--- Python-2.2.2/setup.py	Wed Oct  9 20:59:16 2002
+++ Python-2.2.2-patched/setup.py	Sat Mar 22 21:29:24 2003
@@ -216,6 +216,12 @@
         if '/usr/local/include' not in self.compiler.include_dirs:
             self.compiler.include_dirs.insert(0, '/usr/local/include' )
 
+        # Ensure that <PREFIX> is always used
+        if '<PREFIX>/lib' not in self.compiler.library_dirs:
+            self.compiler.library_dirs.insert(0, '<PREFIX>/lib')
+        if '<PREFIX>/include' not in self.compiler.include_dirs:
+            self.compiler.include_dirs.insert(0, '<PREFIX>/include' )
+
         try:
             have_unicode = unicode
         except NameError:
@@ -372,6 +378,9 @@
                                       '/usr/contrib/ssl/lib/'
                                      ] )
 
+        ssl_incs = None
+        ssl_libs = None
+
         if ssl_incs is not None:
             krb5_h = find_file('krb5.h', inc_dirs,
                                ['/usr/kerberos/include'])
@@ -690,7 +699,7 @@
         self.extensions.extend(exts)
 
         # Call the method for detecting whether _tkinter can be compiled
-        self.detect_tkinter(inc_dirs, lib_dirs)
+#       self.detect_tkinter(inc_dirs, lib_dirs)
 
 
     def detect_tkinter(self, inc_dirs, lib_dirs):
