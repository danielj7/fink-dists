diff -Nurd oldpyqt/configure.py newpyqt/configure.py
--- oldpyqt/configure.py	2008-02-16 12:26:33.000000000 -0500
+++ newpyqt/configure.py	2008-02-20 00:17:00.000000000 -0500
@@ -726,13 +726,12 @@
                 from distutils.sysconfig import get_config_vars
                 ducfg = get_config_vars()
 
-                if sys.platform == "darwin":
+#                if sys.platform == "darwin":
                     # We need to work out how to specify the right framework
                     # version.
-                    link = "-framework Python"
-                elif ("--enable-shared" in ducfg.get("CONFIG_ARGS", "") and
-                      glob.glob("%s/lib/libpython%d.%d*" % (ducfg["exec_prefix"], py_major, py_minor))):
-                    lib_dir_flag = quote("-L%s/lib" % ducfg["exec_prefix"])
+#                    link = "-framework Python"
+                if 1:
+                    lib_dir_flag = quote("-L%s" % sipcfg.py_lib_dir)
                     link = "%s -lpython%d.%d" % (lib_dir_flag, py_major, py_minor)
                 else:
                     sipconfig.inform("Qt Designer plugin disabled because Python library is static")
@@ -798,8 +797,8 @@
 
     sipconfig.inform("Qt v%s %sis being used." % (sipconfig.version_to_string(qt_version), edstr))
 
-    if sys.platform == "darwin" and qt_framework:
-        sipconfig.inform("Qt is built as a framework.")
+  #  if sys.platform == "darwin" and qt_framework:
+  #      sipconfig.inform("Qt is built as a framework.")
 
     sipconfig.inform("SIP %s is being used." % sipcfg.sip_version_str)
     sipconfig.inform("The Qt header files are in %s." % qt_incdir)
@@ -1096,7 +1095,7 @@
         if "__USE_WS_X11__" in sipcfg.build_macros()["DEFINES"]:
             plattag = "WS_X11"
         else:
-            plattag = "WS_MACX"
+            plattag = "WS_X11"
     else:
         plattag = "WS_X11"
 
@@ -1402,10 +1401,10 @@
         sipconfig.error("PyQt v4 requires Qt v4.1.0 or later.")
 
     # Work out how Qt was built on MacOS.
-    if sys.platform == "darwin":
-        if os.access(os.path.join(qt_libdir, "QtCore.framework"), os.F_OK):
-            global qt_framework
-            qt_framework = 1
+#    if sys.platform == "darwin":
+#        if os.access(os.path.join(qt_libdir, "QtCore.framework"), os.F_OK):
+#            global qt_framework
+#            qt_framework = 1
 
     # Get the Makefile generator.
     generator = macros["MAKEFILE_GENERATOR"]
@@ -1459,8 +1458,8 @@
     if sys.platform == "win32":
         exe_file = os.path.join("release", app + ".exe")
         make_target = " release"
-    elif sys.platform == "darwin":
-        exe_file = os.path.join(app + ".app", "Contents", "MacOS", app)
+#    elif sys.platform == "darwin":
+#        exe_file = os.path.join(app + ".app", "Contents", "MacOS", app)
     else:
         exe_file = os.path.join(".", app)
