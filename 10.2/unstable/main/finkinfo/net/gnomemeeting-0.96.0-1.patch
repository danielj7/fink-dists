diff -Naur gnomemeeting-0.96.0.old/configure gnomemeeting-0.96.0.new/configure
--- gnomemeeting-0.96.0.old/configure	Sun Jan 26 09:30:03 2003
+++ gnomemeeting-0.96.0.new/configure	Tue Feb 11 12:17:57 2003
@@ -9447,9 +9447,21 @@
 echo "${ECHO_T}yes" >&6
     gm_platform="freebsd"
     ;;
+
+  darwin* )
+    H323_CFLAGS="-DSPEEX_CODEC -DP_MACOSX -DP_SSL -DP_PTHREADS  $ARCH_H323_CFLAGS -O2 -Wall -DNO_LONG_DOUBLE -DPHAS_TEMPLATES -DHAS_ESD -DSTATIC_LIBS_USED -multiply_defined suppress"
+    H323_LIBS="-multiply_defined suppress -lh323_Darwin_ppc_r_s -lpt_Darwin_ppc_r_s -lssl -lcrypto -lX11"
+    LIBPT_FILE="libpt_Darwin_ppc_r_s.a"
+    LIBOPENH323_FILE="libh323_Darwin_ppc_r_s.a"
+    HAS_SPEEX="enabled"
+    echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6
+    gm_platform="macosx"
+    ;;
+
   *)
-    { { echo "$as_me:$LINENO: error: \"Only Linux and FreeBSD are supported. Please contact the author. You can add more OS types.\"" >&5
-echo "$as_me: error: \"Only Linux and FreeBSD are supported. Please contact the author. You can add more OS types.\"" >&2;}
+    { { echo "$as_me:$LINENO: error: \"Only Linux FreeBSD and Mac OS X are supported. Please contact the author. You can add more OS types.\"" >&5
+echo "$as_me: error: \"Only Linux FreeBSD and Mac OS X are supported. Please contact the author. You can add more OS types.\"" >&2;}
    { (exit 1); exit 1; }; }
     ;;
 esac
@@ -9685,8 +9697,16 @@
 CPPFLAGS="$CPPFLAGS_save"
 
 
-SDL_VERSION=1.2.4
-SDL_HAS_SDL=
+
+if test ${gm_platform} = "macosx" ; then
+	HAS_SDL="disabled"
+        { echo "$as_me:$LINENO: WARNING: *** SDL cannot be used on Mac OS X. Fullscreen mode will be disabled" >&5
+echo "$as_me: WARNING: *** SDL cannot be used on Mac OS X. Fullscreen mode will be disabled" >&2;}
+
+else
+
+	SDL_VERSION=1.2.4
+	SDL_HAS_SDL=
 
 # Check whether --with-sdl-prefix or --without-sdl-prefix was given.
 if test "${with_sdl_prefix+set}" = set; then
@@ -9959,17 +9979,17 @@
 
   rm -f conf.sdltest
 
-SDL_CFLAGS="$SDL_CFLAGS $SDL_HAS_SDL"
-SDL_LDFLAGS="$LIBS $SDL_LIBS"
+	SDL_CFLAGS="$SDL_CFLAGS $SDL_HAS_SDL"
+	SDL_LDFLAGS="$LIBS $SDL_LIBS"
 
-if test "x${SDL_HAS_SDL}" = "x-DHAS_SDL" ; then
-	HAS_SDL="enabled"
-else
-	HAS_SDL="disabled"
+	if test "x${SDL_HAS_SDL}" = "x-DHAS_SDL" ; then
+		HAS_SDL="enabled"
+	else
+		HAS_SDL="disabled"
+	fi
 fi
 
 
-
 # Check whether --with-openssl-includes or --without-openssl-includes was given.
 if test "${with_openssl_includes+set}" = set; then
   withval="$with_openssl_includes"
@@ -10147,6 +10167,33 @@
   openssl_libs="no"
 fi
 
+        if test "x${openssl_libs}" = "xno"; then
+                as_ac_File=`echo "ac_cv_file_${with_openssl_libs}/libssl.a" | $as_tr_sh`
+echo "$as_me:$LINENO: checking for ${with_openssl_libs}/libssl.a" >&5
+echo $ECHO_N "checking for ${with_openssl_libs}/libssl.a... $ECHO_C" >&6
+if eval "test \"\${$as_ac_File+set}\" = set"; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  test "$cross_compiling" = yes &&
+  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
+echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
+   { (exit 1); exit 1; }; }
+if test -r "${with_openssl_libs}/libssl.a"; then
+  eval "$as_ac_File=yes"
+else
+  eval "$as_ac_File=no"
+fi
+fi
+echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
+echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
+if test `eval echo '${'$as_ac_File'}'` = yes; then
+  openssl_libs="yes"
+else
+  openssl_libs="no"
+fi
+
+        fi
+
         if test "x${openssl_libs}" != "xno"; then
                 msg_openssl="yes"
                 OPENSSL_LDFLAGS="-L${with_openssl_libs} ${SSL_LIBS}"
@@ -10343,6 +10390,32 @@
   openldap_libs="no"
 fi
 
+        if test "x${openldap_libs}" = "xno"; then
+                as_ac_File=`echo "ac_cv_file_${with_openldap_libs}/libldap.a" | $as_tr_sh`
+echo "$as_me:$LINENO: checking for ${with_openldap_libs}/libldap.a" >&5
+echo $ECHO_N "checking for ${with_openldap_libs}/libldap.a... $ECHO_C" >&6
+if eval "test \"\${$as_ac_File+set}\" = set"; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  test "$cross_compiling" = yes &&
+  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
+echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
+   { (exit 1); exit 1; }; }
+if test -r "${with_openldap_libs}/libldap.a"; then
+  eval "$as_ac_File=yes"
+else
+  eval "$as_ac_File=no"
+fi
+fi
+echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
+echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
+if test `eval echo '${'$as_ac_File'}'` = yes; then
+  openldap_libs="yes"
+else
+  openldap_libs="no"
+fi
+
+        fi
 
         if test "x${openldap_libs}" != "xno"; then
                 msg_openldap="yes"
 
diff -Naur gnomemeeting-0.96.0.old/configure.in gnomemeeting-0.96.0.new/configure.in
--- gnomemeeting-0.96.0.old/configure.in	Mon Jan 20 14:13:50 2003
+++ gnomemeeting-0.96.0.new/configure.in	Tue Feb 11 12:17:37 2003
@@ -126,8 +126,19 @@
     AC_MSG_RESULT([yes])
     gm_platform="freebsd"
     ;;
+
+  darwin* )
+    H323_CFLAGS="-DSPEEX_CODEC -DP_MACOSX -DP_SSL -DP_PTHREADS  $ARCH_H323_CFLAGS -O2 -Wall -DNO_LONG_DOUBLE -DPHAS_TEMPLATES -DHAS_ESD -DSTATIC_LIBS_USED -multiply_defined suppress"
+    H323_LIBS="-multiply_defined suppress -lh323_Darwin_ppc_r_s -lpt_Darwin_ppc_r_s -lssl -lcrypto -lX11"
+    LIBPT_FILE="libpt_Darwin_ppc_r_s.a"
+    LIBOPENH323_FILE="libh323_Darwin_ppc_r_s.a"
+    HAS_SPEEX="enabled"
+    AC_MSG_RESULT([yes])
+    gm_platform="macosx"
+    ;;
+
   *)
-    AC_MSG_ERROR("Only Linux and FreeBSD are supported. Please contact the author. You can add more OS types.")
+    AC_MSG_ERROR("Only Linux FreeBSD and Mac OS X are supported. Please contact the author. You can add more OS types.")
     ;;
 esac
 
@@ -237,20 +248,28 @@
 dnl ###########################################################################
 dnl   Check for SDL
 dnl ###########################################################################
-SDL_VERSION=1.2.4
-SDL_HAS_SDL=
-AM_PATH_SDL($SDL_VERSION,
-            SDL_HAS_SDL="-DHAS_SDL",
-	    AC_MSG_WARN([*** SDL version $SDL_VERSION not found!. Fullscreen mode will be disabled]))
-SDL_CFLAGS="$SDL_CFLAGS $SDL_HAS_SDL" 
-SDL_LDFLAGS="$LIBS $SDL_LIBS"
-
-if test "x${SDL_HAS_SDL}" = "x-DHAS_SDL" ; then
-	HAS_SDL="enabled"
-else  
+
+dnl SDL does not work on Mac OS X yet, so disable it
+if test ${gm_platform} = "macosx" ; then
 	HAS_SDL="disabled"
-fi
+        AC_MSG_WARN([*** SDL cannot be used on Mac OS X. Fullscreen mode will be disabled])
+
+else
 
+	SDL_VERSION=1.2.4
+	SDL_HAS_SDL=
+	AM_PATH_SDL($SDL_VERSION,
+	            SDL_HAS_SDL="-DHAS_SDL",
+		    AC_MSG_WARN([*** SDL version $SDL_VERSION not found!. Fullscreen mode will be disabled]))
+	SDL_CFLAGS="$SDL_CFLAGS $SDL_HAS_SDL" 
+	SDL_LDFLAGS="$LIBS $SDL_LIBS"
+
+	if test "x${SDL_HAS_SDL}" = "x-DHAS_SDL" ; then
+		HAS_SDL="enabled"
+	else  
+		HAS_SDL="disabled"
+	fi
+fi
 
 dnl ###########################################################################
 dnl OpenSSL
@@ -285,6 +304,10 @@
 
 if test "x${with_openssl_libs}" != "xno" -a "x${have_openssl_includes}" != "xno"; then
         AC_CHECK_FILE(${with_openssl_libs}/libssl.so, openssl_libs="yes", openssl_libs="no")
+        if test "x${openssl_libs}" = "xno"; then 
+                AC_CHECK_FILE(${with_openssl_libs}/libssl.a, openssl_libs="yes", openssl_libs="no")
+        fi
+
         if test "x${openssl_libs}" != "xno"; then
                 msg_openssl="yes"
                 OPENSSL_LDFLAGS="-L${with_openssl_libs} ${SSL_LIBS}"
@@ -332,6 +355,9 @@
                                                                                
 if test "x${with_openldap_libs}" != "xno" -a "x${have_openldap_includes}" != "xno"; then
         AC_CHECK_FILE(${with_openldap_libs}/libldap.so, openldap_libs="yes", openldap_libs="no")
+        if test "x${openldap_libs}" = "xno"; then
+                AC_CHECK_FILE(${with_openldap_libs}/libldap.a, openldap_libs="yes", openldap_libs="no")
+        fi
 
         if test "x${openldap_libs}" != "xno"; then                             
                 msg_openldap="yes"                                             
@@ -388,7 +414,7 @@
 dnl #########################################################################
 dnl  Support for internationalization
 dnl ########################################################################
-ALL_LINGUAS="az ca cs da de el es fr gl hu it ja lv nl no pl pt pt_BR ru sk sv ta tr vi wa zh_CN zh_TW"
+ALL_LINGUAS="am az ca cs da de el es fr gl hu it ja lv nl no pl pt pt_BR ru sk sv ta tr vi wa zh_CN zh_TW"
 
 GETTEXT_PACKAGE=gnomemeeting
 AC_SUBST(GETTEXT_PACKAGE)
diff -Naur gnomemeeting-0.96.0.old/src/main_window.cpp gnomemeeting-0.96.0.new/src/main_window.cpp
--- gnomemeeting-0.96.0.old/src/main_window.cpp	Thu Jan 23 07:15:29 2003
+++ gnomemeeting-0.96.0.new/src/main_window.cpp	Tue Feb 11 12:24:58 2003
@@ -78,7 +78,7 @@
 #include "../pixmaps/contrast.xpm"
 #include "../pixmaps/color.xpm"
 
-#ifdef __FreeBSD__
+#if defined(P_FREEBSD) || defined (P_MACOSX)
 #include <libintl.h>
 #endif
 
@@ -1052,9 +1052,12 @@
     {"text/plain", GTK_TARGET_SAME_APP, 0}
   };
 
-  
-  /* Prevents ESD to spawn */
+ 
+#if !defined(HAS_ESD)
+  /* If we are not using ESD (ie we are using OSS or ALSA, then
+     prevent ESD from spawning */
   setenv ("ESD_NO_SPAWN", "1", 1);
+#endif
 
 
   /* Ignore SIGPIPE */
diff -Naur gnomemeeting-0.96.0.old/src/sound_handling.cpp gnomemeeting-0.96.0.new/src/sound_handling.cpp
--- gnomemeeting-0.96.0.old/src/sound_handling.cpp	Thu Jan 23 06:51:13 2003
+++ gnomemeeting-0.96.0.new/src/sound_handling.cpp	Tue Feb 11 12:26:25 2003
@@ -75,6 +75,10 @@
 void 
 gnomemeeting_sound_daemons_suspend (void)
 {
+
+#if defined(HAS_ESD)
+  return;
+#else
   int esd_client = 0;
   
   /* Put ESD into standby mode */
@@ -84,12 +88,16 @@
     PTRACE (0, "Failed to resume ESD");
       
   esd_close (esd_client);
+#endif
 }
 
 
 void 
 gnomemeeting_sound_daemons_resume (void)
 {
+#if defined(HAS_ESD)
+  return;
+#else
   int esd_client = 0;
 
   /* Put ESD into normal mode */
@@ -99,16 +107,17 @@
     PTRACE (0, "Failed to resume ESD");
 
   esd_close (esd_client);
+#endif
 }
 
 
 void 
 gnomemeeting_mixers_mic_select (void)
 {
+#ifndef P_MACOSX
   int rcsrc = 0;
   int mixerfd = -1;                                                            
   int cpt = -1;
-                                                                       
   PString mixer_name = PString ("/dev/mixer");
   PString mixer = mixer_name;
 
@@ -130,11 +139,15 @@
       close (mixerfd);
     }
   }
+#else
+  return;
+#endif
 }
 
 
 int gnomemeeting_get_mixer_volume (char *mixer, int source)
 {
+#ifndef P_MACOSX
   int vol = 0;
   int mixerfd = -1;
   
@@ -154,11 +167,15 @@
 
   close (mixerfd);
   return vol;
+#else
+  return 0;
+#endif
 }
 
 
 void gnomemeeting_set_mixer_volume (char *mixer, int source, int vol)
 {
+#ifndef P_MACOSX
   int mixerfd = -1;
   
   if (!mixer)
@@ -176,6 +193,9 @@
     ioctl (mixerfd, MIXER_WRITE (SOUND_MIXER_MIC), &vol);
   
   close (mixerfd);
+#else
+  return;
+#endif
 }
 
 
