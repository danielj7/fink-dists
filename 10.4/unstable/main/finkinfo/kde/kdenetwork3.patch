
--- kdenetwork-3.5.8/kopete/libkopete/avdevice/videocontrol.h	2007-10-08 05:49:07.000000000 -0400
+++ kdenetwork-3.5.8-new/kopete/libkopete/avdevice/videocontrol.h	2007-10-15 09:59:42.000000000 -0400
@@ -20,15 +20,15 @@
 #ifndef KOPETE_AVVIDEOCONTROL_H
 #define KOPETE_AVVIDEOCONTROL_H
 
-#include <asm/types.h>
-#undef __STRICT_ANSI__
-#ifndef __u64 //required by videodev.h
-#define __u64 unsigned long long
-#endif // __u64
-
-#ifndef __s64 //required by videodev.h
-#define __s64 long long
-#endif // __s64
+#include <stdint.h>
+#include <sys/types.h>
+
+typedef u_int32_t __u32;
+typedef int32_t __s32;
+/*
+typedef u_int64_t __u64;
+typedef int64_t __s64;
+*/
 
 #include <qstring.h>
 #include <kdebug.h>
--- kdenetwork-3.5.8/ktalkd/ktalkd/talkd.cpp	2006-03-17 05:12:34.000000000 -0500
+++ kdenetwork-3.5.8-new/ktalkd/ktalkd/talkd.cpp	2007-10-15 07:56:22.000000000 -0400
@@ -183,7 +183,7 @@
 	struct hostent *hp;
 	struct sockaddr_in sn;
 	int cc, i, ok;
-	socklen_t addrlen;
+	kde_socklen_t addrlen;
 	int ret_value = PROC_REQ_OK; /* return value from process_request */
 
 	addrlen = sizeof(sn);
@@ -347,7 +347,7 @@
 main(int argc, char *argv[])
 {
 	struct sockaddr_in sn;
-	socklen_t sz = sizeof(sn);
+	kde_socklen_t sz = sizeof(sn);
 	int do_debug=0, do_badpackets=0, ch;
 
 	new KInstance("ktalkd"); // for KConfig and friends
--- kdenetwork-3.5.8/lanbrowsing/lisa/netmanager.cpp	2005-09-10 04:20:14.000000000 -0400
+++ kdenetwork-3.5.8-new/lanbrowsing/lisa/netmanager.cpp	2007-10-15 07:56:22.000000000 -0400
@@ -413,7 +413,7 @@
          {
             mdcerr<<"NetManager::run: on m_listenFD"<<std::endl;
             struct sockaddr_in clientAddress;
-            socklen_t clilen(sizeof(clientAddress));
+            kde_socklen_t clilen(sizeof(clientAddress));
 //            bzero((char*)&clientAddress, clilen);
             memset((void*)&clientAddress,0,sizeof(clientAddress));
             int connectionFD=::accept(m_listenFD,(struct sockaddr *) &clientAddress, &clilen);
@@ -501,7 +501,7 @@
    
    mdcerr<<"NetManager::answerBroadcast: received BC"<<std::endl;
    struct sockaddr_in sAddr;
-   socklen_t length(sizeof(sockaddr_in));
+   kde_socklen_t length(sizeof(sockaddr_in));
    char buf[1024];
    int result=recvfrom(m_bcFD, (char*)buf, 1024, 0, (sockaddr*)&sAddr,&length);
    mdcerr<<"NetManager::answerBroadcast: received successfully"<<std::endl;
@@ -936,7 +936,7 @@
    sAddr.sin_addr.s_addr=m_broadcastAddress;
    sAddr.sin_family=AF_INET;
    sAddr.sin_port=htons(m_basePort);
-   socklen_t length(sizeof(sockaddr_in));
+   kde_socklen_t length(sizeof(sockaddr_in));
    mdcerr<<" NetManager::findServerServer: broadcasting to: "
    <<std::ios::hex<<m_broadcastAddress<<std::ios::dec<<std::endl;
    
--- kdenetwork-3.5.8/lanbrowsing/lisa/netscanner.cpp	2006-07-22 04:11:31.000000000 -0400
+++ kdenetwork-3.5.8-new/lanbrowsing/lisa/netscanner.cpp	2007-10-15 07:56:22.000000000 -0400
@@ -550,7 +550,7 @@
          select(0,0,0,0,&tv1);
          //now read the answers, hopefully
          struct sockaddr_in fromAddr;
-         socklen_t length(sizeof(fromAddr));
+         kde_socklen_t length(sizeof(fromAddr));
          int received(0);
 
          fd_set sockFDset;
