Info2: <<

Package: libapache2-mod-wsgi-py%type_pkg[python]
Version: 2.3
Revision: 1
Distribution: 10.5
Type: python ( 2.6 )
Description: Run WSGI python apps through apache2
License: OSI-Approved
Homepage: http://modwsgi.org/
Maintainer: Kurt Schwehr <goatbar@users.sourceforge.net>

Depends: python%type_pkg[python], apache2 (>= 2.2.9-2)
BuildDepends: apache2-dev (>= 2.2.9-2), libapr.0-dev, libaprutil.0-dev

Source: http://modwsgi.googlecode.com/files/mod_wsgi-%v.tar.gz
Source-MD5: c686e1c498dbe5753fe491c3cf61cff4

#PatchFile: %{ni}.patch
#PatchFile-MD5: db33801579755c374dab950e54b2894b

CompileScript: <<
#!/bin/sh -ex
./configure --prefix='%p' --with-apxs='%p/bin/apxs2' \
    --with-python='%p/bin/python%type_raw[python]' \
make
<<

DocFiles: LICENCE README

InstallScript: <<
#!/bin/sh -ex
make DESTDIR='%d' install
mv '%i/lib/apache2/modules/mod_wsgi.so' '%i/lib/apache2/modules/mod_wsgi%type_raw[python].so'
(
cat <<EOF
LoadModule wsgi_module %p/lib/apache2/modules/mod_wsgi%type_raw[python].so
EOF
) >'wsgi%type_raw[python].load'
chmod 600 'wsgi%type_raw[python].load'
install -d -m 700 '%i/etc/apache2/mods-available'
cp 'wsgi%type_raw[python].load' '%i/etc/apache2/mods-available'
chmod -R go-rstwx,a+Xr '%i/etc/apache2/mods-available'
<<


DescDetail: <<
The aim of mod_wsgi is to implement a simple to use Apache module
which can host any Python application which supports the Python WSGI
interface. The module would be suitable for use in hosting high
performance production web sites, as well as your average self managed
personal sites running on web hosting services.
<<
DescPort: <<
Modeled after libapache2-mod-python-py.info.
<<

DescUsage: <<
sudo a2enmod wsgi%type_raw[python].load'
sudo apache2ctl

In a web directory, make a .htaccess file with this line:
AddHandler wsgi-script .wsgi

Then try out a test python script:
def application(environ, start_response):
    status = '200 OK' 
    output = 'Hello World from a WSGI app!'

    response_headers = [('Content-type', 'text/plain'),
                        ('Content-Length', str(len(output)))]
    start_response(status, response_headers)

    return [output]

<<


<<
