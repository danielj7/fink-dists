diff -ru ttf2eot-0.0.2-2.orig/ttf2eot.cpp ttf2eot-0.0.2-2/ttf2eot.cpp
--- ttf2eot-0.0.2-2.orig/ttf2eot.cpp	2009-04-30 05:18:46.000000000 -0400
+++ ttf2eot-0.0.2-2/ttf2eot.cpp	2009-08-30 13:06:47.000000000 -0400
@@ -5,6 +5,7 @@
 #include <assert.h>
 #include <limits.h>
 #include <string.h>
+#include <errno.h>
 
 #include <vector>
 
@@ -56,13 +57,13 @@
     } else {
         input = fopen(argv[1], "rb");
         if (input == NULL) {
-            fprintf(stderr, "could not open input file %s, %m\n", argv[1]);
+            fprintf(stderr, "could not open input file %s, %s\n", argv[1], strerror (errno));
             return 1;
         }
     }
 
     if ((fontData = (unsigned char *) malloc(fontSize = kFontInitSize)) == NULL) {
-        fprintf(stderr, "Allocation failure, %m\n");
+        fprintf(stderr, "Allocation failure, %s\n", strerror (errno));
         return 1;
     }
 
@@ -71,11 +72,11 @@
         if (ret && fontSize <= SIZE_MAX / 2) {
             fontOff += ret;
             if ((fontData = (unsigned char *) realloc(fontData, fontSize *= 2)) == NULL) {
-                fprintf(stderr, "Allocation failure, %m\n");
+                fprintf(stderr, "Allocation failure, %s\n", strerror (errno));
                 return 1;
             }
         } else if (ret) {
-            fprintf(stderr, "Too much data, %m\n");
+            fprintf(stderr, "Too much data, %s\n", strerror (errno));
             return 1;
         } else {
             fontData = (unsigned char *) realloc(fontData, fontSize = fontOff);
@@ -88,7 +89,7 @@
         fwrite(fontData, fontSize, 1, stdout);
         return 0;
     } else {
-        fprintf(stderr, "unknown error parsing input font, %m\n");
+        fprintf(stderr, "unknown error parsing input font, %s\n", strerror (errno));
         return 1;
     }
 }
