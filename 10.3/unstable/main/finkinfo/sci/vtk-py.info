Info2: <<
Package: vtk-py%type_pkg[python]
Version: 5.0.2
Revision: 1
Type: python (2.3 2.4)
BuildDependsOnly: False
Source: http://www.vtk.org/files/release/5.0/vtk-%v.tar.gz
Source-MD5: c2f439d1a4bc1598a1cb09ee43f794ed
SourceDirectory: VTK
License: BSD
GCC: 3.3
Depends: x11, x11-shlibs, tcltk, tcltk-shlibs, expat-shlibs, libpng3-shlibs, libtiff-shlibs, libjpeg-shlibs, python%type_pkg[python]
BuildDepends: cmake (>= 2.4.2-1), x11-dev, tcltk-dev, expat, libpng3, libtiff, libjpeg
Conflicts: vtk (<= 4.2.5-2), vtk-py23, vtk-py24
Replaces: vtk (<=4.2.5-2), vtk-py23, vtk-py24
Recommends: vtkdata
PatchScript: <<
 perl -pi.bak -e 's|/usr/local/lib|%p/lib/vtk|g' Wrapping/Python/vtk/tk/vtkLoadPythonTkWidgets.py
 perl -pi.bak -e 's|/usr/local|%p|g' Wrapping/Tcl/vtkbase/vtkbase.tcl
  if [ %m = "powerpc" ]; then  perl -pi -e 's|(\-no\-cpp\-precomp)|\-O3 \-mcpu=G3 \-mtune=G4 \-funroll\-loops \-Wno\-long\-double $1|g' CMakeLists.txt; fi
 if [ %m = "i386" ]; then perl -pi -e 's|(\-no\-cpp\-precomp)|\-O3 \-funroll\-loops \-Wno\-long\-double $1|g' CMakeLists.txt; fi
<<
CompileScript: <<
#!/bin/sh -ex
 %p/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
       -DCMAKE_SKIP_BUILD_RPATH:BOOL=ON \
       -DCMAKE_INSTALL_NAME_DIR:PATH=%p/lib/vtk \
       -DVTK_INSTALL_LIB_DIR:STRING="/lib/vtk" \
       -DBUILD_SHARED_LIBS:BOOL=ON \
       -DCMAKE_INSTALL_PREFIX:PATH=%p \
       -DVTK_USE_CARBON:BOOL=OFF \
       -DVTK_USE_COCOA:BOOL=OFF \
       -DVTK_USE_HYBRID:BOOL=ON \
       -DVTK_USE_X:BOOL=ON \
       -DCMAKE_X_LIBS:STRING="-lSM;-lICE;-lX11;-lXext" \
       -DVTK_WRAP_TCL:BOOL=ON \
       -DTCL_INCLUDE_PATH:PATH=%p/include \
       -DTCL_LIBRARY:FILEPATH=%p/lib/libtcl.dylib \
       -DTK_LIBRARY:FILEPATH=%p/lib/libtk.dylib \
       -DTK_INCLUDE_PATH:PATH=%p/include \
       -DVTK_WRAP_JAVA:BOOL=ON \
       -DVTK_WRAP_PYTHON:BOOL=ON \
       -DPYTHON_EXECUTABLE:FILEPATH=%p/bin/python%type_raw[python] \
       -DPYTHON_INCLUDE_PATH:PATH=%p/include/python%type_raw[python] \
       -DPYTHON_LIBRARY:FILEPATH=%p/lib/python%type_raw[python]/config/libpython%type_raw[python].dylib \
       -DPYTHON_DEBUG_LIBRARY:FILEPATH=%p/lib/python%type_raw[python]/config/libpython%type_raw[python].dylib \
       -DOPENGL_gl_LIBRARY:STRING="-L/usr/X11R6/lib -lGL" \
       -DOPENGL_glu_LIBRARY:STRING="-L/usr/X11R6/lib -lGLU" \
       -DOPENGL_INCLUDE_DIR:PATH="/usr/X11R6/include" \
       -DOPENGL_xmesa_INCLUDE_DIR:PATH=/usr/X11R6/include \
       -DVTK_USE_SYSTEM_EXPAT:BOOL=ON \
       -DEXPAT_INCLUDE_DIR:PATH=%p/include \
       -DEXPAT_LIBRARY:FILEPATH=%p/lib/libexpat.dylib \
       -DVTK_USE_SYSTEM_JPEG:BOOL=ON \
       -DVTK_USE_SYSTEM_PNG:BOOL=ON \
       -DVTK_USE_SYSTEM_TIFF:BOOL=ON \
       -DVTK_USE_SYSTEM_ZLIB:BOOL=ON \
       -DVTK_DATA_ROOT:PATH=%p/share/VTKData \
       -DVTK_USE_PARALLEL:BOOL=ON \
       -DVTK_USE_PATENTED:BOOL=ON \
       -DVTK_USE_GL2PS:BOOL=ON \
       -DVTK_HAVE_GETSOCKNAME_WITH_SOCKLEN_T:BOOL=ON \
       .
# ugly hack to fix the -install_name of the dylibs
# cmake-2.4 has a mechanism for it, but it is unusable
 perl -pi -e 's|install_name lib|install_name %p/lib/vtk/lib|g' `find . -name build.make -or -name link.txt` 
#
 make
<< 
InstallScript: <<
#!/bin/sh -ex
 make install DESTDIR=%d
 pushd Wrapping/Python
 %p/bin/python%type_raw[python] setup.py install --root=%d
 popd
 /usr/bin/install -d %i/share/doc/%n
 /bin/cp -R Examples %i/share/doc/%n/
 /usr/bin/find -d %i/share/doc/%n/Examples -name CVS -exec rm -rf \{\} \;
 /usr/bin/install -d %i/etc/profile.d
 cat >%i/etc/profile.d/vtk.sh <<EOF
export TCLLIBPATH="%p/lib/vtk/vtk-5.0/ \$TCLLIBPATH"
EOF
 cat >%i/etc/profile.d/vtk.csh <<EOF
if ( ! \$?TCLLIBPATH ) then
   setenv TCLLIBPATH "%p/lib/vtk/vtk-5.0/"
else
   setenv TCLLIBPATH "%p/lib/vtk/vtk-5.0/ \$TCLLIBPATH"
endif
EOF
 chmod 755 %i/etc/profile.d/vtk.*
<<
DocFiles: Copyright.txt  
Description: The Visualization ToolKit
DescDetail: << 
The Visualization ToolKit (VTK) is an open source, freely available software
system for 3D computer graphics, image processing, and visualization used by
thousands of researchers and developers around the world. VTK consists of a
C++ class library, and several interpreted interface layers including
Tcl/Tk, Java, and Python. 

VTK supports a wide variety of visualization algorithms including scalar,
vector, tensor, texture, and volumetric methods; and advanced modeling
techniques such as implicit modelling, polygon reduction, mesh smoothing,
cutting, contouring, and Delaunay triangulation. In addition, dozens of
imaging algorithms have been directly integrated to allow the user to mix 2D
imaging / 3D graphics algorithms and data. The design and implementation of
the library has been strongly influenced by object-oriented principles. VTK
has been installed and tested on nearly every Unix-based platform, PCs
(Windows 98/ME/NT/2000/XP), and Mac OSX Jaguar or later.
<<
DescUsage: <<
 This version uses X11 and Fink's Tcl/Tk.
 Examples are provided in the share/doc/vtk-py/Examples folder.
 To run them, use "vtk Tutorial/Step1/Tcl/Cone.tcl", for example. 
 For some of them, you need the vtkdata package.
 For documentation see the vtk web site. 
<<
DescPackaging: <<
 Has  "BuildDependsOnly: false", because the header files in 
 %p/include/vtk are needed for the functioning of the toolkit.
 No shlibs splitoff yet.
<<
DescPort: <<
 The dylibs are still created with compat version 0.0.0, 
 because cmake doesn't know about compatibility versions.
 It is bad enough already to get them a decent install_name.

 Cmake knows now about versioned file names for dylibs, so 
 that a future repacked version will be able to adhere to 
 Fink's shlibs policy.

 The vtk (>= 4.2.5-3) package installs into %p/{bin,include,lib}/vtk-4.2, so it
 should be able to coexist with this version.
<<
Maintainer: Martin Costabel <costabel@wanadoo.fr>
Homepage: http://www.vtk.org/
<<

