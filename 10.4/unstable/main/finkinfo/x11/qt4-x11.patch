
--- qt-copy/config.tests/unix/3dnow/3dnow.pro	2007-04-23 13:11:29.000000000 -0400
+++ qt-copy-new/config.tests/unix/3dnow/3dnow.pro	2007-10-11 22:37:35.000000000 -0400
@@ -1,3 +1,3 @@
 SOURCES = 3dnow.cpp
 CONFIG -= x11 qt
-
+mac:CONFIG -= app_bundle
--- qt-copy/config.tests/unix/mmx/mmx.pro	2007-04-23 13:11:29.000000000 -0400
+++ qt-copy-new/config.tests/unix/mmx/mmx.pro	2007-10-11 22:37:35.000000000 -0400
@@ -1,3 +1,3 @@
 SOURCES = mmx.cpp
 CONFIG -= x11 qt
-
+mac:CONFIG -= app_bundle
--- qt-copy/config.tests/unix/sse/sse.pro	2007-04-23 13:11:29.000000000 -0400
+++ qt-copy-new/config.tests/unix/sse/sse.pro	2007-10-11 22:37:35.000000000 -0400
@@ -1,3 +1,3 @@
 SOURCES = sse.cpp
 CONFIG -= x11 qt
-
+mac:CONFIG -= app_bundle
--- qt-copy/config.tests/unix/sse2/sse2.pro	2007-04-23 13:11:29.000000000 -0400
+++ qt-copy-new/config.tests/unix/sse2/sse2.pro	2007-10-11 22:37:35.000000000 -0400
@@ -1,3 +1,3 @@
 SOURCES = sse2.cpp
 CONFIG -= x11 qt
-
+mac:CONFIG -= app_bundle
--- qt-copy/configure	2007-10-08 19:27:05.000000000 -0400
+++ qt-copy-new/configure	2007-10-11 22:37:35.000000000 -0400
@@ -994,16 +994,15 @@
 	CFG_BUILD_PARTS="$CFG_BUILD_PARTS $VAL"
         ;;
     x11)
-        if [ "$Edition" = "Trolltech" ] && [ "$VAL" = "yes" ]; then
-            if [ "$PLATFORM_MAC" = "yes" ]; then
-                PLATFORM_MAC=no
-            elif [ "$PLATFORM_QWS" = "yes" ]; then
-                PLATFORM_QWS=no
-            fi
-            PLATFORM_X11=yes
-        else
-            UNKNOWN_OPT=yes
+        if [ "$PLATFORM_MAC" = "yes" ]; then
+            PLATFORM_MAC=no
+        elif [ "$PLATFORM_QWS" = "yes" ]; then
+            PLATFORM_QWS=no
+        fi
+        if [ "$CFG_FRAMEWORK" = "auto" ]; then
+            CFG_FRAMEWORK=no
         fi
+        PLATFORM_X11=yes
         ;;
     sdk)
         if [ "$PLATFORM_MAC" = "yes" ]; then
@@ -3645,6 +3644,10 @@
 		EXTRA_LFLAGS="$EXTRA_LFLAGS \$(SDK_LFLAGS)"
             fi
         fi
+        if [ "$PLATFORM_X11" = "yes" ]; then
+            EXTRA_CFLAGS="$EXTRA_CFLAGS -D__USE_WS_X11__=1"
+            EXTRA_CXXFLAGS="$EXTRA_CXXFLAGS -D__USE_WS_X11__=1"
+        fi
         [ "$CFG_EMBEDDED" != "no" ] && EXTRA_CFLAGS="$EXTRA_CFLAGS -DQWS"
         if [ '!' -z "$D_FLAGS" ]; then
             for DEF in $D_FLAGS; do
--- qt-copy/configure-for-fink.sh	1969-12-31 19:00:00.000000000 -0500
+++ qt-copy-new/configure-for-fink.sh	2007-10-11 22:37:35.000000000 -0400
@@ -0,0 +1,60 @@
+#!/bin/sh -e
+
+if [ -z "$1" ]; then
+	echo "usage: $0 /fink/prefix"
+	exit 1
+fi
+
+if [ -f /usr/lib/libresolv.dylib ]; then
+	LIBRESOLV="-lresolv"
+	perl -pi -e 's,#define QT_AOUT_UNDERSCORE,,' mkspecs/{darwin-g++,macx-g++}/qplatformdefs.h
+else
+	LIBRESOLV=""
+fi
+
+[ -z "$CC"  ] && CC=gcc-4.0
+[ -z "$CXX" ] && CXX=g++-4.0
+
+FINKPREFIX="$1"; shift
+PKGNAME="$1"; shift
+QTDIR=`pwd`
+PATH="$QTDIR/bin:$FINKPREFIX/lib/freetype219/bin:$PATH"
+
+EXTRA_ARGS=""
+
+if [ "$PKGNAME" = "qt4-x11" ]; then
+	EXTRA_ARGS="-D__USE_WS_X11__=1 -x11 -platform darwin-g++ -xplatform darwin-g++"
+else
+	EXTRA_ARGS="-platform macx-g++ -xplatform macx-g++"
+fi
+
+export FINKPREFIX QTDIR PATH LIBRESOLV CC CXX EXTRA_ARGS
+
+perl -pi -e "s,\@PREFIX\@,$FINKPREFIX,g" mkspecs/darwin-g++/*
+perl -pi -e "s,\@PKGNAME\@,$PKGNAME,g" mkspecs/darwin-g++/*
+perl -pi -e "s,gcc-4.0,$CC,g" mkspecs/darwin-g++/*
+perl -pi -e "s,g\+\+-3.3,$CXX,g" mkspecs/darwin-g++/*
+
+echo "yes" | sh ./configure \
+	"-I$QTDIR/include" "-I$QTDIR/include/Qt" "-I$QTDIR/include/QtCore" \
+	"-I$FINKPREFIX/lib/freetype219/include" "-I$FINKPREFIX/lib/freetype219/include/freetype2" \
+	"-I$FINKPREFIX/lib/fontconfig2/include" "-I$FINKPREFIX/lib/fontconfig2/include" \
+	"-I/usr/X11R6/include" "-I$FINKPREFIX/include" \
+	"-L$FINKPREFIX/lib/freetype219/lib" "-L$FINKPREFIX/lib/fontconfig2/lib" \
+	"-L$FINKPREFIX/lib" "-L/usr/X11R6/lib" \
+	-DQT_DBUS_INIT_DEFAULT=1 $LIBRESOLV \
+	-prefix "$FINKPREFIX/lib/$PKGNAME" -docdir "$FINKPREFIX/share/doc/$PKGNAME" \
+	-no-exceptions -qt-gif -system-freetype \
+	-no-sql-ibase -no-sql-mysql -no-sql-odbc -no-sql-psql \
+	-plugin-sql-sqlite $EXTRA_ARGS "$@"
+
+# don't link against older versions of self
+/usr/bin/find . -name Makefile -print0 | xargs -0 perl -pi -e "s,-L$FINKPREFIX/lib/$PKGNAME/lib,,g"
+
+# attempt to counterfix qmake's warped fileFixify logic that makes install break
+# when $FINKPREFIX is a symlink and something exists already at -libdir or -datadir etc
+# second, better attempt at unfixifying $FINKPREFIX:
+pushd $FINKPREFIX;
+	FixifiedSW=`/bin/pwd`;
+popd
+/usr/bin/find . -name Makefile -print0 | xargs -0 perl -pi -e "s,\\$\\(INSTALL_ROOT\\)$FixifiedSW,\\$\\(INSTALL_ROOT\\)$FINKPREFIX,g"
--- qt-copy/mkspecs/darwin-g++/qmake.conf	2007-04-23 17:45:45.000000000 -0400
+++ qt-copy-new/mkspecs/darwin-g++/qmake.conf	2007-10-11 22:43:55.000000000 -0400
@@ -6,7 +6,7 @@
 
 MAKEFILE_GENERATOR	= UNIX
 TEMPLATE		= app
-CONFIG			+= qt warn_on release link_prl native_precompiled_headers
+CONFIG			+= qt warn_on release global_init_link_order lib_version_first link_prl plugin_no_soname native_precompiled_headers
 QT			+= core gui
 DEFINES                 += __USE_WS_X11__
 
@@ -19,14 +19,17 @@
 QMAKE_CFLAGS_DEPS	= -M
 QMAKE_CFLAGS_WARN_ON	= -Wall -W
 QMAKE_CFLAGS_WARN_OFF	= -w
-QMAKE_CFLAGS_RELEASE	= -O2
+QMAKE_CFLAGS_RELEASE	= -Os
 QMAKE_CFLAGS_DEBUG	= -g
 QMAKE_CFLAGS_SHLIB	= -fPIC
 QMAKE_CFLAGS_STATIC_LIB	= $$QMAKE_CFLAGS_SHLIB
 QMAKE_EXTENSION_SHLIB	= dylib
 QMAKE_EXTENSION_PLUGIN	= so
 QMAKE_CFLAGS_YACC	= -Wno-unused -Wno-parentheses
+QMAKE_CFLAGS_HIDESYMS	+= -fvisibility=hidden
 QMAKE_CFLAGS_THREAD	=
+QMAKE_CFLAGS_PRECOMPILE	+= -x c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
+QMAKE_CFLAGS_USE_PRECOMPILE	+= -include ${QMAKE_PCH_OUTPUT_BASE}
 
 QMAKE_CXX		= c++
 QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
@@ -38,9 +41,12 @@
 QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
 QMAKE_CXXFLAGS_STATIC_LIB = $$QMAKE_CFLAGS_STATIC_LIB
 QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
+QMAKE_CXXFLAGS_HIDESYMS	+= $$QMAKE_CFLAGS_HIDESYMS -fvisibility-inlines-hidden
 QMAKE_CXXFLAGS_THREAD	=
+QMAKE_CXXFLAGS_PRECOMPILE	+= -x c++-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
+QMAKE_CXXFLAGS_USE_PRECOMPILE	= $$QMAKE_CFLAGS_USE_PRECOMPILE
 
-QMAKE_INCDIR		= /usr/local/include
+QMAKE_INCDIR		=
 QMAKE_LIBDIR		=
 QMAKE_INCDIR_X11	= /usr/X11R6/include
 QMAKE_LIBDIR_X11	= /usr/X11R6/lib
@@ -51,17 +57,21 @@
 
 QMAKE_LINK		= c++
 QMAKE_LINK_SHLIB	= c++
-QMAKE_LFLAGS		=
+QMAKE_LFLAGS		= -headerpad_max_install_names
 QMAKE_LFLAGS_RELEASE	=
 QMAKE_LFLAGS_DEBUG	=
 QMAKE_LFLAGS_APP        = -prebind
-QMAKE_LFLAGS_SHLIB	= -prebind -dynamiclib -single_module -headerpad_max_install_names
-QMAKE_LFLAGS_PLUGIN	= -bundle
+QMAKE_LFLAGS_SHLIB	= -prebind -dynamiclib -single_module
+QMAKE_LFLAGS_PLUGIN	= -prebind -bundle
 QMAKE_LFLAGS_THREAD	=
+QMAKE_LFLAGS_SONAME	+= -install_name$${LITERAL_WHITESPACE}
 
 QMAKE_LFLAGS_VERSION    = -current_version$${LITERAL_WHITESPACE}
 QMAKE_LFLAGS_COMPAT_VERSION = -compatibility_version$${LITERAL_WHITESPACE}
 
+QMAKE_PCH_OUTPUT_EXT	= .gch
+
+QMAKE_FIX_RPATH		= install_name_tool -id 
 QMAKE_RPATH		=
 
 QMAKE_LIBS_DYNLOAD	=
@@ -88,5 +98,6 @@
 QMAKE_DEL_DIR		= rmdir
 QMAKE_CHK_DIR_EXISTS	= test -d
 QMAKE_MKDIR		= mkdir -p
+
 include(../common/unix.conf)
 load(qt_config)
--- qt-copy/mkspecs/macx-g++/qmake.conf	2007-04-23 17:45:45.000000000 -0400
+++ qt-copy-new/mkspecs/macx-g++/qmake.conf	2007-10-11 22:39:07.000000000 -0400
@@ -8,10 +8,13 @@
 
 MAKEFILE_GENERATOR	= UNIX
 TEMPLATE		= app
-CONFIG			+= qt warn_on release app_bundle incremental global_init_link_order lib_version_first plugin_no_soname link_prl
+CONFIG         += qt warn_on release app_bundle global_init_link_order lib_version_first link_prl plugin_no_soname native_precompiled_headers
 QT			+= core gui
 QMAKE_INCREMENTAL_STYLE = sublib
 
 include(../common/mac-g++.conf)
 
+QMAKE_EXTENSION_PLUGIN = bundle
+QMAKE_LFLAGS_PLUGIN = -prebind -bundle
+
 load(qt_config)
--- qt-copy/projects.pro	2007-10-08 19:27:05.000000000 -0400
+++ qt-copy-new/projects.pro	2007-10-11 22:37:35.000000000 -0400
@@ -8,7 +8,7 @@
 cross_compile: CONFIG += nostrip
 
 isEmpty(QT_BUILD_PARTS) { #defaults
-   QT_BUILD_PARTS = libs tools examples demos
+   QT_BUILD_PARTS = libs tools
 } else { #make sure the order makes sense
    contains(QT_BUILD_PARTS, tools) {
        QT_BUILD_PARTS -= tools
@@ -29,10 +29,6 @@
     isEqual(PROJECT, tools) {
        !cross_compile:SUBDIRS += tools
        else:SUBDIRS += tools/qtestlib
-    } else:isEqual(PROJECT, examples) {
-       SUBDIRS += examples
-    } else:isEqual(PROJECT, demos) {
-       SUBDIRS += demos
     } else:isEqual(PROJECT, libs) {
        include(src/src.pro)
     } else:isEqual(PROJECT, qmake) {
--- qt-copy/qmake/generators/mac/pbuilder_pbx.cpp	2007-10-08 19:27:05.000000000 -0400
+++ qt-copy-new/qmake/generators/mac/pbuilder_pbx.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -49,7 +49,7 @@
 #  include <sys/types.h>
 #  include <sys/stat.h>
 #endif
-#ifdef Q_OS_DARWIN
+#ifdef Q_WS_MAC
 #include <ApplicationServices/ApplicationServices.h>
 #include <private/qcore_mac_p.h>
 #endif
@@ -1676,7 +1676,7 @@
     } else {
         QString version, version_plist = project->first("QMAKE_PBUILDER_VERSION_PLIST");
         if(version_plist.isEmpty()) {
-#ifdef Q_OS_DARWIN
+#ifdef Q_WS_MAC
             ret = QLatin1String("34");
             QCFType<CFURLRef> cfurl;
             OSStatus err = LSFindApplicationForInfo(0, CFSTR("com.apple.Xcode"), 0, 0, &cfurl);
--- qt-copy/qmake/generators/unix/unixmake.cpp	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/qmake/generators/unix/unixmake.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -45,6 +45,8 @@
 #include <time.h>
 #include <qdebug.h>
 
+bool handleframeworks = false;
+
 void
 UnixMakefileGenerator::init()
 {
@@ -340,6 +342,13 @@
             }
         }
     }
+
+#if defined(Q_OS_DARWIN)
+    handleframeworks = true;
+#else
+    if (Option::target_mode == Option::TARG_MACX_MODE)
+        handleframeworks = true;
+#endif
 }
 
 void
@@ -437,9 +446,9 @@
                         libdirs.append(f);
                 } else if(opt.startsWith("-l")) {
                     stub = opt.mid(2);
-                } else if(Option::target_mode == Option::TARG_MACX_MODE && opt.startsWith("-F")) {
+                } else if(handleframeworks && opt.startsWith("-F")) {
                     frameworkdirs.append(QMakeLocalFileName(opt.right(opt.length()-2)));
-                } else if(Option::target_mode == Option::TARG_MACX_MODE && opt.startsWith("-framework")) {
+                } else if(handleframeworks && opt.startsWith("-framework")) {
                     if(opt.length() > 11) {
                         opt = opt.mid(11);
                     } else {
@@ -559,11 +568,11 @@
                             break;
                         }
                     }
-                } else if(Option::target_mode == Option::TARG_MACX_MODE && opt.startsWith("-F")) {
+                } else if(handleframeworks && opt.startsWith("-F")) {
                     QMakeLocalFileName f(opt.right(opt.length()-2));
                     if(!frameworkdirs.contains(f))
                         frameworkdirs.append(f);
-                } else if(Option::target_mode == Option::TARG_MACX_MODE && opt.startsWith("-framework")) {
+                } else if(handleframeworks && opt.startsWith("-framework")) {
                     if(opt.length() > 11)
                         opt = opt.mid(11);
                     else
@@ -602,13 +611,13 @@
                 QString opt = l.at(lit).trimmed();
                 if(opt.startsWith("-")) {
                     if(opt.startsWith("-L") ||
-                       (Option::target_mode == Option::TARG_MACX_MODE && opt.startsWith("-F"))) {
+                       (handleframeworks && opt.startsWith("-F"))) {
                         if(lit == 0 || l.lastIndexOf(opt, lit-1) == -1)
                             lflags.append(opt);
                     } else if(opt.startsWith("-l")) {
                         if(lit == l.size()-1 || l.indexOf(opt, lit+1) == -1)
                             lflags.append(opt);
-                    } else if(Option::target_mode == Option::TARG_MACX_MODE && opt.startsWith("-framework")) {
+                    } else if(handleframeworks && opt.startsWith("-framework")) {
                         if(opt.length() > 11)
                             opt = opt.mid(11);
                         else
--- qt-copy/qmake/option.cpp	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/qmake/option.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -92,7 +92,7 @@
 QStringList Option::shellPath;
 #if defined(Q_OS_WIN32)
 Option::TARG_MODE Option::target_mode = Option::TARG_WIN_MODE;
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
 Option::TARG_MODE Option::target_mode = Option::TARG_MACX_MODE;
 #elif defined(Q_OS_QNX6)
 Option::TARG_MODE Option::target_mode = Option::TARG_QNX6_MODE;
--- qt-copy/src/corelib/corelib.pro	2007-04-23 17:45:45.000000000 -0400
+++ qt-copy-new/src/corelib/corelib.pro	2007-10-11 22:37:35.000000000 -0400
@@ -14,7 +14,7 @@
 include(kernel/kernel.pri)
 include(codecs/codecs.pri)
 
-mac:LIBS += -framework ApplicationServices
+mac|darwin-*:LIBS += -framework ApplicationServices
 
 mac:lib_bundle:DEFINES += QT_NO_DEBUG_PLUGIN_CHECK
 win32:DEFINES-=QT_NO_CAST_TO_ASCII
--- qt-copy/src/corelib/global/qglobal.cpp	2007-10-08 19:27:05.000000000 -0400
+++ qt-copy-new/src/corelib/global/qglobal.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -1609,7 +1609,7 @@
 const int QSysInfo::ByteOrder = ((*((unsigned char *) &qt_one) == 0) ? BigEndian : LittleEndian);
 #endif
 
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 
 #include "private/qcore_mac_p.h"
 #include "qnamespace.h"
--- qt-copy/src/corelib/global/qlibraryinfo.cpp	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/corelib/global/qlibraryinfo.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -47,7 +47,7 @@
 #else
 # include "qcoreapplication.h"
 #endif
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include "private/qcore_mac_p.h"
 #endif
 
@@ -111,7 +111,7 @@
         qtconfig = qmake_libraryInfoFile();
 #else
     if (!QFile::exists(qtconfig) && QCoreApplication::instance()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 	CFBundleRef bundleRef = CFBundleGetMainBundle();
         if (bundleRef) {
 	    QCFType<CFURLRef> urlRef = CFBundleCopyResourceURL(bundleRef,
@@ -426,7 +426,7 @@
             return QFileInfo(qmake_libraryInfoFile()).absolutePath();
 #else
             if (QCoreApplication::instance()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 	        CFBundleRef bundleRef = CFBundleGetMainBundle();
 		if (bundleRef) {
 		    QCFType<CFURLRef> urlRef = CFBundleCopyBundleURL(bundleRef);
--- qt-copy/src/corelib/global/qnamespace.h	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/corelib/global/qnamespace.h	2007-10-11 22:37:35.000000000 -0400
@@ -960,7 +960,7 @@
     };
 
 #if defined(QT3_SUPPORT)
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
 #ifndef qdoc
     typedef int MacintoshVersion;
 
@@ -987,7 +987,7 @@
         MV_PANTHER = QSysInfo::MV_PANTHER,
         MV_TIGER = QSysInfo::MV_TIGER
     };
-#endif // Q_OS_MAC
+#endif // Q_WS_MAC
 
 #if defined(Q_OS_WIN)
 #ifndef qdoc
--- qt-copy/src/corelib/io/qfsfileengine_unix.cpp	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/corelib/io/qfsfileengine_unix.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -51,7 +51,7 @@
 #include <stdlib.h>
 #include <limits.h>
 #include <errno.h>
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 # include <private/qcore_mac_p.h>
 #endif
 
@@ -502,7 +502,7 @@
     return is_link;
 }
 
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 static bool _q_isMacHidden(const QString &path)
 {
     OSErr err = noErr;
@@ -585,7 +585,7 @@
             ret |= ExeOtherPerm;
     }
     if (type & TypesMask) {
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
         bool foundAlias = false;
         {
             FSRef fref;
@@ -607,7 +607,7 @@
                 ret |= FileType;
             else if (exists && (d->st.st_mode & S_IFMT) == S_IFDIR)
                 ret |= DirectoryType;
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
             if((ret & DirectoryType) && (type & BundleType)) {
                 QCFType<CFURLRef> url = CFURLCreateWithFileSystemPath(0, QCFString(d->filePath),
                                                                       kCFURLPOSIXPathStyle, true);
@@ -623,7 +623,7 @@
         if (exists)
             ret |= ExistsFlag;
         if (fileName(BaseName)[0] == QLatin1Char('.')
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
             || _q_isMacHidden(d->filePath)
 #endif
         )
@@ -638,7 +638,7 @@
 {
     Q_D(const QFSFileEngine);
     if (file == BundleName) {
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
         QCFType<CFURLRef> url = CFURLCreateWithFileSystemPath(0, QCFString(d->filePath),
                                                               kCFURLPOSIXPathStyle, true);
         if(CFDictionaryRef dict = CFBundleCopyInfoDictionaryForURL(url)) {
@@ -783,7 +783,7 @@
                 return ret;
             }
         }
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
         {
             FSRef fref;
             if (FSPathMakeRef((const UInt8 *)QFile::encodeName(QDir::cleanPath(d->filePath)).data(), &fref, 0) == noErr) {
--- qt-copy/src/corelib/io/qprocess_unix.cpp	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/corelib/io/qprocess_unix.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -80,7 +80,7 @@
 #include "qprocess.h"
 #include "qprocess_p.h"
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #include <private/qcore_mac_p.h>
 #endif
 
@@ -593,7 +593,7 @@
 
     // Encode the program name.
     QByteArray encodedProgramName = QFile::encodeName(program);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     // allow invoking of .app bundles on the Mac.
     QFileInfo fileInfo(QString::fromUtf8(encodedProgramName.constData()));
     if (encodedProgramName.endsWith(".app") && fileInfo.isDir()) {
--- qt-copy/src/corelib/io/qsettings.cpp	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/corelib/io/qsettings.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -290,7 +290,7 @@
 
 // see also qsettings_win.cpp and qsettings_mac.cpp
 
-#if !defined(Q_OS_WIN) && !defined(Q_OS_MAC)
+#if !defined(Q_OS_WIN) && !defined(Q_WS_MAC)
 QSettingsPrivate *QSettingsPrivate::create(QSettings::Format format, QSettings::Scope scope,
                                            const QString &organization, const QString &application)
 {
@@ -923,7 +923,7 @@
     extension = (format == QSettings::NativeFormat) ? QLatin1String(".conf") : QLatin1String(".ini");
     readFunc = 0;
     writeFunc = 0;
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     caseSensitivity = (format == QSettings::NativeFormat) ? Qt::CaseSensitive : Qt::CaseInsensitive;
 #else
     caseSensitivity = IniCaseSensitivity;
@@ -1069,7 +1069,7 @@
 
         pathHash->insert(pathHashKey(QSettings::IniFormat, QSettings::UserScope), userPath);
         pathHash->insert(pathHashKey(QSettings::IniFormat, QSettings::SystemScope), systemPath);
-#ifndef Q_OS_MAC
+#ifndef Q_WS_MAC
         pathHash->insert(pathHashKey(QSettings::NativeFormat, QSettings::UserScope), userPath);
         pathHash->insert(pathHashKey(QSettings::NativeFormat, QSettings::SystemScope), systemPath);
 #endif
@@ -1451,7 +1451,7 @@
             because they don't exist) are treated as empty files.
         */
         if (file.isReadable() && fileInfo.size() != 0) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
             if (format == QSettings::NativeFormat) {
                 ok = readPlistFile(confFile->name, &confFile->originalKeys);
             } else
@@ -1497,7 +1497,7 @@
         ParsedSettingsMap mergedKeys = confFile->mergedKeyMap();
 
         if (file.isWritable()) {
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
             if (format == QSettings::NativeFormat) {
                 ok = writePlistFile(confFile->name, mergedKeys);
             } else
@@ -2589,7 +2589,7 @@
 */
 QSettings::QSettings(QObject *parent)
     : QObject(*QSettingsPrivate::create(NativeFormat, UserScope,
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                                         QCoreApplication::organizationDomain().isEmpty()
                                             ? QCoreApplication::organizationName()
                                             : QCoreApplication::organizationDomain()
@@ -3252,7 +3252,7 @@
 void QSettings::setSystemIniPath(const QString &dir)
 {
     setPath(IniFormat, SystemScope, dir);
-#if !defined(Q_OS_WIN) && !defined(Q_OS_MAC)
+#if !defined(Q_OS_WIN) && !defined(Q_WS_MAC)
     setPath(NativeFormat, SystemScope, dir);
 #endif
 }
@@ -3266,7 +3266,7 @@
 void QSettings::setUserIniPath(const QString &dir)
 {
     setPath(IniFormat, UserScope, dir);
-#if !defined(Q_OS_WIN) && !defined(Q_OS_MAC)
+#if !defined(Q_OS_WIN) && !defined(Q_WS_MAC)
     setPath(NativeFormat, UserScope, dir);
 #endif
 }
--- qt-copy/src/corelib/io/qsettings_p.h	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/corelib/io/qsettings_p.h	2007-10-11 22:37:35.000000000 -0400
@@ -275,7 +275,7 @@
     void initAccess();
     void syncConfFile(int confFileNo);
     bool writeIniFile(QIODevice &device, const ParsedSettingsMap &map);
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     bool readPlistFile(const QString &fileName, ParsedSettingsMap *map) const;
     bool writePlistFile(const QString &fileName, const ParsedSettingsMap &map) const;
 #endif
--- qt-copy/src/corelib/plugin/qlibrary.cpp	2007-10-08 19:27:05.000000000 -0400
+++ qt-copy-new/src/corelib/plugin/qlibrary.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -49,7 +49,7 @@
 #include <qmap.h>
 #include <qsettings.h>
 #include <qdatetime.h>
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include <private/qcore_mac_p.h>
 #endif
 #ifndef NO_ERRNO_H
@@ -66,7 +66,7 @@
 #  define QLIBRARY_AS_DEBUG true
 #endif
 
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_WS_MAC)
 // We don't use separate debug and release libs on UNIX, so we want
 // to allow loading plugins, regardless of how they were built.
 #  define QT_NO_DEBUG_PLUGIN_CHECK
@@ -291,7 +291,7 @@
     return ret;
 }
 
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_WS_MAC)
 
 #if defined(Q_OS_FREEBSD) || defined(Q_OS_LINUX)
 #  define USE_MMAP
@@ -414,7 +414,7 @@
     return ret;
 }
 
-#endif // Q_OS_UNIX && !Q_OS_MAC
+#endif // Q_OS_UNIX && !Q_WS_MAC
 
 typedef QMap<QString, QLibraryPrivate*> LibraryMap;
 Q_GLOBAL_STATIC(LibraryMap, libraryMap)
@@ -585,7 +585,7 @@
         key = reg.at(2).toLatin1();
         success = qt_version != 0;
     } else {
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_WS_MAC)
         if (!pHnd) {
             // use unix shortcut to avoid loading the library
             success = qt_unix_query(fileName, &qt_version, &debug, &key, this);
--- qt-copy/src/corelib/plugin/qlibrary_unix.cpp	2007-10-08 19:27:05.000000000 -0400
+++ qt-copy-new/src/corelib/plugin/qlibrary_unix.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -45,7 +45,7 @@
 
 #ifndef QT_NO_LIBRARY
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #  include <private/qcore_mac_p.h>
 #endif
 
@@ -154,8 +154,9 @@
         if (majorVerNum > -1) {
             suffixes << QString::fromLatin1(".%1.bundle").arg(majorVerNum);
             suffixes << QString::fromLatin1(".%1.dylib").arg(majorVerNum);
+            suffixes << QString::fromLatin1(".%1.so").arg(majorVerNum);
         } else {
-            suffixes << QLatin1String(".bundle") << QLatin1String(".dylib");
+            suffixes << QLatin1String(".bundle") << QLatin1String(".dylib") << QLatin1String(".so");
         }
 #endif
     }
@@ -192,7 +193,7 @@
             pHnd = dlopen(QFile::encodeName(attempt), dlFlags);
         }
     }
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
     if (!pHnd) {
         if (CFBundleRef bundle = CFBundleGetBundleWithIdentifier(QCFString(fileName))) {
             QCFType<CFURLRef> url = CFBundleCopyExecutableURL(bundle);
@@ -222,7 +223,7 @@
     return true;
 }
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 Q_CORE_EXPORT void *qt_mac_resolve_sys(void *handle, const char *symbol)
 {
     return dlsym(handle, symbol);
--- qt-copy/src/corelib/tools/qlocale.cpp	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/corelib/tools/qlocale.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -50,7 +50,7 @@
 #   include "qt_windows.h"
 #   include <time.h>
 #endif
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_WS_MAC)
 #   include "private/qcore_mac_p.h"
 #endif
 #include "private/qnumeric_p.h"
@@ -886,7 +886,7 @@
 }
 
 
-#elif defined(Q_OS_MAC)
+#elif defined(Q_WS_MAC)
 /******************************************************************************
 ** Wrappers for Mac locale system functions
 */
--- qt-copy/src/corelib/tools/qpoint.h	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/corelib/tools/qpoint.h	2007-10-11 22:37:35.000000000 -0400
@@ -79,7 +79,7 @@
 
 private:
     friend class QTransform;
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     int yp;
     int xp;
 #else
--- qt-copy/src/corelib/tools/qrect.h	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/corelib/tools/qrect.h	2007-10-11 22:37:35.000000000 -0400
@@ -167,7 +167,7 @@
 #if defined(Q_WS_X11) || defined(Q_OS_TEMP)
     friend void qt_setCoords(QRect *r, int xp1, int yp1, int xp2, int yp2);
 #endif
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     int y1;
     int x1;
     int y2;
--- qt-copy/src/corelib/tools/qstring.cpp	2007-10-08 19:27:05.000000000 -0400
+++ qt-copy-new/src/corelib/tools/qstring.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -51,7 +51,7 @@
 #include "qhash.h"
 #include "qdebug.h"
 
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
 #include <private/qcore_mac_p.h>
 #endif
 
@@ -4240,7 +4240,7 @@
     default:
         return 0;
     }
-#elif defined (Q_OS_MAC)
+#elif defined (Q_WS_MAC)
     // Use CFStringCompare for comparing strings on Mac. This makes Qt order
     // strings the same way as native applications do, and also respects
     // the "Order for sorted lists" setting in the International preferences
--- qt-copy/src/gui/dialogs/qprintdialog.h	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/gui/dialogs/qprintdialog.h	2007-10-11 22:37:35.000000000 -0400
@@ -61,7 +61,7 @@
 
     int exec();
 
-#if defined (Q_OS_UNIX) && !defined (Q_OS_MAC) && defined (QT3_SUPPORT)
+#if defined (Q_OS_UNIX) && !defined (Q_WS_MAC) && defined (QT3_SUPPORT)
     void setPrinter(QPrinter *, bool = false);
     QPrinter *printer() const;
     void addButton(QPushButton *button);
--- qt-copy/src/gui/kernel/qapplication.h	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/gui/kernel/qapplication.h	2007-10-11 22:37:35.000000000 -0400
@@ -289,7 +289,7 @@
 #if defined(Q_OS_WIN32) || defined(Q_OS_CYGWIN)
     static QT3_SUPPORT Qt::WindowsVersion winVersion() { return (Qt::WindowsVersion)QSysInfo::WindowsVersion; }
 #endif
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     static QT3_SUPPORT Qt::MacintoshVersion macVersion() { return (Qt::MacintoshVersion)QSysInfo::MacintoshVersion; }
 #endif
 #  ifndef QT_NO_CURSOR
--- qt-copy/src/gui/kernel/qapplication_p.h	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/gui/kernel/qapplication_p.h	2007-10-11 22:37:35.000000000 -0400
@@ -84,7 +84,7 @@
 # ifdef Q_OS_TEMP
   extern DWORD qt_cever;
 # endif
-#elif defined (Q_OS_MAC)
+#elif defined (Q_WS_MAC)
 extern QSysInfo::MacVersion qt_macver;
 #endif
 #if defined(Q_WS_QWS)
--- qt-copy/src/gui/widgets/qdockwidget.cpp	2007-10-08 19:27:05.000000000 -0400
+++ qt-copy-new/src/gui/widgets/qdockwidget.cpp	2007-10-11 22:37:35.000000000 -0400
@@ -898,7 +898,7 @@
             if (state->nca) {
                 endDrag();
             }
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
             else { // workaround for lack of mouse-grab on Mac
                 QMainWindowLayout *layout
                     = qobject_cast<QMainWindowLayout *>(q->parentWidget()->layout());
@@ -911,7 +911,7 @@
 #endif
             break;
         case QEvent::NonClientAreaMouseButtonRelease:
-#ifdef Q_OS_MAC
+#ifdef Q_WS_MAC
                         if (state)
                                 endDrag();
 #endif
--- qt-copy/src/tools/uic/cpp/cppwriteinitialization.h	2007-08-16 08:16:51.000000000 -0400
+++ qt-copy-new/src/tools/uic/cpp/cppwriteinitialization.h	2007-10-11 22:37:35.000000000 -0400
@@ -61,7 +61,7 @@
         int compare(const FontHandle &) const;
     private:
         const DomFont *m_domFont;
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
         friend uint qHash(const FontHandle &);
 #endif
     };
@@ -75,12 +75,12 @@
         int compare(const SizePolicyHandle &) const;
     private:
         const DomSizePolicy *m_domSizePolicy;
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
         friend uint qHash(const SizePolicyHandle &);
 #endif
     };
     inline bool operator ==(const SizePolicyHandle &f1, const SizePolicyHandle &f2) { return f1.compare(f2) == 0; }
-#if !(defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3))
+#if !(defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3))
     inline bool operator  <(const SizePolicyHandle &f1, const SizePolicyHandle &f2) { return f1.compare(f2) < 0; }
 #endif
 
@@ -219,7 +219,7 @@
     QHash<uint, QString> m_colorBrushHash;
     // Map from font properties to  font variable name for reuse
     // Map from size policy to  variable for reuse
-#if defined(Q_OS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
+#if defined(Q_WS_MAC) && defined(Q_CC_GNU) && (__GNUC__ == 3 && __GNUC_MINOR__ == 3)
     typedef QHash<FontHandle, QString> FontPropertiesNameMap;
     typedef QHash<SizePolicyHandle, QString> SizePolicyNameMap;
 #else
