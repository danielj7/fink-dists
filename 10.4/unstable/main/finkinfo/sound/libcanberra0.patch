diff -Nurd -x'*~' libcanberra-0.11.orig/Makefile.am libcanberra-0.11/Makefile.am
--- libcanberra-0.11.orig/Makefile.am	2009-01-21 15:43:57.000000000 -0500
+++ libcanberra-0.11/Makefile.am	2009-03-28 17:26:16.000000000 -0400
@@ -19,7 +19,7 @@
 dist_doc_DATA = README
 
 EXTRA_DIST = bootstrap.sh autogen.sh LGPL libcanberra.schemas
-SUBDIRS = libltdl src gtkdoc doc
+SUBDIRS = src gtkdoc doc
 
 MAINTAINERCLEANFILES = README
 noinst_DATA = README
@@ -29,7 +29,6 @@
 
 if HAVE_GTK
 pkgconfig_DATA += libcanberra-gtk.pc
-endif
 
 schemasdir       = $(GCONF_SCHEMA_FILE_DIR)
 schemas_DATA     = libcanberra.schemas
@@ -44,6 +43,9 @@
 else
 install-data-local:
 endif
+else
+install-data-local:
+endif
 
 DISTCHECK_CONFIGURE_FLAGS=--enable-gtk-doc
 ACLOCAL_AMFLAGS = -I m4
diff -Nurd -x'*~' libcanberra-0.11.orig/bootstrap.sh libcanberra-0.11/bootstrap.sh
--- libcanberra-0.11.orig/bootstrap.sh	2009-01-21 15:45:46.000000000 -0500
+++ libcanberra-0.11/bootstrap.sh	2009-03-28 17:26:16.000000000 -0400
@@ -54,7 +54,7 @@
 
     mkdir -p m4
     gtkdocize --copy --flavour no-tmpl --docdir gtkdoc
-    "$LIBTOOLIZE" -c --force --ltdl --recursive
+    "$LIBTOOLIZE" -c --force --recursive
     run_versioned aclocal "$VERSION" -I m4
     run_versioned autoconf 2.63 -Wall
     run_versioned autoheader 2.63
diff -Nurd -x'*~' libcanberra-0.11.orig/configure.ac libcanberra-0.11/configure.ac
--- libcanberra-0.11.orig/configure.ac	2009-01-21 15:59:28.000000000 -0500
+++ libcanberra-0.11/configure.ac	2009-03-28 17:26:16.000000000 -0400
@@ -65,9 +65,32 @@
 
 #### libtool stuff ####
 LT_PREREQ(2.2)
-LT_CONFIG_LTDL_DIR([libltdl])
 LT_INIT([dlopen win32-dll disable-static])
-LTDL_INIT([convenience recursive])
+
+dnl Unfortunately, even up to libtool 2.2.6a there is no way to know
+dnl exactly which version of libltdl is present in the system, so we
+dnl just assume that it's a working version as long as we have the
+dnl library and the header files.
+dnl
+dnl As an extra safety device, check for lt_dladvise_init() which is
+dnl only implemented in libtool 2.x, and refine as we go if we have
+dnl refined requirements.
+dnl
+dnl Check the header files first since the system may have a
+dnl libltdl.so for runtime, but no headers, and we want to bail out as
+dnl soon as possible.
+dnl
+dnl We don't need any special variable for this though, since the user
+dnl can give the proper place to find libltdl through the standard
+dnl variables like LDFLAGS and CPPFLAGS.
+
+AC_CHECK_HEADER([ltdl.h],
+    [AC_CHECK_LIB([ltdl], [lt_dladvise_init], [LIBLTDL=-lltdl], [LIBLTDL=])],
+    [LIBLTDL=])
+
+AS_IF([test "x$LIBLTDL" = "x"],
+    [AC_MSG_ERROR([Unable to find libltdl.])])
+AC_SUBST([LIBLTDL])
 
 #### Determine build environment ####
 
@@ -148,10 +171,6 @@
 
 AC_SYS_LARGEFILE
 
-#### [lib]iconv ####
-
-AM_ICONV
-
 ###################################
 #      External libraries         #
 ###################################
@@ -336,6 +355,7 @@
         ],
         [gtk=auto])
 
+AM_CONDITIONAL([GCONF_SCHEMAS_INSTALL], [false])
 if test "x${gtk}" != xno ; then
     PKG_CHECK_MODULES(GTK, [ gtk+-2.0 >= 2.13.4 gthread-2.0 ],
         [
@@ -343,6 +363,7 @@
             AC_DEFINE([HAVE_GTK], 1, [Have GTK?])
 
             AC_PATH_PROG(GCONFTOOL, gconftool-2)
+	    AM_GCONF_SOURCE_2
 
             GTK_VERSION=`$PKG_CONFIG --variable=gtk_binary_version gtk+-2.0`
             GTK_MODULES_DIR="${libdir}/gtk-2.0/modules"
@@ -357,7 +378,6 @@
     HAVE_GTK=0
 fi
 
-AM_GCONF_SOURCE_2
 
 AC_SUBST(GTK_CFLAGS)
 AC_SUBST(GTK_LIBS)
@@ -561,7 +581,6 @@
 
 AC_CONFIG_FILES([
 Makefile
-libltdl/Makefile
 src/Makefile
 libcanberra.pc
 libcanberra-gtk.pc
diff -Nurd -x'*~' libcanberra-0.11.orig/src/Makefile.am libcanberra-0.11/src/Makefile.am
--- libcanberra-0.11.orig/src/Makefile.am	2009-01-21 15:34:23.000000000 -0500
+++ libcanberra-0.11/src/Makefile.am	2009-03-28 17:26:16.000000000 -0400
@@ -85,8 +85,6 @@
 libcanberra_la_SOURCES += \
 	dso.c \
 	driver-order.c driver-order.h
-libcanberra_la_CFLAGS += \
-	$(LTDLINCL)
 libcanberra_la_LIBADD += \
 	$(LIBLTDL)
 
