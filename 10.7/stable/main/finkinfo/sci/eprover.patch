diff -Naur '--exclude=*~' E/Makefile E.fink/Makefile
--- E/Makefile	2013-06-18 09:11:18.000000000 +0200
+++ E.fink/Makefile	2013-07-31 06:54:09.000000000 +0200
@@ -5,7 +5,7 @@
 # Author: Stephan Schulz
 #
 # Top level make file. Check Makefile.vars for system-dependend tool
-# selection and compilation options. 
+# selection and compilation options.
 #
 # Changes
 #
@@ -37,7 +37,7 @@
 
 # Generate dependencies
 
-depend: 
+depend:
 	for subdir in $(CODE); do\
 	   cd $$subdir; touch Makefile.dependencies; $(MAKE) depend; cd ..;\
 	done;
@@ -86,7 +86,7 @@
          $(TAR) cfX - $(PROJECT)/etc/NO_DISTRIB $(PROJECT) |$(GZIP) - -c > $(PROJECT).tgz
 
 # Include the GIT subdirecctories (and non-GPL files, of which there
-# currently are none). 
+# currently are none).
 
 fulldistrib: man documentation cleandist default_config
 	@echo "Warning: You are building a full archive!"
@@ -111,7 +111,7 @@
            $(LN) ../$$subdir/$$subdir.a .;\
 	done;
 
-tags: 
+tags:
 	etags */*.c */*.h
 	cd PYTHON; make ptags
 
@@ -122,7 +122,7 @@
 # Rebuilding from scratch
 
 rebuild:
-	echo 'Rebuilding with debug options $(DEBUGFLAGS)'	
+	echo 'Rebuilding with debug options $(DEBUGFLAGS)'
 	$(MAKE) clean
 	$(MAKE) config
 	$(MAKE) depend
@@ -130,7 +130,7 @@
 
 # Configure the whole package
 
-config: 
+config:
 	echo 'Configuring build system and tools'
 	$(MAKE) links
 	$(MAKE) tools
@@ -140,19 +140,19 @@
 # Configure and copy executables to the installation directory
 
 install: top
-	-sh -c 'mkdir -p $(EXECPATH)'
-	-sh -c 'development_tools/e_install PROVER/eprover      $(EXECPATH)' 
-	-sh -c 'development_tools/e_install PROVER/epclextract  $(EXECPATH)'
-	-sh -c 'development_tools/e_install PROVER/eproof       $(EXECPATH)'
-	-sh -c 'development_tools/e_install PROVER/eproof_ram   $(EXECPATH)'
-	-sh -c 'development_tools/e_install PROVER/eground      $(EXECPATH)'	
-	-sh -c 'development_tools/e_install PROVER/e_ltb_runner $(EXECPATH)'	
-	-sh -c 'development_tools/e_install PROVER/e_axfilter   $(EXECPATH)'
-	-sh -c 'development_tools/e_install PROVER/checkproof   $(EXECPATH)'
-	-sh -c 'development_tools/e_install PROVER/ekb_create   $(EXECPATH)'	
-	-sh -c 'development_tools/e_install PROVER/ekb_delete   $(EXECPATH)'	
-	-sh -c 'development_tools/e_install PROVER/ekb_ginsert  $(EXECPATH)'
-	-sh -c 'development_tools/e_install PROVER/ekb_insert   $(EXECPATH)'
+	-sh -c 'mkdir -p $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/eprover      $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/epclextract  $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/eproof       $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/eproof_ram   $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/eground      $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/e_ltb_runner $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/e_axfilter   $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/checkproof   $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/ekb_create   $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/ekb_delete   $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/ekb_ginsert  $(DESTDIR)$(EXECPATH)'
+	-sh -c 'development_tools/e_install PROVER/ekb_insert   $(DESTDIR)$(EXECPATH)'
 	-sh -c 'mkdir -p $(MANPATH)'
 	-sh -c 'development_tools/e_install DOC/man/eprover.1      $(MANPATH)'
 	-sh -c 'development_tools/e_install DOC/man/epclextract.1  $(MANPATH)'
@@ -196,4 +196,3 @@
 	for subdir in $(CODE); do\
 	   cd $$subdir;touch Makefile.dependencies;$(MAKE);cd ..;\
 	done;
-
diff -Naur '--exclude=*~' E/Makefile.vars E.fink/Makefile.vars
--- E/Makefile.vars	2013-07-29 22:45:42.000000000 +0200
+++ E.fink/Makefile.vars	2013-07-31 07:06:09.000000000 +0200
@@ -17,7 +17,7 @@
 
 
 # EXECPATH is where make install-exec will move the more important
-# executables. Edit it to point to wherever you want them to live. 
+# executables. Edit it to point to wherever you want them to live.
 # Note that ./configure takes care of this automatically.
 
 EXECPATH = /Users/schulz/E/PROVER
@@ -50,7 +50,7 @@
 # ======================
 
 # Remove the comment from the following to enable gprof-style
-#  profiling 
+#  profiling
 #  -> This will break some stuff on at least some Solaris 2.6
 #     machines, which seem to lack a profiling-enabled libm. I have a
 #     simple sqrt() imlementation to circumvent the problem...
@@ -65,8 +65,8 @@
 # BUILDFLAGS:
 #
 # PRINT_SOMEERRORS_STDOUT: Print various error messages (out of
-#                          memory, empty input file) to stdout  
-#                          (otherwise only to stderr) 
+#                          memory, empty input file) to stdout
+#                          (otherwise only to stderr)
 # USE_NEWMEM: Use a memory management system like everybody else,
 #             using free lists filled up by allocating large blocks
 #             and hacking them  into suitabe pieces. Contrary to
@@ -75,22 +75,22 @@
 #             compared to its native memory management. It's
 #             left in as a warning reminder only.
 # USE_SYSTEM_MEM: Use normal malloc()/free instead of the build-in
-#                  memory management. Does not combine with USE_NEWMEM! 
+#                  memory management. Does not combine with USE_NEWMEM!
 # CLAUSE_PERM_IDENT: Clauses have an extra unchanging identifier. Useful
-#                 for testing some proerties  
+#                 for testing some proerties
 #
 # MEASURE_EXPENSIVE: Compile counting operations and things into the
 #                    code even in time-critical sections.
 # PRINT_SHARING: Determine and print the sharing factor of the proof
-#                state for each clause activation. 
+#                state for each clause activation.
 # PRINT_RW_STATE: Dump R,E,NEW in each loop traversal.
 #
 # FULL_MEM_STATS: Print size of the most important data types and
-#                 information about allocated memory. 
+#                 information about allocated memory.
 # CONSTANT_MEM_ESTIMATE: Use normalized portable data type estimates
-#                        instead of sizeof() to get actual machine data 
+#                        instead of sizeof() to get actual machine data
 #                        sizes. Necessary to make the prover behave _exactly_
-#                        the same on different machines, but makes memory 
+#                        the same on different machines, but makes memory
 #                        estimation worse on most machines!
 # STACK_SIZE=VALUE: Increase the system stacksize to value and run a
 #                   freshly exec()'ed copy of E. This seems to work
@@ -118,23 +118,23 @@
 
 ARCHFLAGS  =  # -mdynamic-no-pic # Helps a tiny bit on Mac
               # -mcpu=v8 -mtune=ultrasparc # Somewhat better than
-                                           # without, v9 is 
+                                           # without, v9 is
                                            # worse (!), ultrasparc does
                                            # not work at all (probably
                                            # due to 64 bit include files
-                                           # or something...) 
+                                           # or something...)
 # ARCHFLAGS   = -march=i686  # No detectable improvement
 
 # CFLAGS for different setups:
-# 
+#
 # Solaris/Linux with gcc
 #
 # CFLAGS     = -O6 -Wall -Wno-char-subscripts -Wshadow -ansi \
 #             -pedantic -I../include $(DEBUGFLAGS) \
 #             $(BUILDFLAGS) $(ARCHFLAGS)
 
-WFLAGS     = 
-CFLAGS     = -O6 -fomit-frame-pointer -Wall -std=gnu99\
+WFLAGS     =
+CFLAGS     = -O4 -fomit-frame-pointer -Wall -std=gnu99\
              $(WFLAGS) \
              -I../include $(DEBUGFLAGS) $(BUILDFLAGS) $(ARCHFLAGS)
 
@@ -173,11 +173,7 @@
 
 # Both makedepend and a good C compiler can be used to generate
 # dependencies. gcc does a better job than makedepend, so it is the
-# default. 
+# default.
 #
 # MAKEDEPEND = echo "" > Makefile.dependencies; makedepend -- $(CFLAGS) -- -f Makefile.dependencies *.c
 MAKEDEPEND = $(CC) -M $(CFLAGS) *.c > Makefile.dependencies
-
-
-
-
