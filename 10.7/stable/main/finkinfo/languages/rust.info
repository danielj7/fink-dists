Package: rust
Version: 1.1.0
Revision: 1
Description: Safe Fast System Programming Language
Maintainer: Brendan Cully <fink@brendan.cully.org>
License: BSD
Source: http://static.rust-lang.org/dist/rustc-%v-src.tar.gz
Source-MD5: 5f2f923f8d1c77a55721d1f0813a158a
Source2: http://static.rust-lang.org/stage0-snapshots/rust-stage0-2015-04-27-857ef6e-macos-x86_64-43a1c1fba0d1dfee4c2ca310d506f8f5f51b3f6f.tar.bz2
Source2-MD5: 3e6d073f70c6332c23c529c6211f718f
# prevent fink from unpacking
Source2Rename: rust-stage0-2015-04-27-857ef6e-macos-x86_64-43a1c1fba0d1dfee4c2ca310d506f8f5f51b3f6f
SourceDirectory: rustc-%v

BuildDepends: nodejs, pandoc, texlive-base

ConfigureParams: --sysconfdir=%p/etc --localstatedir=%p/var/lib
PatchScript: perl -pi -e 's,3.6\*\),3.6\* \| 7.0.\*\),g' configure
CompileScript: <<
mv ../rust-stage0-2015-04-27-857ef6e-macos-x86_64-43a1c1fba0d1dfee4c2ca310d506f8f5f51b3f6f rust-stage0-2015-04-27-857ef6e-macos-x86_64-43a1c1fba0d1dfee4c2ca310d506f8f5f51b3f6f.tar.bz2
./configure %c
chmod u+w config.mk
echo SNAPSHOT_FILE := $PWD/rust-stage0-2015-04-27-857ef6e-macos-x86_64-43a1c1fba0d1dfee4c2ca310d506f8f5f51b3f6f.tar.bz2
make
make dist-docs
<<
InstallScript: <<
#!/bin/sh -ev
  make DESTDIR=%d install
  # lib path is in build tree
  for tgt in %i/bin/* %i/lib/*; do
    for lib in $(otool -L $tgt | grep /stage1/ | awk '{print $1}')
    do
      install_name_tool -change $lib %p/lib/$(basename $lib) $tgt
    done
  done
  for tgt in %i/lib/rustlib/x86_64-apple-darwin/lib; do
    for lib in $(otool -L $tgt | grep /stage2/ | awk '{print $1}')
    do
      install_name_tool -change $lib %p/lib/$(basename $lib) $tgt
    done
  done
  for tgt in %i/lib/*.dylib; do
    install_name_tool -id %p/lib/$(basename $tgt) $tgt
  done
  for tgt in %i/lib/rustlib/x86_64-apple-darwin/lib/*.dylib; do
    install_name_tool -id %p/lib/rustlib/x86_64-apple-darwin/lib/$(basename $tgt) $tgt
  done
<<
Shlibs: <<
  %p/lib/libarena-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/libflate-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/libfmt_macros-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/libgetopts-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/libgraphviz-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/liblog-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librbml-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc_back-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc_borrowck-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc_data_structures-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc_driver-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc_lint-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc_llvm-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc_privacy-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc_resolve-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc_trans-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustc_typeck-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/librustdoc-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/libserialize-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/libstd-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/libsyntax-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/libterm-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/libtest-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/libarena-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/libflate-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/libfmt_macros-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/libgetopts-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/libgraphviz-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/liblog-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librbml-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc_back-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc_borrowck-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc_data_structures-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc_driver-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc_lint-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc_llvm-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc_privacy-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc_resolve-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc_trans-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustc_typeck-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/librustdoc-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/libserialize-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/libstd-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/libsyntax-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/libterm-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
  %p/lib/rustlib/x86_64-apple-darwin/lib/libtest-e9599659.dylib 0.0.0 %n (>= 1.1.0-1)
<<
DocFiles: <<
  AUTHORS.txt CONTRIBUTING.md COPYRIGHT LICENSE-APACHE LICENSE-MIT README.md
  dist/doc/%v-dev/*
<<

Homepage: http://www.rust-lang.org/
DescDetail: <<
Rust is a curly-brace, block-structured expression language. It visually
resembles the C language family, but differs significantly in syntactic
and semantic details. Its design is oriented toward concerns of
"programming in the large", that is, of creating and maintaining
boundaries - both abstract and operational - that preserve large-system
integrity, availability and concurrency.

It supports a mixture of imperative procedural, concurrent actor,
object-oriented and pure functional styles. Rust also supports generic
programming and metaprogramming, in both static and dynamic styles.
<<
