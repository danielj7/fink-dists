Package: libapache2-mod-svn
Version: 1.4.2
Revision: 1
Description: Subversion - mod_svn
License: BSD
Maintainer: Christian Schaffner <chris01@users.sourceforge.net>

# Dependencies:
Depends: apache2 (>= 2.0.58-1), apr-common (>= 0.9.12-1), svn-shlibs (>= %v-1)
BuildDepends: fink (>= 0.24.12-1), svn-dev (>= %v-1), apr (>= 0.9.12-1), apr-common (>= 0.9.12-1), db43, gdbm3, expat (>= 1.95.6-2), libxml2 (>= 2.5.10-12), neon26, libiconv-dev (>= 1.9.1-11), apache2-dev (>= 2.0.58-1), gettext-bin, gettext-tools, libgettext3-dev, io-string-pm, libtool14 (>= 1.5.10-1), autoconf (>= 2.60-1), automake1.9
Conflicts: svn-client (<= 0.26.0-2), apache2 (<< 2.0.47-1)

# Unpack Phase:
Source: http://subversion.tigris.org/downloads/subversion-%v.tar.bz2
Source-MD5: edebb06afb3266d09e75f728a8259677

# Patch Phase:
PatchFile: svn.patch
PatchFile-MD5: 78a6c8f6362fa505a3079fcd5f8e660c
PatchScript: <<
 sed 's|@FINKPREFIX@|%p|g' < %{PatchFile} | patch -p1
 perl -pi.bak -e  's| 0\.26\.1| 0.26.1  0.26.2|' configure.in
<<

# Compile Phase:
ConfigureParams: --libexecdir='${prefix}/lib/svn' --mandir='${prefix}/share/man' --infodir='${prefix}/share/info' --with-neon=%p --with-apr=%p --with-apr-util=%p --enable-shared --with-apxs=%p/sbin/apxs --without-apache --disable-mod-activation --without-jdk --disable-javahl --with-jikes=no --disable-swig-bindings --without-swig --without-python --without-perl --without-ruby --with-berkeley-db=%p/include/db4:%p/lib --disable-dependency-tracking --disable-keychain
SetCPPFLAGS: -I%p/include/db4 -no-cpp-precomp
GCC: 3.3
CompileScript: <<
#! /bin/sh -ev
 # recreate configure with libtool 1.5
 ./autogen.sh
 ### Recreate build-outputs.mk to not include already installed libs
 ./gen-make.py --installed-libs libsvn_client,libsvn_delta,libsvn_diff,libsvn_fs,libsvn_fs_base,libsvn_fs_fs,libsvn_ra,libsvn_ra_dav,libsvn_ra_local,libsvn_ra_svn,libsvn_repos,libsvn_subr,libsvn_wc
 ### Configure shared
 export F77=no; ./configure %c

 ### make mod_svn shared
 make apache-mod
<<

# Install Phase:
DocFiles: <<
 COPYING HACKING INSTALL
<<
InstallScript: <<
 make install-mods-shared DESTDIR=%d

 # Install default directory for repositories
 /usr/bin/install -d %i/var
 /usr/bin/install -m 770 -d %i/var/svn
<<
PreInstScript: <<
 if [ "$1" = upgrade ]; then
   if dpkg --compare-versions "$2" lt "1.2.0"; then
     echo ""
     echo "WARNING: Subversion (svn) 1.2 or later uses Berkeley DB 4.3 (db43)."
     echo "If you are upgrading from an earlier version and you are using"
     echo "BDB repositories please read"
     echo ""
     echo "  http://subversion.tigris.org/faq.html#bdb43-upgrade"
     echo ""
     echo "and"
     echo ""
     echo "  http://subversion.tigris.org/faq.html#dumpload"
     echo ""
     echo "To install svnadmin binary linked to an older Berkeley DB version"
     echo "please install the fink package 'svnadmin-dbXX', e.g. by typing"
     echo ""
     echo "  fink install svnadmin-db42"
     echo "and following the documentation of svnadmin-dbXX, e.g.:"
     echo ""
     echo "  fink info svnadmin-db42"
     echo ""
     echo -n "Do you want to continue [Y/n] ? ";
     if read -t 3600 CONTINUECHOICE; then
       case $CONTINUECHOICE in
         y|Y|'' ) ;;
         * ) exit 1 ;;
       esac
     else
       echo "Time-out."
     fi
   fi
 fi
 exit 0
<<
PostInstScript: <<
 chown www:admin %p/var/svn
 APXS=%p/sbin/apxs
 MOD_PREFIX=`$APXS -q LIBEXECDIR`

 # Enable svn modules
 MODULENAME=dav_svn
 MODULE=$MOD_PREFIX/mod_$MODULENAME.so
 echo "Enabling mod_$MODULENAME module..."
 $APXS -e -a -n $MODULENAME $MODULE

 MODULENAME=authz_svn
 MODULE=$MOD_PREFIX/mod_$MODULENAME.so
 echo "Enabling mod_$MODULENAME module..."
 $APXS -e -a -n $MODULENAME $MODULE

 if test `ps -U www | grep -c %p/sbin/httpd` -ge 1; then
   echo "Restarting apache2..."
   %p/sbin/apachectl graceful
 fi
<<
PreRmScript: <<
 if [ "$1" != "remove" -a "$1" != "purge" ]; then
   exit 0
 fi

 # Disable svn modules
 APXS=%p/sbin/apxs
 MOD_PREFIX=`$APXS -q LIBEXECDIR`

 MODULENAME=dav_svn
 MODULE=$MOD_PREFIX/mod_$MODULENAME.so
 echo "Disabling mod_$MODULENAME module..."
 $APXS -e -A -n $MODULENAME $MODULE

 MODULENAME=authz_svn
 MODULE=$MOD_PREFIX/mod_$MODULENAME.so
 echo "Disabling mod_$MODULENAME module..."
 $APXS -e -A -n $MODULENAME $MODULE

 if %p/sbin/apachectl configtest > /dev/null 2>&1; then
   # httpd.conf is correct, e.g. doesn't contain any DAV provider
   if test `ps -U www | grep -c %p/sbin/httpd` -ge 1; then
  echo "Restarting apache2..."
  %p/sbin/apachectl graceful
   fi
 else
   # httpd.conf has syntax errors, e.g. remaining DAV providers
   echo "#####################################################################"
   echo "The subversion apache modules are now disabled in the"
   echo "%p/etc/apache2/httpd.conf file and will be removed. Please make sure"
   echo "that you haven't any svn repositories still enabled in your"
   echo "%p/etc/apache2/httpd.conf file. You then should restart apache by"
   echo "typing '%p/sbin/apachectl graceful'."
   echo "#####################################################################"
 fi
<<

# Additional Info
DescDetail: <<
 WebDAV server (Apache 2 module) for Subversion.
<<
DescUsage: <<
 This installs the subversion network server for apache2.
 Please read section III C in the file 
 %p/share/doc/%n/INSTALL
 for informations on how to run a subversion server via apache2.
 
 You could install the repositories under the preconfigured directory
 %p/var/svn
 which should have the correct permissions. Make sure that all files
 in the new repository have the correct permissions for apache (and svnserve)
 to read and write. E.g. run 'chown -R www %p/var/svn/yourrepos' and 
 'chmod -R go-rwx %p/var/svn/yourrepos'.
 
 You then need to add the following lines to your
 %p/etc/apache2/httpd.conf
 file:

 <Location /svn/yourrepos>
   DAV svn
   SVNPath %p/var/svn/yourrepos
 
   # The following allows for basic http authentication.  Basic 
   # authentication should not be considered secure for any particularly 
   # rigorous definition of secure.
 
   # to create a passwd file
   # # rm -f %p/etc/apache2/dav_svn.passwd 
   # # htpasswd2 -c %p/etc/apache2/dav_svn.passwd newuser
   # New password: 
   # Re-type new password: 
   # Adding password for user newuser
   # #
 
   # Uncomment the following 3 lines to enable Basic Authentication
   # AuthType Basic
   # AuthName "Subversion Repository"
   # AuthUserFile %p/etc/apache2/dav_svn.passwd
 
   # Uncomment the following line to enable Authz Authentication
   # AuthzSVNAccessFile %p/etc/apache2/dav_svn.authz
 
   # The following three lines allow anonymous read, but make
   # committers authenticate themselves.
   # <LimitExcept GET PROPFIND OPTIONS REPORT>
   #   Require valid-user
   # </LimitExcept> 
 </Location>
 
 Your repository should show up at <http://localhost/svn/yourrepos>. 
 If it does not check your apache2 logs at %p/var/apache2/logs/error_log
 
 If you need the examples or the tools (e.g. svnadmin) install the 
 'svn' package.

 WARNING:
 
 Subversion (svn) 1.2 or later uses Berkeley DB 4.3 (db43).
 If you are upgrading from an earlier version and you are using
 BDB repositories please read

  http://subversion.tigris.org/faq.html#bdb43-upgrade

 and

  http://subversion.tigris.org/faq.html#dumpload

 To install svnadmin binary linked to an older Berkeley DB version
 please install the fink package 'svnadmin-dbXX', e.g. by typing

   fink install svnadmin-db42
 
 and following the documentation of svnadmin-dbXX, e.g.:
 
   fink info svnadmin-db42
<<
DescPort: <<
 Patches applied to be able to not rebuild already installed libraries
 from the svn-shlibs package. Borrowed from the netbsd 
 pkgsrc/devel/subversion/ package

 Added 'export F77=no;' to configure in order not to fail if the 
 fort77 package is installed.

 Keychain disabled on Mac OS X 10.3
<<
Homepage: http://subversion.tigris.org/
