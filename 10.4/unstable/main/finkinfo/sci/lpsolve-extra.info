Info2: <<
Package: lpsolve-extra
Description: External Language Interfaces for lpsolve
Version: 5.5.0.12
Revision: 1
# rev-up and adapt next line at version-increases of lpsolve or glpk
Type: glpk (4.13), maj (5.5)

#BuildDepends: lpsolve%type_raw[maj]-dev (>= %v-1), glpk (>= %type_raw[glpk]-1), bison, flex, sed | ssed
BuildDepends: lpsolve%type_raw[maj]-dev (>= %v-1), bison, flex, sed | ssed
Depends: lpsolve%type_raw[maj]-shlibs (>= %type_raw[maj].0.0-1)

# we need the lp_solve source again, for yacc_read.c lp_Hash.c lp_utils.c shared/{commonlib,myblas}.c and colamd/colamd.c
Source: mirror:sourceforge:lpsolve/lp_solve_%v_source.tar.gz
Source-MD5: bfb8c27aacca34b2263d3f37b3ad51ab
# those are the real sources:
Source2: mirror:sourceforge:lpsolve/lp_solve_%v_xli_MathProg_source.tar.gz
Source2-MD5: f1fc9f7504174fb9de1878056d829245
Source3: mirror:sourceforge:lpsolve/lp_solve_%v_xli_CPLEX_source.tar.gz
Source3-MD5: b28135c499f5c37c71ab698e93efd021
Source4: mirror:sourceforge:lpsolve/lp_solve_%v_xli_DIMACS_source.tar.gz
Source4-MD5: a19fc7ed96f8966058eedef35fd8a729
Source5: mirror:sourceforge:lpsolve/lp_solve_%v_xli_LINDO_source.tar.gz
Source5-MD5: 1f09a54c4bcc6fb0986d5cd2bb4318c3
Source6: mirror:sourceforge:lpsolve/lp_solve_%v_bfp_GLPK_source.tar.gz
Source6-MD5: ef8fcdd1555c6647ea6b1e0cd6d52165
Source7: mirror:sourceforge:lpsolve/lp_solve_%v_bfp_LUSOL_source.tar.gz
Source7-MD5: 581fd89ba7ea6eec0bf7a9903dd112b5
Source8: mirror:sourceforge:lpsolve/lp_solve_%v_bfp_etaPFI_source.tar.gz
Source8-MD5: c88b0da84ce24818086a73f0e486dbcd
Source9: mirror:sourceforge:lpsolve/lp_solve_%v_doc.tar.gz
Source9-MD5: a4a952d8c792f7e2e5b269e64da02074
Source9ExtractDir: lp_solve_%type_raw[maj]/doc
# ZIMPL needs more work _ this version doesn't even seem to fit lpsolve55 ..
#Source10: http://personales.upv.es/arodrigu/SolverWS/descargas/xli_ZIMPL.zip
#Source10-MD5: 274645d82a31bc9f7ffc8b758811c285
#Source10ExtractDir: lp_solve_%type_raw[maj]/xli/xli_ZIMPL
# 4.13 is the last version of glpk against which the MathProg xli will compile
# (the symbols lib_set_fault_hook and lib_set_print_hook are needed, and disappeared (even from the build-dir) in 4.14)
Source11: mirror:gnu:glpk/glpk-%type_raw[glpk].tar.gz
Source11-MD5: d1e7142be353da423ee4662499813541
#
SourceDirectory: lp_solve_%type_raw[maj]

PatchScript: <<
#!/bin/sh -ev
#### ZIMPL
#  sed -r -e 's,CPLEX,ZIMPL,' -e "s,^(src=).*,\1'lp_ZIMPL.c'," < xli/xli_CPLEX/ccc > xli/xli_ZIMPL/ccc
#### the ccc files
  sed -ri.bak -e "{
	# remove colamd from the srcs; never needed :
	s,[-./Ia-z]*colamd(\.c|) ,,
	# set optimisation flags; use -Os for the non time-critical parts
	s,opts='',opts='-Os'\nopts=\"\$opts -fstrict-aliasing\",
	# -fpic not availaible on MacOSX, -fPIC default
        s, \-fpic,,
	# link as bundles
	s,so=\"\-s.*,so='-bundle',
	# strip (and -lc -lm are libSystem, which is always there)
	s: \-lc \-lm: -Wl,-x -dead_strip -exported_symbols_list ../exp_sym:
	# Remove from the srcs everything which is already in the lib
	# (the differences in -D flags do not matter), and link with the lib.
#	/^src=/s,\.\./\.\./[^ ']*,,g
#	s,\-Wl,-L%p/lib -llpsolve &,
	# Finally use by preference the installed lpsolve headers _ doesn't matter irrespective of the previous choice _ ,
	# so the only files we still need from Source1 (if previous choice is not commented out) are yacc_read.c and lp_Hash.c
	s,\-I\.\./\.\./,-I%p/include/lpsolve/,g
	s,\-I\.\./\.\.,-I%p/include/lpsolve &,
	}" */*/ccc
#### glpk
# the bfp would still build with glpk-4.14, given the following changes _ but would still require
# a special build of glpk, installing a number of headers that have become internal _ not worth it.
#  # accomodate changes in glpk 4.14
#  perl -pi -e 's,glp_inv_,inv_,g' bfp/bfp_GLPK/lp_glpkLU.c
#  # link the bfp with glpk (4.14) instead of re-compiling:
#  perl -pi.bak -e 's, \$\{glpk\},,; s,I\$\{glpkdir\},I%p,; s,\-Wl,-L%p/lib -lglpk $&,' bfp/bfp_GLPK/ccc
  # for xli_MathProg, use the downloaded glpk-4.13 :
  perl -pi -e 's,=/glpk,=%b/../glpk-%type_raw[glpk],' {bfp/bfp_GLPK,xli/xli_MathProg}/ccc
####
  # prior non-static declaration in lp_lib.h:2134 :
  perl -pi -e 's,static (MYBOOL is_chsign),\1,' xli/xli_DIMACS/lp_Dimacs.c
  # rm irrelevant files
  rm -f xli/*/xli_* bfp/*/bfp_* */*/c*.bat */*.bat
#### from lpsolve pkg _ just to be sure to use identical files :
  ## Dynamic library filenames on OS X end with ".dylib", not ".so". Also, give full path for dlopen.
  perl -pi.bak -e 's,liblpsolve%type_pkg[maj].so,%p/lib/liblpsolve.dylib,' lp_explicit.h
## hard-code the paths to the modules, for the user's convenience (preserving the possibility to specify
## a full path, absolute or relative), since fink doesn't give us a decent DYLD(_FALLBACK)_LIBRARY_PATH...
  perl -pi.bak -e "s:( +)  strcat\(((bfp|xli)name), \".so\"\);:$&\n\1char finklib[127]=\"%p/lib/\";
\1if(strrchr(\2,'/') != NULL) finklib[0]=0;
\1strcat(finklib,\2);:;
        s:(dlopen\().*name:\1finklib:" lp_lib.c
# Use vecLib :
  sed -i.bak -e 's,myBLAS,/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Versions/Current/libBLAS.dylib,' lp_lib.h
  sed -i.bak -e '/WIN32/,/endif/{
	/WIN32/d
	/endif/d
	}' bfp/bfp_LUSOL/lp_LUSOL.h
 sed -i.bak -e '/3, "\.so"/,+1{
	s,3,6,
	s,so,dylib,
	}' {shared,bfp/bfp_LUSOL/LUSOL}/commonlib.c shared/myblas.c
# make the .bat scripts usable
  sed -ri -e 's,^del,rm,' -e 's,\r$,,' lp_rlp.bat */*/*.bat
<<
CompileScript: <<
#!/bin/sh -ev
  for d in xli/xli_CPLEX xli/xli_LINDO; do cd $d; . ./*.bat; cd -; done
  for d in bfp xli; do \
	cd $d
	D=`echo $d|tr "[:lower:]" "[:upper:]"`
	sed -r -e '/EXPORTS/d' -e 's,^ +,_,' < lp_$D.def > exp_sym
	for n in ${d}_*; do cd $n; sh -ev ccc; cd -; done
	cd ..
  done
<<
InstallScript: <<
#!/bin/sh -ev
  # bundles
  mkdir -p %i/lib
  cp -p */*/*.so %i/lib
  chmod 644 %i/lib/*
  # Headers
  for d in bfp xli; do \
	cd $d
	mkdir -p %i/include/lpsolve/$d
	cp *.{def,h,c} %i/include/lpsolve/$d
	for n in ${d}_* ; do mkdir -p %i/include/lpsolve/$d/$n; cp $n/*.h %i/include/lpsolve/$d/$n; done
	cd ..
  done
  # the following are already in lpsolve
  rm -f %i/include/lpsolve/bfp/{lp_BFP,bfp_LUSOL/lp_LUSOL}.h
  # docs
  sed -ri -e '/^(This directory|To build)/d' -e '/^$/d' xli/*/readme.txt
  mkdir -p %i/share/doc/%n/examples/lpsolve %i/share/doc/%n/examples/DIMACS %i/share/doc/lpsolve%type_raw[maj]-shlibs
  mv doc %i/share/doc/%n/html
  echo "#!/bin/sh
	open html/contents.htm" > %i/share/doc/%n/viewdoc
  echo "#!/bin/sh
	open html/search.htm" > %i/share/doc/%n/searchdoc
  chmod a+x %i/share/doc/%n/{view,search}doc
  ln -s other/README.txt %i/share/doc/%n/readme_lpsolve
  ln -s ../lpsolve%type_raw[maj]-shlibs %i/share/doc/%n/other
  ln -s ../%n %i/share/doc/lpsolve%type_raw[maj]-shlibs/extras
  cp -p xli/xli_DIMACS/*.net xli/xli_DIMACS/*.htm %i/share/doc/%n/examples/DIMACS
  ln -s examples/DIMACS %i/share/doc/%n/DIMACS
  # And since we had anyway to expand the src of lpsolve, we can as well install its demo
  # Here we delete the $src, and link instead with the dylib, forgetting our scruples about different '-D' flags ...
  # for a demo, the risk is compensated by the gain in space : 18K vs > 600K
  cd demo
  sed -ri -e 's,\$src ,,' -e 's,\$math \$dl,%p/lib/liblpsolve.dylib -mdynamic-no-pic -Os -fstrict-aliasing -s -dead_strip,' ccc
  sh -ev ccc
  cp -p demo %i/share/doc/%n/examples/lpsolve
  ln -s examples/lpsolve/demo %i/share/doc/%n/lpsolve_demo
<<

DocFiles: <<
  bfp/bfp_LUSOL/LUSOL/LUSOL-overview.txt:overview_LUSOL
  xli/xli_CPLEX/readme.txt:readme_CPLEX
  xli/xli_LINDO/readme.txt:readme_LINDO
  xli/xli_MathProg/readme.txt:readme_MathProg
<<
DescDetail: <<
External Language Interfaces (XLI) and Basis Factorization Packages (BFP)
for the linear (mixed integer) programming solver lpsolve.
<<

DescPackaging: <<
<<

DescUsage: <<
For doc and demos, cf %p/share/doc/%n
For a (lpsolve, not lpsolve-extra) demo, type : %p/share/doc/%n/lpsolve_demo
Mailing list is at lp_solve@yahoogroups.com
<<
License: LGPL
HomePage: http://sourceforge.net/projects/lpsolve/
Maintainer: JF Mertens <jfmertens@users.sourceforge.net>
<<
