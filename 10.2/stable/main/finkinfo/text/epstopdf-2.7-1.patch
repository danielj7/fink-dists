--- teTeX-1.0/texk/tetex/epstopdf	Mon Jan 31 15:05:00 2000
+++ teTeX-src-beta-20021017/texk/tetex/epstopdf	Wed Apr 17 14:46:31 2002
@@ -1,13 +1,13 @@
-eval '(exit $?0)' && eval 'exec perl -S $0 ${1+"$@"}' && eval 'exec perl -S $0 $argv:q'
-  if 0;
-use strict;
+#!/usr/bin/env perl
 
 # Change by Thomas Esser, Sept. 1998: The above lines allows us to find
 # perl along $PATH rather than guessing a fixed location. The above
 # construction should work with most shells.
 
+use strict;
+
 # A script to transform an EPS file so that:
-#   a) it is guaranteed to start at the 0,0 coordinate
+#   a) it is guarenteed to start at the 0,0 coordinate
 #   b) it sets a page size exactly corresponding to the BoundingBox
 # This means that when Ghostscript renders it, the result needs no
 # cropping, and the PDF MediaBox is correct.
@@ -39,13 +39,18 @@
 #    * using of $bbxpat in all BoundingBox cases,
 #      correct the first white space to '...Box:\s*$bb...'
 #    * corrected first line (one line instead of two before 'if 0;';
+#  2000/11/05 v2.6 (Heiko Oberdiek)
+#    * %%HiresBoundingBox corrected to %%HiResBoundingBox
+#  2001/03/05 v2.7 (Heiko Oberdiek)
+#    * Newline before grestore for the case that there is no
+#      whitespace at the end of the eps file.
 #
 
 ### program identification
 my $program = "epstopdf";
-my $filedate="1999/05/06";
-my $fileversion="2.5";
-my $copyright = "Copyright 1998,1999 by Sebastian Rahtz et al.";
+my $filedate="2001/03/05";
+my $fileversion="2.7";
+my $copyright = "Copyright 1998-2001 by Sebastian Rahtz et al.";
 my $title = "\U$program\E $fileversion, $filedate - $copyright\n";
 
 ### ghostscript command name
@@ -73,15 +78,15 @@
   --(no)filter:     read standard input   (default: $bool[$::opt_filter])
   --(no)gs:         run ghostscript       (default: $bool[$::opt_gs])
   --(no)compress:   use compression       (default: $bool[$::opt_compress])
-  --(no)hires:      scan HiresBoundingBox (default: $bool[$::opt_hires])
+  --(no)hires:      scan HiResBoundingBox (default: $bool[$::opt_hires])
   --(no)exact:      scan ExactBoundingBox (default: $bool[$::opt_exact])
   --(no)debug:      debug informations    (default: $bool[$::opt_debug])
 Examples for producing 'test.pdf':
   * $program test.eps
   * produce postscript | $program --filter >test.pdf
   * produce postscript | $program -f -d -o=test.pdf
-Example: look for HiresBoundingBox and produce corrected PostScript:
-  * $program -d --nogs -hires test.ps>testcorr.ps 
+Example: look for HiResBoundingBox and produce corrected PostScript:
+  * $program -d --nogs -hires test.ps>testcorr.ps
 END_OF_USAGE
 
 ### process options
@@ -117,7 +122,7 @@
 ### get input filename
 my $InputFilename = "";
 if ($::opt_filter) {
-  @ARGV == 0 or 
+  @ARGV == 0 or
     die errorUsage "Input file cannot be used with filter option";
   $InputFilename = "-";
   debug "Input file: standard input";
@@ -138,7 +143,7 @@
 my $BBName = "%%BoundingBox:";
 !($::opt_hires and $::opt_exact) or
   error "Options --hires and --exact cannot be used together";
-$BBName = "%%HiresBoundingBox:" if $::opt_hires;
+$BBName = "%%HiResBoundingBox:" if $::opt_hires;
 $BBName = "%%ExactBoundingBox:" if $::opt_exact;
 debug "BoundingBox comment:", $BBName;
 
@@ -170,7 +175,7 @@
 }
 
 ### open input file
-open(IN,"<$InputFilename") or error "Cannot open", 
+open(IN,"<$InputFilename") or error "Cannot open",
   ($::opt_filter) ? "standard input" : "'$InputFilename'";
 binmode IN;
 
@@ -262,7 +267,7 @@
       seek(IN, $pos, 0) or error "Cannot go back to line '$BBName (atend)'";
       last;
     }
-    
+
     # print header line
     print OUT;
   }
@@ -275,7 +280,7 @@
 
 ### close files
 close(IN);
-print OUT "grestore\n" if $BBCorrected;
+print OUT "\ngrestore\n" if $BBCorrected;
 close(OUT);
 warning "BoundingBox not found" unless $BBCorrected;
 debug "Ready.";
