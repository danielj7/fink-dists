diff -Nur gforth-0.5.0/arch/power/_sync_cache_range.c gforth-0.5.0-patched/arch/power/_sync_cache_range.c
--- gforth-0.5.0/arch/power/_sync_cache_range.c	Sat Sep 23 20:22:05 2000
+++ gforth-0.5.0-patched/arch/power/_sync_cache_range.c	Wed Feb  6 01:12:15 2002
@@ -34,7 +34,7 @@
      a system call, because the architecture is pretty shoddy in this
      area */
   for (; p < (addr+size); p+=cache_block_size)
-    asm("dcbst 0,%0; sync; icbi 0,%0"::"r"(p));
-  asm("sync; isync"); /* PPC 604e needs the additional sync
+    asm("dcbst 0,%0 \n sync \n icbi 0,%0"::"r"(p));
+  asm("sync \n isync"); /* PPC 604e needs the additional sync
 			 according to Tim Olson */
 }
--- gforth-0.5.0/engine/signals.c	2000-09-23 11:22:09.000000000 -0700
+++ gforth-0.5.0-patched/engine/signals.c	2002-08-22 03:51:30.000000000 -0700
@@ -114,14 +114,14 @@
   int code;
 
   switch(info->si_code) {
-  case FPE_INTDIV: code=-10; break; /* integer divide by zero */
-  case FPE_INTOVF: code=-11; break; /* integer overflow */
+/*  case FPE_INTDIV: code=-10; break;  integer divide by zero */
+/*  case FPE_INTOVF: code=-11; break;  integer overflow */
   case FPE_FLTDIV: code=-42; break; /* floating point divide by zero */
-  case FPE_FLTOVF: code=-43; break; /* floating point overflow  */
+/*   case FPE_FLTOVF: code=-43; break;  floating point overflow  */
   case FPE_FLTUND: code=-54; break; /* floating point underflow  */
   case FPE_FLTRES: code=-41; break; /* floating point inexact result  */
   case FPE_FLTINV: /* invalid floating point operation  */
-  case FPE_FLTSUB: /* subscript out of range  */
+/*   case FPE_FLTSUB:  subscript out of range  */
   default: code=-55; break;
   }
   longjmp(throw_jmp_buf,code);
