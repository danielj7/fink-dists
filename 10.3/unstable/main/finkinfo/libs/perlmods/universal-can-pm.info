Info2: <<
Package: universal-can-pm%type_pkg[perl]
Version: 1.11
Revision: 11
Description: UNIVERSAL::can module hack
Type: perl(5.6.0 5.8.0 5.8.1 5.8.4 5.8.6)
License: Artistic
Maintainer: Benjamin Reed <universal-can-pm@fink.racoonfink.com>

Depends: fink (>= 0.20.1-1), perl%type_pkg[perl]-core
BuildDepends: perl%type_pkg[perl]-core, fink (>= 0.20.2.1-1), module-build-pm%type_pkg[perl], test-simple-pm%type_pkg[perl], test-warn-pm%type_pkg[perl]

Source: mirror:cpan:authors/id/C/CH/CHROMATIC/UNIVERSAL-can-%v.tar.gz
Source-MD5: a11167ca16c6d9767bab1ee41332f096

CompileScript: <<
#!/bin/sh -ex
	exec 2>&1
	perlversion=%type_raw[perl]
	eval "`perl$perlversion -V:archname`"
	perl$perlversion Build.PL \
		--install_path arch=%i/lib/perl5/$perlversion/$archname \
		--install_path bin=%i/bin \
		--install_path bindoc=%i/lib/perl5/$perlversion/man/man1 \
		--install_path lib=%i/lib/perl5/$perlversion \
		--install_path libdoc=%i/lib/perl5/$perlversion/man/man3 \
		--install_path script=%i/bin
	./Build
	./Build test
<<

UpdatePOD: true
InstallScript: <<
	./Build install
	find %d -name .packlist -exec rm -rf {} \;
<<
DocFiles: Changes MANIFEST README SIGNATURE

Homepage: http://search.cpan.org/dist/UNIVERSAL-can
DescDetail: <<
The UNIVERSAL class provides a few default methods so that all objects
can use them.  Object orientation allows programmers to override these
methods in subclasses to provide more specific and appropriate behavior.

Some authors call methods in the UNIVERSAL class on potential invocants
as functions, bypassing any possible overriding.  This is wrong and you
should not do it.  Unfortunately, not everyone heeds this warning and
their bad code can break your good code.

This module replaces UNIVERSAL::can() with a method that checks to see
if the first argument is a valid invocant (whether an object -- a
blessed referent -- or the name of a class).  If so, and if the
invocant's class has its own can() method, it calls that as a method.
Otherwise, everything works as you might expect.

If someone attempts to call UNIVERSAL::can() as a function, this module
will emit a lexical warning (see perllexwarn) to that effect.  You can
disable it with no warnings; or no warnings 'UNIVERSAL::isa';, but don't
do that; fix the code instead.
<<
<<

