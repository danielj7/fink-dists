diff -uNr gcc-4.2-20060610/boehm-gc/darwin_stop_world.c gcc-4.2-20060610.java/boehm-gc/darwin_stop_world.c
--- gcc-4.2-20060610/boehm-gc/darwin_stop_world.c	2006-06-03 11:23:54.000000000 -0400
+++ gcc-4.2-20060610.java/boehm-gc/darwin_stop_world.c	2006-06-10 19:23:50.000000000 -0400
@@ -125,7 +125,18 @@
 			     (natural_t*)&state,
 			     &thread_state_count);
 	if(r != KERN_SUCCESS) ABORT("thread_get_state failed");
-	
+
+#if defined(I386)
+	lo = state.esp;
+
+	GC_push_one(state.eax); 
+	GC_push_one(state.ebx); 
+	GC_push_one(state.ecx); 
+	GC_push_one(state.edx); 
+	GC_push_one(state.edi); 
+	GC_push_one(state.esi); 
+	GC_push_one(state.ebp); 
+#elif defined(POWERPC)
 	lo = (void*)(state . THREAD_FLD (r1) - PPC_RED_ZONE_SIZE);
         
 	GC_push_one(state . THREAD_FLD (r0)); 
@@ -159,6 +170,9 @@
 	GC_push_one(state . THREAD_FLD (r29)); 
 	GC_push_one(state . THREAD_FLD (r30)); 
 	GC_push_one(state . THREAD_FLD (r31));
+#else
+# error FIXME for non-x86 || ppc architectures
+#endif
       } /* p != me */
       if(p->flags & MAIN_THREAD)
 	hi = GC_stackbottom;
diff -uNr gcc-4.2-20060610/boehm-gc/include/private/gcconfig.h gcc-4.2-20060610.java/boehm-gc/include/private/gcconfig.h
--- gcc-4.2-20060610/boehm-gc/include/private/gcconfig.h	2006-05-22 20:30:16.000000000 -0400
+++ gcc-4.2-20060610.java/boehm-gc/include/private/gcconfig.h	2006-06-10 19:12:03.000000000 -0400
@@ -304,7 +304,7 @@
 #    define mach_type_known
 #   elif defined(__i386__)
 #    define I386
-     --> Not really supported, but at least we recognize it.
+#    define mach_type_known
 #   endif
 # endif
 # if defined(NeXT) && defined(mc68000)
@@ -1301,6 +1301,29 @@
 /* #     define MPROTECT_VDB  Not quite working yet? */
 #     define DYNAMIC_LOADING
 #   endif
+#   ifdef DARWIN
+#     define OS_TYPE "DARWIN"
+#     define DARWIN_DONT_PARSE_STACK
+#     define DYNAMIC_LOADING
+      /* XXX: see get_end(3), get_etext() and get_end() should not be used.
+        These aren't used when dyld support is enabled (it is by default) */
+#     define DATASTART ((ptr_t) get_etext())
+#     define DATAEND	((ptr_t) get_end())
+#     define STACKBOTTOM ((ptr_t) 0xc0000000)
+#     define USE_MMAP
+#     define USE_MMAP_ANON
+#     define USE_ASM_PUSH_REGS
+      /* This is potentially buggy. It needs more testing. See the comments in
+        os_dep.c.  It relies on threads to track writes. */
+#     ifdef GC_DARWIN_THREADS
+/* #       define MPROTECT_VDB -- disabled for now.  May work for some apps. */
+#     endif
+#     include <unistd.h>
+#     define GETPAGESIZE() getpagesize()
+      /* There seems to be some issues with trylock hanging on darwin. This
+         should be looked into some more */
+#      define NO_PTHREAD_TRYLOCK
+#   endif /* DARWIN */
 # endif
 
 # ifdef NS32K
diff -uNr gcc-4.2-20060610/boehm-gc/os_dep.c gcc-4.2-20060610.java/boehm-gc/os_dep.c
--- gcc-4.2-20060610/boehm-gc/os_dep.c	2006-05-22 20:30:18.000000000 -0400
+++ gcc-4.2-20060610.java/boehm-gc/os_dep.c	2006-06-10 19:12:03.000000000 -0400
@@ -3799,6 +3799,10 @@
         mach_msg_type_number_t exc_state_count = PPC_EXCEPTION_STATE64_COUNT;
         ppc_exception_state64_t exc_state;
 #     endif
+#   elif defined(I386)
+        thread_state_flavor_t flavor = i386_EXCEPTION_STATE;
+        mach_msg_type_number_t exc_state_count = i386_EXCEPTION_STATE_COUNT;
+        i386_exception_state_t exc_state;
 #   else
 #	error FIXME for non-ppc darwin
 #   endif
@@ -3830,7 +3834,13 @@
     }
     
     /* This is the address that caused the fault */
+#if defined(POWERPC)
     addr = (char*) exc_state.dar;
+#elif defined (I386)
+    addr = (char*) exc_state.faultvaddr;
+#else
+#   error FIXME for non POWERPC/I386
+#endif
         
     if((HDR(addr)) == 0) {
         /* Ugh... just like the SIGBUS problem above, it seems we get a bogus 
diff -uNr gcc-4.2-20060610/configure gcc-4.2-20060610.java/configure
--- gcc-4.2-20060610/configure	2006-06-10 00:19:38.000000000 -0400
+++ gcc-4.2-20060610.java/configure	2006-06-10 19:05:07.000000000 -0400
@@ -1172,14 +1172,9 @@
   *-*-chorusos)
     noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
     ;;
-  powerpc-*-darwin*)
-    noconfigdirs="$noconfigdirs bfd binutils ld gas opcodes gdb gprof"
-    noconfigdirs="$noconfigdirs sim target-rda"
-    ;;
   *-*-darwin*)
-    noconfigdirs="$noconfigdirs ld gas gdb gprof"
+    noconfigdirs="$noconfigdirs bfd binutils ld gas opcodes gdb gprof"
     noconfigdirs="$noconfigdirs sim target-rda"
-    noconfigdirs="$noconfigdirs ${libgcj}"
     ;;
   *-*-freebsd[12] | *-*-freebsd[12].* | *-*-freebsd*aout*)
     noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
diff -uNr gcc-4.2-20060610/configure.in gcc-4.2-20060610.java/configure.in
--- gcc-4.2-20060610/configure.in	2006-06-06 20:06:19.000000000 -0400
+++ gcc-4.2-20060610.java/configure.in	2006-06-10 19:05:35.000000000 -0400
@@ -368,14 +368,9 @@
   *-*-chorusos)
     noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
     ;;
-  powerpc-*-darwin*)
-    noconfigdirs="$noconfigdirs bfd binutils ld gas opcodes gdb gprof"
-    noconfigdirs="$noconfigdirs sim target-rda"
-    ;;
   *-*-darwin*)
-    noconfigdirs="$noconfigdirs ld gas gdb gprof"
+    noconfigdirs="$noconfigdirs bfd binutils ld gas opcodes gdb gprof"
     noconfigdirs="$noconfigdirs sim target-rda"
-    noconfigdirs="$noconfigdirs ${libgcj}"
     ;;
   *-*-freebsd[[12]] | *-*-freebsd[[12]].* | *-*-freebsd*aout*)
     noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
diff -uNr gcc-4.2-20060610/libffi/configure gcc-4.2-20060610.java/libffi/configure
--- gcc-4.2-20060610/libffi/configure	2006-06-10 00:19:38.000000000 -0400
+++ gcc-4.2-20060610.java/libffi/configure	2006-06-10 19:08:43.000000000 -0400
@@ -5381,6 +5381,7 @@
 i*86-*-solaris2.1[0-9]*) TARGET=X86_64; TARGETDIR=x86;;
 i*86-*-solaris*) TARGET=X86; TARGETDIR=x86;;
 i*86-*-beos*) TARGET=X86; TARGETDIR=x86;;
+i*86-*-darwin*) TARGET=X86; TARGETDIR=x86;;
 i*86-*-freebsd* | i*86-*-kfreebsd*-gnu) TARGET=X86; TARGETDIR=x86;;
 i*86-*-netbsdelf* | i*86-*-knetbsd*-gnu) TARGET=X86; TARGETDIR=x86;;
 i*86-*-rtems*) TARGET=X86; TARGETDIR=x86;;
diff -uNr gcc-4.2-20060610/libffi/configure.ac gcc-4.2-20060610.java/libffi/configure.ac
--- gcc-4.2-20060610/libffi/configure.ac	2006-05-22 20:30:31.000000000 -0400
+++ gcc-4.2-20060610.java/libffi/configure.ac	2006-06-10 19:08:43.000000000 -0400
@@ -46,6 +46,7 @@
 i*86-*-solaris2.1[[0-9]]*) TARGET=X86_64; TARGETDIR=x86;;
 i*86-*-solaris*) TARGET=X86; TARGETDIR=x86;;
 i*86-*-beos*) TARGET=X86; TARGETDIR=x86;;
+i*86-*-darwin*) TARGET=X86; TARGETDIR=x86;;
 i*86-*-freebsd* | i*86-*-kfreebsd*-gnu) TARGET=X86; TARGETDIR=x86;;
 i*86-*-netbsdelf* | i*86-*-knetbsd*-gnu) TARGET=X86; TARGETDIR=x86;;
 i*86-*-rtems*) TARGET=X86; TARGETDIR=x86;;
diff -uNr gcc-4.2-20060610/libffi/src/prep_cif.c gcc-4.2-20060610.java/libffi/src/prep_cif.c
--- gcc-4.2-20060610/libffi/src/prep_cif.c	2006-05-22 20:30:28.000000000 -0400
+++ gcc-4.2-20060610.java/libffi/src/prep_cif.c	2006-06-10 19:08:43.000000000 -0400
@@ -115,7 +115,10 @@
 #ifdef SPARC
       && (cif->abi != FFI_V9 || cif->rtype->size > 32)
 #endif
+#ifdef __APPLE__
+      && (cif->rtype->size > 8)
       )
+#endif
     bytes = STACK_ARG_SIZE(sizeof(void*));
 #endif
 
diff -uNr gcc-4.2-20060610/libffi/src/x86/ffi.c gcc-4.2-20060610.java/libffi/src/x86/ffi.c
--- gcc-4.2-20060610/libffi/src/x86/ffi.c	2006-05-22 20:30:27.000000000 -0400
+++ gcc-4.2-20060610.java/libffi/src/x86/ffi.c	2006-06-10 19:08:43.000000000 -0400
@@ -119,7 +119,7 @@
   switch (cif->rtype->type)
     {
     case FFI_TYPE_VOID:
-#ifndef X86_WIN32
+#if !defined X86_WIN32 && !defined __APPLE__
     case FFI_TYPE_STRUCT:
 #endif
     case FFI_TYPE_SINT64:
@@ -133,7 +133,7 @@
       cif->flags = FFI_TYPE_SINT64;
       break;
 
-#ifdef X86_WIN32
+#if defined X86_WIN32 || defined __APPLE__
     case FFI_TYPE_STRUCT:
       if (cif->rtype->size == 1)
         {
@@ -163,6 +163,10 @@
       break;
     }
 
+#ifdef __APPLE__
+  cif->bytes = (cif->bytes + 15) & ~0xF;
+#endif
+
   return FFI_OK;
 }
 
diff -uNr gcc-4.2-20060610/libffi/src/x86/sysv.S gcc-4.2-20060610.java/libffi/src/x86/sysv.S
--- gcc-4.2-20060610/libffi/src/x86/sysv.S	2006-05-22 20:30:27.000000000 -0400
+++ gcc-4.2-20060610.java/libffi/src/x86/sysv.S	2006-06-10 19:08:43.000000000 -0400
@@ -31,18 +31,34 @@
 
 .text
 
+#ifdef __APPLE__
+.globl _ffi_prep_args
+#else
 .globl ffi_prep_args
+#endif
+
 
 	.align 4
+#ifdef __APPLE__
+.globl _ffi_call_SYSV
+#else
 .globl ffi_call_SYSV
         .type    ffi_call_SYSV,@function
+#endif
 
+#ifdef __APPLE__
+_ffi_call_SYSV:
+#else
 ffi_call_SYSV:
+#endif
 .LFB1:
         pushl %ebp
 .LCFI0:
         movl  %esp,%ebp
 .LCFI1:
+#ifdef __APPLE__
+        subl $8,%esp
+#endif
 	/* Make room for all of the new args.  */
 	movl  16(%ebp),%ecx
 	subl  %ecx,%esp
@@ -50,12 +66,19 @@
 	movl  %esp,%eax
 
 	/* Place all of the ffi_prep_args in position  */
+#ifdef __APPLE__
+	subl  $8,%esp
+#endif
 	pushl 12(%ebp)
 	pushl %eax
 	call  *8(%ebp)
 
 	/* Return stack to previous state and call the function  */
+#ifdef __APPLE__
+	addl  $16,%esp	
+#else
 	addl  $8,%esp	
+#endif
 
 	call  *28(%ebp)
 
@@ -112,30 +135,67 @@
 	
 retint64:	
 	cmpl  $FFI_TYPE_SINT64,%ecx
-        jne   retstruct
+        jne   retstruct1b
 	/* Load %ecx with the pointer to storage for the return value  */
 	movl  24(%ebp),%ecx	
 	movl  %eax,0(%ecx)
 	movl  %edx,4(%ecx)
+	jmp   epilogue
 	
+retstruct1b:	
+	cmpl  $FFI_TYPE_SINT8,%ecx
+        jne   retstruct2b
+	/* Load %ecx with the pointer to storage for the return value  */
+	movl  24(%ebp),%ecx	
+	movb  %al,0(%ecx)
+	jmp   epilogue
+
+retstruct2b:	
+	cmpl  $FFI_TYPE_SINT16,%ecx
+        jne   retstruct
+	/* Load %ecx with the pointer to storage for the return value  */
+	movl  24(%ebp),%ecx	
+	movw  %ax,0(%ecx)
+	jmp   epilogue
+
 retstruct:
+	cmpl  $FFI_TYPE_STRUCT,%ecx
+        jne   noretval
 	/* Nothing to do!  */
+#ifdef __APPLE__
+        addl $4,%esp
+        popl %ebp
+        ret
+#endif
 
 noretval:
 epilogue:
+#ifdef __APPLE__
+        addl $8,%esp
+#endif
         movl %ebp,%esp
         popl %ebp
         ret
 .LFE1:
 .ffi_call_SYSV_end:
+#ifndef __APPLE__
         .size    ffi_call_SYSV,.ffi_call_SYSV_end-ffi_call_SYSV
+#endif
 
 	.align	4
 FFI_HIDDEN (ffi_closure_SYSV)
+#ifdef __APPLE__
+.globl _ffi_closure_SYSV
+#else
 .globl ffi_closure_SYSV
 	.type	ffi_closure_SYSV, @function
+#endif
 
+#ifdef __APPLE__
+_ffi_closure_SYSV:
+#else
 ffi_closure_SYSV:
+#endif
 .LFB2:
 	pushl	%ebp
 .LCFI2:
@@ -153,10 +213,14 @@
 #else
 	movl	%ebx, 8(%esp)
 .LCFI7:
+#ifdef __APPLE__
+	call	L_ffi_closure_SYSV_inner$stub
+#else
 	call	1f
 1:	popl	%ebx
 	addl	$_GLOBAL_OFFSET_TABLE_+[.-1b], %ebx
 	call	ffi_closure_SYSV_inner@PLT
+#endif
 	movl	8(%esp), %ebx
 #endif
 	movl	-12(%ebp), %ecx
@@ -170,6 +234,14 @@
 	je	.Lcls_retldouble
 	cmpl	$FFI_TYPE_SINT64, %eax
 	je	.Lcls_retllong
+#ifdef __APPLE__
+	cmpl	$FFI_TYPE_SINT8, %eax
+	je	.Lcls_retstruct1
+	cmpl	$FFI_TYPE_SINT16, %eax
+	je	.Lcls_retstruct2
+	cmpl	$FFI_TYPE_STRUCT, %eax
+	je	.Lcls_retstruct
+#endif
 .Lcls_epilogue:
 	movl	%ebp, %esp
 	popl	%ebp
@@ -190,8 +262,23 @@
 	movl	(%ecx), %eax
 	movl	4(%ecx), %edx
 	jmp	.Lcls_epilogue
+#ifdef __APPLE__
+.Lcls_retstruct1:
+	movsbl	(%ecx), %eax
+	jmp	.Lcls_epilogue
+.Lcls_retstruct2:
+	movswl	(%ecx), %eax
+	jmp	.Lcls_epilogue
+.Lcls_retstruct:
+	lea -8(%ebp),%esp
+	movl	%ebp, %esp
+	popl	%ebp
+	ret $4
+#endif
 .LFE2:
+#ifndef __APPLE__
 	.size	ffi_closure_SYSV, .-ffi_closure_SYSV
+#endif
 
 #if !FFI_NO_RAW_API
 
@@ -202,10 +289,18 @@
 
 	.align	4
 FFI_HIDDEN (ffi_closure_raw_SYSV)
+#ifdef __APPLE__
+.globl _ffi_closure_raw_SYSV
+#else
 .globl ffi_closure_raw_SYSV
 	.type	ffi_closure_raw_SYSV, @function
+#endif
 
+#ifdef __APPLE__
+_ffi_closure_raw_SYSV:
+#else
 ffi_closure_raw_SYSV:
+#endif
 .LFB3:
 	pushl	%ebp
 .LCFI4:
@@ -256,8 +351,127 @@
 	movl	-20(%ebp), %edx
 	jmp	.Lrcls_epilogue
 .LFE3:
+#ifndef __APPLE__
 	.size	ffi_closure_raw_SYSV, .-ffi_closure_raw_SYSV
 #endif
+#endif
+
+#ifdef __APPLE__
+.section __IMPORT,__jump_table,symbol_stubs,self_modifying_code+pure_instructions,5
+L_ffi_closure_SYSV_inner$stub:
+	.indirect_symbol _ffi_closure_SYSV_inner
+	hlt ; hlt ; hlt ; hlt ; hlt
+#endif
+
+#ifdef __APPLE__
+
+.section __TEXT,__eh_frame,coalesced,no_toc+strip_static_syms+live_support
+EH_frame1:
+	.set	L$set$0,LECIE1-LSCIE1
+	.long	L$set$0
+LSCIE1:
+	.long	0x0
+	.byte	0x1
+	.ascii "zR\0"
+	.byte	0x1
+	.byte	0x7c
+	.byte	0x8
+	.byte	0x1
+	.byte	0x10
+	.byte	0xc
+	.byte	0x5
+	.byte	0x4
+	.byte	0x88
+	.byte	0x1
+	.align 2
+LECIE1:
+.globl _ffi_call_SYSV.eh
+_ffi_call_SYSV.eh:
+LSFDE1:
+	.set	L$set$1,LEFDE1-LASFDE1
+	.long	L$set$1
+LASFDE1:
+	.long	LASFDE1-EH_frame1
+	.long	.LFB1-.
+	.set L$set$2,.LFE1-.LFB1
+	.long L$set$2
+	.byte	0x0
+	.byte	0x4
+	.set L$set$3,.LCFI0-.LFB1
+	.long L$set$3
+	.byte	0xe
+	.byte	0x8
+	.byte	0x84
+	.byte	0x2
+	.byte	0x4
+	.set L$set$4,.LCFI1-.LCFI0
+	.long L$set$4
+	.byte	0xd
+	.byte	0x4
+	.align 2
+LEFDE1:
+.globl _ffi_closure_SYSV.eh
+_ffi_closure_SYSV.eh:
+LSFDE2:
+	.set	L$set$5,LEFDE2-LASFDE2
+	.long	L$set$5
+LASFDE2:
+	.long	LASFDE2-EH_frame1
+	.long	.LFB2-.
+	.set L$set$6,.LFE2-.LFB2
+	.long L$set$6
+	.byte	0x0
+	.byte	0x4
+	.set L$set$7,.LCFI2-.LFB2
+	.long L$set$7
+	.byte	0xe
+	.byte	0x8
+	.byte	0x84
+	.byte	0x2
+	.byte	0x4
+	.set L$set$8,.LCFI3-.LCFI2
+	.long L$set$8
+	.byte	0xd
+	.byte	0x4
+	.align 2
+LEFDE2:
+
+#if !FFI_NO_RAW_API
+
+.globl _ffi_closure_raw_SYSV.eh
+_ffi_closure_raw_SYSV.eh:
+LSFDE3:
+	.set	L$set$10,LEFDE3-LASFDE3
+	.long	L$set$10
+LASFDE3:
+	.long	LASFDE3-EH_frame1
+	.long	.LFB3-.
+	.set L$set$11,.LFE3-.LFB3
+	.long L$set$11
+	.byte	0x0
+	.byte	0x4
+	.set L$set$12,.LCFI4-.LFB3
+	.long L$set$12
+	.byte	0xe
+	.byte	0x8
+	.byte	0x84
+	.byte	0x2
+	.byte	0x4
+	.set L$set$13,.LCFI5-.LCFI4
+	.long L$set$13
+	.byte	0xd
+	.byte	0x4
+	.byte	0x4
+	.set L$set$14,.LCFI6-.LCFI5
+	.long L$set$14
+	.byte	0x85
+	.byte	0x3
+	.align 2
+LEFDE3:
+
+#endif
+
+#else
 
 	.section	.eh_frame,EH_FRAME_FLAGS,@progbits
 .Lframe1:
@@ -375,4 +589,6 @@
 
 #endif
 
+#endif
+
 #endif /* ifndef __x86_64__ */
diff -uNr gcc-4.2-20060610/libjava/configure gcc-4.2-20060610.java/libjava/configure
--- gcc-4.2-20060610/libjava/configure	2006-06-10 00:19:38.000000000 -0400
+++ gcc-4.2-20060610.java/libjava/configure	2006-06-10 19:07:04.000000000 -0400
@@ -16612,7 +16612,7 @@
  mips*-*-linux*)
     SIGNAL_HANDLER=include/mips-signal.h
     ;;
- *-*-darwin*)
+ powerpc*-*-darwin*)
     SIGNAL_HANDLER=include/darwin-signal.h
     ;;
  *)
diff -uNr gcc-4.2-20060610/libjava/configure.ac gcc-4.2-20060610.java/libjava/configure.ac
--- gcc-4.2-20060610/libjava/configure.ac	2006-06-07 20:16:49.000000000 -0400
+++ gcc-4.2-20060610.java/libjava/configure.ac	2006-06-10 19:07:04.000000000 -0400
@@ -1403,7 +1403,7 @@
  mips*-*-linux*)
     SIGNAL_HANDLER=include/mips-signal.h
     ;;
- *-*-darwin*)
+ powerpc*-*-darwin*)
     SIGNAL_HANDLER=include/darwin-signal.h
     ;;
  *)
diff -uNr gcc-4.2-20060610/libjava/configure.host gcc-4.2-20060610.java/libjava/configure.host
--- gcc-4.2-20060610/libjava/configure.host	2006-05-26 18:16:40.000000000 -0400
+++ gcc-4.2-20060610.java/libjava/configure.host	2006-06-10 19:07:04.000000000 -0400
@@ -256,6 +256,11 @@
 	slow_pthread_self=
 	can_unwind_signal=yes
 	;;
+  i?86-*-darwin*)
+	enable_hash_synchronization_default=yes
+	slow_pthread_self=
+	can_unwind_signal=no
+	;;
   *-*-freebsd*)
 	slow_pthread_self=
 	;;
Index: gcc/config/i386/darwin-libgcc.10.5.ver
===================================================================
--- gcc4/gcc/config/i386/darwin-libgcc.10.5.ver	(revision 112376)
+++ gcc4/gcc/config/i386/darwin-libgcc.10.5.ver	(working copy)
@@ -7,6 +7,7 @@
 __Unwind_GetDataRelBase
 __Unwind_GetGR
 __Unwind_GetIP
+__Unwind_GetIPInfo
 __Unwind_GetLanguageSpecificData
 __Unwind_GetRegionStart
 __Unwind_GetTextRelBase
Index: gcc/config/i386/darwin-libgcc.10.4.ver
===================================================================
--- gcc4/gcc/config/i386/darwin-libgcc.10.4.ver	(revision 112376)
+++ gcc4/gcc/config/i386/darwin-libgcc.10.4.ver	(working copy)
@@ -7,6 +7,7 @@
 __Unwind_GetDataRelBase
 __Unwind_GetGR
 __Unwind_GetIP
+__Unwind_GetIPInfo
 __Unwind_GetLanguageSpecificData
 __Unwind_GetRegionStart
 __Unwind_GetTextRelBase
Index: gcc/config/rs6000/darwin-libgcc.10.4.ver
===================================================================
--- gcc4/gcc/config/rs6000/darwin-libgcc.10.4.ver	(revision 112376)
+++ gcc4/gcc/config/rs6000/darwin-libgcc.10.4.ver	(working copy)
@@ -7,6 +7,7 @@
 __Unwind_GetDataRelBase
 __Unwind_GetGR
 __Unwind_GetIP
+__Unwind_GetIPInfo
 __Unwind_GetLanguageSpecificData
 __Unwind_GetRegionStart
 __Unwind_GetTextRelBase
Index: gcc/config/rs6000/darwin-libgcc.10.5.ver
===================================================================
--- gcc4/gcc/config/rs6000/darwin-libgcc.10.5.ver	(revision 112376)
+++ gcc4/gcc/config/rs6000/darwin-libgcc.10.5.ver	(working copy)
@@ -7,6 +7,7 @@
 __Unwind_GetDataRelBase
 __Unwind_GetGR
 __Unwind_GetIP
+__Unwind_GetIPInfo
 __Unwind_GetLanguageSpecificData
 __Unwind_GetRegionStart
 __Unwind_GetTextRelBase

 	  	 
