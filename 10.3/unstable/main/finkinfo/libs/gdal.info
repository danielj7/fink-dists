Info2: <<
Package: gdal
Version: 1.3.1
Revision: 3
Description: Raster/Vector Geospatial Format Translator
License: BSD
Homepage: http://www.gdal.org
Maintainer: BABA Yoshihiko <babayoshihiko@mac.com>
DescDetail: <<
GDAL is a translator library for raster geospatial data formats. As a library,
it presents a single abstract data model to the calling application for all
supported formats.

Current translators include GeoTIFF (read/write), Erdas Imagine (read),
ESRI .BIL (read/write), .aux labelled raw (read/write), DTED (read),
SDTS DEM (read), CEOS (read), JPEG (read/write), PNG (read/write),
Geosoft GXF (read), Arc/Info Binary Grid (read), FITS (read/write),
netCDF (limited read/write), and GIF (read/write).

The current version of GDAL come with the related OGR library (which lives 
within the GDAL source tree) provides a similar capability for simple features 
vector data.

The OGR Simple Features Library is a C++ open source library (and commandline 
tools) providing read (and sometimes write) access to a variety of vector file 
formats including ESRI Shapefiles, S-57, SDTS, PostGIS, Oracle Spatial, and 
Mapinfo mid/mif and TAB formats.
<<
DescUsage: <<
Packages that need GDAL/OGR libraries should builddepend on gdal-dev and 
depend on gdal-shlibs.  Make sure that configure finds the gdal-config 
script in %p/bin, which tells that the headers are 
in %p/include/gdal1/ and the libraries are in %p/lib/.
<<

# Dependencies.
Depends: <<
	%n-shlibs (= %v-%r), 
	postgresql80 (>= 8.0.2-13) | postgresql80-ssl (>= 8.0.2-13)
<<
Suggests: gdal-python-py23, gdal-grass

BuildDepends: <<
	libjpeg, 
	giflib | libungif,
	lesstiff | libtiff,
	libpng3,
	netcdf, netcdf-bin,
	unixodbc2 | unixodbc2-nox,
	libiconv-dev, cfitsio, 
	libogdi3,
	hdf5, 
	xerces-c-dev, 
	sqlite3-dev, 
	libgeos2,
	postgresql80-dev (>= 8.0.2-13) | postgresql80-ssl-dev (>= 8.0.2-13),
        proj, szip
<<

Conflicts: gdal, gdal-nopgsql, gdal-ssl, gdal-grass
Replaces: gdal, gdal-nopgsql, gdal-ssl, gdal-grass
#BuildConflicts: gdal-dev (<< %v)

# Unpack Phase.
Source: mirror:custom:gdal-%v.tar.gz
Source-MD5: 7ff1ceff745ee011793e1f860c02c172
CustomMirror: <<
  nam-US: http://www.gdal.org/dl
  nam-US: ftp://ftp.remotesensing.org/gdal
  nam-US: http://dl.maptools.org/gdal/dl
<<

# Patch Phase.
PatchScript: sed 's|@PREFIX@|%p|g' <%a/gdal.patch | patch -p1

# Compile Phase.
GCC: 3.3

SetCPPFLAGS: -Os -I%b/port -I%b/gcore -I%b/alg -I%b/ogr -I%b/ogr/ogrsf_frmts -I%b/ogr/ogrsf_frmts/gtiff -I%p/include

#SetLDFLAGS: -L%p/lib/grass-6.0
#SetLIBRARY_PATH: %p/lib/grass-6.0
#SetDYLD_LIBRARY_PATH: %p/lib/grass-6.0

ConfigureParams: --mandir='${prefix}/share/man' --with-local=%p --with-libz=%p --with-grass=no --with-cfitsio=%p --with-pcraster=no --with-netcdf=%p --with-png=%p --with-libtiff=%p --with-geotiff=internal --with-jpeg=%p --with-gif=%p --with-ogdi=%p --with-fme=no --without-hdf4 --with-hdf5=%p --with-jasper=no --with-ecw=no --with-kakadu=no --with-mrsid=no --with-bsb --with-ogr --with-pg=%p/bin/pg_config --with-mysql=no --with-xerces --with-xerces-inc=%p/include --with-xerces-lib='-L%p/lib -lxerces-c -lpthread' --with-odbc=%p --with-oci=no --with-dods-root=no --with-sqlite=%p --with-geos=%p/bin/geos-config --with-static-proj4=%p --without-perl --without-php --without-ruby --without-python

CompileScript: <<
#!/bin/sh -xe
  
  touch missing
  ./configure %c
  rm missing
  
  make OGDI_INCLUDE=''
<<

# Install Phase.
InstallScript: <<
  make install prefix=%i INST_INCLUDE=%i/include/gdal1
<<

DocFiles: ChangeLog LICENSE NEWS
SplitOff: <<
  Package: %N-shlibs
  Description: GDAL/OGR shared libraries
  Replaces: %N (<< 1.2.1-11), gdal-shlibs, gdal-nopgsql-shlibs
  Conflicts: %N (<< 1.2.1-11), gdal-shlibs, gdal-nopgsql-shlibs
  Depends: << 
    giflib-shlibs | libungif-shlibs, libjpeg-shlibs, libpng3-shlibs, libtiff-shlibs (>= 3.6.0), netcdf-shlibs, 
    proj-shlibs, libgeos2-shlibs, 
    unixodbc2-shlibs | unixodbc2-nox-shlibs, 
    postgresql80-shlibs (>=8.0.2-12) | postgresql80-ssl-shlibs (>=8.0.2-12),
    szip-shlibs, libiconv, xerces-c-shlibs, hdf5-shlibs, 
    libogdi3-shlibs, sqlite3-shlibs
  <<
  Files: lib/libgdal.*.dylib
  Shlibs: %p/lib/libgdal.1.dylib 11.0.0 %n (>= 1.2.6-2)
  DocFiles: ChangeLog LICENSE NEWS
<<
SplitOff2: <<
  Package: %N-dev
  Description: GDAL/OGR development headers
  Replaces: %N (<< 1.2.1-11), gdal-dev, gdal-nopgsql-dev
  Conflicts: %N (<< 1.2.1-11), gdal-dev, gdal-nopgsql-dev
  Depends: %N-shlibs (= %v-%r)
  BuildDependsOnly: true
  Files: bin/gdal-config include/gdal1 lib/*.a lib/*.la lib/libgdal.dylib share/man/man1/gdal-config.1
  DocFiles: ChangeLog LICENSE NEWS
<<

DescPackaging: <<
Patch file does the following:
  1. add LICENSE.
  2. install header files in %p/include/gdal1.
  3. change the order of include directories not to read header files of 
     older GDAL package.

Previous versions of this package were maintained by Matt Stephenson
<cattrap@users.sourceforge.net> and Blair Zajac <blair@orcaware.com>.
<<

DescPort: <<
1.3 conflicts with the gdal headers of older versions. gdal.patch solves
this problem by changing the include orders. For future versions, gdal13
headers will be in %p/include/gdal13 and so on.
1.3 adds HDF-5 support.

1.2.6-5 fixes gdal-config and adds Xerces and SQLite supports.
1.2.6-4 for Python support (see gdal-python-py23)
--with-geos is enabled since 1.2.6-1.

The large number of gdal include files are moved into %p/include
subdirectory and gdal-config has been patched to have the correct
include file path.

Uses -Os, otherwise it compiles with no optimization.

Uses --with-local=%p in ConfigureParams to have -I%p/include and
-L%p/lib be used in compiling this package.  But even with this set,
not all files are compiled with -I%p/include and so this is put in
SetCFLAGS and SetCXXFLAGS.

Uses --with-static-proj4=%p in ConfigureParams, but libproj still ends
up linking dynamically.

Uses --with-hdf4=no in ConfigureParams to avoid a compile error in
EHapi.c.

Franks Warmerdam says using the "internal" settings should not be
necessary, as the libs are tested to see if they are compatible.

TODO:

There are lots of other formats/libs that could be enabled, but have
not yet been tried.
<<

# End of Info2
<<
