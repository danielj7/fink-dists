Info2: <<
Package: libgems-rb%type_pkg[ruby]
Version: 0.9.5
Revision: 1
Type: ruby (1.6 1.8)
Description: Package management framework for Ruby
Homepage: http://rubygems.rubyforge.org/
License: OSI-Approved
Maintainer: Benjamin Reed <libgems-rb@fink.racoonfink.com>

# Dependencies.
Depends: ruby%type_pkg[ruby]
BuildDepends: ruby%type_pkg[ruby]-dev

# Unpack Phase.
Source: http://rubyforge.org/frs/download.php/28174/rubygems-%v.tgz
Source-MD5: 91f7036a724e34cc66dd8d09348733d9

# Patch Phase.
PatchScript: <<
#!/bin/sh -ex
  sed \
    -e 's|@PREFIX@|%p|g' \
    -e 's|@INSTALL_DIR@|%i|' %a/%{ni}.patch \
    > rubygems.patch
  patch -p1 < rubygems.patch
  rm rubygems.patch

  find . -type f -print0 \
    | xargs -0 perl -w -p -i -e 's:^#!.*ruby.*:#!%p/bin/ruby%type_raw[ruby]:'
<<

# Compile Phase.
CompileScript: echo "none"

# Install Phase.
InstallScript: <<
#!/bin/sh -ex
  RUBYLIBDIR=`%p/bin/ruby%type_raw[ruby] -rrbconfig -e "puts Config::CONFIG['rubylibdir']"`
  mkdir -p %i/var/lib/gems/%type_raw[ruby]
  %p/bin/ruby%type_raw[ruby] -I lib setup.rb install --prefix "%i" --sitelibdir "$RUBYLIBDIR"
  rm -f %i/bin/update_rubygems

  mkdir -p %i/share/%n/examples
  cp -R examples/ %i/share/%n/examples
<<
DocFiles: ChangeLog GPL* LICENSE* README TODO

SplitOff: <<
  Description: Package management framework for Ruby (binaries)
  Package: rubygems-rb%type_pkg[ruby]
  Depends: libgems-rb%type_pkg[ruby], ruby%type_pkg[ruby], (%type_raw[ruby] = 1.6) ruby (>= 1.6), (%type_raw[ruby] = 1.6) ruby (<< 1.7), (%type_raw[ruby] = 1.8) ruby (>= 1.8), (%type_raw[ruby] = 1.8) ruby (<< 1.9)
  Conflicts: rubygems-rb16, rubygems-rb18
  Replaces: rubygems-rb16, rubygems-rb18
  DocFiles: ChangeLog GPL* LICENSE* README TODO
  Files: bin
<<

PreInstScript: <<
  LIBDIR=`%p/bin/ruby%type_raw[ruby] -rrbconfig -e "puts Config::CONFIG['libdir']"`
  OLD_GEMS_DIR="$LIBDIR/ruby/gems"
  OLD_GEMS_AND_VER_DIR="$OLD_GEMS_DIR/%type_raw[ruby]"
  if test -d "$OLD_GEMS_AND_VER_DIR"; then
    echo ""
    echo "*******"
    echo "You currently have or had an older version of the"
    echo "rubygems-rb%type_pkg[ruby] package installed which stored the"
    echo "gems into $OLD_GEMS_AND_VER_DIR."
    echo ""
    echo "The new location of the gems is %p/var/lib/gems/%type_raw[ruby]."
    echo "The old gem directory and all of the contained gems"
    echo "are going to be removed now.  You will need to reinstall"
    echo "all of your locally installed gems, which are:"
    echo ""
    /bin/ls -1 $OLD_GEMS_AND_VER_DIR/gems
    echo ""
    echo "Please make a note of this list so you can reinstall"
    echo "them.  Note that the 'sources' gem does not need to"
    echo "be reinstalled, as it comes installed with the new"
    echo "package."
    echo ""
    echo "Press return to continue."
    echo "*******"
    read
    echo "Removing $OLD_GEMS_AND_VER_DIR"
    rm -frv $OLD_GEMS_AND_VER_DIR
    rmdir $OLD_GEMS_DIR 2>/dev/null
  fi
<<

PostRmScript: <<
  case "$1" in
    purge)
      rm -rf %p/var/lib/gems/%type_raw[ruby]
      ;;
    remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
      ;;
    *)
      echo "postrm called with unknown argument '$1'" >&2
      exit 1
      ;;
  esac
<<

# Additional Documentation.
DescDetail: <<
------------------------------------------------------------------------------
RubyGems is an advanced package management tool for Ruby libraries. It
supports remote searching, downloading, and installation while handling
library dependencies and supporting coexisting versions.

This package installs the gems into %p/var/lib/gems, not the default
location of %p/lib/ruby/gems, so that all the files in %p/lib are
maintained by Fink.

The libgems-rb%type_pkg[ruby] pckage contains the rubygems library and
the installed %p/var/lib/gems/%type_raw[ruby] directory.

The rubygems-rb%type_pkg[ruby] package contains only the binaries.
This enables multiple versions of ruby to have the libraries and gems
installed, but only one set of scripts may be installed at a time.
<<
DescPackaging: <<
This package was previously maintained by Blair Zajac, and before that,
 Justin F. Hallett.

The update_rubygems script is not installed, as it'll mess up the Fink
package.

Requires the 'ruby' package to be installed since many of the gems use
the standard '#!/usr/bin/env ruby' trick, and when the 'ruby' package
is not installed, this will find /usr/bin/ruby, which is not correct
and most of the time fails to build the gems.
<<
<<
