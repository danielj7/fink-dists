diff -u -Naur leafnode-1.9.25.rel/LIESMICH-daemontools leafnode-1.9.25.rel.fink/LIESMICH-daemontools
--- leafnode-1.9.25.rel/LIESMICH-daemontools	Wed Dec 31 19:00:00 1969
+++ leafnode-1.9.25.rel.fink/LIESMICH-daemontools	Wed Sep  4 17:08:03 2002
@@ -0,0 +1,65 @@
+Diese Anleitung ist nur gültig, wenn Sie das setup-daemontools.sh-Skript benutzt
+haben, um leafnode für daemontools zu installieren.
+
+
+Die folgenden Parameter können angepaßt werden, sie bestimmen, wie Leafnode
+Verbindungen annimmt.
+
+1. Die IP-Adresse, auf der Leafnode Verbindungen annimmt. Voreingestellt ist
+   127.0.0.1 (localhost). Der Zugriff ist nur vom Computer, auf dem leafnode
+   läuft, aus möglich, und nur auf die Zieladresse 127.0.0.1.
+
+   Um diese Adresse zu ändern:
+   a) passen Sie die erste Zeile von /service/leafnode-1/env/LISTENIP an,
+   b) starten Sie: /command/svc -t /service/leafnode-1
+      (dabei werden alle bestehenden Verbindungen unterbrochen, die meisten
+      Newsreader sollten sich davon aber erholen).
+
+   HINWEIS: Sie werden auch die Datei nntp.rules anpassen und die zugehörige
+   nntp.cdb-Datei neu erzeugen müssen, siehe dazu Abschnitt 3 unten.
+
+   Statt einer IP-Adresse können Sie auch "0" eintragen (ohne die
+   Anführungszeichen), dann nimmt leafnode Verbindungen auf allen Schnittstellen
+   an. Dies ist auf Computern mit mehr als einer externen Schnittstelle
+   erforderlich.
+
+2. Die Höchstzahl gleichzeitig aktiver Newsreader, voreingestellt ist 7.
+
+   Um diese anzupassen,
+   a) ändern sie die erste Zeile von /service/leafnode-1/env/MAXCONNECTIONS und
+   b) starten /command/svc -t /service/leafnode-1
+      (dabei werden alle bestehenden Verbindungen unterbrochen, die meisten
+      Newsreader sollten sich davon aber erholen).
+
+3. Die Zugangsregeln. Voreingestellt ist (allow = erlauben, deny = verbieten):
+   127.0.0.1:allow
+   :deny
+
+   Die letzte Zeile ist ein Joker und wird verwendet, wenn keine andere Regel
+   anwendbar ist. Die Regeln werden direkt angesprochen. Sie können IP-Bereiche
+   angeben, z. B. 192.168.0.5-9, oder Joker, wie 172.16. - das heißt 172.16.0.0
+   bis 172.16.255.255 (65536 Adressen). Details darüber finden sie in englischer
+   Sprache auf der Homepage von Dan J. Bernstein,
+   http://cr.yp.to/ucspi-tcp/tcprules.html
+
+   Um die Zugriffsregeln zu verändern,
+
+   a) geben Sie "cd /service/leafnode-1" ein (ohne Anführungszeichen)
+   b) passen Sie die Datei nntp.rules an
+   c) geben Sie "make" ein (wieder ohne Anführungszeichen).
+
+   In Schritt c) wird die für Menschen lesbare nntp.rules-Anleitung in die für
+   tcpserver lesbare Datei nntp.cdb überführt.
+
+   Sie brauchen den svc-Befehl hier nicht, tcpserver wird automatisch die neuen
+   Regeln beachten. Bestehende Verbindungen, für die eine "deny"-Anweisung neu
+   hinzukommt, werden aber NICHT beendet.
+
+   HINWEIS: Leafnode hat noch eine letzte Verteidigungslinie gegen die
+   unabsichtliche Freigabe, diese verhindert den Zugang von Adressen außerhalb
+   des eigenen LAN. Wenn Sie also einem Freund (der eine statische IP hat)
+   außerhalb Ihres eigenen LAN den Zugriff auf leafnode ermöglichen wollen,
+   müssen Sie auch Leafnodes "config"-Datei verändern. Sehen Sie dort nach
+   "allowstrangers".
+
+(C) 2002 Matthias Andree, die Lizenzbedingungen finden sich in COPYING.
diff -u -Naur leafnode-1.9.25.rel/UNINSTALL-daemontools leafnode-1.9.25.rel.fink/UNINSTALL-daemontools
--- leafnode-1.9.25.rel/UNINSTALL-daemontools	Tue Aug 27 18:43:14 2002
+++ leafnode-1.9.25.rel.fink/UNINSTALL-daemontools	Wed Sep  4 17:08:03 2002
@@ -2,8 +2,8 @@
 # Should your leafnode be configured for daemontools, here's how to get
 # rid of it:
 
-cd /service/leafnode
-rm /service/leafnode
+cd /service/leafnode-1
+rm /service/leafnode-1
 sleep 6
 svc -dx .
 cd "$OLDPWD"
diff -u -Naur leafnode-1.9.25.rel/fetchnews.c leafnode-1.9.25.rel.fink/fetchnews.c
--- leafnode-1.9.25.rel/fetchnews.c	Wed Aug 14 11:38:32 2002
+++ leafnode-1.9.25.rel.fink/fetchnews.c	Wed Sep  4 17:08:05 2002
@@ -2010,43 +2010,45 @@
     if (!postonly) {
 	/* only update active when we could read active from all servers
 	 */
-	if (rc == 0 && updateactive()) if (killactiveread()) rc = 1;
+	if (rc == 0 && updateactive())
+	    if (killactiveread())
+		rc = 1;
 	writeactive();
-    }
 
-    switch (pid = fork()) {
-    case -1:
-	syslog(LOG_NOTICE, "fork: %m, running on parent schedule");
-	fixxover();
-	unlink(lockfile);
-	freeactive(active);
-	activesize = 0;
-	active = NULL;
-	break;
+	switch (pid = fork()) {
+	    case -1:
+		syslog(LOG_NOTICE, "fork: %m, running on parent schedule");
+		fixxover();
+		unlink(lockfile);
+		freeactive(active);
+		activesize = 0;
+		active = NULL;
+		break;
 
-    case 0:
-	(void)setsid();
-	if (debugmode)
-	    syslog(LOG_DEBUG, "Process forked.");
-	if (!postonly) {
-	    fixxover();
-	}
-	unlink(lockfile);
-	freeactive(active);
-	activesize = 0;
-	active = NULL;
-	_exit(0);
-	break;
+	    case 0:
+		(void)setsid();
+		if (debugmode)
+		    syslog(LOG_DEBUG, "Process forked.");
+		if (!postonly) {
+		    fixxover();
+		}
+		unlink(lockfile);
+		freeactive(active);
+		activesize = 0;
+		active = NULL;
+		_exit(0);
+		break;
 
-    default:
-	if (handover_lock(pid)) {
-	    /* could not hand over lock file to child, so wait until it
-	       dies */
-	    syslog(LOG_NOTICE, "could not hand over lockfile to child: %m, "
-		   "waiting until child is done.");
-	    (void)waitpid(pid, NULL, 0);
+	    default:
+		if (handover_lock(pid)) {
+		    /* could not hand over lock file to child, so wait until it
+		       dies */
+		    syslog(LOG_NOTICE, "could not hand over lockfile to child: %m, "
+			    "waiting until child is done.");
+		    (void)waitpid(pid, NULL, 0);
+		}
+		break;
 	}
-	break;
     }
 
     exit(rc);
diff -u -Naur leafnode-1.9.25.rel/fink/README-Fink leafnode-1.9.25.rel.fink/fink/README-Fink
--- leafnode-1.9.25.rel/fink/README-Fink	Wed Dec 31 19:00:00 1969
+++ leafnode-1.9.25.rel.fink/fink/README-Fink	Wed Sep  4 17:08:37 2002
@@ -0,0 +1,33 @@
+Once the leafnode service has been installed there's still some
+important configuration yet to be done. There are 3 main steps:
+
+1) Edit @FINK_PREFIX@/etc/leafnode/config and set the server field to
+the address of your ISP's news feed.
+
+2) Run @FINK_PREFIX@/sbin/fetchnews to download the list of groups
+from your newsfeed.
+
+3) Schedule automated updating of active groups:
+   Leafnode tracks which groups have been accessed by clients and will
+   cache the articles in these `active' groups. The downloading is
+   performed by the fetchnews utility we just invoked manually, but
+   you likely don't want to have to do this every time you access
+   usenet.
+
+   The solution is to add to the `news' user's crontab and schedule
+   fetchnews to run hourly/daily/etc. Also important is to schedule
+   texpire to run in order to prune out older articles (the threshold
+   for what constitutes an `old' thread is set through the `expire'
+   field.
+
+   To set this up type:          sudo -u news crontab -e
+
+   Then add lines similar to:
+       0 4 * * *       @FINK_PREFIX@/sbin/texpire
+       0 * * * *       @FINK_PREFIX@/sbin/fetchnews
+
+   The above lines will set texpire to run nightly at 4am and will
+   update the articles cache every hour on the hour.
+
+enjoy!
+Christian Swinehart <cswinehart@mac.com>
