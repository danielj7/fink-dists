diff -Nurd -x'*~' yafc-1.1.1.orig/NEWS yafc-1.1.1/NEWS
--- yafc-1.1.1.orig/NEWS	2005-10-05 16:16:21.000000000 -0400
+++ yafc-1.1.1/NEWS	2012-01-11 22:04:35.000000000 -0500
@@ -292,7 +292,7 @@
 
 * added --help option for untag
 * added *.md5 to ascii_transfer_mask
-* now parses system-wide /etc/yafcrc on startup
+* now parses system-wide @PREFIX@/etc/yafcrc on startup
   + doesn't create default ~/.yafc/yafcrc on first run
 * rglob.c: didn't update directory cache properly
 * segfault in get/put if connection timed out
diff -Nurd -x'*~' yafc-1.1.1.orig/doc/yafc.info yafc-1.1.1/doc/yafc.info
--- yafc-1.1.1.orig/doc/yafc.info	2004-05-20 07:10:51.000000000 -0400
+++ yafc-1.1.1/doc/yafc.info	2012-01-11 22:04:45.000000000 -0500
@@ -1527,7 +1527,7 @@
 Configuration
 *************
 
-Yafc will parse a system-wide configuration file, `/etc/yafcrc' (or
+Yafc will parse a system-wide configuration file, `@PREFIX@/etc/yafcrc' (or
 whatever you set with the `--sysconfdir' option to the configure
 script), first. Then, personal settings are read from `~/.yafc/yafcrc'
 (overriding the global ones). If none of those files exists, internal
diff -Nurd -x'*~' yafc-1.1.1.orig/doc/yafc_config.texi yafc-1.1.1/doc/yafc_config.texi
--- yafc-1.1.1.orig/doc/yafc_config.texi	2003-07-12 06:24:31.000000000 -0400
+++ yafc-1.1.1/doc/yafc_config.texi	2012-01-11 22:04:55.000000000 -0500
@@ -1,7 +1,7 @@
 @node Configuration, Bookmarks, The shell, top
 @chapter Configuration
 
-Yafc will parse a system-wide configuration file, @file{/etc/yafcrc}
+Yafc will parse a system-wide configuration file, @file{@PREFIX@/etc/yafcrc}
 (or whatever you set with the @samp{--sysconfdir} option to the
 configure script), first. Then, personal settings are read from
 @file{~/.yafc/yafcrc} (overriding the global ones). If none of those
diff -Nurd -x'*~' yafc-1.1.1.orig/lib/gssapi.c yafc-1.1.1/lib/gssapi.c
--- yafc-1.1.1.orig/lib/gssapi.c	2002-12-05 17:12:36.000000000 -0500
+++ yafc-1.1.1/lib/gssapi.c	2012-01-11 22:17:26.000000000 -0500
@@ -72,7 +72,7 @@
 static gss_OID_desc gss_c_nt_hostbased_service_oid_desc =
 {10, (void *)"\x2a\x86\x48\x86\xf7\x12" "\x01\x02\x01\x04"};
 
-static gss_OID GSS_C_NT_HOSTBASED_SERVICE = &gss_c_nt_hostbased_service_oid_desc;
+gss_OID GSS_C_NT_HOSTBASED_SERVICE = &gss_c_nt_hostbased_service_oid_desc;
 
 
 
diff -Nurd -x'*~' yafc-1.1.1.orig/src/input.c yafc-1.1.1/src/input.c
--- yafc-1.1.1.orig/src/input.c	2005-10-05 15:31:25.000000000 -0400
+++ yafc-1.1.1/src/input.c	2012-01-11 23:08:08.000000000 -0500
@@ -53,7 +53,7 @@
 #endif
 }
 
-#if 0
+#if 1
 char *getpass_hook(const char *prompt)
 {
 #ifdef KERBEROS
diff -Nurd -x'*~' yafc-1.1.1.orig/yafc-import_ncftp.pl yafc-1.1.1/yafc-import_ncftp.pl
--- yafc-1.1.1.orig/yafc-import_ncftp.pl	1969-12-31 19:00:00.000000000 -0500
+++ yafc-1.1.1/yafc-import_ncftp.pl	2012-01-11 22:09:23.000000000 -0500
@@ -0,0 +1,68 @@
+#!/usr/bin/perl -w
+#
+# A simple ncftp -> yafc bookmark converter by Mike Wayne (arc@cts.com)
+# Sorry if my code sucks!
+#
+# Example usage:
+# yafc-import_ncftp.pl ~/.ncftp/bookmarks >> ~/.yafc/bookmarks
+#
+# If a filename argument is not given, ~/.ncftp/bookmarks will be read.
+
+use strict;
+my $mime;
+
+# set these to their appropriate settings.
+my $anonpass	= 'user@host.com';			# anonymous password
+my $ncftpbm	= "$ENV{HOME}/.ncftp/bookmarks";	# ncftp bookmarks
+
+eval 'use MIME::Base64';
+if ($@ eq '') { $mime = 1 }
+
+chomp($anonpass = encode_base64($anonpass)) if $mime;
+$ncftpbm = $ARGV[0] if $ARGV[0];
+
+open(BOOKMARKS, $ncftpbm) or die "Unable to open ncftp bookmarks file $ncftpbm: $!\n";
+
+print <<NOTICE;
+# this is an automagically created file
+# so don't bother placing comments here, they will be overwritten
+# make sure this file isn't world readable if passwords are stored here
+
+NOTICE
+
+while (<BOOKMARKS>)
+{
+	if ($_ =~ /,/)
+	{
+		my @bookmark = split(/,/, $_);
+
+		$bookmark[2] ||= 'anonymous';
+		$bookmark[7] ||= 21;
+	
+		print "machine $bookmark[1]:$bookmark[7] alias '$bookmark[0]'\n  login ";
+
+		if ($bookmark[2] eq 'anonymous')
+		{
+			print 'anonymous password ';
+			print "[base64]" if $mime;
+			print $anonpass;
+		}
+
+		else
+		{
+			print $bookmark[2];
+
+			$bookmark[3] =~ s/^\*encoded\*/\[base64\]/ if $bookmark[3];
+			print " password $bookmark[3]" if $bookmark[3];
+		}
+
+		$bookmark[5] = "\"$bookmark[5]\"" if ($bookmark[5] =~ m/ /);
+		print " cwd $bookmark[5]" if ($bookmark[5] && $bookmark[5] ne '/');
+
+		print "\n\n";
+	}
+}
+
+print "# end of bookmark file\n";
+
+close(BOOKMARKS);
