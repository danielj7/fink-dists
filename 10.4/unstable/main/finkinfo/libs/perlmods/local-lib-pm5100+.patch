diff -Nurd -x'*~' local-lib-1.006005.orig/Makefile.PL local-lib-1.006005/Makefile.PL
--- local-lib-1.006005.orig/Makefile.PL	2010-06-08 19:01:42.000000000 -0400
+++ local-lib-1.006005/Makefile.PL	2010-08-01 03:20:30.000000000 -0400
@@ -192,7 +192,7 @@
 
 # and make sure that the user doesn't have any existing CPAN config that'll
 # cause us problems for the next few steps.
-{
+if (0) {
     local $@;
     eval { require CPAN::HandleConfig; };
     # Need newish CPAN.pm for this, ergo skip it if that version of CPAN isn't
@@ -232,13 +232,11 @@
 }
 
 if ($bootstrapping) {
-  auto_install_now;
   postamble <<"END";
 PERL     += $bootstrapping_args
 FULLPERL += $bootstrapping_args
 END
 } else {
-  auto_install;
 }
 chdir($cwd);
 WriteAll;
diff -Nurd -x'*~' local-lib-1.006005.orig/t/install.t local-lib-1.006005/t/install.t
--- local-lib-1.006005.orig/t/install.t	2010-06-08 19:01:42.000000000 -0400
+++ local-lib-1.006005/t/install.t	2010-08-01 03:41:25.000000000 -0400
@@ -19,16 +19,32 @@
 my $orig_dir = cwd;
 SKIP: for my $dist_type (qw(EUMM MB)) {
   chdir File::Spec->catdir($orig_dir, qw(t dist), $dist_type);
+    my @command;
+    if ($Config{"byteorder"} =~ /^1/) {
+        # little-endian means intel (not powerpc), for which fink has
+        # multiple single-arch distros that are seen by a single (fat)
+        # perl interp from apple for a perl version supported by fink
+        # (i.e., starting with 5.10.0). This is the logic taken from
+        # Fink::PkgVersion as of fink-0.29.13.
+        push @command, '/usr/bin/arch';
+        if ( $Config{"longsize"} == 4 ) {
+            push @command, '-i386';   # 32-bit
+        } else {
+            push @command, '-x86_64'; # 64-bit
+        }
+    }
+    push @command, $^X;
+
   if ($dist_type eq 'EUMM') {
     my ($stdout, $stderr) = capture { eval { 
-      system($^X, 'Makefile.PL') && die "Makefile.PL failed";
+      system(@command, 'Makefile.PL') && die "Makefile.PL failed";
       system($Config{make}, 'install') && die "$Config{make} install failed";
     } };
     diag $stdout, $stderr if $@;
   } else {
     my ($stdout, $stderr) = capture { eval {
-      system($^X, 'Build.PL') && die "Build.PL failed";
-      system($^X, 'Build', 'install') && die "Build install failed";
+      system(@command, 'Build.PL') && die "Build.PL failed";
+      system(@command, 'Build', 'install') && die "Build install failed";
     } };
     diag $stdout, $stderr if $@;
   }
