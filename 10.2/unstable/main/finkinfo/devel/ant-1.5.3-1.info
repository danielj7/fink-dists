Package: ant
Version: 1.5.3
Revision: 1
Maintainer: Sylvain Cuaz <zauc@users.sf.net>
#
Depends: fink (>= 0.10.0)
Source: mirror:custom:ant/source/apache-ant-%v-src.tar.bz2
CustomMirror: <<
 nam-US: http://apache.i-connexion.net/dist/
 nam-US: http://mir2.ovh.net/ftp.apache.org/dist/
 nam-US: ftp://mir1.ovh.net/ftp.apache.org/dist/
 nam-US: http://nagoya.apache.org/mirror/
 nam-US: http://www.apache.org/dist/
 eur-FR: http://apache.crihan.fr/dist/
<<
Source-MD5: 14e23b7912167ebe9dc4ae004edf5bce
SourceDirectory: apache-%n-%v
CompileScript: JAVA_HOME=/Library/Java/Home ./build.sh -Ddist.name=%n -Dchmod.fail=false dist
InstallScript: <<
 #!/bin/sh
 mkdir -p %i/lib
 cp -R ant %i/lib
 # make up for failing build.xml
 chmod -R ugo+r %i/lib/%n
 # binaries
 rm %i/lib/%n/bin/*.bat
 mkdir -p %i/bin
 cd %i/bin ; ln -s ../lib/%n/bin/* .
 # docs
 mkdir -p %i/share/doc/%n
 cd %i/share/doc/%n ; ln -s ../../../lib/%n/docs html
<<
DocFiles: KEYS LICENSE README WHATSNEW lib/README:README.lib
RuntimeVars: <<
 JAVA_HOME: /Library/Java/Home
 ANT_HOME: %p/lib/ant
<<
#
Description: Java based build tool
DescDetail: <<
Ant is different. Instead of a model where it is extended with shell based commands, it is extended using Java classes. Instead of writing shell commands, the configuration files are XML based calling out a target tree where various tasks get executed. Each task is run by an object which implements a particular Task interface.

Granted, this removes some of the expressive power that is inherent by being able to construct a shell command such as `find . -name foo -exec rm {}` but it gives you the ability to be cross platform. To work anywhere and everywhere. And hey, if you really need to execute a shell command, Ant has an exec rule that allows different commands to be executed based on the OS that it is executing on.
<<
DescPackaging: <<
 I copy all the files to lib because there need to be a ANT_HOME env var.
 Linked the binaries in ... bin :-)
 Linked the docs to share/doc/%n
<<
DescPort: <<
 the chmod task of ant would fail with 
    Java: UNIXProcess:forkAndExec: exec failed: Argument list too long
  because apprently it tries to chmod thousands of files in a single line of command,
  another solution is to set parallel to false, which cause chmod to process one file after
  the other but then we get a java.io.IOException: Too many open files. Conclusion
  use unix chmod in InstallScript ;-)
 Removed *.bat in bin
<<
License: BSD
Homepage: http://ant.apache.org/
