--- ../xc/config/cf/darwin.cf	Fri Nov 21 00:55:04 2003
+++ ./config/cf/darwin.cf	Sun Nov 23 08:17:03 2003
@@ -163,8 +163,8 @@
 #endif
 
 /* we have a gcc compatible compiler, but its not called gcc */
-#define CcCmd                   /usr/bin/cc
-#define CplusplusCmd            /usr/bin/c++
+#define CcCmd                   gcc-3.3
+#define CplusplusCmd            g++-3.3
 
 /* default flags to pass to cc */
 #ifndef DefaultCCOptions
--- ../xc/programs/Xserver/Imakefile	Fri Nov 21 00:58:14 2003
+++ ./programs/Xserver/Imakefile	Sun Nov 23 08:16:18 2003
@@ -1233,8 +1233,7 @@
 /*
  * IOKit X server
  */
-SetUIDServerTarget(XDarwin,$(DARWINDIRS),$(DARWINOBJS), \
-	$(DARWINLIBS) $(IOKITLIB) $(DARWINEXTLIBS),$(DARWINSYSLIBS))
+SetUIDServerTarget(XDarwin,$(DARWINDIRS),$(DARWINOBJS),$(DARWINLIBS) $(IOKITLIB) $(DARWINEXTLIBS),$(DARWINSYSLIBS))
 
 #if DarwinQuartzSupport
 
@@ -1267,9 +1266,7 @@
 /*
  * Quartz X server (installed in its application bundle)
  */
-SetUIDServerTarget(XDarwinApp,$(DARWINDIRS),$(QUARTZOBJS), \
-	$(DARWINLIBS) $(QUARTZLIB) $(QUARTZEXTLIBS), \
-	$(DARWINSYSLIBS) $(QUARTZSYSLIBS) -u _miDCInitialize)
+SetUIDServerTarget(XDarwinApp,$(DARWINDIRS),$(QUARTZOBJS),$(DARWINLIBS) $(QUARTZLIB) $(QUARTZEXTLIBS),$(DARWINSYSLIBS) $(QUARTZSYSLIBS) -u _miDCInitialize)
 
 install::
 	$(MKDIRHIER) $(DESTDIR)$(XDARWINAPPDIR)/MacOS
@@ -1286,41 +1283,30 @@
 XPRDIRS = $(QUARTZDIR)/xpr $(ROOTLESSDIR) $(ROOTLESSDIR)/safeAlpha
 XPRLIBS = $(QUARTZDIR)/xpr/LibraryTargetName(xpr) $(ROOTLESSLIB)
 
-BundleProgramTarget(xpr,XDarwinApp,$(XPRDIRS),$(QUARTZDIR)/xpr/xprScreen.o, \
-	$(XPRLIBS),-framework ApplicationServices $(XPLUGINLIB), \
-	$(XDARWINAPPDIR)/Resources)
+BundleProgramTarget(xpr,XDarwinApp,$(XPRDIRS),$(QUARTZDIR)/xpr/xprScreen.o,$(XPRLIBS),-framework ApplicationServices $(XPLUGINLIB),$(XDARWINAPPDIR)/Resources)
 #endif
 
 CRDIRS = $(QUARTZDIR)/cr $(ROOTLESSDIR) $(ROOTLESSDIR)/safeAlpha
 CRLIBS = $(QUARTZDIR)/cr/LibraryTargetName(cr) $(ROOTLESSLIB)
 
-BundleProgramTarget(cr,XDarwinApp,$(CRDIRS),$(QUARTZDIR)/cr/crScreen.o, \
-	$(CRLIBS),-framework ApplicationServices -framework Cocoa \
-	-framework Carbon -ObjC, $(XDARWINAPPDIR)/Resources)
+BundleProgramTarget(cr,XDarwinApp,$(CRDIRS),$(QUARTZDIR)/cr/crScreen.o,$(CRLIBS),-framework ApplicationServices -framework Cocoa -framework Carbon -ObjC,$(XDARWINAPPDIR)/Resources)
 
 FSDIRS = $(QUARTZDIR)/fullscreen $(SHADOWDIR)
 FSLIBS = $(QUARTZDIR)/fullscreen/LibraryTargetName(fullscreen) $(SHADOW)
 
-BundleProgramTarget(fullscreen,XDarwinApp,$(FSDIRS), \
-	$(QUARTZDIR)/fullscreen/fullscreen.o,$(FSLIBS), \
-	-framework ApplicationServices,$(XDARWINAPPDIR)/Resources)
+BundleProgramTarget(fullscreen,XDarwinApp,$(FSDIRS),$(QUARTZDIR)/fullscreen/fullscreen.o,$(FSLIBS),-framework ApplicationServices,$(XDARWINAPPDIR)/Resources)
 
 /*
  * GLX bundles for Quartz
  * (installed in their own bundles inside XDarwin's)
  */
-BundleProgramTarget(glxAGL,XDarwinApp,GL,GL/glx/glxext.o,GL/glx/libglx.a \
-	GL/apple/libAGLcore.a,-framework AGL -framework OpenGL, \
-	$(XDARWINAPPDIR)/Resources)
+BundleProgramTarget(glxAGL,XDarwinApp,GL,GL/glx/glxext.o,GL/glx/libglx.a GL/apple/libAGLcore.a,-framework AGL -framework OpenGL,$(XDARWINAPPDIR)/Resources)
 
 #if BuildAppleDRI
-BundleProgramTarget(glxCGL,XDarwinApp,GL,GL/glx/glxext.o,GL/glx/libglx.a \
-	GL/apple/libCGLcore.a,-framework OpenGL $(XPLUGINLIB), \
-	$(XDARWINAPPDIR)/Resources)
+BundleProgramTarget(glxCGL,XDarwinApp,GL,GL/glx/glxext.o,GL/glx/libglx.a GL/apple/libCGLcore.a,-framework OpenGL $(XPLUGINLIB),$(XDARWINAPPDIR)/Resources)
 #endif
 
-BundleProgramTarget(glxMesa,XDarwinApp,GL,GL/glx/glxext.o,GL/glx/libglx.a \
-	GL/mesa/GLcore/libGLcore.a,NullParameter,$(XDARWINAPPDIR)/Resources)
+BundleProgramTarget(glxMesa,XDarwinApp,GL,GL/glx/glxext.o,GL/glx/libglx.a GL/mesa/GLcore/libGLcore.a,NullParameter,$(XDARWINAPPDIR)/Resources)
 
 #else /* !DarwinQuartzSupport */
 
--- programs/Xserver/hw/darwin/quartz/XServer.h	14 Nov 2003 20:27:58 -0000	1.15
+++ programs/Xserver/hw/darwin/quartz/XServer.h	23 Nov 2003 06:04:01 -0000	1.16
@@ -29,7 +29,7 @@
  * sale, use or other dealings in this Software without prior written
  * authorization.
  */
-/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/XServer.h,v 1.15 2003/11/14 20:27:58 torrey Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/XServer.h,v 1.16 2003/11/23 06:04:01 torrey Exp $ */
 
 #define BOOL xBOOL
 #include "Xproto.h"
@@ -90,7 +90,7 @@
 - (void)sendShowHide:(BOOL)show;
 - (void)clientProcessDone:(int)clientStatus;
 - (void)activateX11:(BOOL)state;
-- (void)windowBecameKey:(NSWindow *)window;
+- (void)windowBecameKey:(NSNotification *)notification;
 - (void)setX11WindowList:(NSArray *)list;
 - (void)setX11WindowCheck:(NSNumber *)nn;
 
--- programs/Xserver/hw/darwin/quartz/XServer.m	14 Nov 2003 20:27:58 -0000	1.17
+++ programs/Xserver/hw/darwin/quartz/XServer.m	23 Nov 2003 06:04:01 -0000	1.18
@@ -34,7 +34,7 @@
  * sale, use or other dealings in this Software without prior written
  * authorization.
  */
-/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/XServer.m,v 1.17 2003/11/14 20:27:58 torrey Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/XServer.m,v 1.18 2003/11/23 06:04:01 torrey Exp $ */
 
 #include "quartzCommon.h"
 
@@ -141,11 +141,6 @@
     [[NSRunLoop currentRunLoop] addPort:signalPort
                                 forMode:NSModalPanelRunLoopMode];
 
-    [[NSNotificationCenter defaultCenter] addObserver:self
-                                          selector:@selector(windowBecameKey:)
-                                          name:NSWindowDidBecomeKeyNotification
-                                          object:nil];
-
     return self;
 }
 
@@ -490,6 +485,15 @@
     if (![self loadDisplayBundle])
         [NSApp terminate:nil];
 
+    // In rootless mode register to receive notification of key window changes
+    if (quartzRootless) {
+        [[NSNotificationCenter defaultCenter]
+                addObserver:self
+                selector:@selector(windowBecameKey:)
+                name:NSWindowDidBecomeKeyNotification
+                object:nil];
+    }
+
     // Start the X server thread
     serverState = server_Starting;
     [NSThread detachNewThreadSelector:@selector(run) toTarget:self
@@ -1194,8 +1198,10 @@
 }
 
 // Some NSWindow became the key window
-- (void)windowBecameKey:(NSWindow *)window
+- (void)windowBecameKey:(NSNotification *)notification
 {
+    NSWindow *window = [notification object];
+
     if (quartzProcs->IsX11Window(window, [window windowNumber])) {
         if (!x11Active)
             [self activateX11:YES];
--- programs/Xserver/hw/darwin/quartz/cr/crFrame.m	13 Nov 2003 20:26:31 -0000	1.5
+++ programs/Xserver/hw/darwin/quartz/cr/crFrame.m	23 Nov 2003 06:06:29 -0000	1.6
@@ -27,7 +27,7 @@
  * holders shall not be used in advertising or otherwise to promote the sale,
  * use or other dealings in this Software without prior written authorization.
  */
-/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/cr/crFrame.m,v 1.5 2003/11/13 20:26:31 torrey Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/cr/crFrame.m,v 1.6 2003/11/23 06:06:29 torrey Exp $ */
 
 #include "quartzCommon.h"
 #include "cr.h"
@@ -163,9 +163,19 @@
 {
     CRWindowPtr crWinPtr = (CRWindowPtr) wid;
     NSRect bounds = NSMakeRect(newX, NSHeight([[NSScreen mainScreen] frame]) -
-                              newY - newH, newW, newH);
+                               newY - newH, newW, newH);
+    Rect qdRect;
 
     [crWinPtr->window setFrame:bounds display:NO];
+
+    // CR does not handle gravity properly, so we need to damage the whole
+    // window. (This won't work with ROOTLESS_TRACK_DAMAGE.)
+    qdRect.left = 0;
+    qdRect.top = 0;
+    qdRect.right = newW;
+    qdRect.bottom = newH;
+
+    QDAddRectToDirtyRegion(crWinPtr->port, &qdRect);
 }
 
 
