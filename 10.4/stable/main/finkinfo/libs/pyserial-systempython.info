Info2: <<
Package: pyserial-systempython%type_pkg[python]
Version: 2.6
Revision: 1
Type: python (2.5 2.6 2.7)
Distribution: (%type_pkg[python] = 26) 10.6, (%type_pkg[python] = 26) 10.7, (%type_pkg[python] = 27) 10.7
Maintainer: Hans-Christoph Steiner <hans@eds.org>
Description: Python access to serial ports
License: OSI-Approved
Homepage: http://pyserial.sourceforge.net/
DescDetail: <<
pySerial
--------
This module encapsulates the access for the serial port. It provides
backends for standard Python running on Windows, Linux, BSD (possibly
any POSIX compliant system) and Jython. The module named "serial"
automatically selects the appropriate backend.

Features
--------
- Same class based interface on all supported platforms.
- Access to the port settings through Python properties.
- Port numbering starts at zero, no need to know the platform dependent port
  name in the user program.
- Port name can be specified if access through numbering is inappropriate.
- Support for different bytesizes, stopbits, parity and flow control
  with RTS/CTS and/or Xon/Xoff.
- Working with or without receive timeout, blocking or non-blocking.
- File like API with "read" and "write" ("readline" etc. also supported).
- The files in this package are 100% pure Python.
  They depend on non standard but common packages on Windows (win32all) and
  Jython (JavaComm). POSIX (Linux, BSD) uses only modules from the standard
  Python distribution).
- The port is set up for binary transmission. No NULL byte stripping, CR-LF
  translation etc (which are many times enabled for POSIX).  This makes this
  the module universally useful.
<<
Source: http://pypi.python.org/packages/source/p/pyserial/pyserial-%v.tar.gz
Source-MD5: cde799970b7c1ce1f7d6e9ceebe64c98
#
BuildDepends: fink (>= 0.30)
Depends: darwin (>= 9-1)

# Patch Phase.
# Change CRLF line endings to LR line endings.
PatchScript: find . -type f -print0 | xargs -0 perl -w -p -i -e 's/\s+$/\n/'

# Compile Phase.
CompileScript: <<
 ARCHFLAGS=" " /usr/bin/python  setup.py build
<<

# Install Phase.
InstallScript: <<
 #!/bin/sh -ev
 /usr/bin/python setup.py install --prefix=%p --root=%d --install-purelib=%p/Library/Python/2.5/site-packages --install-platlib=%p/Library/Python/%type_raw[python]/site-packages
  mv %i/bin/miniterm.py %i/bin/miniterm.py-systempython%type_pkg[python]
<<

PostInstScript: <<
	update-alternatives --install %p/bin/miniterm.py miniterm.py %p/bin/miniterm.py-systempython%type_pkg[python] 251
<<

PreRmScript: <<
	if [ $1 != "upgrade" ]; then
		update-alternatives --remove miniterm.py %p/bin/miniterm.py-systempython%type_pkg[python]
	fi
<<


RuntimeVars: <<
 PYTHONPATH: %p/Library/Python/%type_raw[python]/site-packages
<<
DocFiles: CHANGES.txt LICENSE.txt README.txt
DescUsage: <<
 The package sets the runtime environment variable PYTHONPATH to
 %p/Library/Python/%type_raw[python]/site-packages, so that /usr/bin/python%type_raw[python]
 will find pySerial modules with commands like

 import serial

<<
<<
