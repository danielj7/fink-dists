Info2: <<
Package: gpsd-py%type_pkg[python]
Version: 2.96bis
Revision: 2
Type: python (2.6 2.7)

# FIX: may not require gpsd-shlibs!
Depends: python%type_pkg[python]-shlibs, gpsd-shlibs
BuildDepends: libxslt-bin, pkgconfig, python%type_pkg[python]

GCC: 4.0
Source: http://download.berlios.de/gpsd/gpsd-%v.tar.gz
SourceDirectory: gpsd-2.96
Source-MD5: 52b00cab0fb34bbf1923ae35c7ced6c4
SetCFLAGS: -Os

# FIX: For speed of the build, it might be good to turn off all of the gps types if they are only needed for the daemon.
ConfigureParams: --mandir=%p/share/man --disable-dependency-tracking --enable-dbus PYTHON=%p/bin/python%type_raw[python]
InstallScript: <<
  #!/bin/bash -ev
  make install DESTDIR=%d

  # Version the python files
  for file in gpscat gpsfake gpsprof xgps xgpsspeed ; do
    mv %i/bin/${file} %i/bin/${file}-py%type_pkg[python]
  done

  # === remove non-python files ===

  # gpsd-shlibs files
  rm -r %i/lib/*.dylib

  # gpsd-dev files
  rm -r %i/include %i/lib/pkgconfig %i/lib/*.{a,la}

  # gpsd files - the command line programs
  rm -r %i/sbin %i/share/man
  # C/C++ programs
  rm %i/bin/{cgps,gpsctl,gpsdecode,gpsmon,gpspipe,gpxlogger,lcdgps}
<<
DocFiles: COPYING

PostInstScript: <<
  # Add --verbose to update-alternatives for debugging
  update-alternatives --verbose --install %p/bin/gpscat gpsd-py %p/bin/gpscat-py%type_pkg[python] %type_pkg[python] --slave %p/bin/gpsfake gpsfake %p/bin/gpsfake-py%type_pkg[python] --slave %p/bin/gpsprof gpsprof %p/bin/gpsprof-py%type_pkg[python] --slave %p/bin/xgps xgps %p/bin/xgps-py%type_pkg[python] --slave %p/bin/xgpsspeed xgpsspeed %p/bin/xgpsspeed-py%type_pkg[python] 
<<

PreRmScript: <<
  if [ $1 != "upgrade" ]; then
    update-alternatives --verbose --remove gpsd-py %p/bin/gpscat-py%type_pkg[python]
  fi
<<

License: BSD
Homepage: http://gpsd.berlios.de
Maintainer: Jack Fink <jackfink@users.sourceforge.net>
Description: Gpsd client and programs GPS/AIS receivers in python
DescDetail: <<
gpsd is a service daemon that monitors one or more GPSes or AIS
receivers attached to a host computer through serial or USB ports,
making all data on the location/course/velocity of the sensors
available to be queried on TCP port 2947 of the host computer. With
gpsd, multiple location-aware client applications (such as
navigational and wardriving software) can share access to receivers
without contention or loss of data. Also, gpsd responds to queries
with a format that is substantially easier to parse than the NMEA 0183
emitted by most GPSes. The gpsd distribution includes a linkable C
service library, a C++ wrapper class, and a Python module that
developers of gpsd-aware applications can use to encapsulate all
communication with gpsd.

Besides gpsd itself, the project provides auxiliary tools for
diagnostic monitoring and profiling of receivers and feeding
location-aware applications GPS/AIS logs for diagnostic purposes.

The goal of the gpsd project is to create a solid layer of open-source
infrastructure for programs running under Linux and other open-source
Unixes that want to be location-sensitive. We aim for simple, robust
interfaces, unfussy operation, and an easy learning curve for
application developers.
<<

DescPackaging: <<

2011-Jun Kurt Schwehr / goatbar: reworked gpsd to have the python code
build separately to allow for python variants.  gpsd currently does
not use setup.py to handle python, so we have to do extra work with configure.

<<

# Info2
<<
