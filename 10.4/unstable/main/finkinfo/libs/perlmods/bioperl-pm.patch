diff -Naur bioperl-1.5.2_102/Build.PL bioperl-1.5.2_102-patched/Build.PL
--- bioperl-1.5.2_102/Build.PL	2007-02-14 06:37:47.000000000 -0500
+++ bioperl-1.5.2_102-patched/Build.PL	2007-11-03 14:41:55.000000000 -0400
@@ -32,10 +32,10 @@
                             'Test::More'                => 0,
                             'Module::Build'             => 0.2805,
                             'Test::Harness'             => 2.62,
-                            'CPAN'                      => 1.81
+                         #   'CPAN'                      => 1.81
                            },
     recommends          => { # does what you would expect of recommends, except more informative output and generates optional_features in META.yml
-                            'Ace'                       => '0/access of ACeDB database/Bio::DB::Ace,Bio::DB::GFF::Adaptor::ace',
+                 #           'Ace'                       => '0/access of ACeDB database/Bio::DB::Ace,Bio::DB::GFF::Adaptor::ace',
                             # this won't actually install due to circular dep, but we have no way of doing a post-install
                             'Bio::ASN1::EntrezGene'     => '0/parsing entrezgene/Bio::SeqIO::entrezgene',
                             # we actually need 1.01 of Class::AutoClass, but unfortunately it is versioned as 1.0
@@ -71,22 +71,22 @@
     get_options         => {
                             network => { } # not actually used by anything yet, but in the future say perl Build.PL --network
                            },
-    auto_features       => {
-                            BioDBSeqFeature_BDB   => {
-                                                        description      => "BDB tests for Bio::DB::SeqFeature::Store",
-                                                        feature_requires => { 'DB_File' => 0 } # feature_requires is like requires, execpt that it doesn't trigger installation
-                                                     },
-                            BioDBGFF              => {
-                                                        description      => "BioDBGFF database tests (will need to answer questions before really enabling)",
-                                                        feature_requires => { 'DBI' => 0 },
-                                                        excludes_os      => ['mswin'],
-                                                        test             => \&test_biodbgff # ModuleBuildBioperl unique requirement that after everything else succeeds, supplied code ref must also return undef
-                                                     },
-                            BioDBSeqFeature_mysql => {
-                                                        description      => "MySQL tests for Bio::DB::SeqFeature::Store",
-                                                        feature_requires => { 'DBI' => 0, 'DBD::mysql' => 0 },
-                                                        test             => \&test_db
-                                                     },
+   # auto_features       => {
+   #                         BioDBSeqFeature_BDB   => {
+   #                                                    description      => "BDB tests for Bio::DB::SeqFeature::Store",
+   #                                                     feature_requires => { 'DB_File' => 0 } # feature_requires is like requires, execpt that it doesn't trigger installation
+   #                                                  },
+   #                         BioDBGFF              => {
+   #                                                     description      => "BioDBGFF database tests (will need to answer questions before really enabling)",
+   #                                                     feature_requires => { 'DBI' => 0 },
+   #                                                     excludes_os      => ['mswin'],
+   #                                                     test             => \&test_biodbgff # ModuleBuildBioperl unique requirement that after everything else succeeds, supplied code ref must also return undef
+   #                                                  },
+   #                         BioDBSeqFeature_mysql => {
+   #                                                     description      => "MySQL tests for Bio::DB::SeqFeature::Store",
+   #                                                     feature_requires => { 'DBI' => 0, 'DBD::mysql' => 0 },
+   #                                                     test             => \&test_db
+   #                                                  },
 # The following code works, but since no tests in the test suite actually make use of this functionality, don't use it yet
 #                            Network               => {
 #                                                        description => "Enable tests that need an internet connection",
@@ -94,7 +94,7 @@
 #                                                        options     => ['network'], # ModuleBuildBioperl unique requirement that --network was supplied
 #                                                        test        => \&ModuleBuildBioperl::test_internet
 #                                                     }
-                           },
+#                           },
     dynamic_config      => 1
     
     #pm_files           => {} # modules in Bio are treated as if they were in lib and auto-installed
@@ -118,7 +118,7 @@
 
 # Ask questions
 $build->choose_scripts;
-prompt_for_biodbgff() if $build->feature('BioDBGFF');
+#prompt_for_biodbgff() if $build->feature('BioDBGFF');
 
 # Request that some scripts run post-installation
 $build->add_post_install_script('maintenance/symlink_script.pl'); # takes a unix file path regardless of local OS
diff -Naur bioperl-1.5.2_102/ModuleBuildBioperl.pm bioperl-1.5.2_102-patched/ModuleBuildBioperl.pm
--- bioperl-1.5.2_102/ModuleBuildBioperl.pm	2007-02-14 06:37:47.000000000 -0500
+++ bioperl-1.5.2_102-patched/ModuleBuildBioperl.pm	2007-11-03 14:54:41.000000000 -0400
@@ -91,10 +91,11 @@
         }
     }
     closedir($scripts_dir);
-    my $question = $int_ok ? "Install [a]ll Bioperl scripts, [n]one, or choose groups [i]nteractively?" : "Install [a]ll Bioperl scripts or [n]one?";
-    
-    my $prompt = $self->prompt($question, 'a');
-    
+#    my $question = $int_ok ? "Install [a]ll Bioperl scripts, [n]one, or choose groups [i]nteractively?" : "Install [a]ll Bioperl scripts or [n]one?";
+#    my $prompt = $self->prompt($question, 'a');
+
+    my $prompt = 'n';
+
     if ($prompt =~ /^[aA]/) {
         $self->log_info("  - will install all scripts\n");
         $self->notes(chosen_scripts => 'all');
@@ -129,7 +130,7 @@
         $self->notes(chosen_scripts => $chosen_scripts);
     }
     else {
-        $self->log_info("  - won't install any scripts\n");
+#        $self->log_info("  - won't install any scripts\n");
         $self->notes(chosen_scripts => 'none');
     }
     
@@ -402,6 +403,7 @@
 # install optional modules listed in 'recommends' arg to new that weren't
 # already installed. Should only be called by prereq_failures
 sub install_optional {
+	return 'ok';
     my ($self, $desired, $version, $msg) = @_;
     
     unless (defined $self->{ask_optional}) {
