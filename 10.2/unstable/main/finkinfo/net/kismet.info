Package: kismet
Version: 2.8.1
Revision: 1
Description: 802.11 wireless network sniffer
DescDetail: <<
Kismet is an 802.11 wireless network sniffer - this is different from
a normal network sniffer (such as Ethereal or tcpdump) because it
separates and identifies different wireless networks in the area.
Kismet works with any 802.11b wireless card which is capable of
reporting raw packets (rfmon support), which include any prism2 based
card (Linksys, D-Link, Rangelan, etc), Cisco Aironet cards, and
Orinoco based cards. Kismet also supports the WSP100 802.11b remote
sensor by Network Chemistry and is able to monitor 802.11a networks
with cards which use the ar5k chipset.
<<
DescUsage: <<
QUICK START

Detailed information about each of these steps can be found in the
appropriate section of the documentation.

   1. Compile and Install Kismet
   2. Configure kismet.conf and kismet_ui.conf for your card and
      setup. Make sure to put a valid, non-root user as the 'suiduser'
      option. This user is the account kismet will run as once it has
      attached to the capture source.
   3. Run kismet_monitor to enable rfmon mode, optionally with the
      channel hopper. kismet_monitor must be run as root because it
      changes the state of the card.
   4. Run kismet. Kismet should be run as the user you specified as
      the 'suiduser'. If kismet is started as root, it will drop privs
      to this user, but the frontend will still run as root.

If you have not already, read the docs in docs/ and edit
etc/kismet/kismet.conf to configure it for your system.  If you do not
configure this, Kismet will NOT run properly!
<<
DescPort: <<
Website notes for MacOS X:

      Kismet will compile under OSX, however currently only the client
      is useful. The Viha drivers DO support rfmon under OSX, and as
      soon as a Viha capture source is written Kismet should work
      natively in OSX, however this has not yet happened. Anyone
      interested in working on a Viha capture source should contact
      the author.

configure always decides to (and docs say it is prefered to) use its
own libpcap even if there's one installed (unless --enable-syspcap),
but bebsite mailing list says included libpcap doesn't build on OS X
(gcc3.3) so to --disable-pcap. But fink's libpcap-0.6.2-6 is too old
to know some constants needed by pcapsource.cc. Need fink's libpcap
installed (depended on by ethereal), but now that will be the headers
found before the included version's. So disable, and pcapsource is ok.
We should probably Source2: ethereal and then --with-ethereal it, but
haven't worked on it yet.

Remove all traces of included GNU getopt (will use Fink's).  Added
needed flags to find it and keep getopt.h happy. Sources all specifiy
their own getopt.h, so patch to use any.

All config files from etc/ consolidated into etc/%n.

Not installing the extras (so not docs/README.extras either).
<<
Homepage: http://www.kismetwireless.net/
License: GPL
Maintainer: Daniel Macks <dmacks@netspace.org>
BuildDepends: glib, expat, libgnugetopt
Depends: glib-shlibs, expat-shlibs, wget | wget-ssl, imagemagick | imagemagick-nox, libgnugetopt-shlibs
Recommends: gpsdrive
GCC: 3.1
Source: http://www.kismetwireless.net/code/%n-%v.tar.gz
Source-MD5: 7839368a4e5feee7d41b6582b3b8c3ab
Patch: %n.patch
PatchScript: <<
  rm getopt.*
  perl -pi -e 's/getopt.o//g' Makefile.in
  perl -pi -e 's/"getopt.h"/<getopt.h>/' `grep -lr '"getopt.h"' .`
  perl -pi -e 's|/usr/local/etc|%p/etc/%n|' README docs/README.html man/kismet.conf.5
<<
SetCPPFLAGS: -I%p/include/gnugetopt -DHAVE_DECL_GETOPT
SetLDFLAGS: -lgnugetopt
ConfigureParams: --mandir='${prefix}/share/man' --sysconfdir='${prefix}/etc/%n' --disable-pcap --without-ethereal
CompileScript: <<
  ./configure %c
  rm -f .depend
  make depend
  make
<<
DocFiles: CHANGELOG FAQ GPL README docs/DEVEL.* docs/README.html
ConfFiles: <<
  %p/etc/%n/ap_manuf
  %p/etc/%n/client_manuf
  %p/etc/%n/kismet.conf
  %p/etc/%n/kismet_ui.conf
<<
