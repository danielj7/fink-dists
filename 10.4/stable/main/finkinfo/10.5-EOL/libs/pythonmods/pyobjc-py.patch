diff -ur a/pyobjc-framework-CFNetwork/setup.py b/pyobjc-framework-CFNetwork/setup.py
--- a/pyobjc-framework-CFNetwork/setup.py	2009-10-14 17:05:03.000000000 +1100
+++ b/pyobjc-framework-CFNetwork/setup.py	2010-02-21 03:48:24.000000000 +1100
@@ -26,7 +26,7 @@
     ext_modules = [
         Extension("CFNetwork._manual",
             ["Modules/_manual.m"],
-            extra_link_args=['-framework', 'CoreServices'],
+            extra_link_args=['-framework', 'CoreServices', '-lobjc'],
         ),
     ],
 )
diff -ur a/pyobjc-framework-Cocoa/setup.py b/pyobjc-framework-Cocoa/setup.py
--- a/pyobjc-framework-Cocoa/setup.py	2009-10-14 17:05:03.000000000 +1100
+++ b/pyobjc-framework-Cocoa/setup.py	2010-02-21 03:56:18.000000000 +1100
@@ -22,58 +22,58 @@
         # CoreFoundation
         Extension('CoreFoundation._inlines', 
                 [ 'Modules/_CoreFoundation_inlines.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFCalendar', 
                 [ 'Modules/_CoreFoundation_CFCalendar.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFTree', 
                 [ 'Modules/_CoreFoundation_CFTree.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFBag', 
                 [ 'Modules/_CoreFoundation_CFBag.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFBinaryHeap', 
                 [ 'Modules/_CoreFoundation_CFBinaryHeap.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFBitVector', 
                 [ 'Modules/_CoreFoundation_CFBitVector.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFDictionary', 
                 [ 'Modules/_CoreFoundation_CFDictionary.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFFileDescriptor', 
                 [ 'Modules/_CoreFoundation_CFFileDescriptor.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFMachPort', 
                 [ 'Modules/_CoreFoundation_CFMachPort.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFMessagePort', 
                 [ 'Modules/_CoreFoundation_CFMessagePort.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFNumber', 
                 [ 'Modules/_CoreFoundation_CFNumber.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFReadStream', 
                 [ 'Modules/_CoreFoundation_CFReadStream.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFSet', 
                 [ 'Modules/_CoreFoundation_CFSet.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFSocket', 
                 [ 'Modules/_CoreFoundation_CFSocket.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFWriteStream', 
                 [ 'Modules/_CoreFoundation_CFWriteStream.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFRunLoopObserver', 
                 [ 'Modules/_CoreFoundation_CFRunLoopObserver.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFRunLoopSource', 
                 [ 'Modules/_CoreFoundation_CFRunLoopSource.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
         Extension('CoreFoundation._CFRunLoopTimer', 
                 [ 'Modules/_CoreFoundation_CFRunLoopTimer.m' ],
-                extra_link_args=['-framework', 'CoreFoundation']),
+                extra_link_args=['-framework', 'Cocoa']),
 
         # Foundation
         Extension('Foundation._nsinvocation', 
diff -ur a/pyobjc-framework-CoreText/setup.py b/pyobjc-framework-CoreText/setup.py
--- a/pyobjc-framework-CoreText/setup.py	2009-10-14 17:05:03.000000000 +1100
+++ b/pyobjc-framework-CoreText/setup.py	2010-02-21 03:58:17.000000000 +1100
@@ -19,7 +19,7 @@
     ext_modules = [
             Extension('CoreText._manual',
                 [ 'Modules/_manual.m' ],
-                extra_link_args=['-framework', 'CoreServices'],
+                extra_link_args=['-framework', 'Cocoa'],
             ),
     ],
     install_requires = [ 
diff -ur a/pyobjc-framework-FSEvents/setup.py b/pyobjc-framework-FSEvents/setup.py
--- a/pyobjc-framework-FSEvents/setup.py	2009-10-14 17:05:03.000000000 +1100
+++ b/pyobjc-framework-FSEvents/setup.py	2010-02-21 03:58:53.000000000 +1100
@@ -23,6 +23,7 @@
     ext_modules = [
         Extension("FSEvents._callbacks",
             [ "Modules/_callbacks.m" ],
+            extra_link_args=['-framework', 'Cocoa'],
         ),
     ],
 )
diff -ur a/pyobjc-framework-Quartz/setup.py b/pyobjc-framework-Quartz/setup.py
--- a/pyobjc-framework-Quartz/setup.py	2009-10-14 17:05:03.000000000 +1100
+++ b/pyobjc-framework-Quartz/setup.py	2010-02-21 04:01:44.000000000 +1100
@@ -51,6 +51,7 @@
         # CoreVideo
         Extension('Quartz.CoreVideo._CVPixelBuffer',
             [ 'Modules/_CVPixelBuffer.m' ],
+            extra_link_args=['-framework', 'Cocoa', '-framework', 'Quartz'],
         ),
 
         # CoreGraphics
@@ -59,15 +60,19 @@
         ),
         Extension('Quartz.CoreGraphics._callbacks',
             [ 'Modules/_callbacks.m' ],
+            extra_link_args=['-framework', 'Cocoa'],
         ),
         Extension('Quartz.CoreGraphics._doubleindirect',
             [ 'Modules/_doubleindirect.m' ],
+            extra_link_args=['-framework', 'Cocoa'],
         ),
         Extension('Quartz.CoreGraphics._sortandmap',
             [ 'Modules/_sortandmap.m' ],
+            extra_link_args=['-framework', 'Cocoa'],
         ),
         Extension('Quartz.CoreGraphics._coregraphics',
             [ 'Modules/_coregraphics.m' ],
+            extra_link_args=['-framework', 'Cocoa'],
         ),
     ],
 )
diff -ur a/pyobjc-framework-SystemConfiguration/setup.py b/pyobjc-framework-SystemConfiguration/setup.py
--- a/pyobjc-framework-SystemConfiguration/setup.py	2009-10-14 17:05:03.000000000 +1100
+++ b/pyobjc-framework-SystemConfiguration/setup.py	2010-02-21 04:03:01.000000000 +1100
@@ -20,6 +20,7 @@
     ext_modules = [
         Extension('SystemConfiguration._manual',
                  [ 'Modules/_manual.m' ],
+                 extra_link_args=['-framework', 'Cocoa', '-framework', 'SystemConfiguration'],
         ),
     ],
 )
--- a/pyobjc-core/Modules/objc/objc-class.m	2010-03-07 08:52:20.000000000 +1100
+++ b/pyobjc-core/Modules/objc/objc-class.m	2010-03-07 08:52:26.000000000 +1100
@@ -1413,7 +1413,9 @@
 		((PyTypeObject *)result)->tp_as_buffer = &nsmutabledata_as_buffer;
 	} else if (strcmp(className, "NSBlock") == 0) {
 		((PyTypeObject *)result)->tp_basicsize = sizeof(PyObjCBlockObject);
+#if PY_VERSION_HEX >= 0x02060000
 		PyType_Modified((PyTypeObject*)result);
+#endif
 		PyType_Ready((PyTypeObject *)result);
 	}
 
