Info2: <<
Package: msh-oct%type_pkg[oct]
Version: 1.0.9
Type: oct (3.0.5 3.4.3 3.6.0 3.6.1 3.6.2 3.6.3 3.6.4), forge (msh)
Revision: 1
Maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>
Distribution: (%type_pkg[oct] << 364) 10.7, (%type_pkg[oct] << 364) 10.8

# unfortunately, Homepage won't do types
Homepage: http://octave.sourceforge.net/msh/index.html 
Description: Mesh tool for Octave
DescDetail: <<
Create and manage triangular and tetrahedral meshes for Finite Element or
Finite Volume PDE solvers. Uses a mesh data structure compatible with PDEtool.
Rely on gmsh for unstructured mesh generation.

This package provides the following additional functions:

Structured mesh creation:
        msh2m_structured_mesh
        msh3m_structured_mesh
        msh2m_mesh_along_spline
Unstructured mesh creation:
        msh2m_gmsh
        msh3m_gmsh
Mesh manipulation:
        msh2m_join_structured_mesh
        msh3m_join_structured_mesh
Mesh properties:
        msh2m_geometrical_properties
        msh3m_geometrical_properties
        msh2m_topological_properties
        msh2m_nodes_on_sides
        msh3m_nodes_on_faces
Mesh adaptation:
        msh2m_equalize_mesh
        msh2m_displacement_smoothing
        msh2m_jiggle_mesh
        mshm_refine
Mesh extraction:
        msh3e_surface_mesh
        msh2m_submesh
        msh3m_submesh
Mesh plotting:
        msh2p_mesh
Mesh conversion from DOLFIN (no DOLFIN/FENICS in Fink yet)
        mshm_dolfin_read
        mshm_dolfin_write
<<

License: GPL2+

BuildDepends: <<
  liboctave%type_pkg[oct]-dev, 
  fftw3,
  ( %type_pkg[oct] = 305 ) hdf5.8-oldapi,
  ( %type_pkg[oct] != 305 ) hdf5.8, 
  fink (>=0.32)
<<
RuntimeDepends: splines-oct%type_pkg[oct]
Depends: octave%type_pkg[oct]-interpreter
Conflicts: octave-forge
Recommends: gmsh

Source: mirror:sourceforge:octave/%type_raw[forge]-%v.tar.gz
Source-MD5: cecbc33265300f6f10fa9b813225102b
SourceDirectory: %type_raw[forge]

# Do not change anything from this point down, unless absolutely necessary,
# since the foo-oct%type_pkg[oct] packages are designed to be built/installed
# in the same way.

NoSetCPPFLAGS: true
NoSetLDFLAGS: true
UseMaxBuildJobs: false
BuildAsNobody: false

CompileScript: <<
#!/bin/sh -ev

pkgsrc=%type_raw[forge]

##### Invariant stuff begins here #####
%p/share/fink-octave-scripts/octave-forge-patch.sh %type_raw[forge] %v %type_raw[oct] %b %i $pkgsrc
./octave-forge-compile.sh
<<

InstallScript: ./octave-forge-install.sh
PostInstScript:  %p/share/octave/%type_raw[oct]/%type_raw[forge]/octave-forge-postinst.sh
PreRmScript: %p/share/octave/%type_raw[oct]/%type_raw[forge]/octave-forge-prerm.sh

DescPackaging: <<
Common for all octave-forge packages:

We read in postinst and prerm template scripts installed by octaveN and modify
them to use the name of this package because Octave's package manager can't 
cope with non-literal arguments.

The Type: forge (pkgname) is used to minimize what needs to be changed when
using this .info file as a template.
<<
<<
