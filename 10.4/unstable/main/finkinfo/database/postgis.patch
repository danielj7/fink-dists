
--- postgis-1.2.1/java/jdbc/Makefile	2007-01-08 05:12:01.000000000 -0500
+++ postgis-1.2.1-new/java/jdbc/Makefile	2007-02-05 14:22:41.000000000 -0500
@@ -27,7 +27,7 @@
 
 # Configure the helper executables used during build.
 
-JAVAC?=javac -target 1.2 -source 1.2
+JAVAC?=javac -target 1.4 -source 1.2
 JAVA?=java
 JAR?=jar
 MKDIR?=mkdir -p
--- postgis-1.2.1/lwgeom/lwgeom_gml.c	2006-01-09 10:55:55.000000000 -0500
+++ postgis-1.2.1-new/lwgeom/lwgeom_gml.c	2007-02-05 14:25:59.000000000 -0500
@@ -38,10 +38,10 @@
 
 #define DEF_PRECISION 15
 /* Add dot, sign, exponent sign, 'e', exponent digits */
-#define SHOW_DIGS (precision + 8)
+#define SHOW_DIGS (gml_precision + 8)
 
 /* Globals */
-int precision;
+int gml_precision;
 
 
 /**
@@ -58,7 +58,7 @@
 	char *srs;
 	int SRID;
 
-	precision = DEF_PRECISION;
+	gml_precision = DEF_PRECISION;
 
 	if ( PG_ARGISNULL(0) ) PG_RETURN_NULL();
 
@@ -66,9 +66,9 @@
 
 	/* Get precision (if provided)  */
 	if ( PG_NARGS() > 1 && ! PG_ARGISNULL(1) )
-			precision = PG_GETARG_INT32(1);
+			gml_precision = PG_GETARG_INT32(1);
 	
-	if ( precision < 1 || precision > 15 )
+	if ( gml_precision < 1 || gml_precision > 15 )
 	{
 		elog(ERROR, "Precision out of range 1..15");
 		PG_RETURN_NULL();
@@ -424,8 +424,8 @@
 			getPoint2d_p(pa, i, &pt);
 			if ( i ) ptr += sprintf(ptr, " ");
 			ptr += sprintf(ptr, "%.*g,%.*g",
-				precision, pt.x,
-				precision, pt.y);
+				gml_precision, pt.x,
+				gml_precision, pt.y);
 		}
 	}
 	else 
@@ -436,9 +436,9 @@
 			getPoint4d_p(pa, i, &pt);
 			if ( i ) ptr += sprintf(ptr, " ");
 			ptr += sprintf(ptr, "%.*g,%.*g,%.*g",
-				precision, pt.x,
-				precision, pt.y,
-				precision, pt.z);
+				gml_precision, pt.x,
+				gml_precision, pt.y,
+				gml_precision, pt.z);
 		}
 	}
 
--- postgis-1.2.1/lwgeom/lwgeom_kml.c	2006-12-15 05:48:56.000000000 -0500
+++ postgis-1.2.1-new/lwgeom/lwgeom_kml.c	2007-02-05 14:25:32.000000000 -0500
@@ -38,10 +38,10 @@
 
 #define DEF_PRECISION 15
 /* Add dot, sign, exponent sign, 'e', exponent digits */
-#define SHOW_DIGS (precision + 8)
+#define SHOW_DIGS (kml_precision + 8)
 
 /* Globals */
-int precision;
+int kml_precision;
 
 
 /**
@@ -58,7 +58,7 @@
 	char *srs;
 	int SRID;
 
-	precision = DEF_PRECISION;
+	kml_precision = DEF_PRECISION;
 
 	if ( PG_ARGISNULL(0) ) PG_RETURN_NULL();
 
@@ -66,9 +66,9 @@
 
 	/* Get precision (if provided)  */
 	if ( PG_NARGS() > 1 && ! PG_ARGISNULL(1) )
-			precision = PG_GETARG_INT32(1);
+			kml_precision = PG_GETARG_INT32(1);
 	
-	if ( precision < 1 || precision > 15 )
+	if ( kml_precision < 1 || kml_precision > 15 )
 	{
 		elog(ERROR, "Precision out of range 1..15");
 		PG_RETURN_NULL();
@@ -409,8 +409,8 @@
 			getPoint2d_p(pa, i, &pt);
 			if ( i ) ptr += sprintf(ptr, " ");
 			ptr += sprintf(ptr, "%.*g,%.*g,0",
-				precision, pt.x,
-				precision, pt.y);
+				kml_precision, pt.x,
+				kml_precision, pt.y);
 		}
 	}
 	else 
@@ -421,9 +421,9 @@
 			getPoint4d_p(pa, i, &pt);
 			if ( i ) ptr += sprintf(ptr, " ");
 			ptr += sprintf(ptr, "%.*g,%.*g,%.*g",
-				precision, pt.x,
-				precision, pt.y,
-				precision, pt.z);
+				kml_precision, pt.x,
+				kml_precision, pt.y,
+				kml_precision, pt.z);
 		}
 	}
 
