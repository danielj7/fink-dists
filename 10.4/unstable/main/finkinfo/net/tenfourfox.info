Info3: <<
Package: tenfourfox
Version: 4.0
Revision: 1
Distribution: 10.4, 10.5
Architecture: powerpc
Description: Port of Firefox 4 to 10.4 and PowerPC
License: OSI-Approved
Maintainer: David Fang <fangism@users.sourceforge.net>
Depends: <<
#	bzip2-shlibs,
#	fontconfig2-shlibs (>= 2.4.1-1),
#	freetype219-shlibs (>= 2.3.7-7),
	glib2-shlibs (>= 2.14.0-1),
	libgettext8-shlibs
<<
BuildConflicts: <<
	automake1.11,
	automake1.10,
	automake1.9,
	autoconf,
	autoconf2.6,
	freetype,
	freetype-hinting,
	freetype2-dev,
	freetype219,
	nspr
<<
# bdep:git is temporary until patch supports git binary diffs (base-85)
BuildDepends: <<
	autoconf2.13,
	bzip2-dev,
#	dbus-dev,
	fink (>= 0.28-1),
	fink-package-precedence,
	flag-sort,
#	fontconfig2-dev (>= 2.4.1-1),
#	freetype219 (>= 2.3.7-7),
#	gcc4.2 (>= 4.2.1-5574),
	glib2-dev (>= 2.14.0-1),
	git,
	libgettext8-dev,
	libidl2 (>= 0.8.9-1),
	libjpeg8,
	make,
	pkgconfig (>= 0.21-1),
	python (>= 2.5),
	system-openssl-dev,
	system-sdk-10.4
<<
Source: http://releases.mozilla.org/pub/mozilla.org/firefox/releases/%v/source/firefox-%v.source.tar.bz2
SourceDirectory: mozilla-2.0
Source-MD5: 3468a2c463b4fc2788ba621e4b511c30
Source2: http://tenfourfox.googlecode.com/files/TenFourFox-changesets-20110323.zip
Source2-MD5: 265105ca59e3adfc0165e1cac84240ff
PatchFile: %n.patch
PatchFile-MD5: 54a6d68b8289a0224d76d9e8f42335d7
PatchScript: <<
  #!/bin/sh -ev
  # apply patchset from TenFourFox:
  for f in ../exports/*
  do
    echo "Patching in changeset $f ..."
#    patch -p1 < $f || { echo "... patch $f failed." ; patch_err=1 ;}
#    hg import --no-commit -p1 $f || { echo "... patch $f failed." ; patch_err=1 ;}
    git apply -p1 $f || { echo "... patch $f failed." ; patch_err=1 ;}
  done
  test -z "$patch_err" || { echo "Patch error above.  Aborting." ; exit 1;}
  ### apply the patch
  echo "Applying patch %{PatchFile} ..."
  /usr/bin/sed -e 's|@FINKPREFIX@|%p|g' -e 's|@FINK_ARCH_TARGET@|%m|g' <%{PatchFile} | /usr/bin/patch -p1
  # leave @executable_path alone and take care of adjusting install_names
  # between build and install, below.
  # configure inputs were patched, hence regeneration
  autoconf
<<
# even on 10.5
SetMACOSX_DEPLOYMENT_TARGET: 10.4
SetLDFLAGS: -L%p/lib/system-openssl/lib
SetCPPFLAGS: -I%p/lib/system-openssl/include -I%p/include -I/usr/X11R6/include
GCC: 4.0
CompileScript: <<
#!/bin/sh -ev
# /usr/bin/make crashes (bug)
make=%p/bin/make
# provide an executable script to launch .app
{ echo "#!/bin/sh -ev" ; \
echo "open -a %p/Applications/TenFourFox.app \"$@\"" ;} > tenfourfox
chmod +x tenfourfox

export PKG_CONFIG_PATH=%p/lib/system-openssl/lib/pkgconfig:$PKG_CONFIG_PATH
$make -w -f client.mk build
objdir=obj-%m-apple-darwin`uname -r`
pushd $objdir
fink-package-precedence --headers --depfile-ext=.pp .
fink-package-precedence --libs .
popd
<<
# AppBundles: UninstalledAppDir/TenFourFox.app
InstallScript: <<
#!/bin/sh -ev
objdir=obj-%m-apple-darwin`uname -r`
ln -s $objdir/dist UninstalledAppDir
make=%p/bin/make
# fake AppBundle installation b/c app dir contains symlinks to builddir
mkdir -p %i/bin
mkdir -p %i/Applications
cp tenfourfox %i/bin
cp -p -R -L UninstalledAppDir/TenFourFox.app %i/Applications
# now hack the install_names of private shlibs to appease validator
# and then change them back during post-install.
pkg_path=Applications/TenFourFox.app/Contents/MacOS
pushd %i/$pkg_path
for f in *.dylib
do install_name_tool -id %p/$pkg_path/$f $f
done
popd
<<
PostInstScript: <<
# restore original install_names of shlibs
pkg_path=Applications/TenFourFox.app/Contents/MacOS
pushd %p/$pkg_path
for f in *.dylib
do install_name_tool -id @executable_path/$f $f
done
popd
mkdir -p /Applications/Fink
pushd /Applications/Fink
ln -s %p/Applications/TenFourFox.app .
popd
<<
PreRmScript: <<
rm -f /Applications/Fink/TenFourFox.app
<<
DocFiles: LEGAL LICENSE README.txt toolkit/content/license.html
# shlibs are all private for now, until there is actual interest in them
Shlibs: <<
	!%p/Applications/TenFourFox.app/Contents/MacOS/libfreebl3.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libmozalloc.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libmozsqlite3.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libnspr4.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libnss3.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libnssckbi.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libnssdbm3.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libnssutil3.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libplc4.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libplds4.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libsmime3.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libsoftokn3.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libssl3.dylib
	!%p/Applications/TenFourFox.app/Contents/MacOS/libxpcom.dylib
<<
Homepage: http://www.tenfourfox.com/
DescDetail: <<
"Mozilla left you.  Apple left you.  But we didn't."
TenFourFox is a port of Firefox 4 for PowerPC Macs.
A separate port is necessary because upstream no longer supports
10.4, nor PowerPC.
This packaging is also good for 10.5/ppc.  
<<
DescUsage: <<
command line: %p/bin/tenfourfox
or drag %p/Applications/TenFourFox.app onto your dock for an icon.
<<
DescPackaging: <<
For the most part, follow's upstream's instructions for building.
http://code.google.com/p/tenfourfox/wiki/HowToBuild

Uses default toolkit cairo-cocoa, instead of gtk+2.
Uses Mozilla's own mozcairo instead of fink's cairo.

SplitOffs have been punted until there is actual interest.

Uses system-openssl instead of fink's openssl.  

Python is only needed at build-time.

Doesn't seem to use fontconfig anywhere.

Mozilla ships its own freetype module, even though configure detects
/usr/X11R6/bin/freetype-config, doesn't seem to use it anywhere:
config.status shows @FT2_CONFIG@, @FT2_CFLAGS@, @FT2_LIBS@ pointing
to system's freetype, @FT2_LIBS@ is referenced in gfx/thebes/Makefile
and toolkit/library/Makefile, yet it *never* appears in the build log.
otool -L doesn't find any linking to ANY freetype/fontconfig, 
not even system's.
I suspect only the gtk+2 toolkit uses it.
I've added it to BuildConflicts to be safe.
<<
DescPort: <<
Needs autoconf2.13 to regenerate configure after patch from tenfourfox.
BuildConflicts with automake1.* to temporarily remove to allow autoconf2.13.
(This wouldn't be an issue if build-conflicts removed recursively.)

Bunch of patches to rules.mk and client.mk are for enabling
parallel builds to share the same jobserver as the master/parent
make, so recursive instances of make benefit from -jN MAKEFLAGS.  

Using system-provided libraries:
--------------------------------
. system-png cannot be used because it lacks APNG (upstream won't include it)
. system-sqlite needs >= 3.6.23.1, but with extra options compiled in.

Using fink-provided libraries:
--------------------------------
TODO: experiment with the following:
--with-libIDL-prefix=%p
--with-glib-prefix=%p
--with-system-nspr --with-nspr-prefix=%p
--with-system-zlib=
--with-system-bz2=
--with-system-png=
--with-java-include-path=
--with-java-bin-path=
--enable-system-hunspell
--enable-system-pixman

TODO: enable optimization selection
<<
<<
