--- matplotlib/setupext.py.orig	Wed Sep 21 07:00:03 2005
+++ matplotlib/setupext.py	Wed Sep 21 07:19:41 2005
@@ -39,8 +39,9 @@
     'linux'  : ['/usr/local', '/usr',],
     # Charles Moad recommends not putting in /usr/X11R6 for darwin
     # because freetype in this dir is too old for mpl
-    'darwin' : ['/sw/lib/freetype2', '/sw/lib/freetype219', '/usr/local',
-                '/usr', '/sw'], 
+#   'darwin' : ['/sw/lib/freetype2', '/sw/lib/freetype219', '/usr/local',
+#               '/usr', '/sw'], 
+    'darwin' : ['@PREFIX@/lib/freetype219', '/usr/local', '/usr', '@PREFIX@'],
     'freebsd4' : ['/usr/local', '/usr'],
     'freebsd5' : ['/usr/local', '/usr'],
     'freebsd6' : ['/usr/local', '/usr'],    
@@ -271,44 +272,12 @@
 
 def find_tcltk():
     """Finds Tcl/Tk includes/libraries/version by interrogating Tkinter."""
-    try:
-	import Tkinter
-    except:
-	print "Tkinter not properly installed\n"
-	sys.exit(1)
-    if Tkinter.TkVersion < 8.3:
-	print "Tcl/Tk v8.3 or later required\n"
-	sys.exit(1)
     o = FoundTclTk()
-    try:
-	tk=Tkinter.Tk()	
-    except Tkinter.TclError:
-	print "Using default library and include directories for Tcl and Tk because a"
-	print "Tk window failed to open.  You may need to define DISPLAY for Tk to work"
-	print "so that setup can determine where your libraries are located."
-	o.tcl_lib = "/usr/local/lib"
-	o.tcl_inc = "/usr/local/include"
-	o.tk_lib = "/usr/local/lib"
-        o.tk_inc = "/usr/local/include"
-	o.tkv = ""
-    else:
-	tk.withdraw()
-	o.tcl_lib = os.path.join((tk.getvar('tcl_library')), '../')
-	o.tk_lib = os.path.join((tk.getvar('tk_library')), '../')
-	o.tkv = str(Tkinter.TkVersion)[:3]
-	o.tcl_inc = os.path.join((tk.getvar('tcl_library')), 
-				 '../../include/tcl'+o.tkv)        
-        if not os.path.exists(o.tcl_inc):
-	    o.tcl_inc = os.path.join((tk.getvar('tcl_library')), 
-				     '../../include')
-	o.tk_inc = os.path.join((tk.getvar('tk_library')), 
-				 '../../include/tk'+o.tkv)        
-        if not os.path.exists(o.tk_inc):
-	    o.tk_inc = os.path.join((tk.getvar('tk_library')), 
-				     '../../include')
-        if not os.path.exists(o.tcl_inc):
-            print 'cannot find tcl/tk headers. giving up.'
-            sys.exit()
+    o.tcl_lib = "@PREFIX@/lib"
+    o.tcl_inc = "@PREFIX@/include"
+    o.tk_lib = "@PREFIX@/lib"
+    o.tk_inc = "@PREFIX@/include"
+    o.tkv = ""
     return o
 	
 
--- matplotlib/setup.py.orig	Wed Sep 21 06:51:46 2005
+++ matplotlib/setup.py	Wed Sep 21 06:57:32 2005
@@ -25,21 +25,21 @@
 # it.  It makes very nice antialiased output and also supports alpha
 # blending
 BUILD_AGG          = 1
-BUILD_GTKAGG       = 'auto'
-BUILD_GTK          = 'auto'
+BUILD_GTKAGG       = 1
+BUILD_GTK          = 1      
 
 # build TK GUI with Agg renderer ; requires Tkinter Python extension
 # and Tk includes
 # Use False or 0 if you don't want to build
-BUILD_TKAGG        = 'auto'
+BUILD_TKAGG        = 1
 
 # build wxPython GUI with Agg renderer ; requires wxPython package
-BUILD_WXAGG        = 'auto'
+BUILD_WXAGG        = 1
 
 
 # build a small extension to manage the focus on win32 platforms.
 #BUILD_WINDOWING        = 0
-BUILD_WINDOWING        = 'auto'
+BUILD_WINDOWING        = 0
 
 
 VERBOSE = False # insert lots of diagnostic prints in extension code
@@ -83,7 +83,7 @@
 data.extend(glob.glob('images/*.ppm'))
 data.append('matplotlibrc')
 
-data_files=[('share/matplotlib', data),]
+data_files=[('share/matplotlib-py@PYVER@', data),]
 
 # Needed for CocoaAgg
 data_files.append(('share/matplotlib/Matplotlib.nib',
@@ -165,47 +165,21 @@
 build_enthought(ext_modules, packages)
 
 if BUILD_GTK:
-    try:
-        import gtk
-    except ImportError:
-        print 'GTK requires pygtk'
-        BUILD_GTK=0
-    except RuntimeError:
-        print 'pygtk present but import failed'
-
-if BUILD_GTK:
         build_gdk(ext_modules, packages, NUMERIX)
 
 if BUILD_GTKAGG:
-    try:
-        import gtk
-    except ImportError:
-        print 'GTKAgg requires pygtk'
-        BUILD_GTKAGG=0
-    except RuntimeError:
-        print 'pygtk present but import failed'
-if BUILD_GTKAGG:
     BUILD_AGG = 1
     build_gtkagg(ext_modules, packages, NUMERIX)
 
 if BUILD_TKAGG:
-    try: import Tkinter
-    except ImportError: print 'TKAgg requires TkInter'
-    else:
-        BUILD_AGG = 1
-        build_tkagg(ext_modules, packages, NUMERIX)
+    BUILD_AGG = 1
+    build_tkagg(ext_modules, packages, NUMERIX)
 
 if BUILD_WXAGG:
-    try: import wxPython
-    except ImportError:
-        if BUILD_WXAGG != 'auto':
-            print 'WXAgg\'s accelerator requires wxPython'
-        BUILD_WXAGG = 0
-    else:
-        BUILD_AGG = 1
-        build_wxagg(ext_modules, packages, NUMERIX,
-            not (isinstance(BUILD_WXAGG, str) # don't about if BUILD_WXAGG
-                 and BUILD_WXAGG.lower() == 'auto')) # is "auto"
+    BUILD_AGG = 1
+    build_wxagg(ext_modules, packages, NUMERIX,
+        not (isinstance(BUILD_WXAGG, str) # don't about if BUILD_WXAGG
+             and BUILD_WXAGG.lower() == 'auto')) # is "auto"
 
 if BUILD_AGG:
     build_agg(ext_modules, packages, NUMERIX)
@@ -225,6 +199,8 @@
 for mod in ext_modules:
     if VERBOSE:
         mod.extra_compile_args.append('-DVERBOSE')
+    mod.include_dirs.append('@PREFIX@/include')
+    mod.library_dirs.append('@PREFIX@/lib')
 
 setup(name="matplotlib",
       version= __version__,
--- matplotlib/lib/matplotlib/__init__.py.orig	Fri Sep 23 05:44:32 2005
+++ matplotlib/lib/matplotlib/__init__.py	Fri Sep 23 05:46:26 2005
@@ -367,7 +367,8 @@
         path = os.environ['MATPLOTLIBDATA']
         if os.path.isdir(path): return path
 
-    path = os.path.join(distutils.sysconfig.PREFIX, 'share', 'matplotlib')
+    path = os.path.join(distutils.sysconfig.PREFIX, 'share', 'matplotlib-py@PYVER@')
+
     if os.path.isdir(path): return path
 
     path = '/usr/local/share/matplotlib'
