diff -ru PyQt-x11-gpl-4.8.4.orig/configure.py PyQt-x11-gpl-4.8.4/configure.py
--- PyQt-x11-gpl-4.8.4.orig/configure.py	2011-05-01 08:50:12.000000000 -0400
+++ PyQt-x11-gpl-4.8.4/configure.py	2011-05-13 21:44:12.000000000 -0400
@@ -946,19 +946,12 @@
                 from distutils.sysconfig import get_config_vars
                 ducfg = get_config_vars()
 
-                if sys.platform == "darwin":
+#                if sys.platform == "darwin":
                     # We need to work out how to specify the right framework
                     # version.
-                    link = "-framework Python"
-                elif "--enable-shared" in ducfg.get("CONFIG_ARGS", ""):
-                    if glob.glob("%s/lib/libpython%d.%d*" % (ducfg["exec_prefix"], py_major, py_minor)):
-                        lib_dir_flag = quote("-L%s/lib" % ducfg["exec_prefix"])
-                    elif glob.glob("%s/libpython%d.%d*" % (ducfg["LIBDIR"], py_major, py_minor)):
-                        lib_dir_flag = quote("-L%s" % ducfg["LIBDIR"])
-                    else:
-                        sipconfig.inform("Qt Designer plugin disabled because Python library couldn't be found")
-                        opts.designer_plugin = False
-
+#                    link = "-framework Python"
+                if 1:
+                    lib_dir_flag = quote("-L%s" % sipcfg.py_lib_dir)
                     link = "%s -lpython%d.%d%s" % (lib_dir_flag, py_major, py_minor, abi)
                 else:
                     sipconfig.inform("Qt Designer plugin disabled because Python library is static")
@@ -1053,8 +1046,8 @@
     if qt_licensee:
         sipconfig.inform("Qt is licensed to %s." % qt_licensee)
 
-    if sys.platform == "darwin" and qt_framework:
-        sipconfig.inform("Qt is built as a framework.")
+  #  if sys.platform == "darwin" and qt_framework:
+  #      sipconfig.inform("Qt is built as a framework.")
 
     sipconfig.inform("SIP %s is being used." % sipcfg.sip_version_str)
     sipconfig.inform("The Qt header files are in %s." % qt_incdir)
@@ -1472,7 +1465,7 @@
         if "__USE_WS_X11__" in sipcfg.build_macros()["DEFINES"]:
             plattag = "WS_X11"
         else:
-            plattag = "WS_MACX"
+            plattag = "WS_X11"
     else:
         plattag = "WS_X11"
 
@@ -1881,10 +1874,10 @@
         macros['CXXFLAGS'] += ' -mstackrealign'
 
     # Work out how Qt was built on MacOS.
-    if sys.platform == "darwin":
-        if os.access(os.path.join(qt_libdir, "QtCore.framework"), os.F_OK):
-            global qt_framework
-            qt_framework = 1
+#    if sys.platform == "darwin":
+#        if os.access(os.path.join(qt_libdir, "QtCore.framework"), os.F_OK):
+#            global qt_framework
+#            qt_framework = 1
 
     # Get the Makefile generator.
     generator = macros["MAKEFILE_GENERATOR"]
@@ -1908,7 +1901,7 @@
     """
     if sys.platform == "darwin":
         # The Qt binary installer has macx-xcode as the default.
-        args = "-spec %s %s" % (sipcfg.platform, args)
+        args = "-spec %s %s" % ("macx-g++", args)
 
     return args
 
@@ -1935,8 +1928,8 @@
         else:
             exe_file = os.path.join("release", app + ".exe")
             make_target = " release"
-    elif sys.platform == "darwin":
-        exe_file = os.path.join(app + ".app", "Contents", "MacOS", app)
+#    elif sys.platform == "darwin":
+#        exe_file = os.path.join(app + ".app", "Contents", "MacOS", app)
     else:
         exe_file = os.path.join(".", app)
 
