diff -Nurd -x'*~' gtk-doc-1.13.orig/configure gtk-doc-1.13/configure
--- gtk-doc-1.13.orig/configure	2009-12-18 08:11:51.000000000 -0500
+++ gtk-doc-1.13/configure	2010-01-11 14:46:33.000000000 -0500
@@ -13016,7 +13016,7 @@
 
 HIGHLIGHT_OPTIONS=""
 # Extract the first word of "source-highlight", so it can be a program name with args.
-set dummy source-highlight; ac_word=$2
+set dummy source-highlight_IGNORE_THIS_ONE; ac_word=$2
 { $as_echo "$as_me:$LINENO: checking for $ac_word" >&5
 $as_echo_n "checking for $ac_word... " >&6; }
 if test "${ac_cv_path_HIGHLIGHT+set}" = set; then
@@ -13059,7 +13059,7 @@
 	HIGHLIGHT_OPTIONS="-t4 -sc -cstyle.css --no-doc -i"
 else
 	# Extract the first word of "highlight", so it can be a program name with args.
-set dummy highlight; ac_word=$2
+set dummy highlight_IGNORE_THIS_ONE; ac_word=$2
 { $as_echo "$as_me:$LINENO: checking for $ac_word" >&5
 $as_echo_n "checking for $ac_word... " >&6; }
 if test "${ac_cv_path_HIGHLIGHT+set}" = set; then
@@ -13102,7 +13102,8 @@
 		HIGHLIGHT_OPTIONS="-X -f --class-name=gtkdoc "
 	else
 		# Extract the first word of "vim", so it can be a program name with args.
-set dummy vim; ac_word=$2
+HIGHLIGHT=/usr/bin/vim
+set dummy /usr/bin/vim; ac_word=$2
 { $as_echo "$as_me:$LINENO: checking for $ac_word" >&5
 $as_echo_n "checking for $ac_word... " >&6; }
 if test "${ac_cv_path_HIGHLIGHT+set}" = set; then
diff -Nurd -x'*~' gtk-doc-1.13.orig/gtkdoc-depscan.in gtk-doc-1.13/gtkdoc-depscan.in
--- gtk-doc-1.13.orig/gtkdoc-depscan.in	2009-04-22 15:36:57.000000000 -0400
+++ gtk-doc-1.13/gtkdoc-depscan.in	2010-01-11 13:38:38.000000000 -0500
@@ -260,7 +260,7 @@
     path = path and path.split(':') or []
 
     prefix = popen(
-        'pkg-config --variable=prefix glib-2.0'
+        '@prefix@'
         ).readline().rstrip()
 
     path.insert(0, prefix)
diff -Nurd -x'*~' gtk-doc-1.13.orig/gtkdoc-fixxref.in gtk-doc-1.13/gtkdoc-fixxref.in
--- gtk-doc-1.13.orig/gtkdoc-fixxref.in	2009-12-17 14:36:51.000000000 -0500
+++ gtk-doc-1.13/gtkdoc-fixxref.in	2010-01-11 13:38:38.000000000 -0500
@@ -106,7 +106,7 @@
 
 # We scan the directory containing GLib and any directories in GNOME2_PATH
 # first, but these will be overriden by any later scans.
-$dir = `pkg-config --variable=prefix glib-2.0`;
+$dir = '@prefix@';
 $dir =~ s/\s+$//;
 $dir = $dir . "/share/gtk-doc/html";
 if (-d $dir && $dir ne $HTML_DIR) {
@@ -168,36 +168,40 @@
     }
 }
 
-open (INPUT, "$MODULE-sections.txt")
-	|| die "Can't open $MODULE-sections.txt: $!";
-my $subsection = "";
-while (<INPUT>) {
-    if (m/^#/) {
-        next;
+if (defined($MODULE)) {
+    open (INPUT, "$MODULE-sections.txt")
+            || die "Can't open $MODULE-sections.txt: $!";
+    my $subsection = "";
+    while (<INPUT>) {
+        if (m/^#/) {
+            next;
 
-    } elsif (m/^<SECTION>/) {
-        $subsection = "";
-    } elsif (m/^<SUBSECTION\s*(.*)>/i) {
-        $subsection = $1;
-    } elsif (m/^<SUBSECTION>/) {
-        next;
-    } elsif (m/^<TITLE>(.*)<\/TITLE>/) {
-        next;
-    } elsif (m/^<FILE>(.*)<\/FILE>/) {
-        next;
-    } elsif (m/^<INCLUDE>(.*)<\/INCLUDE>/) {
-        next;
-    } elsif (m/^<\/SECTION>/) {
-        next;
-    } elsif (m/^(\S+)/) {
-        my $symbol=CreateValidSGMLID($1);
+        } elsif (m/^<SECTION>/) {
+            $subsection = "";
+        } elsif (m/^<SUBSECTION\s*(.*)>/i) {
+            $subsection = $1;
+        } elsif (m/^<SUBSECTION>/) {
+            next;
+        } elsif (m/^<TITLE>(.*)<\/TITLE>/) {
+            next;
+        } elsif (m/^<FILE>(.*)<\/FILE>/) {
+            next;
+        } elsif (m/^<INCLUDE>(.*)<\/INCLUDE>/) {
+            next;
+        } elsif (m/^<\/SECTION>/) {
+            next;
+        } elsif (m/^(\S+)/) {
+            my $symbol=CreateValidSGMLID($1);
 
-        if ($subsection eq "Standard" || $subsection eq "Private") {
-            $NoLinks{$symbol} = 1;
+            if ($subsection eq "Standard" || $subsection eq "Private") {
+                $NoLinks{$symbol} = 1;
+            }
         }
     }
+    close (INPUT);
+} else {
+    print "WARNING: Please fix your gtk-doc setup to use --module when calling gtkdoc-fixxref.\n"
 }
-close (INPUT);
 
 &FixCrossReferences ($MODULE_DIR);
 
diff -Nurd -x'*~' gtk-doc-1.13.orig/gtkdoc-rebase.in gtk-doc-1.13/gtkdoc-rebase.in
--- gtk-doc-1.13.orig/gtkdoc-rebase.in	2009-04-22 15:36:57.000000000 -0400
+++ gtk-doc-1.13/gtkdoc-rebase.in	2010-01-11 13:38:38.000000000 -0500
@@ -108,7 +108,7 @@
     }
 }
 
-$dir = `pkg-config --variable=prefix glib-2.0`;
+$dir = '@prefix@';
 $dir =~ s/^\s*(\S*)\s*$/$1/;
 $dir = $dir . "/share/gtk-doc/html";
 print "Prepending GLib directory $dir\n" if $VERBOSE;
diff -Nurd -x'*~' gtk-doc-1.13.orig/gtkdoc-scan.in gtk-doc-1.13/gtkdoc-scan.in
--- gtk-doc-1.13.orig/gtkdoc-scan.in	2009-11-25 14:18:11.000000000 -0500
+++ gtk-doc-1.13/gtkdoc-scan.in	2010-01-19 17:37:43.000000000 -0500
@@ -180,12 +180,12 @@
   `cp $old_decl_list $sections_file`;
 }
 
-# If there is no MODULE-overrides.txt file we create an empty one.
-# FIXME: why?
-#my $overrides_file = "${OUTPUT_DIR}/$MODULE-overrides.txt";
-#if (! -e $overrides_file) {
-#  `touch $overrides_file`;
-#}
+# If there is no MODULE-overrides.txt file we create an empty one
+# because EXTRA_DIST in gtk-doc.make requires it.
+my $overrides_file = "${OUTPUT_DIR}/$MODULE-overrides.txt";
+if (! -e $overrides_file) {
+  `touch $overrides_file`;
+}
 
 
 
diff -Nurd -x'*~' gtk-doc-1.13.orig/tests/gobject/examples/gobject.c gtk-doc-1.13/tests/gobject/examples/gobject.c
--- gtk-doc-1.13.orig/tests/gobject/examples/gobject.c	1969-12-31 19:00:00.000000000 -0500
+++ gtk-doc-1.13/tests/gobject/examples/gobject.c	2010-01-12 14:30:30.000000000 -0500
@@ -0,0 +1,21 @@
+/* example for gobject usage
+ * checkout the article at http://en.wikipedia.org/wiki/GObject
+ *
+ * This example is part of the release, that can be downloaded
+ * from ftp://ftp.gnome.org/pub/gnome/sources/gtk-doc/ or any mirror.
+ */
+
+#include <glib.h>
+#include <glib-object.h>
+
+gint
+main(gint argc, gchar **argv)
+{
+  GObject *myobj;
+
+  myobj = gtkdoc_object_new();
+  g_object_set (myobj, "parameter", 5, NULL);
+  g_object_unref (myobj);
+  
+  return 0;
+}
