diff -ur encfs-1.5/encfs/Cipher.h encfs-1.5-new/encfs/Cipher.h
--- encfs-1.5/encfs/Cipher.h	2008-08-24 07:48:12.000000000 +1000
+++ encfs-1.5-new/encfs/Cipher.h	2008-10-13 16:10:43.000000000 +1100
@@ -90,7 +90,7 @@
     // milliseconds the password derivation function should take to run.
     virtual CipherKey newKey(const char *password, int passwdLength,
             int &iterationCount, long desiredFunctionDuration,
-            const unsigned char *salt, int saltLen) =0;
+            unsigned char *salt, int saltLen) =0;
     // deprecated - for backward compatibility
     virtual CipherKey newKey(const char *password, int passwdLength ) =0;
     // create a new random key
diff -ur encfs-1.5/encfs/NullCipher.cpp encfs-1.5-new/encfs/NullCipher.cpp
--- encfs-1.5/encfs/NullCipher.cpp	2008-08-24 07:48:12.000000000 +1000
+++ encfs-1.5-new/encfs/NullCipher.cpp	2008-10-13 16:10:54.000000000 +1100
@@ -84,7 +84,7 @@
 }
 
 CipherKey NullCipher::newKey(const char *, int,
-        int &, long, const unsigned char *, int )
+        int &, long, unsigned char *, int )
 {
     return gNullKey;
 }
diff -ur encfs-1.5/encfs/NullCipher.h encfs-1.5-new/encfs/NullCipher.h
--- encfs-1.5/encfs/NullCipher.h	2008-08-24 07:48:12.000000000 +1000
+++ encfs-1.5-new/encfs/NullCipher.h	2008-10-13 16:10:58.000000000 +1100
@@ -39,7 +39,7 @@
     // create a new key based on a password
     virtual CipherKey newKey(const char *password, int passwdLength,
             int &iterationCount, long desiredDuration,
-            const unsigned char *salt, int saltLen);
+            unsigned char *salt, int saltLen);
     virtual CipherKey newKey(const char *password, int passwdLength);
     // create a new random key
     virtual CipherKey newRandomKey();
diff -ur encfs-1.5/encfs/SSL_Cipher.cpp encfs-1.5-new/encfs/SSL_Cipher.cpp
--- encfs-1.5/encfs/SSL_Cipher.cpp	2008-08-24 07:48:12.000000000 +1000
+++ encfs-1.5-new/encfs/SSL_Cipher.cpp	2008-10-13 16:10:11.000000000 +1100
@@ -134,7 +134,7 @@
 }
 
 int TimedPBKDF2(const char *pass, int passlen,
-        const unsigned char *salt, int saltlen,
+        unsigned char *salt, int saltlen,
         int keylen, unsigned char *out,
         long desiredPDFTime)
 {
@@ -396,7 +396,7 @@
 */
 CipherKey SSL_Cipher::newKey(const char *password, int passwdLength,
         int &iterationCount, long desiredDuration,
-        const unsigned char *salt, int saltLen)
+        unsigned char *salt, int saltLen)
 {
     const EVP_MD *md = EVP_sha1();
     if(!md)
diff -ur encfs-1.5/encfs/SSL_Cipher.h encfs-1.5-new/encfs/SSL_Cipher.h
--- encfs-1.5/encfs/SSL_Cipher.h	2008-08-24 07:48:12.000000000 +1000
+++ encfs-1.5-new/encfs/SSL_Cipher.h	2008-10-13 16:10:24.000000000 +1100
@@ -89,7 +89,7 @@
     // create a new key based on a password
     virtual CipherKey newKey(const char *password, int passwdLength,
             int &iterationCount, long desiredDuration,
-            const unsigned char *salt, int saltLen);
+            unsigned char *salt, int saltLen);
     // deprecated - for backward compatibility
     virtual CipherKey newKey(const char *password, int passwdLength);
     // create a new random key
