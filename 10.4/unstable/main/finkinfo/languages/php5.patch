diff -ruN php-5.2.5.orig/Zend/zend_language_scanner.c php-5.2.5/Zend/zend_language_scanner.c
--- php-5.2.5.orig/Zend/zend_language_scanner.c	2007-11-08 08:36:37.000000000 -0700
+++ php-5.2.5/Zend/zend_language_scanner.c	2007-12-10 23:07:08.000000000 -0700
@@ -3009,7 +3009,7 @@
 #define yymore() (yy_more_flag = 1)
 #define YY_MORE_ADJ yy_more_len
 #define YY_RESTORE_YY_MORE_OFFSET
-char *yytext;
+extern char *yytext;
 #define INITIAL 0
 
 /*
diff -ruN php-5.2.5.orig/build/build2.mk php-5.2.5/build/build2.mk
--- php-5.2.5.orig/build/build2.mk	2007-01-01 12:32:10.000000000 -0700
+++ php-5.2.5/build/build2.mk	2007-12-10 22:04:43.000000000 -0700
@@ -52,6 +52,11 @@
 
 aclocal.m4: configure.in acinclude.m4
 	@echo rebuilding $@
+	@libtoolize=`./build/shtool path glibtoolize libtoolize`; \
+	$$libtoolize --copy --automake --force; \
+	ltpath=`dirname $$libtoolize`; \
+	ltfile=`cd $$ltpath/../share/aclocal; pwd`/libtool.m4; \
+	cp $$ltfile ./build/libtool.m4
 	cat acinclude.m4 ./build/libtool.m4 > $@
 
 configure: aclocal.m4 configure.in $(config_m4_files)
diff -ruN php-5.2.5.orig/configure php-5.2.5/configure
--- php-5.2.5.orig/configure	2007-11-08 08:36:28.000000000 -0700
+++ php-5.2.5/configure	2007-12-12 11:09:04.000000000 -0700
@@ -21136,7 +21136,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lssl  $LIBS"
+LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lssl  $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 21142 "configure"
 #include "confdefs.h"
@@ -21559,7 +21559,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lcrypto  $LIBS"
+LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto  $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 21565 "configure"
 #include "confdefs.h"
@@ -21597,14 +21597,14 @@
   c|c_r|pthread*) ;;
   *) 
     if test "$ext_shared" = "yes"; then
-        OPENSSL_SHARED_LIBADD="-lcrypto $OPENSSL_SHARED_LIBADD" 
+        OPENSSL_SHARED_LIBADD="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto $OPENSSL_SHARED_LIBADD" 
     else
       
   
   case crypto in
   c|c_r|pthread*) ;;
   *) 
-      LIBS="-lcrypto $LIBS" 
+      LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto $LIBS" 
    ;;
   esac
 
@@ -21630,7 +21630,7 @@
 
 
     old_LIBS=$LIBS
-    LIBS="$LIBS -lcrypto"
+    LIBS="$LIBS -L@FINKPREFIX@/lib/system-openssl/lib -lcrypto"
     
   save_old_LDFLAGS=$LDFLAGS
   ac_stuff="
@@ -21735,7 +21735,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lssl  $LIBS"
+LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lssl  $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 21741 "configure"
 #include "confdefs.h"
@@ -21789,14 +21789,14 @@
   c|c_r|pthread*) ;;
   *) 
     if test "$ext_shared" = "yes"; then
-        OPENSSL_SHARED_LIBADD="-lssl $OPENSSL_SHARED_LIBADD" 
+        OPENSSL_SHARED_LIBADD="-L@FINKPREFIX@/lib/system-openssl/lib -lssl $OPENSSL_SHARED_LIBADD" 
     else
       
   
   case ssl in
   c|c_r|pthread*) ;;
   *) 
-      LIBS="-lssl $LIBS" 
+      LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lssl $LIBS" 
    ;;
   esac
 
@@ -34598,7 +34598,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lcrypto  $LIBS"
+LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto  $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 34604 "configure"
 #include "confdefs.h"
@@ -34636,14 +34636,14 @@
   c|c_r|pthread*) ;;
   *) 
     if test "$ext_shared" = "yes"; then
-        FTP_SHARED_LIBADD="-lcrypto $FTP_SHARED_LIBADD" 
+        FTP_SHARED_LIBADD="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto $FTP_SHARED_LIBADD" 
     else
       
   
   case crypto in
   c|c_r|pthread*) ;;
   *) 
-      LIBS="-lcrypto $LIBS" 
+      LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto $LIBS" 
    ;;
   esac
 
@@ -34669,7 +34669,7 @@
 
 
     old_LIBS=$LIBS
-    LIBS="$LIBS -lcrypto"
+    LIBS="$LIBS -L@FINKPREFIX@/lib/system-openssl/lib -lcrypto"
     
   save_old_LDFLAGS=$LDFLAGS
   ac_stuff="
@@ -34774,7 +34774,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lssl  $LIBS"
+LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lssl  $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 34780 "configure"
 #include "confdefs.h"
@@ -34828,14 +34828,14 @@
   c|c_r|pthread*) ;;
   *) 
     if test "$ext_shared" = "yes"; then
-        FTP_SHARED_LIBADD="-lssl $FTP_SHARED_LIBADD" 
+        FTP_SHARED_LIBADD="-L@FINKPREFIX@/lib/system-openssl/lib -lssl $FTP_SHARED_LIBADD" 
     else
       
   
   case ssl in
   c|c_r|pthread*) ;;
   *) 
-      LIBS="-lssl $LIBS" 
+      LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lssl $LIBS" 
    ;;
   esac
 
@@ -48839,7 +48839,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lcrypto  $LIBS"
+LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto  $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 48845 "configure"
 #include "confdefs.h"
@@ -48877,14 +48877,14 @@
   c|c_r|pthread*) ;;
   *) 
     if test "$ext_shared" = "yes"; then
-        IMAP_SHARED_LIBADD="-lcrypto $IMAP_SHARED_LIBADD" 
+        IMAP_SHARED_LIBADD="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto $IMAP_SHARED_LIBADD" 
     else
       
   
   case crypto in
   c|c_r|pthread*) ;;
   *) 
-      LIBS="-lcrypto $LIBS" 
+      LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto $LIBS" 
    ;;
   esac
 
@@ -48910,7 +48910,7 @@
 
 
     old_LIBS=$LIBS
-    LIBS="$LIBS -lcrypto"
+    LIBS="$LIBS -L@FINKPREFIX@/lib/system-openssl/lib -lcrypto"
     
   save_old_LDFLAGS=$LDFLAGS
   ac_stuff="
@@ -49015,7 +49015,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lssl  $LIBS"
+LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lssl  $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 49021 "configure"
 #include "confdefs.h"
@@ -49069,14 +49069,14 @@
   c|c_r|pthread*) ;;
   *) 
     if test "$ext_shared" = "yes"; then
-        IMAP_SHARED_LIBADD="-lssl $IMAP_SHARED_LIBADD" 
+        IMAP_SHARED_LIBADD="-L@FINKPREFIX@/lib/system-openssl/lib -lssl $IMAP_SHARED_LIBADD" 
     else
       
   
   case ssl in
   c|c_r|pthread*) ;;
   *) 
-      LIBS="-lssl $LIBS" 
+      LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lssl $LIBS" 
    ;;
   esac
 
@@ -69332,7 +69332,7 @@
 
   if test "$ext_shared" = "yes" ; then
     case $host_alias in
-      *darwin*)
+      *darwin8*)
           { echo "configure: error: 
 Due to the way that loadable modules work on OSX/Darwin, you need to
 compile the PDO package statically into the PHP core.
@@ -76683,7 +76683,7 @@
       done
 
       for j in $PHP_LIBDIR $PHP_LIBDIR/pgsql $PHP_LIBDIR/postgres $PHP_LIBDIR/postgresql ""; do
-        if test -f "$i/$j/libpq.so" || test -f "$i/$j/libpq.a"; then 
+        if test -f "$i/$j/libpq.dylib" || test -f "$i/$j/libpq.a"; then 
           PGSQL_LIBDIR=$i/$j
         fi
       done
@@ -79466,7 +79466,7 @@
       done
 
       for j in lib $PHP_LIBDIR/pgsql $PHP_LIBDIR/postgres $PHP_LIBDIR/postgresql ""; do
-        if test -f "$i/$j/libpq.so" || test -f "$i/$j/libpq.a"; then 
+        if test -f "$i/$j/libpq.dylib" || test -f "$i/$j/libpq.a"; then 
           PGSQL_LIBDIR=$i/$j
         fi
       done
@@ -87556,7 +87556,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lcrypto  $LIBS"
+LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto  $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 87562 "configure"
 #include "confdefs.h"
@@ -87594,14 +87594,14 @@
   c|c_r|pthread*) ;;
   *) 
     if test "$ext_shared" = "yes"; then
-        SNMP_SHARED_LIBADD="-lcrypto $SNMP_SHARED_LIBADD" 
+        SNMP_SHARED_LIBADD="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto $SNMP_SHARED_LIBADD" 
     else
       
   
   case crypto in
   c|c_r|pthread*) ;;
   *) 
-      LIBS="-lcrypto $LIBS" 
+      LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lcrypto $LIBS" 
    ;;
   esac
 
@@ -87627,7 +87627,7 @@
 
 
     old_LIBS=$LIBS
-    LIBS="$LIBS -lcrypto"
+    LIBS="$LIBS -L@FINKPREFIX@/lib/system-openssl/lib -lcrypto"
     
   save_old_LDFLAGS=$LDFLAGS
   ac_stuff="
@@ -87732,7 +87732,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lssl  $LIBS"
+LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lssl  $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 87738 "configure"
 #include "confdefs.h"
@@ -87786,14 +87786,14 @@
   c|c_r|pthread*) ;;
   *) 
     if test "$ext_shared" = "yes"; then
-        SNMP_SHARED_LIBADD="-lssl $SNMP_SHARED_LIBADD" 
+        SNMP_SHARED_LIBADD="-L@FINKPREFIX@/lib/system-openssl/lib -lssl $SNMP_SHARED_LIBADD" 
     else
       
   
   case ssl in
   c|c_r|pthread*) ;;
   *) 
-      LIBS="-lssl $LIBS" 
+      LIBS="-L@FINKPREFIX@/lib/system-openssl/lib -lssl $LIBS" 
    ;;
   esac
 
@@ -104895,7 +104895,7 @@
   test "$PHP_MYSQL" != "no" && recode_conflict="$recode_conflict mysql"
 
   if test -n "$recode_conflict"; then
-    { echo "configure: error: recode extension can not be configured together with:$recode_conflict" 1>&2; exit 1; }
+    { echo "configure: warning: recode extension can not be configured together with:$recode_conflict" 1>&2; }
   fi
 fi
 
@@ -105023,7 +105023,7 @@
   if test "$PHP_PEAR" = "DEFAULT" || test "$PHP_PEAR" = "yes"; then
     case $PHP_LAYOUT in
       GNU) PEAR_INSTALLDIR=$datadir/pear;;
-      *)   PEAR_INSTALLDIR=$libdir/php;;
+      *)   PEAR_INSTALLDIR=$libdir/php5;;
     esac
   fi
 
@@ -107029,12 +107029,12 @@
 
 case $libdir in
   '${exec_prefix}/lib')
-    libdir=$libdir/php
+    libdir=$libdir/php5
     ;;
 esac
 case $datadir in
   '${prefix}/share')
-    datadir=$datadir/php
+    datadir=$datadir/php5
     ;;
   *) ;;
 esac
@@ -107098,7 +107098,7 @@
 EXPANDED_DATADIR=$datadir
 EXPANDED_PHP_CONFIG_FILE_PATH=`eval echo "$PHP_CONFIG_FILE_PATH"`
 EXPANDED_PHP_CONFIG_FILE_SCAN_DIR=`eval echo "$PHP_CONFIG_FILE_SCAN_DIR"`
-INCLUDE_PATH=.:$EXPANDED_PEAR_INSTALLDIR
+INCLUDE_PATH=.:$EXPANDED_PEAR_INSTALLDIR:@FINKPREFIX@/share/pear
 
 exec_prefix=$old_exec_prefix
 libdir=$old_libdir
diff -ruN php-5.2.5.orig/ext/exif/exif.c php-5.2.5/ext/exif/exif.c
--- php-5.2.5.orig/ext/exif/exif.c	2007-06-10 14:12:45.000000000 -0600
+++ php-5.2.5/ext/exif/exif.c	2007-12-10 22:10:34.000000000 -0700
@@ -99,7 +99,7 @@
 
 #define EFREE_IF(ptr)	if (ptr) efree(ptr)
 
-#define MAX_IFD_NESTING_LEVEL 100
+#define MAX_IFD_NESTING_LEVEL 250
 
 /* {{{ arginfo */
 static
diff -ruN php-5.2.5.orig/ext/ext_skel php-5.2.5/ext/ext_skel
--- php-5.2.5.orig/ext/ext_skel	2004-05-16 06:10:35.000000000 -0600
+++ php-5.2.5/ext/ext_skel	2007-12-10 21:40:38.000000000 -0700
@@ -70,7 +70,7 @@
 fi
 
 if test -z "$skel_dir"; then
-  skel_dir="skeleton"
+  skel_dir="@FINKPREFIX@/lib/php5/skeleton"
 fi
 
 ## convert skel_dir to full path
diff -ruN php-5.2.5.orig/ext/gd/gdcache.c php-5.2.5/ext/gd/gdcache.c
--- php-5.2.5.orig/ext/gd/gdcache.c	2005-01-09 14:05:05.000000000 -0700
+++ php-5.2.5/ext/gd/gdcache.c	2007-12-10 16:38:50.000000000 -0700
@@ -52,8 +52,21 @@
 /* implementation                                        */
 /*********************************************************/
 
-
 /* create a new cache */
+#ifdef __APPLE__
+extern gdCache_head_t *
+gdCacheCreate(
+        int                                     size,
+        gdCacheTestFn_t         gdCacheTest,
+        gdCacheFetchFn_t        gdCacheFetch,
+        gdCacheReleaseFn_t      gdCacheRelease );
+
+extern void
+gdCacheDelete( gdCache_head_t *head );
+
+extern void *
+gdCacheGet( gdCache_head_t *head, void *keydata );
+#else
 gdCache_head_t *
 gdCacheCreate(
 	int					size,
@@ -130,7 +143,7 @@
 	elem->userdata = userdata;
 	return userdata;
 }
-
+#endif
 
 
 /*********************************************************/
diff -ruN php-5.2.5.orig/ext/mime_magic/mime_magic.c php-5.2.5/ext/mime_magic/mime_magic.c
--- php-5.2.5.orig/ext/mime_magic/mime_magic.c	2007-06-07 02:44:41.000000000 -0600
+++ php-5.2.5/ext/mime_magic/mime_magic.c	2007-12-10 22:14:15.000000000 -0700
@@ -501,7 +501,7 @@
 		} while (*(++p) != '/');
 		++p;
 		do {
-			if (!isalnum(*p) && (*p != '-') && (*p != '.') && !isspace(*p)) {
+			if (!isalnum(*p) && (*p != '-') && (*p != '.') && (*p != '+') && !isspace(*p)) {
 				return 0;
 			}
 		} while (*(++p));
@@ -634,6 +634,15 @@
     else if (strncmp(l, "string", NSTRING) == 0) {
 		m->type = STRING;
 		l += NSTRING;
+		if (*l == '/') {
+			++l;
+			if ((*l == 'B') || (*l == 'b') || (*l == 'c')) {
+				++l;
+				if ((*l == 'B') || (*l == 'b') || (*l == 'c')) {
+					++l;
+				}
+			}
+		}
     }
     else if (strncmp(l, "date", NDATE) == 0) {
 		m->type = DATE;
@@ -727,7 +736,7 @@
 	if (!is_valid_mimetype(l, strlen(l))) {
 		if(MIME_MAGIC_G(debug))
 			php_error_docref("http://www.php.net/mime_magic" TSRMLS_CC, E_WARNING, ": (%s:%d) '%s' is not a valid mimetype, entry skipped", MIME_MAGIC_G(magicfile), lineno, l);
-		return -1;
+		return 0;
 	}
 	
 	strlcpy(m->desc, l, sizeof(m->desc));
diff -ruN php-5.2.5.orig/ext/ming/config.m4 php-5.2.5/ext/ming/config.m4
--- php-5.2.5.orig/ext/ming/config.m4	2007-03-06 03:13:40.000000000 -0700
+++ php-5.2.5/ext/ming/config.m4	2007-12-11 14:43:45.000000000 -0700
@@ -1,5 +1,5 @@
 dnl
-dnl $Id: config.m4,v 1.22.2.6.2.4 2007/03/06 10:13:40 tony2001 Exp $
+dnl $Id: config.m4,v 1.9 2006/11/28 00:55:37 anderson Exp $
 dnl
 
 PHP_ARG_WITH(ming, for MING support,
@@ -41,8 +41,6 @@
   PHP_ADD_LIBRARY_WITH_PATH(ming, $MING_DIR/$PHP_LIBDIR, MING_SHARED_LIBADD)
 
   PHP_CHECK_LIBRARY(ming, SWFPrebuiltClip, [ AC_DEFINE(HAVE_SWFPREBUILTCLIP, 1, [ ]) ], [], []) 
-  PHP_CHECK_LIBRARY(ming, SWFMovie_namedAnchor, [ AC_DEFINE(HAVE_SWFMOVIE_NAMEDANCHOR, 1, [ ]) ], [], []) 
-  PHP_CHECK_LIBRARY(ming, Ming_setSWFCompression, [ AC_DEFINE(HAVE_MING_SETSWFCOMPRESSION, 1, [ ]) ], [], []) 
 
   old_CPPFLAGS=$CPPFLAGS
   CPPFLAGS=-I$MING_INC_DIR
@@ -80,7 +78,7 @@
   AC_TRY_COMPILE([
 #include <ming.h>
   ], [
-SWFMovie_output(NULL, NULL, NULL, 0);
+int main(void) { SWFMovie_output(NULL, NULL, NULL, 0); return 0; }
   ], [
     AC_DEFINE(HAVE_MING_MOVIE_LEVEL, 1, [ ])
   ], [])
diff -ruN php-5.2.5.orig/ext/ming/ming.c php-5.2.5/ext/ming/ming.c
--- php-5.2.5.orig/ext/ming/ming.c	2007-01-06 12:25:31.000000000 -0700
+++ php-5.2.5/ext/ming/ming.c	2007-12-11 14:43:59.000000000 -0700
@@ -172,6 +169,7 @@
 static int le_swfbuttonp;
 static int le_swfactionp;
 static int le_swfmorphp;
+static int le_swfmovieclipp;
 static int le_swfspritep;
 static int le_swfinputp;
 static int le_swfsoundp;
@@ -196,6 +194,7 @@
 static zend_class_entry *button_class_entry_ptr;
 static zend_class_entry *action_class_entry_ptr;
 static zend_class_entry *morph_class_entry_ptr;
+static zend_class_entry *movieclip_class_entry_ptr;
 static zend_class_entry *sprite_class_entry_ptr;
 static zend_class_entry *sound_class_entry_ptr;
 #ifdef HAVE_NEW_MING
@@ -256,6 +255,8 @@
 		return (SWFCharacter)getButton(id TSRMLS_CC);
 	else if (Z_OBJCE_P(id) == morph_class_entry_ptr)
 		return (SWFCharacter)getMorph(id TSRMLS_CC);
+	else if (Z_OBJCE_P(id) == movieclip_class_entry_ptr)
+		return (SWFCharacter)getSprite(id TSRMLS_CC);
 	else if (Z_OBJCE_P(id) == sprite_class_entry_ptr)
 		return (SWFCharacter)getSprite(id TSRMLS_CC);
 	else if (Z_OBJCE_P(id) == bitmap_class_entry_ptr)
@@ -277,7 +278,7 @@
 		return (SWFCharacter)getPrebuiltClip(id TSRMLS_CC);
 #endif
 	else
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFCharacter");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFCharacter");
 		return NULL;
 }
 /* }}} */
@@ -330,7 +331,7 @@
 	action = compileSWFActionCode(Z_STRVAL_PP(script));
 
 	if (!action) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Couldn't compile actionscript");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Couldn't compile actionscript");
 	}
 	
 	ret = zend_list_insert(action, le_swfactionp);
@@ -349,7 +350,7 @@
 	void *action = SWFgetProperty(id, "action", 6, le_swfactionp TSRMLS_CC);
 
 	if (!action) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFAction");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFAction");
 	}
 	return (SWFAction)action;
 }
@@ -433,7 +434,7 @@
 	void *bitmap = SWFgetProperty(id, "bitmap", 6, le_swfbitmapp TSRMLS_CC);
 
 	if (!bitmap) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFBitmap");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFBitmap");
 	}
 	return (SWFBitmap)bitmap;
 }
@@ -497,7 +498,7 @@
 	void *button = SWFgetProperty(id, "button", 6, le_swfbuttonp TSRMLS_CC);
 
 	if (!button) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFButton");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFButton");
 	}
 	return (SWFButton)button;
 }
@@ -609,6 +610,36 @@
 	SWFButton_setMenu(button, Z_LVAL_PP(zflag));
 }
 /* }}} */
+
+/* {{{ proto void swfbutton::setScalingGrid(int x, int y, int w, int h) */
+PHP_METHOD(swfbutton, setScalingGrid)
+{
+	zval **zx, **zy, **zw, **zh;
+	SWFButton button = getButton(getThis() TSRMLS_CC);
+	if(ZEND_NUM_ARGS() != 4 || 
+			zend_get_parameters_ex(4, &zx, &zy, &zw, &zh) == FAILURE)
+		WRONG_PARAM_COUNT;
+
+	convert_to_long_ex(zx);
+	convert_to_long_ex(zy);
+	convert_to_long_ex(zw);
+	convert_to_long_ex(zh);
+
+	SWFButton_setScalingGrid(button, Z_LVAL_PP(zx), Z_LVAL_PP(zy), 
+					Z_LVAL_PP(zw), Z_LVAL_PP(zh));
+}
+/* }}} */
+
+/* {{{ proto void swfbutton::removeScalingGrid() */
+PHP_METHOD(swfbutton, removeScalingGrid)
+{
+	SWFButton button = getButton(getThis() TSRMLS_CC);
+	if(ZEND_NUM_ARGS() != 0) 
+		WRONG_PARAM_COUNT;
+
+	SWFButton_removeScalingGrid(button);
+}
+/* }}} */
 #endif
 
 /* {{{ proto void swfbutton::setAction(object SWFAction)
@@ -696,7 +727,7 @@
 	convert_to_string_ex(key);
 
 	if (Z_STRLEN_PP(key) > 1) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Only one character expected");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Only one character expected");
 	}
 	
 	c = Z_STRVAL_PP(key)[0];
@@ -714,6 +745,8 @@
 	PHP_ME(swfbutton, addShape,      NULL, 0)
 #ifdef HAVE_NEW_MING
 	PHP_ME(swfbutton, setMenu,       NULL, 0)
+	PHP_ME(swfbutton, setScalingGrid, NULL, 0)
+	PHP_ME(swfbutton, removeScalingGrid, NULL, 0)
 #endif
 	PHP_ME(swfbutton, addAction,     NULL, 0)
 #ifdef HAVE_NEW_MING
@@ -733,7 +766,7 @@
 	void *item = SWFgetProperty(id, "displayitem", 11, le_swfdisplayitemp TSRMLS_CC);
 
 	if (!item) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFDisplayItem");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFDisplayItem");
 	}
 
 	return (SWFDisplayItem)item;
@@ -1197,6 +1230,40 @@
 	RETURN_DOUBLE(ret);
 }
 /* }}} */
+
+/* {{{ proto void swfdisplayitem::cacheAsBitmap(int flag)
+   caches item as bitmap. can improve rendering speed */
+
+PHP_METHOD(swfdisplayitem, cacheAsBitmap)
+{
+	zval **flag;
+
+	if(ZEND_NUM_ARGS() != 1 || zend_get_parameters_ex(1, &flag) == FAILURE)
+		WRONG_PARAM_COUNT;
+
+	convert_to_long_ex(flag);
+
+	SWFDisplayItem_cacheAsBitmap(getDisplayItem(getThis() TSRMLS_CC), Z_LVAL_PP(flag));
+}
+/* }}} */
+
+
+/* {{{ proto void swfdisplayitem::setBlendMode(int mode)
+   adds blending to item */
+
+PHP_METHOD(swfdisplayitem, setBlendMode)
+{
+	zval **mode;
+
+	if(ZEND_NUM_ARGS() != 1 || zend_get_parameters_ex(1, &mode) == FAILURE)
+		WRONG_PARAM_COUNT;
+
+	convert_to_long_ex(mode);
+
+	SWFDisplayItem_cacheAsBitmap(getDisplayItem(getThis() TSRMLS_CC), Z_LVAL_PP(mode));
+}
+/* }}} */
+
 #endif
 
 static zend_function_entry swfdisplayitem_functions[] = {
@@ -1228,6 +1295,8 @@
 	PHP_ME(swfdisplayitem, getXSkew,    NULL, 0)
 	PHP_ME(swfdisplayitem, getYSkew,    NULL, 0)
 	PHP_ME(swfdisplayitem, getRot,      NULL, 0)
+	PHP_ME(swfdisplayitem, cacheAsBitmap, NULL, 0)
+    PHP_ME(swfdisplayitem, setBlendMode, NULL, 0)
 #endif
 	{ NULL, NULL, NULL }
 };
@@ -1240,7 +1309,7 @@
    Creates a new SWFFill object */
 PHP_METHOD(swffill, __construct)
 {
-  php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Instantiating SWFFill won't do any good- use SWFShape::addFill() instead");
+  php_error_docref(NULL TSRMLS_CC, E_ERROR, "Instantiating SWFFill won't do any good- use SWFShape::addFill() instead");
 }
 
 static void destroy_SWFFill_resource(zend_rsrc_list_entry *resource TSRMLS_DC)
@@ -1259,7 +1328,7 @@
 	void *fill = SWFgetProperty(id, "fill", 4, le_swffillp TSRMLS_CC);
 
 	if (!fill) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFFill");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFFill");
 	}
 	return (SWFFill)fill;
 }
@@ -1370,7 +1439,7 @@
 	void *font = SWFgetProperty(id, "fontcharacter", 13, le_swffontcharp TSRMLS_CC);
 
 	if(!font)
-		php_error(E_RECOVERABLE_ERROR, "called object is not an SWFFontCharacter!");
+		php_error(E_ERROR, "called object is not an SWFFontCharacter!");
 
 	return (SWFFontCharacter)font;
 }
@@ -1430,7 +1499,7 @@
 	void *font = SWFgetProperty(id, "font", 4, le_swffontp TSRMLS_CC);
 
 	if (!font) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFFont");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFFont");
 	}
 	return (SWFFont)font;
 }
@@ -1450,28 +1519,13 @@
 
 	convert_to_string_ex(zfile);
 
-	if (strcmp(Z_STRVAL_PP(zfile)+Z_STRLEN_PP(zfile)-4, ".fdb") == 0) {
-		php_stream * stream;
-		FILE * file;
-	
-		stream = php_stream_open_wrapper(Z_STRVAL_PP(zfile), "rb", REPORT_ERRORS|ENFORCE_SAFE_MODE, NULL);
-
-		if (stream == NULL) {
-			RETURN_FALSE;
-		}
-
-		if (FAILURE == php_stream_cast(stream, PHP_STREAM_AS_STDIO, (void*)&file, REPORT_ERRORS)) {
-			php_stream_close(stream);
-			RETURN_FALSE;
-		}
-	
-		font = loadSWFFontFromFile(file);
-		php_stream_close(stream);
+	if (strcasecmp(Z_STRVAL_PP(zfile)+Z_STRLEN_PP(zfile)-4, ".fdb") == 0 || 
+			strcasecmp(Z_STRVAL_PP(zfile)+Z_STRLEN_PP(zfile)-4, ".ttf") == 0) {
+		font = newSWFFont_fromFile(Z_STRVAL_PP(zfile));
 	} else {
 		PHP_MING_FILE_CHK(Z_STRVAL_PP(zfile));
 		font = (SWFFont)newSWFBrowserFont(Z_STRVAL_PP(zfile));
 	}
-
 	ret = zend_list_insert(font, le_swffontp);
 
 	object_init_ex(getThis(), font_class_entry_ptr);
@@ -1594,24 +1648,6 @@
 */
 /* }}} */
 
-/* {{{ proto string swffont::getShape(code)
-   Returns the glyph shape of a char as a text string */
-PHP_METHOD(swffont, getShape)
-{
-	zval **zcode;
-	char *result;
-
-	if(ZEND_NUM_ARGS() != 1 || zend_get_parameters_ex(1, &zcode) == FAILURE)
-		WRONG_PARAM_COUNT;
-
-	convert_to_long_ex(zcode);
-
-	result = SWFFont_getShape(getFont(getThis() TSRMLS_CC), Z_LVAL_PP(zcode));
-	RETVAL_STRING(result, 1);
-	free(result);
-}
-/* }}} */
-
 #endif
 
 static zend_function_entry swffont_functions[] = {
@@ -1626,7 +1662,6 @@
 	PHP_ME(swffont, getLeading,        NULL, 0)
 #ifdef HAVE_NEW_MING
 /*	PHP_ME(swffont, addchars,          NULL, 0)*/
-	PHP_ME(swffont, getShape,          NULL, 0)
 #endif
 	{ NULL, NULL, NULL }
 };
@@ -1660,7 +1695,7 @@
 	void *gradient = SWFgetProperty(id, "gradient", 8, le_swfgradientp TSRMLS_CC);
 
 	if (!gradient) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFGradient");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFGradient");
 	}
 	return (SWFGradient)gradient;
 }
@@ -1735,7 +1770,7 @@
 	void *morph = SWFgetProperty(id, "morph", 5, le_swfmorphp TSRMLS_CC);
 
 	if (!morph) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFMorph");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFMorph");
 	}
 	return (SWFMorph)morph;
 }
@@ -1787,7 +1822,7 @@
 	void *sound = SWFgetProperty(id, "sound", 5, le_swfsoundp TSRMLS_CC);
 
 	if(!sound)
-		php_error(E_RECOVERABLE_ERROR, "called object is not an SWFSound!");
+		php_error(E_ERROR, "called object is not an SWFSound!");
 
 	return (SWFSound)sound;
 }
@@ -1867,7 +1902,7 @@
 	void *inst = SWFgetProperty(id, "soundinstance", 13, le_swfsoundinstancep TSRMLS_CC);
 
 	if (!inst)
-		php_error(E_RECOVERABLE_ERROR, "called object is not an SWFSoundInstance!");
+		php_error(E_ERROR, "called object is not an SWFSoundInstance!");
 
 	return (SWFSoundInstance)inst;
 }
@@ -2001,7 +2036,7 @@
 	void *stream = SWFgetProperty(id, "videostream", 11, le_swfvideostreamp TSRMLS_CC);
 	                                                                                                                                         
 	if(!stream)
-		php_error(E_RECOVERABLE_ERROR, "called object is not an SWFVideoStream!");
+		php_error(E_ERROR, "called object is not an SWFVideoStream!");
 	                                                                                                                                         
 	return (SWFVideoStream)stream;
 }
@@ -2015,7 +2050,7 @@
 	zval **x, **y;
 	SWFVideoStream stream = getVideoStream(getThis() TSRMLS_CC);
 	if(!stream)
-		 php_error(E_RECOVERABLE_ERROR, "getVideoSTream returned NULL");
+		 php_error(E_ERROR, "getVideoSTream returned NULL");
 
 	if( ZEND_NUM_ARGS() != 2 
 			|| zend_get_parameters_ex(2, &x, &y) == FAILURE )
@@ -2111,7 +2146,7 @@
 	void *clip = SWFgetProperty(id, "prebuiltclip", 12, le_swfprebuiltclipp TSRMLS_CC);
                                                                      
 	if(!clip)
-		php_error(E_RECOVERABLE_ERROR, "called object is not an SWFPrebuiltClip!");
+		php_error(E_ERROR, "called object is not an SWFPrebuiltClip!");
                                                                                                                                              
 	return (SWFPrebuiltClip)clip;
 }
@@ -2167,7 +2202,7 @@
 	void *movie = SWFgetProperty(id, "movie", 5, le_swfmoviep TSRMLS_CC);
 
 	if (!movie) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFMovie");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFMovie");
 	}
 	return (SWFMovie)movie;
 }
@@ -2195,50 +2230,46 @@
 }
 /* }}} */
 
-#ifdef HAVE_SWFMOVIE_NAMEDANCHOR
-/* {{{ proto void swfmovie::namedanchor(string name)
+/* {{{ proto void swfmovie::namedanchor()
 */
 PHP_METHOD(swfmovie, namedAnchor)
 {
-	zval **name;
-	
-	if(ZEND_NUM_ARGS() != 1 || zend_get_parameters_ex(1, &name) == FAILURE) {
-		WRONG_PARAM_COUNT;
-	}
-	
-	convert_to_string_ex(name);
-	
-	SWFMovie_namedAnchor(getMovie(getThis() TSRMLS_CC), Z_STRVAL_PP(name));
+  zval **label;
+
+  if(ZEND_NUM_ARGS() != 1 || zend_get_parameters_ex(1, &label) == FAILURE) {
+    WRONG_PARAM_COUNT;
+  }
+
+  convert_to_string_ex(label);
+
+  SWFMovie_namedAnchor(getMovie(getThis() TSRMLS_CC), Z_STRVAL_PP(label));
 }
 /* }}} */
-#endif
 
 /* {{{ proto void swfmovie::protect([ string pasword])
 */
 PHP_METHOD(swfmovie, protect)
 {
-	zval **zchar;
-	SWFMovie movie = getMovie(getThis() TSRMLS_CC);
-	
-	switch(ZEND_NUM_ARGS() ) {
-		case 0:
-			SWFMovie_protect(movie, NULL);
-			break;
-		case 1:
-			if( zend_get_parameters_ex(1, &zchar) == FAILURE) {
-				WRONG_PARAM_COUNT;
-			}
-			convert_to_string_ex(zchar);
-			SWFMovie_protect(movie,Z_STRVAL_PP(zchar));
-			break;
-		default:
-			WRONG_PARAM_COUNT;
-			break;
-	}
+  zval **zchar;
+  SWFMovie movie = getMovie(getThis() TSRMLS_CC);
+
+  switch(ZEND_NUM_ARGS() ) {
+  case 0:
+    SWFMovie_protect(movie,NULL);
+  	break;
+  case 1:
+	if( zend_get_parameters_ex(1, &zchar) == FAILURE) {
+      WRONG_PARAM_COUNT;
+    }
+	convert_to_string_ex(zchar);
+    SWFMovie_protect(movie,Z_STRVAL_PP(zchar));
+  	break;
+  default:
+      WRONG_PARAM_COUNT;
+  }
 }
 /* }}} */
 
-
 /* {{{ proto object swfmovie::add(object SWFBlock) 
 */
 PHP_METHOD(swfmovie, add)
@@ -2262,7 +2293,7 @@
 		block = (SWFBlock) getCharacter(*zchar TSRMLS_CC);
 	}
 
-	item = SWFMovie_add(movie, block);
+	item = SWFMovie_add_internal(movie, (SWFMovieBlockType)block);
 
 	if (item != NULL) {
 		/* try and create a displayitem object */
@@ -2513,7 +2544,7 @@
 	convert_to_long_ex(b);
 	SWFMovie_setBackground(movie, Z_LVAL_PP(r), Z_LVAL_PP(g), Z_LVAL_PP(b));
 }
-/* }}} */
+/* }}} * /
 
 /* {{{ proto void swfmovie::setRate(float rate)
    Sets movie rate */
@@ -2565,8 +2596,70 @@
 /* }}} */
 
 #ifdef HAVE_NEW_MING
-/* {{{ proto int swfmovie::streamMP3(mixed file [, float skip])
-   Sets sound stream of the SWF movie. The parameter can be stream or string. Retuens the number of frames. */
+/* {{{ proto void swfmovie::addMetadata(string xml)
+ * */
+PHP_METHOD(swfmovie, addMetadata)
+{ 
+  zval **zchar;
+  SWFMovie movie = getMovie(getThis() TSRMLS_CC);
+  
+  if( ZEND_NUM_ARGS() != 1 || zend_get_parameters_ex(1, &zchar) == FAILURE) {
+        WRONG_PARAM_COUNT;
+  } 
+  convert_to_string_ex(zchar);
+  SWFMovie_addMetadata(movie, Z_STRVAL_PP(zchar));
+}
+/* }}} */
+
+/* {{{ proto void swfmovie::setScriptLimits(int maxRecursion, int timeout)
+*/
+PHP_METHOD(swfmovie, setScriptLimits)
+{
+  zval **maxRecursion, **timeout;
+  SWFMovie movie = getMovie(getThis() TSRMLS_CC);
+
+  if( ZEND_NUM_ARGS() != 2 || zend_get_parameters_ex(2, &maxRecursion, &timeout) == FAILURE) {
+        WRONG_PARAM_COUNT; 
+  } 
+  convert_to_long_ex(maxRecursion);
+  convert_to_long_ex(timeout);
+  SWFMovie_setScriptLimits(movie, Z_LVAL_PP(maxRecursion), Z_LVAL_PP(timeout));  
+}
+/* }}} */
+
+/* {{{ proto void swfmovie::setTabIndex(int depth, int index)
+ * */
+PHP_METHOD(swfmovie, setTabIndex)
+{
+  zval **depth, **index;
+  SWFMovie movie = getMovie(getThis() TSRMLS_CC);
+  
+  if( ZEND_NUM_ARGS() != 2 || zend_get_parameters_ex(2, &depth, &index) == FAILURE) {
+        WRONG_PARAM_COUNT; 
+  } 
+  convert_to_long_ex(depth);
+  convert_to_long_ex(index);
+  SWFMovie_setTabIndex(movie, Z_LVAL_PP(depth), Z_LVAL_PP(index));
+}
+/* }}} */
+
+/* {{{ proto void swfmovie::setNetworkAccess(int flag)
+ * */  
+PHP_METHOD(swfmovie, setNetworkAccess)
+{   
+  zval **flag;
+  SWFMovie movie = getMovie(getThis() TSRMLS_CC);
+    
+  if( ZEND_NUM_ARGS() != 1 || zend_get_parameters_ex(1, &flag) == FAILURE) {
+        WRONG_PARAM_COUNT;
+  }  
+  convert_to_long_ex(flag);
+  SWFMovie_setNetworkAccess(movie, Z_LVAL_PP(flag));
+} 
+/* }}} */
+
+/* {{{ proto long swfmovie::streamMP3(mixed file)
+   Sets sound stream of the SWF movie. The parameter can be stream or string. */
 PHP_METHOD(swfmovie, streamMP3)
 {
 	zval **zfile, **zskip;
@@ -2575,22 +2668,23 @@
 	SWFInput input;
 	SWFMovie movie = getMovie(getThis() TSRMLS_CC);
 
-	switch (ZEND_NUM_ARGS()) {
-		case 1:
-			if(zend_get_parameters_ex(1, &zfile) == FAILURE)
-				WRONG_PARAM_COUNT;
-			skip = 0;
-			break;
-		case 2:
-			if(zend_get_parameters_ex(2, &zfile, &zskip) == FAILURE)
-				WRONG_PARAM_COUNT;
-			convert_to_double_ex(zskip);
-			skip = Z_DVAL_PP(zskip);
-			break;
-		default:		
-			WRONG_PARAM_COUNT;
-			break;
-	}
+    switch (ZEND_NUM_ARGS()) {
+    case 1:
+  	  if(zend_get_parameters_ex(1, &zfile) == FAILURE) {
+		WRONG_PARAM_COUNT;
+	  }
+	  skip = 0;
+	  break;
+    case 2:
+	  if(zend_get_parameters_ex(2, &zfile, &zskip) == FAILURE) {
+		 WRONG_PARAM_COUNT;
+	  }
+	  convert_to_double_ex(zskip);
+	  skip = FLOAT_Z_DVAL_PP(zskip);
+	  break;
+    default:
+      WRONG_PARAM_COUNT;
+    }
 	
 	if (Z_TYPE_PP(zfile) != IS_RESOURCE) {
 		convert_to_string_ex(zfile);
@@ -2792,9 +2886,10 @@
 	PHP_ME(swfmovie, importFont,        NULL, 0)
 	PHP_ME(swfmovie, addFont,           NULL, 0)
 	PHP_ME(swfmovie, protect,           NULL, 0)
-#endif
-#ifdef HAVE_SWFMOVIE_NAMEDANCHOR
-	PHP_ME(swfmovie, namedAnchor,       NULL, 0)
+	PHP_ME(swfmovie, addMetadata,		NULL, 0)
+	PHP_ME(swfmovie, setNetworkAccess,	NULL, 0)
+	PHP_ME(swfmovie, setScriptLimits,	NULL, 0)
+	PHP_ME(swfmovie, setTabIndex,		NULL, 0)
 #endif
 	{ NULL, NULL, NULL }
 };
@@ -2828,7 +2923,7 @@
 	void *shape = SWFgetProperty(id, "shape", 5, le_swfshapep TSRMLS_CC);
 
 	if (!shape) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFShape");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFShape");
 	}
 
 	return (SWFShape)shape;
@@ -2912,7 +3007,7 @@
 			}
 			fill = SWFShape_addBitmapFill(getShape(getThis() TSRMLS_CC), getBitmap(*arg1 TSRMLS_CC), flags);
 		} else {
-			php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Argument is not a bitmap nor a gradient");
+			php_error_docref(NULL TSRMLS_CC, E_ERROR, "Argument is not a bitmap nor a gradient");
 		}
 
 	} else if (ZEND_NUM_ARGS() == 3 || ZEND_NUM_ARGS() == 4) {
@@ -2945,7 +3040,7 @@
 	}
 	
 	if (!fill) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Error adding fill to shape");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Error adding fill to shape");
 	}
 
 	/* return an SWFFill object */
@@ -3349,7 +3444,7 @@
 	void *sprite = SWFgetProperty(id, "sprite", 6, le_swfspritep TSRMLS_CC);
 
 	if (!sprite) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFSprite");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFSprite");
 	}
 	return (SWFMovieClip)sprite;
 }
@@ -3489,6 +3584,37 @@
 	SWFMovieClip_stopSound(sprite, sound);
 }
 /* }}} */
+
+/* {{{ proto void swfsprite::setScalingGrid(int x, int y, int w, int h) */
+PHP_METHOD(swfsprite, setScalingGrid)
+{
+	zval **zx, **zy, **zw, **zh;
+	SWFMovieClip sprite = getSprite(getThis() TSRMLS_CC);
+	if(ZEND_NUM_ARGS() != 4 || 
+			zend_get_parameters_ex(4, &zx, &zy, &zw, &zh) == FAILURE)
+		WRONG_PARAM_COUNT;
+
+	convert_to_long_ex(zx);
+	convert_to_long_ex(zy);
+	convert_to_long_ex(zw);
+	convert_to_long_ex(zh);
+
+	SWFMovieClip_setScalingGrid(sprite, Z_LVAL_PP(zx), Z_LVAL_PP(zy), 
+					Z_LVAL_PP(zw), Z_LVAL_PP(zh));
+}
+/* }}} */
+
+/* {{{ proto void swfsprite::removeScalingGrid() */
+PHP_METHOD(swfsprite, removeScalingGrid)
+{
+	SWFMovieClip sprite = getSprite(getThis() TSRMLS_CC);
+	if(ZEND_NUM_ARGS() != 0) 
+		WRONG_PARAM_COUNT;
+
+	SWFMovieClip_removeScalingGrid(sprite);
+}
+/* }}} */
+
 #endif
 
 static zend_function_entry swfsprite_functions[] = {
@@ -3501,6 +3627,8 @@
 #ifdef HAVE_NEW_MING
 	PHP_ME(swfsprite, startSound,		NULL, 0)
 	PHP_ME(swfsprite, stopSound,		NULL, 0)
+	PHP_ME(swfsprite, setScalingGrid, 	NULL, 0)
+	PHP_ME(swfsprite, removeScalingGrid, NULL, 0)
 #endif
 	{ NULL, NULL, NULL }
 };
@@ -3534,7 +3662,7 @@
 	void *text = SWFgetProperty(id, "text", 4, le_swftextp TSRMLS_CC);
 
 	if (!text) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFText");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFText");
 	}
 	return (SWFText)text;
 }
@@ -3838,7 +3966,7 @@
 	void *field = SWFgetProperty(id, "textfield", 9, le_swftextfieldp TSRMLS_CC);
 
 	if (!field) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Called object is not an SWFTextField");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Called object is not an SWFTextField");
 	}
 	return (SWFTextField)field;
 }
@@ -4154,7 +4301,7 @@
 	vspprintf(&buffer, 0, msg, args);
 	va_end(args);
 
-	php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "%s", buffer);
+	php_error_docref(NULL TSRMLS_CC, E_ERROR, "%s", buffer);
 	efree(buffer);
 }
 
@@ -4163,7 +4310,7 @@
 	/* XXX - this didn't work so well last I tried.. */
 
 	if (Ming_init() != 0) {
-		php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, "Error initializing Ming module");
+		php_error_docref(NULL TSRMLS_CC, E_ERROR, "Error initializing Ming module");
 		return FAILURE;
 	}
 	return SUCCESS;
@@ -4183,6 +4330,7 @@
 	zend_class_entry button_class_entry;
 	zend_class_entry action_class_entry;
 	zend_class_entry morph_class_entry;
+	zend_class_entry movieclip_class_entry;
 	zend_class_entry sprite_class_entry;
 	zend_class_entry sound_class_entry;
 #ifdef HAVE_NEW_MING
@@ -4257,6 +4405,15 @@
 	CONSTANT("SWFACTION_KEYDOWN",           SWFACTION_KEYDOWN);
 	CONSTANT("SWFACTION_KEYUP",             SWFACTION_KEYUP);
 	CONSTANT("SWFACTION_DATA",              SWFACTION_DATA);
+	CONSTANT("SWFACTION_INIT",              SWFACTION_INIT);
+	CONSTANT("SWFACTION_PRESS",             SWFACTION_PRESS);
+	CONSTANT("SWFACTION_RELEASE",           SWFACTION_RELEASE);
+	CONSTANT("SWFACTION_RELEASEOUTSIDE",    SWFACTION_RELEASEOUTSIDE);
+	CONSTANT("SWFACTION_ROLLOVER",          SWFACTION_ROLLOVER);
+	CONSTANT("SWFACTION_DRAGOVER",          SWFACTION_DRAGOVER);
+	CONSTANT("SWFACTION_DRAGOUT",           SWFACTION_DRAGOUT);
+	CONSTANT("SWFACTION_KEYPRESS",          SWFACTION_KEYPRESS);
+	CONSTANT("SWFACTION_CONSTRUCT",         SWFACTION_CONSTRUCT);
 
   /* flags for SWFSound */
 	CONSTANT("SWF_SOUND_NOT_COMPRESSED",    SWF_SOUND_NOT_COMPRESSED);
@@ -4273,6 +4430,24 @@
 	CONSTANT("SWF_SOUND_MONO",              SWF_SOUND_MONO);
 	CONSTANT("SWF_SOUND_STEREO",            SWF_SOUND_STEREO);
 
+#ifdef HAVE_NEW_MING
+	/* Blend Modes */
+	CONSTANT("SWFBLEND_MODE_NORMAL", 		SWFBLEND_MODE_NORMAL);
+	CONSTANT("SWFBLEND_MODE_LAYER", 		SWFBLEND_MODE_LAYER);
+	CONSTANT("SWFBLEND_MODE_MULT", 			SWFBLEND_MODE_MULT);
+	CONSTANT("SWFBLEND_MODE_SCREEN",		SWFBLEND_MODE_SCREEN);
+	CONSTANT("SWFBLEND_MODE_DARKEN",		SWFBLEND_MODE_DARKEN);
+	CONSTANT("SWFBLEND_MODE_LIGHTEN",		SWFBLEND_MODE_LIGHTEN);
+	CONSTANT("SWFBLEND_MODE_ADD", 			SWFBLEND_MODE_ADD);
+	CONSTANT("SWFBLEND_MODE_SUB",			SWFBLEND_MODE_SUB);
+	CONSTANT("SWFBLEND_MODE_DIFF", 			SWFBLEND_MODE_DIFF);
+  	CONSTANT("SWFBLEND_MODE_INV", 			SWFBLEND_MODE_INV);
+	CONSTANT("SWFBLEND_MODE_ALPHA", 		SWFBLEND_MODE_ALPHA);
+	CONSTANT("SWFBLEND_MODE_ERASE", 		SWFBLEND_MODE_ERASE);
+	CONSTANT("SWFBLEND_MODE_OVERLAY", 		SWFBLEND_MODE_OVERLAY);
+	CONSTANT("SWFBLEND_MODE_HARDLIGHT", 	SWFBLEND_MODE_HARDLIGHT);
+#endif
+
 	le_swfshapep = zend_register_list_destructors_ex(destroy_SWFShape_resource, NULL, "SWFShape", module_number);
 	le_swffillp = zend_register_list_destructors_ex(destroy_SWFFill_resource, NULL, "SWFFill", module_number);
 	le_swfgradientp = zend_register_list_destructors_ex(destroy_SWFGradient_resource, NULL, "SWFGradient", module_number);
@@ -4285,6 +4460,7 @@
 	le_swfbuttonp = zend_register_list_destructors_ex(destroy_SWFButton_resource, NULL, "SWFButton", module_number);
 	le_swfactionp = zend_register_list_destructors_ex(NULL, NULL, "SWFAction", module_number);
 	le_swfmorphp = zend_register_list_destructors_ex(destroy_SWFMorph_resource, NULL, "SWFMorph", module_number);
+	le_swfmovieclipp = zend_register_list_destructors_ex(destroy_SWFSprite_resource, NULL, "SWFMovieClip", module_number);
 	le_swfspritep = zend_register_list_destructors_ex(destroy_SWFSprite_resource, NULL, "SWFSprite", module_number);
 	le_swfinputp = zend_register_list_destructors_ex(destroy_SWFInput_resource, NULL, "SWFInput", module_number);
 
@@ -4310,6 +4486,7 @@
 	INIT_CLASS_ENTRY(button_class_entry, "SWFButton", swfbutton_functions);
 	INIT_CLASS_ENTRY(action_class_entry, "SWFAction", swfaction_functions);
 	INIT_CLASS_ENTRY(morph_class_entry, "SWFMorph", swfmorph_functions);
+	INIT_CLASS_ENTRY(movieclip_class_entry, "SWFMovieClip", swfsprite_functions);
 	INIT_CLASS_ENTRY(sprite_class_entry, "SWFSprite", swfsprite_functions);
 	INIT_CLASS_ENTRY(sound_class_entry, "SWFSound", swfsound_functions);
 #ifdef HAVE_NEW_MING
@@ -4333,6 +4510,7 @@
 	button_class_entry_ptr = zend_register_internal_class(&button_class_entry TSRMLS_CC);
 	action_class_entry_ptr = zend_register_internal_class(&action_class_entry TSRMLS_CC);
 	morph_class_entry_ptr = zend_register_internal_class(&morph_class_entry TSRMLS_CC);
+	movieclip_class_entry_ptr = zend_register_internal_class(&movieclip_class_entry TSRMLS_CC);
 	sprite_class_entry_ptr = zend_register_internal_class(&sprite_class_entry TSRMLS_CC);
 	sound_class_entry_ptr = zend_register_internal_class(&sound_class_entry TSRMLS_CC);
 #ifdef HAVE_NEW_MING
diff -ruN php-5.2.5.orig/ext/ming/ming.dsp php-5.2.5/ext/ming/ming.dsp
--- php-5.2.5.orig/ext/ming/ming.dsp	2004-01-17 05:59:35.000000000 -0700
+++ php-5.2.5/ext/ming/ming.dsp	2007-12-11 14:45:34.000000000 -0700
@@ -43,7 +43,7 @@
 # PROP Ignore_Export_Lib 0
 # PROP Target_Dir ""
 # ADD BASE CPP /nologo /MT /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MING_EXPORTS" /YX /FD /c
-# ADD CPP /nologo /MD /W3 /GX /O2 /I "..\.." /I "..\..\Zend" /I "..\..\TSRM" /I "..\..\main" /I "..\..\win32" /I "..\..\..\bindlib_w32" /D "WIN32" /D "MING_EXPORTS" /D "COMPILE_DL_MING" /D "HAVE_MING" /D ZEND_DEBUG=0 /D "NDEBUG" /D "_WINDOWS" /D "ZEND_WIN32" /D "PHP_WIN32" /D ZTS=1 /YX /FD /c
+# ADD CPP /nologo /MD /W3 /GX /O2 /I "..\.." /I "..\..\Zend" /I "..\..\TSRM" /I "..\..\main" /I "..\..\win32" /D "WIN32" /D "PHP_EXPORTS" /D "COMPILE_DL_MING" /D "HAVE_MING" /D ZEND_DEBUG=0 /D "NDEBUG" /D "_WINDOWS" /D "ZEND_WIN32" /D "PHP_WIN32" /D ZTS=1 /YX /FD /c
 # ADD BASE MTL /nologo /D "NDEBUG" /mktyplib203 /win32
 # ADD MTL /nologo /D "NDEBUG" /mktyplib203 /win32
 # ADD BASE RSC /l 0x407 /d "NDEBUG"
@@ -53,7 +53,7 @@
 # ADD BSC32 /nologo
 LINK32=link.exe
 # ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /dll /machine:I386
-# ADD LINK32 php5ts.lib libming.lib zlib.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /dll /machine:I386 /out:"..\..\Release_TS/php_ming.dll" /libpath:"..\..\Release_TS" /libpath:"..\..\Release_TS_Inline"
+# ADD LINK32 php5ts.lib libming.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /dll /machine:I386 /out:"..\..\Release_TS/php_ming.dll" /libpath:"..\..\Release_TS" /libpath:"..\..\Release_TS_Inline"
 
 !ELSEIF  "$(CFG)" == "ming - Win32 Debug_TS"
 
@@ -68,8 +68,8 @@
 # PROP Intermediate_Dir "Debug_TS"
 # PROP Ignore_Export_Lib 0
 # PROP Target_Dir ""
-# ADD BASE CPP /nologo /MTd /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MING_EXPORTS" /YX /FD /GZ /c
-# ADD CPP /nologo /MDd /W3 /Gm /GX /ZI /Od /I "..\.." /I "..\..\Zend" /I "..\..\TSRM" /I "..\..\main" /I "..\..\win32" /I "..\..\..\bindlib_w32" /D ZEND_DEBUG=1 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "MING_EXPORTS" /D "COMPILE_DL_MING" /D "ZEND_WIN32" /D "PHP_WIN32" /D "HAVE_MING" /D ZTS=1 /YX /FD /GZ /c
+# ADD BASE CPP /nologo /MTd /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MING_EXPORTS" /YX /FD /GZ  /c
+# ADD CPP /nologo /MDd /W3 /Gm /GX /ZI /Od /I "..\.." /I "..\..\Zend" /I "..\..\TSRM" /I "..\..\main" /I "..\..\win32" /D ZEND_DEBUG=1 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "PHP_EXPORTS" /D "COMPILE_DL_MING" /D "ZEND_WIN32" /D "PHP_WIN32" /D "HAVE_MING" /D ZTS=1 /YX /FD /GZ  /c
 # ADD BASE MTL /nologo /D "_DEBUG" /mktyplib203 /win32
 # ADD MTL /nologo /D "_DEBUG" /mktyplib203 /win32
 # ADD BASE RSC /l 0x407 /d "_DEBUG"
@@ -79,7 +79,7 @@
 # ADD BSC32 /nologo
 LINK32=link.exe
 # ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /dll /debug /machine:I386 /pdbtype:sept
-# ADD LINK32 php5ts_debug.lib libming.lib zlib.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /dll /debug /machine:I386 /out:"..\..\Debug_TS/php_ming.dll" /pdbtype:sept /libpath:"..\..\Debug_TS"
+# ADD LINK32 php5ts_debug.lib libming.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /dll /debug /machine:I386 /out:"..\..\Debug_TS/php_ming.dll" /pdbtype:sept /libpath:"..\..\Debug_TS"
 
 !ENDIF 
 
diff -ruN php-5.2.5.orig/ext/reflection/config.m4 php-5.2.5/ext/reflection/config.m4
--- php-5.2.5.orig/ext/reflection/config.m4	2006-08-23 03:47:21.000000000 -0600
+++ php-5.2.5/ext/reflection/config.m4	2007-12-10 22:18:28.000000000 -0700
@@ -2,7 +2,7 @@
 dnl config.m4 for extension reflection
 
 PHP_ARG_ENABLE(reflection, whether to enable reflection support,
-[  --disable-reflection    Disable reflection support], yes, no)
+[  --disable-reflection    Disable reflection support], yes)
 
 if test "$PHP_REFLECTION" != "no"; then
   AC_DEFINE(HAVE_REFLECTION, 1, [Whether Reflection is enabled])
diff -ruN php-5.2.5.orig/ext/session/session.c php-5.2.5/ext/session/session.c
--- php-5.2.5.orig/ext/session/session.c	2007-08-02 19:16:40.000000000 -0600
+++ php-5.2.5/ext/session/session.c	2007-12-10 21:42:48.000000000 -0700
@@ -181,11 +181,11 @@
 PHP_INI_BEGIN()
 	STD_PHP_INI_BOOLEAN("session.bug_compat_42",    "1",         PHP_INI_ALL, OnUpdateBool,   bug_compat,         php_ps_globals,    ps_globals)
 	STD_PHP_INI_BOOLEAN("session.bug_compat_warn",  "1",         PHP_INI_ALL, OnUpdateBool,   bug_compat_warn,    php_ps_globals,    ps_globals)
-	STD_PHP_INI_ENTRY("session.save_path",          "",          PHP_INI_ALL, OnUpdateSaveDir,save_path,          php_ps_globals,    ps_globals)
+	STD_PHP_INI_ENTRY("session.save_path",          "@FINKPREFIX@/var/lib/php5",          PHP_INI_ALL, OnUpdateString,save_path,          php_ps_globals,    ps_globals)
 	STD_PHP_INI_ENTRY("session.name",               "PHPSESSID", PHP_INI_ALL, OnUpdateString, session_name,       php_ps_globals,    ps_globals)
 	PHP_INI_ENTRY("session.save_handler",           "files",     PHP_INI_ALL, OnUpdateSaveHandler)
 	STD_PHP_INI_BOOLEAN("session.auto_start",       "0",         PHP_INI_ALL, OnUpdateBool,   auto_start,         php_ps_globals,    ps_globals)
-	STD_PHP_INI_ENTRY("session.gc_probability",     "1",         PHP_INI_ALL, OnUpdateLong,    gc_probability,     php_ps_globals,    ps_globals)
+	STD_PHP_INI_ENTRY("session.gc_probability",     "0",         PHP_INI_ALL, OnUpdateLong,    gc_probability,     php_ps_globals,    ps_globals)
 	STD_PHP_INI_ENTRY("session.gc_divisor",         "100",       PHP_INI_ALL, OnUpdateLong,    gc_divisor,        php_ps_globals,    ps_globals)
 	STD_PHP_INI_ENTRY("session.gc_maxlifetime",     "1440",      PHP_INI_ALL, OnUpdateLong,    gc_maxlifetime,     php_ps_globals,    ps_globals)
 	PHP_INI_ENTRY("session.serialize_handler",      "php",       PHP_INI_ALL, OnUpdateSerializer)
diff -ruN php-5.2.5.orig/ext/sockets/sockets.c php-5.2.5/ext/sockets/sockets.c
--- php-5.2.5.orig/ext/sockets/sockets.c	2007-09-26 04:55:07.000000000 -0600
+++ php-5.2.5/ext/sockets/sockets.c	2007-12-10 22:09:11.000000000 -0700
@@ -599,6 +599,7 @@
 
 		php_sock = (php_socket*) zend_fetch_resource(element TSRMLS_CC, -1, le_socket_name, NULL, 1, le_socket);
 		if (!php_sock) continue; /* If element is not a resource, skip it */
+		if (php_sock->bsd_socket > FD_SETSIZE) continue; /* must ignore it */
 
 		if (PHP_SAFE_FD_ISSET(php_sock->bsd_socket, fds)) {
 			/* Add fd to new array */
diff -ruN php-5.2.5.orig/ext/standard/datetime.c php-5.2.5/ext/standard/datetime.c
--- php-5.2.5.orig/ext/standard/datetime.c	2007-06-07 02:59:00.000000000 -0600
+++ php-5.2.5/ext/standard/datetime.c	2007-12-10 22:19:03.000000000 -0700
@@ -20,6 +20,9 @@
 
 /* $Id: datetime.c,v 1.134.2.2.2.5 2007/12/31 07:20:12 sebastian Exp $ */
 
+#define _XOPEN_SOURCE  /* needed to get strptime() declared */
+#define _BSD_SOURCE            /* needed to get ulong declared */
+
 #include "php.h"
 #include "zend_operators.h"
 #include "datetime.h"
diff -ruN php-5.2.5.orig/ext/standard/dl.c php-5.2.5/ext/standard/dl.c
--- php-5.2.5.orig/ext/standard/dl.c	2007-09-18 14:19:34.000000000 -0600
+++ php-5.2.5/ext/standard/dl.c	2007-12-10 21:36:33.000000000 -0700
@@ -81,12 +81,7 @@
 	if ((strncmp(sapi_module.name, "cgi", 3)!=0) && 
 		(strcmp(sapi_module.name, "cli")!=0) &&
 		(strncmp(sapi_module.name, "embed", 5)!=0)) {
-#ifdef ZTS
-		php_error_docref(NULL TSRMLS_CC, E_WARNING, "Not supported in multithreaded Web servers - use extension=%s in your php.ini", Z_STRVAL_PP(file));
-		RETURN_FALSE;
-#else
 		php_error_docref(NULL TSRMLS_CC, E_STRICT, "dl() is deprecated - use extension=%s in your php.ini", Z_STRVAL_PP(file));
-#endif
 	}
 
 	php_dl(*file, MODULE_TEMPORARY, return_value, 0 TSRMLS_CC);
diff -ruN php-5.2.5.orig/ext/standard/dns.c php-5.2.5/ext/standard/dns.c
--- php-5.2.5.orig/ext/standard/dns.c	2007-06-26 05:04:55.000000000 -0600
+++ php-5.2.5/ext/standard/dns.c	2007-12-11 08:51:54.000000000 -0700
@@ -48,18 +48,18 @@
 #else	/* This holds good for NetWare too, both for Winsock and Berkeley sockets */
 #include <netinet/in.h>
 #if HAVE_ARPA_INET_H
-#include <arpa/inet.h>
+#include <bind/arpa/inet.h>
 #endif
-#include <netdb.h>
+#include <bind/netdb.h>
 #ifdef _OSD_POSIX
 #undef STATUS
 #undef T_UNSPEC
 #endif
 #if HAVE_ARPA_NAMESER_H
-#include <arpa/nameser.h>
+#include <bind/arpa/nameser.h>
 #endif
 #if HAVE_RESOLV_H
-#include <resolv.h>
+#include <bind/resolv.h>
 #endif
 #endif
 
diff -ruN php-5.2.5.orig/ext/standard/info.c php-5.2.5/ext/standard/info.c
--- php-5.2.5.orig/ext/standard/info.c	2007-07-20 19:24:26.000000000 -0600
+++ php-5.2.5/ext/standard/info.c	2007-12-10 21:35:25.000000000 -0700
@@ -486,7 +486,7 @@
 		php_info_print_table_start();
 		php_info_print_table_row(2, "System", php_uname );
 		php_info_print_table_row(2, "Build Date", __DATE__ " " __TIME__ );
-#ifdef CONFIGURE_COMMAND
+#if 0
 		php_info_print_table_row(2, "Configure Command", CONFIGURE_COMMAND );
 #endif
 		if (sapi_module.pretty_name) {
diff -ruN php-5.2.5.orig/ext/standard/proc_open.c php-5.2.5/ext/standard/proc_open.c
--- php-5.2.5.orig/ext/standard/proc_open.c	2007-09-12 05:42:43.000000000 -0600
+++ php-5.2.5/ext/standard/proc_open.c	2007-12-10 22:20:02.000000000 -0700
@@ -61,7 +61,7 @@
  * */
 #ifdef PHP_CAN_SUPPORT_PROC_OPEN
 
-#if 0 && HAVE_PTSNAME && HAVE_GRANTPT && HAVE_UNLOCKPT && HAVE_SYS_IOCTL_H && HAVE_TERMIOS_H
+#if HAVE_PTSNAME && HAVE_GRANTPT && HAVE_UNLOCKPT && HAVE_SYS_IOCTL_H && HAVE_TERMIOS_H
 # include <sys/ioctl.h>
 # include <termios.h>
 # define PHP_CAN_DO_PTS	1
diff -ruN php-5.2.5.orig/ext/standard/streamsfuncs.c php-5.2.5/ext/standard/streamsfuncs.c
--- php-5.2.5.orig/ext/standard/streamsfuncs.c	2007-10-04 07:31:11.000000000 -0600
+++ php-5.2.5/ext/standard/streamsfuncs.c	2007-12-10 22:09:52.000000000 -0700
@@ -592,6 +592,8 @@
 		 * is not displayed.
 		 * */
 		if (SUCCESS == php_stream_cast(stream, PHP_STREAM_AS_FD_FOR_SELECT | PHP_STREAM_CAST_INTERNAL, (void*)&this_fd, 1) && this_fd >= 0) {
+			if (this_fd > FD_SETSIZE)
+				continue;
 			
 			PHP_SAFE_FD_SET(this_fd, fds);
 
diff -ruN php-5.2.5.orig/fink/extramodulelist php-5.2.5/fink/extramodulelist
--- php-5.2.5.orig/fink/extramodulelist	1969-12-31 17:00:00.000000000 -0700
+++ php-5.2.5/fink/extramodulelist	2007-12-11 19:09:48.000000000 -0700
@@ -0,0 +1,6 @@
+mysql MySQL mysqli
+mysql MySQL pdo_mysql
+common PDO pdo
+odbc ODBC pdo_odbc
+pgsql PostgreSQL pdo_pgsql
+sqlite SQLite pdo_sqlite
diff -ruN php-5.2.5.orig/fink/maxlifetime php-5.2.5/fink/maxlifetime
--- php-5.2.5.orig/fink/maxlifetime	1969-12-31 17:00:00.000000000 -0700
+++ php-5.2.5/fink/maxlifetime	2007-12-10 16:19:49.000000000 -0700
@@ -0,0 +1,14 @@
+#!/bin/sh -e
+
+max=1440
+
+for ini in @FINKPREFIX@/etc/php5/*/php.ini; do
+        cur=$(sed -n -e 's/^[[:space:]]*session.gc_maxlifetime[[:space:]]*=[[:space:]]*\([0-9]\+\).*$/\1/p' $ini 2>/dev/null || true);
+        [ -z "$cur" ] && cur=0
+        [ "$cur" -gt "$max" ] && max=$cur
+done
+
+echo $(($max/60))
+
+exit 0
+
diff -ruN php-5.2.5.orig/fink/modulelist php-5.2.5/fink/modulelist
--- php-5.2.5.orig/fink/modulelist	1969-12-31 17:00:00.000000000 -0700
+++ php-5.2.5/fink/modulelist	2007-12-11 19:09:36.000000000 -0700
@@ -0,0 +1,17 @@
+curl CURL
+gd GD
+gmp GMP
+imap IMAP
+ldap LDAP
+mcrypt MCrypt
+mhash MHASH
+mysql MySQL
+odbc ODBC
+pgsql PostgreSQL
+pspell pspell
+recode recode
+snmp SNMP
+sqlite SQLite
+tidy tidy
+xmlrpc XML-RPC
+xsl XSL
diff -ruN php-5.2.5.orig/fink/php5-module.ini php-5.2.5/fink/php5-module.ini
--- php-5.2.5.orig/fink/php5-module.ini	1969-12-31 17:00:00.000000000 -0700
+++ php-5.2.5/fink/php5-module.ini	2007-12-11 19:04:28.000000000 -0700
@@ -0,0 +1,2 @@
+# configuration for php @extname@ module
+extension=@dsoname@.so
diff -ruN php-5.2.5.orig/fink/php5.conf php-5.2.5/fink/php5.conf
--- php-5.2.5.orig/fink/php5.conf	1969-12-31 17:00:00.000000000 -0700
+++ php-5.2.5/fink/php5.conf	2007-12-10 15:56:24.000000000 -0700
@@ -0,0 +1,4 @@
+<IfModule mod_php5.c>
+  AddType application/x-httpd-php .php .phtml .php3
+  AddType application/x-httpd-php-source .phps
+</IfModule>
diff -ruN php-5.2.5.orig/fink/php5.cron php-5.2.5/fink/php5.cron
--- php-5.2.5.orig/fink/php5.cron	1969-12-31 17:00:00.000000000 -0700
+++ php-5.2.5/fink/php5.cron	2007-12-10 16:31:52.000000000 -0700
@@ -0,0 +1,7 @@
+# @FINKPREFIX@/etc/cron.d/php5: crontab fragment for php5
+#  This purges session files older than X, where X is defined in seconds
+#  as the largest value of session.gc_maxlifetime from all your php.ini
+#  files, or 24 minutes if not defined.  See @FINKPREFIX@/lib/php5/maxlifetime
+
+# Look for and purge old sessions every 30 minutes
+09,39 *     * * *     root   [ -d @FINKPREFIX@/var/lib/php5 ] && find @FINKPREFIX@/var/lib/php5/ -type f -cmin +$(@FINKPREFIX@/lib/php5/maxlifetime) -print0 | xargs -r -0 rm
diff -ruN php-5.2.5.orig/fink/php5.load php-5.2.5/fink/php5.load
--- php-5.2.5.orig/fink/php5.load	1969-12-31 17:00:00.000000000 -0700
+++ php-5.2.5/fink/php5.load	2007-12-12 09:09:32.000000000 -0700
@@ -0,0 +1 @@
+LoadModule php5_module @FINKPREFIX@/lib/apache2/modules/libphp5.so
diff -ruN php-5.2.5.orig/php.ini-dist php-5.2.5/php.ini-dist
--- php-5.2.5.orig/php.ini-dist	2007-08-21 17:24:18.000000000 -0600
+++ php-5.2.5/php.ini-dist	2007-12-10 22:22:20.000000000 -0700
@@ -166,6 +166,11 @@
 ;
 ; Safe Mode
 ;
+; NOTE: this is considered a "broken" security measure.
+;       Applications relying on this feature will not recieve full
+;       support by the security team.  For more information please
+;       see @FINKPREFIX@/share/doc/php5-common/README.Debian.security
+;
 safe_mode = Off
 
 ; By default, Safe Mode does a UID compare check when
@@ -202,6 +207,13 @@
 ; and below.  This directive makes most sense if used in a per-directory
 ; or per-virtualhost web server configuration file. This directive is
 ; *NOT* affected by whether Safe Mode is turned On or Off.
+
+; NOTE: this is considered a "broken" security measure.
+;       Applications relying on this feature will not recieve full
+;       support by the security team.  For more information please
+;       see @FINKPREFIX@/share/doc/php5-common/README.Debian.security
+;
+
 ;open_basedir =
 
 ; This directive allows you to disable certain functions for security reasons.
@@ -411,6 +423,11 @@
 ; You should do your best to write your scripts so that they do not require
 ; register_globals to be on;  Using form variables as globals can easily lead
 ; to possible security problems, if the code is not very well thought of.
+
+; NOTE: applications relying on this feature will not recieve full
+;       support by the security team.  For more information please
+;       see @FINKPREFIX@/share/doc/php5-common/README.Debian.security
+;
 register_globals = Off
 
 ; Whether or not to register the old-style input arrays, HTTP_GET_VARS
@@ -466,7 +483,7 @@
 ;;;;;;;;;;;;;;;;;;;;;;;;;
 
 ; UNIX: "/path1:/path2"
-;include_path = ".:/php/includes"
+;include_path = ".:@FINKPREFIX@/share/php"
 ;
 ; Windows: "\path1;\path2"
 ;include_path = ".;c:\php\includes"
@@ -483,7 +500,7 @@
 user_dir =
 
 ; Directory in which the loadable extensions (modules) reside.
-extension_dir = "./"
+; extension_dir = "./"
 
 ; Whether or not to enable the dl() function.  The dl() function does NOT work
 ; properly in multithreaded servers, such as IIS or Zeus, and is automatically
@@ -596,58 +613,6 @@
 ; extension_dir directive above.
 
 
-; Windows Extensions
-; Note that ODBC support is built in, so no dll is needed for it.
-; Note that many DLL files are located in the extensions/ (PHP 4) ext/ (PHP 5)
-; extension folders as well as the separate PECL DLL download (PHP 5).
-; Be sure to appropriately set the extension_dir directive.
-
-;extension=php_bz2.dll
-;extension=php_curl.dll
-;extension=php_dba.dll
-;extension=php_dbase.dll
-;extension=php_exif.dll
-;extension=php_fdf.dll
-;extension=php_gd2.dll
-;extension=php_gettext.dll
-;extension=php_gmp.dll
-;extension=php_ifx.dll
-;extension=php_imap.dll
-;extension=php_interbase.dll
-;extension=php_ldap.dll
-;extension=php_mbstring.dll
-;extension=php_mcrypt.dll
-;extension=php_mhash.dll
-;extension=php_mime_magic.dll
-;extension=php_ming.dll
-;extension=php_msql.dll
-;extension=php_mssql.dll
-;extension=php_mysql.dll
-;extension=php_mysqli.dll
-;extension=php_oci8.dll
-;extension=php_openssl.dll
-;extension=php_pdo.dll
-;extension=php_pdo_firebird.dll
-;extension=php_pdo_mssql.dll
-;extension=php_pdo_mysql.dll
-;extension=php_pdo_oci.dll
-;extension=php_pdo_oci8.dll
-;extension=php_pdo_odbc.dll
-;extension=php_pdo_pgsql.dll
-;extension=php_pdo_sqlite.dll
-;extension=php_pgsql.dll
-;extension=php_pspell.dll
-;extension=php_shmop.dll
-;extension=php_snmp.dll
-;extension=php_soap.dll
-;extension=php_sockets.dll
-;extension=php_sqlite.dll
-;extension=php_sybase_ct.dll
-;extension=php_tidy.dll
-;extension=php_xmlrpc.dll
-;extension=php_xsl.dll
-;extension=php_zip.dll
-
 ;;;;;;;;;;;;;;;;;;;
 ; Module Settings ;
 ;;;;;;;;;;;;;;;;;;;
@@ -988,7 +953,7 @@
 ;
 ; where MODE is the octal representation of the mode. Note that this
 ; does not overwrite the process's umask.
-;session.save_path = "/tmp"
+;session.save_path = "@FINKPREFIX@/var/lib/php5"
 
 ; Whether to use cookies.
 session.use_cookies = 1
@@ -1026,7 +991,10 @@
 ; e.g. 1/100 means there is a 1% chance that the GC process starts
 ; on each request.
 
-session.gc_probability = 1
+; This is disabled in the Fink packages, due to the strict permissions
+; on @FINKPREFIX@/var/lib/php5.  Instead of setting this here, see the cronjob at
+; @FINKPREFIX@/etc/cron.d/php5, which uses the session.gc_maxlifetime setting below
+;session.gc_probability = 0
 session.gc_divisor     = 100
 
 ; After this number of seconds, stored data will be seen as 'garbage' and
diff -ruN php-5.2.5.orig/php.ini-paranoid php-5.2.5/php.ini-paranoid
--- php-5.2.5.orig/php.ini-paranoid	1969-12-31 17:00:00.000000000 -0700
+++ php-5.2.5/php.ini-paranoid	2007-12-10 22:02:41.000000000 -0700
@@ -0,0 +1,1195 @@
+[PHP]
+
+;;;;;;;;;;;;;;;;;;;
+; About this file ;
+;;;;;;;;;;;;;;;;;;;
+;
+; This is the paranoid, PHP 4-style version of the php.ini-dist file.  It
+; sets some non standard settings, that make PHP more efficient, more secure
+; in a very paranoid way. Note that these security settings will make some
+; applications not work properly.
+;
+; The price is that with these settings, PHP may be incompatible with some
+; applications, and sometimes, more difficult to develop with.  Using this
+; file is recommended for production sites which want a high degree of
+; security.  As all of the changes from the standard settings are thoroughly
+; documented, you can go over each one,
+; and decide whether you want to use it or not.
+;
+; For general information about the php.ini file, please consult the 
+; php.ini-dist file, included in your PHP distribution.
+; 
+; For further information see
+; http://www.php.net/features.safe-mode
+; http://www.phpsecure.info/
+;
+; This file is different from the php.ini-dist file in the fact that it features
+; different values for several directives, in order to improve performance, while
+; possibly breaking compatibility with the standard out-of-the-box behavior of
+; PHP 3.  Please make sure you read what's different, and modify your scripts
+; accordingly, if you decide to use this file instead.
+;
+; - safe_mode = On                 [Security, Performance loss]
+;     Do UID checks when opening files. Enabling safe_mode also enables
+;     other functions related to this mode. For more information read:
+;     http://www.php.net/features.safe-mode
+;     Worthwhile reading, however, is also
+;     http://ilia.ws/archives/18_PHPs_safe_mode_or_how_not_to_implement_security.html 
+;     Bottomline: Do not trust that safe_mode will drive all your security vulnerabilities
+;     away.
+;
+; - safe_mode_protected_env_vars = LD_LIBRARY_PATH PATH [Security]
+;     Environment variables that users will not be able to modify through
+;     putenv()
+;
+; - open_basedir = /var/www/:/usr/lib/php4/ [Security, Performance loss]
+;     Limits the files that PHP can access to the directories specified.
+;     This includes the webroot and the usual location of PHP libraries
+;     (e.g. PEAR). Since all file locations are checked against this list
+;     before any access is allowed, this impacts in the performance of all
+;     file operations.
+;
+; - disable_functions = dl, phpinfo, system, .... [Security]
+;     Some functions can be used by attackers and can be malversed by 
+;     applications, the list (not complete) of functions disabled includes
+;     functions which might have a severe impact to the system if wrongly used
+;     in scripts or subverted remotely by attackers.
+;
+; - expose_php = Off               [?Security?]
+;      Not exposing that PHP is used in the site (nor its version) can affect
+;      how some dumb worms attempt to attack the site. Many might
+;      not check this and attempt to compromise the server nevertheless, 
+;      however. This setting is just 'security by obscurity' so no real
+;      security at all (save vs. the dumbest attackers)
+;      
+; - error_log = syslog              [Security, Performance log]
+;      All errors are reported to syslog so that the errors can be easily
+;      sent outsite the site to a syslog server. This prevents an intruder
+;      from tampering with them in an attempt to hide his tracks since the
+;      logs are stored in a different location. It also helps in forensic
+;      investigation or when using automatic tools to produce reports or 
+;      generate alarms based on the syslog information.
+;
+; - register_globals = Off         [Security, Performance]
+;     Global variables are no longer registered for input data (POST, GET, cookies,
+;     environment and other server variables).  Instead of using $foo, you must use
+;     you can use $_REQUEST["foo"] (includes any variable that arrives through the
+;     request, namely, POST, GET and cookie variables), or use one of the specific
+;     $_GET["foo"], $_POST["foo"], $_COOKIE["foo"] or $_FILES["foo"], depending
+;     on where the input originates.  Also, you can look at the
+;     import_request_variables() function.
+;     Note that register_globals is going to be depracated (i.e., turned off by
+;     default) in the next version of PHP, because it often leads to security bugs.
+;     Read http://php.net/manual/en/security.registerglobals.php for further
+;     information.
+; - display_errors = Off           [Security]
+;     With this directive set to off, errors that occur during the execution of
+;     scripts will no longer be displayed as a part of the script output, and thus,
+;     will no longer be exposed to remote users.  With some errors, the error message
+;     content may expose information about your script, web server, or database
+;     server that may be exploitable for hacking.  Production sites should have this
+;     directive set to off.
+; - log_errors = On                [Security]
+;     This directive complements the above one.  Any errors that occur during the
+;     execution of your script will be logged (typically, to your server's error log,
+;     but can be configured in several ways).  Along with setting display_errors to off,
+;     this setup gives you the ability to fully understand what may have gone wrong,
+;     without exposing any sensitive information to remote users.
+; - output_buffering = 4096        [Performance]
+;     Set a 4KB output buffer.  Enabling output buffering typically results in less
+;     writes, and sometimes less packets sent on the wire, which can often lead to
+;     better performance.  The gain this directive actually yields greatly depends
+;     on which Web server you're working with, and what kind of scripts you're using.
+; - register_argc_argv = Off       [Performance]
+;     Disables registration of the somewhat redundant $argv and $argc global
+;     variables.
+; - magic_quotes_gpc = On         [Security]
+;     Input data is escaped with slashes so that applications that do
+;     not use addslashes() are not so easily subjected to SQL injection
+;     when talking to SQL databases.
+;
+; - variables_order = "GPCS"       [Performance]
+;     The environment variables are not hashed into the $HTTP_ENV_VARS[].  To access
+;     environment variables, you can use getenv() instead.
+; - error_reporting = E_ALL        [Code Cleanliness, Security(?)]
+;     By default, PHP surpresses errors of type E_NOTICE.  These error messages
+;     are emitted for non-critical errors, but that could be a symptom of a bigger
+;     problem.  Most notably, this will cause error messages about the use
+;     of uninitialized variables to be displayed.
+; - allow_call_time_pass_reference = Off     [Code cleanliness]
+;     It's not possible to decide to force a variable to be passed by reference
+;     when calling a function.  The PHP 4 style to do this is by making the
+;     function require the relevant argument by reference.
+;
+; - enable_dl = Off                  [Security]
+;     The dl() function is not needed in most environments and does introduce
+;     a number of security issues.
+; - file_uploads = Off               [Security]
+;     File uploads should not be allowed to the server.
+; - allow_url_fopen = Off            [Security]
+;     File calls should not transparently retrieve files from the network
+;     since this could be subverted by attackers in poorly coded scripts
+;     by forcing them to download (and execute) malicious remote content
+;     from compromised hosts. This behaviour has been observed in automatic
+;     worms/tools that use it to scan and propagate through badly written
+;     applications (in conjuntion with other unsafe features)
+;     http://myhost/myapplication.php?include=http://roguesever/rogueapp.php
+
+
+;;;;;;;;;;;;;;;;;;;;
+; Language Options ;
+;;;;;;;;;;;;;;;;;;;;
+
+; Enable the PHP scripting language engine under Apache.
+engine = On
+
+; Allow the <? tag.  Otherwise, only <?php and <script> tags are recognized.  
+; NOTE: Using short tags should be avoided when developing applications or
+; libraries that are meant for redistribution, or deployment on PHP
+; servers which are not under your control, because short tags may not
+; be supported on the target server. For portable, redistributable code,
+; be sure not to use short tags.
+short_open_tag = On
+
+; Allow ASP-style <% %> tags.
+asp_tags = Off
+
+; The number of significant digits displayed in floating point numbers.
+precision    =  14
+
+; Enforce year 2000 compliance (will cause problems with non-compliant browsers)
+y2k_compliance = On
+
+; Output buffering allows you to send header lines (including cookies) even
+; after you send body content, at the price of slowing PHP's output layer a
+; bit.  You can enable output buffering during runtime by calling the output
+; buffering functions.  You can also enable output buffering for all files by
+; setting this directive to On.  If you wish to limit the size of the buffer
+; to a certain size - you can use a maximum number of bytes instead of 'On', as
+; a value for this directive (e.g., output_buffering=4096).
+output_buffering = 4096
+
+; You can redirect all of the output of your scripts to a function.  For
+; example, if you set output_handler to "mb_output_handler", character
+; encoding will be transparently converted to the specified encoding.
+; Setting any output handler automatically turns on output buffering.
+; Note: People who wrote portable scripts should not depend on this ini
+;       directive. Instead, explicitly set the output handler using ob_start().
+;       Using this ini directive may cause problems unless you know what script 
+;       is doing.
+; Note: You cannot use both "mb_output_handler" with "ob_iconv_handler"
+;       and you cannot use both "ob_gzhandler" and "zlib.output_compression". 
+;output_handler =
+
+; Transparent output compression using the zlib library
+; Valid values for this option are 'off', 'on', or a specific buffer size
+; to be used for compression (default is 4KB)
+; Note: Resulting chunk size may vary due to nature of compression. PHP 
+;       outputs chunks that are few handreds bytes each as a result of compression. 
+;       If you want larger chunk size for better performence, enable output_buffering 
+;       also. 
+; Note: output_handler must be empty if this is set 'On' !!!!
+;       Instead you must use zlib.output_handler.
+zlib.output_compression = Off
+
+; You cannot specify additional output handlers if zlib.output_compression
+; is activated here. This setting does the same as output_handler but in
+; a different order.
+;zlib.output_handler =
+
+; Implicit flush tells PHP to tell the output layer to flush itself
+; automatically after every output block.  This is equivalent to calling the
+; PHP function flush() after each and every call to print() or echo() and each
+; and every HTML block.  Turning this option on has serious performance
+; implications and is generally recommended for debugging purposes only.
+implicit_flush = Off
+
+; The unserialize callback function will be called (with the undefined class'
+; name as parameter), if the unserializer finds an undefined class
+; which should be instanciated.
+; A warning appears if the specified function is not defined, or if the
+; function doesn't include/implement the missing class.
+; So only set this entry, if you really want to implement such a 
+; callback-function.
+unserialize_callback_func=
+
+; When floats & doubles are serialized store serialize_precision significant
+; digits after the floating point. The default value ensures that when floats
+; are decoded with unserialize, the data will remain the same.
+serialize_precision = 100
+
+; Whether to enable the ability to force arguments to be passed by reference
+; at function call time.  This method is deprecated and is likely to be
+; unsupported in future versions of PHP/Zend.  The encouraged method of
+; specifying which arguments should be passed by reference is in the function
+; declaration.  You're encouraged to try and turn this option Off and make
+; sure your scripts work properly with it in order to ensure they will work
+; with future versions of the language (you will receive a warning each time
+; you use this feature, and the argument will be passed by value instead of by
+; reference).
+allow_call_time_pass_reference = Off
+
+;
+; Safe Mode
+;
+safe_mode = On
+
+; By default, Safe Mode does a UID compare check when
+; opening files. If you want to relax this to a GID compare,
+; then turn on safe_mode_gid.
+safe_mode_gid = Off
+
+; When safe_mode is on, UID/GID checks are bypassed when
+; including files from this directory and its subdirectories.
+; (directory must also be in include_path or full path must
+; be used when including)
+safe_mode_include_dir =							
+
+; When safe_mode is on, only executables located in the safe_mode_exec_dir
+; will be allowed to be executed via the exec family of functions.
+; 
+; Note: This should be customised per site (if exec is permitted)
+safe_mode_exec_dir =
+
+; Setting certain environment variables may be a potential security breach.
+; This directive contains a comma-delimited list of prefixes.  In Safe Mode,
+; the user may only alter environment variables whose names begin with the
+; prefixes supplied here.  By default, users will only be able to set
+; environment variables that begin with PHP_ (e.g. PHP_FOO=BAR).
+;
+; Note:  If this directive is empty, PHP will let the user modify ANY
+; environment variable!
+safe_mode_allowed_env_vars = PHP_
+
+; This directive contains a comma-delimited list of environment variables that
+; the end user won't be able to change using putenv().  These variables will be
+; protected even if safe_mode_allowed_env_vars is set to allow to change them.
+safe_mode_protected_env_vars = LD_LIBRARY_PATH,PATH
+
+; open_basedir, if set, limits all file operations to the defined directory
+; and below.  This directive makes most sense if used in a per-directory
+; or per-virtualhost web server configuration file. This directive is
+; *NOT* affected by whether Safe Mode is turned On or Off.
+; 
+; In Fink, the WebRoot is @FINKPREFIX@/var/www/ so we limit file operations to it.
+open_basedir = @FINKPREFIX@/var/www/:/usr/lib/php4/
+
+; This directive allows you to disable certain functions for security reasons.
+; It receives a comma-delimited list of function names. This directive is
+; *NOT* affected by whether Safe Mode is turned On or Off.
+; 
+; Note: The list of functions disabled here might break some applications
+; however, they are considered dangerous and often subverted by attackers
+; remotely
+disable_functions = dl, phpinfo, system, mail, include, shell_exec, exec, escapeshellarg, escapeshellcmd, passthru, proc_close, proc_open, proc_get_status, proc_nice, proc_open, proc_terminate, popen, pclose, chown, disk_free_space, disk_total_space, diskfreespace, fileinode, max_execution_time, set_time_limit,highlight_file, show_source
+
+; This directive allows you to disable certain classes for security reasons.
+; It receives a comma-delimited list of class names. This directive is
+; *NOT* affected by whether Safe Mode is turned On or Off.
+disable_classes =
+
+; Colors for Syntax Highlighting mode.  Anything that's acceptable in
+; <font color="??????"> would work.
+;highlight.string  = #DD0000
+;highlight.comment = #FF9900
+;highlight.keyword = #007700
+;highlight.bg      = #FFFFFF
+;highlight.default = #0000BB
+;highlight.html    = #000000
+
+
+;
+; Misc
+;
+; Decides whether PHP may expose the fact that it is installed on the server
+; (e.g. by adding its signature to the Web server header).  It is no security
+; threat in any way, but it makes it possible to determine whether you use PHP
+; on your server or not.
+expose_php = Off
+
+
+;;;;;;;;;;;;;;;;;;;
+; Resource Limits ;
+;;;;;;;;;;;;;;;;;;;
+
+max_execution_time = 30     ; Maximum execution time of each script, in seconds
+max_input_time = 60	; Maximum amount of time each script may spend parsing request data
+memory_limit = 8M      ; Maximum amount of memory a script may consume (8MB)
+
+
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+; Error handling and logging ;
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+
+; error_reporting is a bit-field.  Or each number up to get desired error
+; reporting level
+; E_ALL             - All errors and warnings
+; E_ERROR           - fatal run-time errors
+; E_WARNING         - run-time warnings (non-fatal errors)
+; E_PARSE           - compile-time parse errors
+; E_NOTICE          - run-time notices (these are warnings which often result
+;                     from a bug in your code, but it's possible that it was
+;                     intentional (e.g., using an uninitialized variable and
+;                     relying on the fact it's automatically initialized to an
+;                     empty string)
+; E_CORE_ERROR      - fatal errors that occur during PHP's initial startup
+; E_CORE_WARNING    - warnings (non-fatal errors) that occur during PHP's
+;                     initial startup
+; E_COMPILE_ERROR   - fatal compile-time errors
+; E_COMPILE_WARNING - compile-time warnings (non-fatal errors)
+; E_USER_ERROR      - user-generated error message
+; E_USER_WARNING    - user-generated warning message
+; E_USER_NOTICE     - user-generated notice message
+;
+; Examples:
+;
+;   - Show all errors, except for notices
+;
+;error_reporting = E_ALL & ~E_NOTICE
+;
+;   - Show only errors
+;
+;error_reporting = E_COMPILE_ERROR|E_ERROR|E_CORE_ERROR
+;
+;   - Show all errors
+;
+error_reporting  =  E_ALL
+
+; Print out errors (as a part of the output).  For production web sites,
+; you're strongly encouraged to turn this feature off, and use error logging
+; instead (see below).  Keeping display_errors enabled on a production web site
+; may reveal security information to end users, such as file paths on your Web
+; server, your database schema or other information.
+display_errors = Off
+
+; Even when display_errors is on, errors that occur during PHP's startup
+; sequence are not displayed.  It's strongly recommended to keep
+; display_startup_errors off, except for when debugging.
+display_startup_errors = Off
+
+; Log errors into a log file (server-specific log, stderr, or error_log (below))
+; As stated above, you're strongly advised to use error logging in place of
+; error displaying on production web sites.
+log_errors = On
+
+; Set maximum length of log_errors. In error_log information about the source is
+; added. The default is 1024 and 0 allows to not apply any maximum length at all.
+log_errors_max_len = 1024
+
+; Do not log repeated messages. Repeated errors must occur in same file on same
+; line until ignore_repeated_source is set true.
+ignore_repeated_errors = Off
+
+; Ignore source of message when ignoring repeated messages. When this setting 
+; is On you will not log errors with repeated messages from different files or
+; sourcelines.
+ignore_repeated_source = Off
+
+; If this parameter is set to Off, then memory leaks will not be shown (on
+; stdout or in the log). This has only effect in a debug compile, and if 
+; error reporting includes E_WARNING in the allowed list
+report_memleaks = On
+
+; Store the last error/warning message in $php_errormsg (boolean).
+track_errors = Off
+
+; Disable the inclusion of HTML tags in error messages.
+html_errors = Off
+
+; If html_errors is set On PHP produces clickable error messages that direct 
+; to a page describing the error or function causing the error in detail.
+; You can download a copy of the PHP manual from http://www.php.net/docs.php 
+; and change docref_root to the base URL of your local copy including the
+; leading '/'. You must also specify the file extension being used including 
+; the dot.
+;docref_root = "/phpmanual/"
+;docref_ext = .html
+  
+; String to output before an error message.
+;error_prepend_string = "<font color=ff0000>"
+
+; String to output after an error message.
+;error_append_string = "</font>"
+
+; Log errors to specified file.
+;error_log = filename
+
+; Log errors to syslog (Event Log on NT, not valid in Windows 95).
+error_log = syslog
+
+
+;;;;;;;;;;;;;;;;;
+; Data Handling ;
+;;;;;;;;;;;;;;;;;
+;
+; Note - track_vars is ALWAYS enabled as of PHP 4.0.3
+
+; The separator used in PHP generated URLs to separate arguments.
+; Default is "&". 
+;arg_separator.output = "&amp;"
+
+; List of separator(s) used by PHP to parse input URLs into variables.
+; Default is "&". 
+; NOTE: Every character in this directive is considered as separator!
+;arg_separator.input = ";&"
+
+; This directive describes the order in which PHP registers GET, POST, Cookie,
+; Environment and Built-in variables (G, P, C, E & S respectively, often
+; referred to as EGPCS or GPC).  Registration is done from left to right, newer
+; values override older values.
+variables_order = "GPCS"
+
+; Whether or not to register the EGPCS variables as global variables.  You may
+; want to turn this off if you don't want to clutter your scripts' global scope
+; with user data.  This makes most sense when coupled with track_vars - in which
+; case you can access all of the GPC variables through the $HTTP_*_VARS[],
+; variables.
+;
+; You should do your best to write your scripts so that they do not require
+; register_globals to be on;  Using form variables as globals can easily lead
+; to possible security problems, if the code is not very well thought of.
+register_globals = Off
+
+; This directive tells PHP whether to declare the argv&argc variables (that
+; would contain the GET information).  If you don't use these variables, you
+; should turn it off for increased performance.
+register_argc_argv = Off
+
+; Maximum size of POST data that PHP will accept.
+post_max_size = 8M
+
+; This directive is deprecated.  Use variables_order instead.
+gpc_order = "GPC"
+
+; Magic quotes
+;
+
+; Magic quotes for incoming GET/POST/Cookie data.
+magic_quotes_gpc = On
+
+; Magic quotes for runtime-generated data, e.g. data from SQL, from exec(), etc.
+magic_quotes_runtime = Off    
+
+; Use Sybase-style magic quotes (escape ' with '' instead of \').
+magic_quotes_sybase = Off
+
+; Automatically add files before or after any PHP document.
+auto_prepend_file =
+auto_append_file =
+
+; As of 4.0b4, PHP always outputs a character encoding by default in
+; the Content-type: header.  To disable sending of the charset, simply
+; set it to be empty.
+;
+; PHP's built-in default is text/html
+default_mimetype = "text/html"
+;default_charset = "iso-8859-1"
+
+; Always populate the $HTTP_RAW_POST_DATA variable.                               
+;always_populate_raw_post_data = On
+
+
+;;;;;;;;;;;;;;;;;;;;;;;;;
+; Paths and Directories ;
+;;;;;;;;;;;;;;;;;;;;;;;;;
+
+; UNIX: "/path1:/path2"  
+;include_path = ".:/php/includes"
+;
+; Windows: "\path1;\path2"
+;include_path = ".;c:\php\includes"
+
+; The root of the PHP pages, used only if nonempty.
+; if PHP was not compiled with FORCE_REDIRECT, you SHOULD set doc_root
+; if you are running php as a CGI under any web server (other than IIS)
+; see documentation for security issues.  The alternate is to use the
+; cgi.force_redirect configuration below
+doc_root =
+
+; The directory under which PHP opens the script using /~usernamem used only
+; if nonempty.
+user_dir =
+
+; Directory in which the loadable extensions (modules) reside.
+extension_dir = "./"
+
+; Whether or not to enable the dl() function.  The dl() function does NOT work
+; properly in multithreaded servers, such as IIS or Zeus, and is automatically
+; disabled on them.
+;
+; The dl function also introduces security issues.
+enable_dl = Off
+
+; cgi.force_redirect is necessary to provide security running PHP as a CGI under
+; most web servers.  Left undefined, PHP turns this on by default.  You can
+; turn it off here AT YOUR OWN RISK
+; **You CAN safely turn this off for IIS, in fact, you MUST.**
+; cgi.force_redirect = 1
+
+; if cgi.nph is enabled it will force cgi to always sent Status: 200 with
+; every request.
+; cgi.nph = 1
+
+; if cgi.force_redirect is turned on, and you are not running under Apache or Netscape 
+; (iPlanet) web servers, you MAY need to set an environment variable name that PHP
+; will look for to know it is OK to continue execution.  Setting this variable MAY
+; cause security issues, KNOW WHAT YOU ARE DOING FIRST.
+; cgi.redirect_status_env = ;
+
+; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI.  PHP's
+; previous behaviour was to set PATH_TRANSLATED to SCRIPT_FILENAME, and to not grok
+; what PATH_INFO is.  For more information on PATH_INFO, see the cgi specs.  Setting
+; this to 1 will cause PHP CGI to fix it's paths to conform to the spec.  A setting
+; of zero causes PHP to behave as before.  Default is zero.  You should fix your scripts
+; to use SCRIPT_FILENAME rather than PATH_TRANSLATED.
+; cgi.fix_pathinfo=1
+
+; FastCGI under IIS (on WINNT based OS) supports the ability to impersonate
+; security tokens of the calling client.  This allows IIS to define the
+; security context that the request runs under.  mod_fastcgi under Apache
+; does not currently support this feature (03/17/2002)
+; Set to 1 if running under IIS.  Default is zero.
+; fastcgi.impersonate = 1;
+
+; cgi.rfc2616_headers configuration option tells PHP what type of headers to
+; use when sending HTTP response code. If it's set 0 PHP sends Status: header that
+; is supported by Apache. When this option is set to 1 PHP will send
+; RFC2616 compliant header.
+; Default is zero.
+;cgi.rfc2616_headers = 0 
+
+
+;;;;;;;;;;;;;;;;
+; File Uploads ;
+;;;;;;;;;;;;;;;;
+
+; Whether to allow HTTP file uploads.
+file_uploads = Off
+
+; Temporary directory for HTTP uploaded files (will use system default if not
+; specified).
+;upload_tmp_dir =
+
+; Maximum allowed size for uploaded files.
+upload_max_filesize = 2M
+
+
+;;;;;;;;;;;;;;;;;;
+; Fopen wrappers ;
+;;;;;;;;;;;;;;;;;;
+
+; Whether to allow the treatment of URLs (like http:// or ftp://) as files.
+; 
+; This is turned off to avoid variable redefinition by remote attacker
+; that attempts to have the server download (and execute) a remote file
+; from a compromised host. This behaviour has been observed in automatic
+; scanning against badly written applications:
+; http://myhost/myapplication.php?include=http://roguesever/rogueapp.php
+allow_url_fopen = Off
+
+; Define the anonymous ftp password (your email address)
+;from="john@doe.com"
+
+; Define the user agent for php to send
+;user_agent="PHP"
+
+; Default timeout for socket based streams (seconds)
+default_socket_timeout = 60
+
+; If your scripts have to deal with files from Macintosh systems,
+; or you are running on a Mac and need to deal with files from
+; unix or win32 systems, setting this flag will cause PHP to
+; automatically detect the EOL character in those files so that
+; fgets() and file() will work regardless of the source of the file.
+; auto_detect_line_endings = Off
+
+
+;;;;;;;;;;;;;;;;;;;;;;
+; Dynamic Extensions ;
+;;;;;;;;;;;;;;;;;;;;;;
+;
+; If you wish to have an extension loaded automatically, use the following
+; syntax:
+;
+;   extension=modulename.extension
+;
+; For example, on Windows:
+;
+;   extension=msql.dll
+;
+; ... or under UNIX:
+;
+;   extension=msql.so
+;
+; Note that it should be the name of the module only; no directory information 
+; needs to go here.  Specify the location of the extension with the
+; extension_dir directive above.
+
+
+;Windows Extensions
+;Note that MySQL and ODBC support is now built in, so no dll is needed for it.
+;
+;extension=php_bz2.dll
+;extension=php_cpdf.dll
+;extension=php_crack.dll
+;extension=php_curl.dll
+;extension=php_db.dll
+;extension=php_dba.dll
+;extension=php_dbase.dll
+;extension=php_dbx.dll
+;extension=php_domxml.dll
+;extension=php_exif.dll
+;extension=php_fdf.dll
+;extension=php_filepro.dll
+;extension=php_gd2.dll
+;extension=php_gettext.dll
+;extension=php_hyperwave.dll
+;extension=php_iconv.dll
+;extension=php_ifx.dll
+;extension=php_iisfunc.dll
+;extension=php_imap.dll
+;extension=php_interbase.dll
+;extension=php_java.dll
+;extension=php_ldap.dll
+;extension=php_mbstring.dll
+;extension=php_mcrypt.dll
+;extension=php_mhash.dll
+;extension=php_mime_magic.dll
+;extension=php_ming.dll
+;extension=php_mssql.dll
+;extension=php_msql.dll
+;extension=php_oci8.dll
+;extension=php_openssl.dll
+;extension=php_oracle.dll
+;extension=php_pdf.dll
+;extension=php_pgsql.dll
+;extension=php_printer.dll
+;extension=php_shmop.dll
+;extension=php_snmp.dll
+;extension=php_sockets.dll
+;extension=php_sybase_ct.dll
+;extension=php_w32api.dll
+;extension=php_xmlrpc.dll
+;extension=php_xslt.dll
+;extension=php_yaz.dll
+;extension=php_zip.dll
+
+
+;;;;;;;;;;;;;;;;;;;
+; Module Settings ;
+;;;;;;;;;;;;;;;;;;;
+
+[Syslog]
+; Whether or not to define the various syslog variables (e.g. $LOG_PID,
+; $LOG_CRON, etc.).  Turning it off is a good idea performance-wise.  In
+; runtime, you can define these variables by calling define_syslog_variables().
+define_syslog_variables  = Off
+
+[mail function]
+; For Win32 only.
+SMTP = localhost
+smtp_port = 25
+
+; For Win32 only.
+;sendmail_from = me@example.com
+
+; For Unix only.  You may supply arguments as well (default: "sendmail -t -i").
+;sendmail_path =
+
+[Java]
+;java.class.path = .\php_java.jar
+;java.home = c:\jdk
+;java.library = c:\jdk\jre\bin\hotspot\jvm.dll 
+;java.library.path = .\
+
+[SQL]
+sql.safe_mode = On
+
+[ODBC]
+;odbc.default_db    =  Not yet implemented
+;odbc.default_user  =  Not yet implemented
+;odbc.default_pw    =  Not yet implemented
+
+; Allow or prevent persistent links.
+odbc.allow_persistent = On
+
+; Check that a connection is still valid before reuse.
+odbc.check_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+odbc.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+odbc.max_links = -1  
+
+; Handling of LONG fields.  Returns number of bytes to variables.  0 means
+; passthru.
+odbc.defaultlrl = 4096  
+
+; Handling of binary data.  0 means passthru, 1 return as is, 2 convert to char.
+; See the documentation on odbc_binmode and odbc_longreadlen for an explanation
+; of uodbc.defaultlrl and uodbc.defaultbinmode
+odbc.defaultbinmode = 1  
+
+[MySQL]
+; Allow or prevent persistent links.
+mysql.allow_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+mysql.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+mysql.max_links = -1
+
+; Default port number for mysql_connect().  If unset, mysql_connect() will use
+; the $MYSQL_TCP_PORT or the mysql-tcp entry in /etc/services or the
+; compile-time value defined MYSQL_PORT (in that order).  Win32 will only look
+; at MYSQL_PORT.
+mysql.default_port =
+
+; Default socket name for local MySQL connects.  If empty, uses the built-in
+; MySQL defaults.
+mysql.default_socket =
+
+; Default host for mysql_connect() (doesn't apply in safe mode).
+mysql.default_host =
+
+; Default user for mysql_connect() (doesn't apply in safe mode).
+mysql.default_user =
+
+; Default password for mysql_connect() (doesn't apply in safe mode).
+; Note that this is generally a *bad* idea to store passwords in this file.
+; *Any* user with PHP access can run 'echo get_cfg_var("mysql.default_password")
+; and reveal this password!  And of course, any users with read access to this
+; file will be able to reveal the password as well.
+mysql.default_password =
+
+; Maximum time (in seconds) for connect timeout. -1 means no limit
+mysql.connect_timeout = 60
+
+; Trace mode. When trace_mode is active (=On), warnings for table/index scans and
+; SQL-Errors will be displayed.
+mysql.trace_mode = Off
+
+[mSQL]
+; Allow or prevent persistent links.
+msql.allow_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+msql.max_persistent = -1
+
+; Maximum number of links (persistent+non persistent).  -1 means no limit.
+msql.max_links = -1
+
+[PostgresSQL]
+; Allow or prevent persistent links.
+pgsql.allow_persistent = On
+
+; Detect broken persistent links always with pg_pconnect(). 
+; Auto reset feature requires a little overheads.
+pgsql.auto_reset_persistent = Off
+
+; Maximum number of persistent links.  -1 means no limit.
+pgsql.max_persistent = -1
+
+; Maximum number of links (persistent+non persistent).  -1 means no limit.
+pgsql.max_links = -1
+
+; Ignore PostgreSQL backends Notice message or not.
+; Notice message logging require a little overheads.
+pgsql.ignore_notice = 0
+
+; Log PostgreSQL backends Noitce message or not.
+; Unless pgsql.ignore_notice=0, module cannot log notice message.
+pgsql.log_notice = 0
+
+[Sybase]
+; Allow or prevent persistent links.
+sybase.allow_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+sybase.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+sybase.max_links = -1
+
+;sybase.interface_file = "/usr/sybase/interfaces"
+
+; Minimum error severity to display.
+sybase.min_error_severity = 10
+
+; Minimum message severity to display.
+sybase.min_message_severity = 10
+
+; Compatability mode with old versions of PHP 3.0.
+; If on, this will cause PHP to automatically assign types to results according
+; to their Sybase type, instead of treating them all as strings.  This
+; compatibility mode will probably not stay around forever, so try applying
+; whatever necessary changes to your code, and turn it off.
+sybase.compatability_mode = Off
+
+[Sybase-CT]
+; Allow or prevent persistent links.
+sybct.allow_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+sybct.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+sybct.max_links = -1
+
+; Minimum server message severity to display.
+sybct.min_server_severity = 10
+
+; Minimum client message severity to display.
+sybct.min_client_severity = 10
+
+[dbx]
+; returned column names can be converted for compatibility reasons
+; possible values for dbx.colnames_case are
+; "unchanged" (default, if not set)
+; "lowercase"
+; "uppercase"
+; the recommended default is either upper- or lowercase, but
+; unchanged is currently set for backwards compatibility
+dbx.colnames_case = "lowercase"
+
+[bcmath]
+; Number of decimal digits for all bcmath functions.
+bcmath.scale = 0
+
+[browscap]
+;browscap = extra/browscap.ini
+
+[Informix]
+; Default host for ifx_connect() (doesn't apply in safe mode).
+ifx.default_host =
+
+; Default user for ifx_connect() (doesn't apply in safe mode).
+ifx.default_user =
+
+; Default password for ifx_connect() (doesn't apply in safe mode).
+ifx.default_password =
+
+; Allow or prevent persistent links.
+ifx.allow_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+ifx.max_persistent = -1
+
+; Maximum number of links (persistent + non-persistent).  -1 means no limit.
+ifx.max_links = -1
+
+; If on, select statements return the contents of a text blob instead of its id.
+ifx.textasvarchar = 0
+
+; If on, select statements return the contents of a byte blob instead of its id.
+ifx.byteasvarchar = 0
+
+; Trailing blanks are stripped from fixed-length char columns.  May help the
+; life of Informix SE users.
+ifx.charasvarchar = 0
+
+; If on, the contents of text and byte blobs are dumped to a file instead of
+; keeping them in memory.
+ifx.blobinfile = 0
+
+; NULL's are returned as empty strings, unless this is set to 1.  In that case,
+; NULL's are returned as string 'NULL'.
+ifx.nullformat = 0
+
+[Session]
+; Handler used to store/retrieve data.
+session.save_handler = files
+
+; Argument passed to save_handler.  In the case of files, this is the path
+; where data files are stored. Note: Windows users have to change this 
+; variable in order to use PHP's session functions.
+;session.save_path = /tmp
+
+; Whether to use cookies.
+session.use_cookies = 1
+
+; This option enables administrators to make their users invulnerable to 
+; attacks which involve passing session ids in URLs; defaults to 0.
+; session.use_only_cookies = 1
+
+; Name of the session (used as cookie name).
+session.name = PHPSESSID
+
+; Initialize session on request startup.
+session.auto_start = 0
+
+; Lifetime in seconds of cookie or, if 0, until browser is restarted.
+session.cookie_lifetime = 0
+
+; The path for which the cookie is valid.
+session.cookie_path = /
+
+; The domain for which the cookie is valid.
+session.cookie_domain =
+
+; Handler used to serialize data.  php is the standard serializer of PHP.
+session.serialize_handler = php
+
+; Define the probability that the 'garbage collection' process is started
+; on every session initialization.
+; The probability is calculated by using gc_probability/gc_divisor,
+; e.g. 1/100 means there is a 1% chance that the GC process starts
+; on each request.
+
+session.gc_probability = 1
+session.gc_divisor     = 1000
+
+; After this number of seconds, stored data will be seen as 'garbage' and
+; cleaned up by the garbage collection process.
+session.gc_maxlifetime = 1440
+
+; PHP 4.2 and less have an undocumented feature/bug that allows you to
+; to initialize a session variable in the global scope, albeit register_globals
+; is disabled.  PHP 4.3 and later will warn you, if this feature is used.
+; You can disable the feature and the warning separately. At this time,
+; the warning is only displayed, if bug_compat_42 is enabled.
+
+session.bug_compat_42 = 0
+session.bug_compat_warn = 1
+
+; Check HTTP Referer to invalidate externally stored URLs containing ids.
+; HTTP_REFERER has to contain this substring for the session to be
+; considered as valid.
+session.referer_check =
+
+; How many bytes to read from the file.
+session.entropy_length = 0
+
+; Specified here to create the session id.
+session.entropy_file =
+
+;session.entropy_length = 16
+
+;session.entropy_file = /dev/urandom
+
+; Set to {nocache,private,public,} to determine HTTP caching aspects.
+; or leave this empty to avoid sending anti-caching headers.
+session.cache_limiter = nocache
+
+; Document expires after n minutes.
+session.cache_expire = 180
+
+; trans sid support is disabled by default.
+; Use of trans sid may risk your users security.
+; Use this option with caution.
+; - User may send URL contains active session ID
+;   to other person via. email/irc/etc.
+; - URL that contains active session ID may be stored
+;   in publically accessible computer. 
+; - User may access your site with the same session ID
+;   always using URL stored in browser's history or bookmarks.
+session.use_trans_sid = 0
+
+; The URL rewriter will look for URLs in a defined set of HTML tags.
+; form/fieldset are special; if you include them here, the rewriter will
+; add a hidden <input> field with the info which is otherwise appended
+; to URLs.  If you want XHTML conformity, remove the form entry.
+; Note that all valid entries require a "=", even if no value follows.
+url_rewriter.tags = "a=href,area=href,frame=src,input=src,form=fakeentry"
+
+[MSSQL]
+; Allow or prevent persistent links.
+mssql.allow_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+mssql.max_persistent = -1
+
+; Maximum number of links (persistent+non persistent).  -1 means no limit.
+mssql.max_links = -1
+
+; Minimum error severity to display.
+mssql.min_error_severity = 10
+
+; Minimum message severity to display.
+mssql.min_message_severity = 10
+
+; Compatability mode with old versions of PHP 3.0.
+mssql.compatability_mode = Off
+
+; Connect timeout
+;mssql.connect_timeout = 5
+
+; Query timeout
+;mssql.timeout = 60
+
+; Valid range 0 - 2147483647.  Default = 4096.
+;mssql.textlimit = 4096
+
+; Valid range 0 - 2147483647.  Default = 4096.
+;mssql.textsize = 4096
+
+; Limits the number of records in each batch.  0 = all records in one batch.
+;mssql.batchsize = 0
+
+; Specify how datetime and datetim4 columns are returned
+; On => Returns data converted to SQL server settings
+; Off => Returns values as YYYY-MM-DD hh:mm:ss
+;mssql.datetimeconvert = On
+
+; Use NT authentication when connecting to the server
+mssql.secure_connection = On
+
+; Specify max number of processes. Default = 25
+;mssql.max_procs = 25
+
+[Assertion]
+; Assert(expr); active by default.
+;assert.active = On
+
+; Issue a PHP warning for each failed assertion.
+;assert.warning = On
+
+; Don't bail out by default.
+;assert.bail = Off
+
+; User-function to be called if an assertion fails.
+;assert.callback = 0
+
+; Eval the expression with current error_reporting().  Set to true if you want
+; error_reporting(0) around the eval().
+;assert.quiet_eval = 0
+
+[Ingres II]
+; Allow or prevent persistent links.
+ingres.allow_persistent = On
+
+; Maximum number of persistent links.  -1 means no limit.
+ingres.max_persistent = -1
+
+; Maximum number of links, including persistents.  -1 means no limit.
+ingres.max_links = -1
+
+; Default database (format: [node_id::]dbname[/srv_class]).
+ingres.default_database =
+
+; Default user.
+ingres.default_user =
+
+; Default password.
+ingres.default_password =
+
+[Verisign Payflow Pro]
+; Default Payflow Pro server.
+pfpro.defaulthost = "test-payflow.verisign.com"
+
+; Default port to connect to.
+pfpro.defaultport = 443
+
+; Default timeout in seconds.
+pfpro.defaulttimeout = 30
+
+; Default proxy IP address (if required).
+;pfpro.proxyaddress =
+
+; Default proxy port.
+;pfpro.proxyport =
+
+; Default proxy logon.
+;pfpro.proxylogon =
+
+; Default proxy password.
+;pfpro.proxypassword =
+
+[Sockets]
+; Use the system read() function instead of the php_read() wrapper.
+sockets.use_system_read = On
+
+[com]
+; path to a file containing GUIDs, IIDs or filenames of files with TypeLibs
+;com.typelib_file = 
+; allow Distributed-COM calls
+;com.allow_dcom = true
+; autoregister constants of a components typlib on com_load()
+;com.autoregister_typelib = true
+; register constants casesensitive
+;com.autoregister_casesensitive = false
+; show warnings on duplicate constat registrations
+;com.autoregister_verbose = true
+
+[Printer]
+;printer.default_printer = ""
+
+[mbstring]
+; language for internal character representation.
+;mbstring.language = Japanese
+
+; internal/script encoding.
+; Some encoding cannot work as internal encoding.
+; (e.g. SJIS, BIG5, ISO-2022-*)
+;mbstring.internal_encoding = EUC-JP
+
+; http input encoding.
+;mbstring.http_input = auto
+
+; http output encoding. mb_output_handler must be
+; registered as output buffer to function
+;mbstring.http_output = SJIS
+
+; enable automatic encoding translation accoding to 
+; mbstring.internal_encoding setting. Input chars are
+; converted to internal encoding by setting this to On.
+; Note: Do _not_ use automatic encoding translation for
+;       portable libs/applications.
+;mbstring.encoding_translation = Off
+
+; automatic encoding detection order.
+; auto means 
+;mbstring.detect_order = auto
+
+; substitute_character used when character cannot be converted
+; one from another
+;mbstring.substitute_character = none;
+
+; overload(replace) single byte functions by mbstring functions.
+; mail(), ereg(), etc are overloaded by mb_send_mail(), mb_ereg(),
+; etc. Possible values are 0,1,2,4 or combination of them.
+; For example, 7 for overload everything.
+; 0: No overload
+; 1: Overload mail() function
+; 2: Overload str*() functions
+; 4: Overload ereg*() functions
+;mbstring.func_overload = 0
+
+[FrontBase]
+;fbsql.allow_persistent = On
+;fbsql.autocommit = On
+;fbsql.default_database = 
+;fbsql.default_database_password =
+;fbsql.default_host =
+;fbsql.default_password =
+;fbsql.default_user = "_SYSTEM"
+;fbsql.generate_warnings = Off
+;fbsql.max_connections = 128
+;fbsql.max_links = 128
+;fbsql.max_persistent = -1
+;fbsql.max_results = 128
+;fbsql.batchSize = 1000
+
+[Crack]
+; Modify the setting below to match the directory location of the cracklib
+; dictionary files.  Include the base filename, but not the file extension.
+; crack.default_dictionary = "c:\php\lib\cracklib_dict"
+
+[exif]
+; Exif UNICODE user comments are handled as UCS-2BE/UCS-2LE and JIS as JIS. 
+; With mbstring support this will automatically be converted into the encoding
+; given by corresponding encode setting. When empty mbstring.internal_encoding 
+; is used. For the decode settings you can distinguish between motorola and 
+; intel byte order. A decode setting cannot be empty.
+;exif.encode_unicode = ISO-8859-15
+;exif.decode_unicode_motorola = UCS-2BE
+;exif.decode_unicode_intel    = UCS-2LE
+;exif.encode_jis = 
+;exif.decode_jis_motorola = JIS
+;exif.decode_jis_intel    = JIS
+
+; Local Variables:
+; tab-width: 4
+; End:
diff -ruN php-5.2.5.orig/php.ini-recommended php-5.2.5/php.ini-recommended
--- php-5.2.5.orig/php.ini-recommended	2007-08-21 17:24:18.000000000 -0600
+++ php-5.2.5/php.ini-recommended	2007-12-10 21:48:35.000000000 -0700
@@ -516,7 +516,7 @@
 ;;;;;;;;;;;;;;;;;;;;;;;;;
 
 ; UNIX: "/path1:/path2"
-;include_path = ".:/php/includes"
+;include_path = ".:@FINKPREFIX@/share/php"
 ;
 ; Windows: "\path1;\path2"
 ;include_path = ".;c:\php\includes"
@@ -533,7 +533,7 @@
 user_dir =
 
 ; Directory in which the loadable extensions (modules) reside.
-extension_dir = "./"
+;extension_dir = "./"
 
 ; Whether or not to enable the dl() function.  The dl() function does NOT work
 ; properly in multithreaded servers, such as IIS or Zeus, and is automatically
@@ -646,58 +646,6 @@
 ; extension_dir directive above.
 
 
-; Windows Extensions
-; Note that ODBC support is built in, so no dll is needed for it.
-; Note that many DLL files are located in the extensions/ (PHP 4) ext/ (PHP 5)
-; extension folders as well as the separate PECL DLL download (PHP 5).
-; Be sure to appropriately set the extension_dir directive.
-
-;extension=php_bz2.dll
-;extension=php_curl.dll
-;extension=php_dba.dll
-;extension=php_dbase.dll
-;extension=php_exif.dll
-;extension=php_fdf.dll
-;extension=php_gd2.dll
-;extension=php_gettext.dll
-;extension=php_gmp.dll
-;extension=php_ifx.dll
-;extension=php_imap.dll
-;extension=php_interbase.dll
-;extension=php_ldap.dll
-;extension=php_mbstring.dll
-;extension=php_mcrypt.dll
-;extension=php_mhash.dll
-;extension=php_mime_magic.dll
-;extension=php_ming.dll
-;extension=php_msql.dll
-;extension=php_mssql.dll
-;extension=php_mysql.dll
-;extension=php_mysqli.dll
-;extension=php_oci8.dll
-;extension=php_openssl.dll
-;extension=php_pdo.dll
-;extension=php_pdo_firebird.dll
-;extension=php_pdo_mssql.dll
-;extension=php_pdo_mysql.dll
-;extension=php_pdo_oci.dll
-;extension=php_pdo_oci8.dll
-;extension=php_pdo_odbc.dll
-;extension=php_pdo_pgsql.dll
-;extension=php_pdo_sqlite.dll
-;extension=php_pgsql.dll
-;extension=php_pspell.dll
-;extension=php_shmop.dll
-;extension=php_snmp.dll
-;extension=php_soap.dll
-;extension=php_sockets.dll
-;extension=php_sqlite.dll
-;extension=php_sybase_ct.dll
-;extension=php_tidy.dll
-;extension=php_xmlrpc.dll
-;extension=php_xsl.dll
-;extension=php_zip.dll
-
 ;;;;;;;;;;;;;;;;;;;
 ; Module Settings ;
 ;;;;;;;;;;;;;;;;;;;
@@ -1038,7 +986,7 @@
 ;
 ; where MODE is the octal representation of the mode. Note that this
 ; does not overwrite the process's umask.
-;session.save_path = "/tmp"
+;session.save_path = "@FINKPREFIX@/var/lib/php5"
 
 ; Whether to use cookies.
 session.use_cookies = 1
@@ -1076,7 +1024,10 @@
 ; e.g. 1/100 means there is a 1% chance that the GC process starts
 ; on each request.
 
-session.gc_probability = 1
+; This is disabled in the Fink packages, due to the strict permissions
+; on @FINKPREFIX@/var/lib/php5.  Instead of setting this here, see the cronjob at
+; @FINKPREFIX@/etc/cron.d/php5, which uses the session.gc_maxlifetime setting below
+;session.gc_probability = 0
 session.gc_divisor     = 1000
 
 ; After this number of seconds, stored data will be seen as 'garbage' and
diff -ruN php-5.2.5.orig/sapi/apache/config.m4 php-5.2.5/sapi/apache/config.m4
--- php-5.2.5.orig/sapi/apache/config.m4	2007-07-11 17:20:36.000000000 -0600
+++ php-5.2.5/sapi/apache/config.m4	2007-12-10 22:16:01.000000000 -0700
@@ -56,11 +56,11 @@
   APXS_HTTPD=`$APXS -q SBINDIR`/`$APXS -q TARGET`
   APACHE_INCLUDE=-I$APXS_INCLUDEDIR
 
-  # Test that we're trying to configure with apache 1.x
-  PHP_AP_EXTRACT_VERSION($APXS_HTTPD)
-  if test "$APACHE_VERSION" -ge 2000000; then
-    AC_MSG_ERROR([You have enabled Apache 1.3 support while your server is Apache 2.  Please use the appropiate switch --with-apxs2]) 
-  fi
+dnl  # Test that we're trying to configure with apache 1.x
+dnl  PHP_AP_EXTRACT_VERSION($APXS_HTTPD)
+dnl  if test "$APACHE_VERSION" -ge 2000000; then
+dnl    AC_MSG_ERROR([You have enabled Apache 1.3 support while your server is Apache 2.  Please use the appropiate switch --with-apxs2])
+dnl  fi
 
   for flag in $APXS_CFLAGS; do
     case $flag in
diff -ruN php-5.2.5.orig/sapi/apache2filter/config.m4 php-5.2.5/sapi/apache2filter/config.m4
--- php-5.2.5.orig/sapi/apache2filter/config.m4	2007-07-11 17:20:36.000000000 -0600
+++ php-5.2.5/sapi/apache2filter/config.m4	2007-12-10 22:16:40.000000000 -0700
@@ -60,13 +60,13 @@
 
   APACHE_CFLAGS="$APACHE_CPPFLAGS -I$APXS_INCLUDEDIR $APR_CFLAGS $APU_CFLAGS"
 
-  # Test that we're trying to configure with apache 2.x
-  PHP_AP_EXTRACT_VERSION($APXS_HTTPD)
-  if test "$APACHE_VERSION" -le 2000000; then
-    AC_MSG_ERROR([You have enabled Apache 2 support while your server is Apache 1.3.  Please use the appropiate switch --with-apxs (without the 2)])
-  elif test "$APACHE_VERSION" -lt 2000040; then
-    AC_MSG_ERROR([Please note that Apache version >= 2.0.40 is required])
-  fi
+dnl  # Test that we're trying to configure with apache 2.x
+dnl  PHP_AP_EXTRACT_VERSION($APXS_HTTPD)
+dnl  if test "$APACHE_VERSION" -le 2000000; then
+dnl    AC_MSG_ERROR([You have enabled Apache 2 support while your server is Apache 1.3.  Please use the appropiate switch --with-apxs (without the 2)])
+dnl  elif test "$APACHE_VERSION" -lt 2000040; then
+dnl    AC_MSG_ERROR([Please note that Apache version >= 2.0.40 is required])
+dnl  fi
 
   APXS_LIBEXECDIR='$(INSTALL_ROOT)'`$APXS -q LIBEXECDIR`
   if test -z `$APXS -q SYSCONFDIR`; then
diff -ruN php-5.2.5.orig/sapi/apache2handler/config.m4 php-5.2.5/sapi/apache2handler/config.m4
--- php-5.2.5.orig/sapi/apache2handler/config.m4	2007-07-11 17:20:36.000000000 -0600
+++ php-5.2.5/sapi/apache2handler/config.m4	2007-12-10 22:15:26.000000000 -0700
@@ -59,13 +59,13 @@
 
   APACHE_CFLAGS="$APACHE_CPPFLAGS -I$APXS_INCLUDEDIR $APR_CFLAGS $APU_CFLAGS"
 
-  # Test that we're trying to configure with apache 2.x
-  PHP_AP_EXTRACT_VERSION($APXS_HTTPD)
-  if test "$APACHE_VERSION" -le 2000000; then
-    AC_MSG_ERROR([You have enabled Apache 2 support while your server is Apache 1.3.  Please use the appropiate switch --with-apxs (without the 2)])
-  elif test "$APACHE_VERSION" -lt 2000044; then
-    AC_MSG_ERROR([Please note that Apache version >= 2.0.44 is required])
-  fi
+dnl  # Test that we're trying to configure with apache 2.x
+dnl  PHP_AP_EXTRACT_VERSION($APXS_HTTPD)
+dnl  if test "$APACHE_VERSION" -le 2000000; then
+dnl    AC_MSG_ERROR([You have enabled Apache 2 support while your server is Apache 1.3.  Please use the appropiate switch --with-apxs (without the 2)])
+dnl  elif test "$APACHE_VERSION" -lt 2000044; then
+dnl    AC_MSG_ERROR([Please note that Apache version >= 2.0.44 is required])
+dnl  fi
 
   APXS_LIBEXECDIR='$(INSTALL_ROOT)'`$APXS -q LIBEXECDIR`
   if test -z `$APXS -q SYSCONFDIR`; then
diff -ruN php-5.2.5.orig/sapi/apache2handler/sapi_apache2.c php-5.2.5/sapi/apache2handler/sapi_apache2.c
--- php-5.2.5.orig/sapi/apache2handler/sapi_apache2.c	2007-06-28 11:23:07.000000000 -0600
+++ php-5.2.5/sapi/apache2handler/sapi_apache2.c	2007-12-10 22:06:44.000000000 -0700
@@ -432,6 +432,19 @@
 	return APR_SUCCESS;
 }
 
+static int saved_umask;
+
+static void php_save_umask(void)
+{
+       saved_umask = umask(077);
+       umask(saved_umask);
+}
+
+static void php_restore_umask(void)
+{
+       umask(saved_umask);
+}
+
 static int php_apache_request_ctor(request_rec *r, php_struct *ctx TSRMLS_DC)
 {
 	char *content_length;
@@ -620,6 +633,8 @@
 	} else {
 		zend_file_handle zfd;
 
+		php_save_umask();
+
 		zfd.type = ZEND_HANDLE_FILENAME;
 		zfd.filename = (char *) r->filename;
 		zfd.free_filename = 0;
@@ -631,6 +646,8 @@
 			zend_execute_scripts(ZEND_INCLUDE TSRMLS_CC, NULL, 1, &zfd);
 		}
 
+		php_restore_umask();
+
 		apr_table_set(r->notes, "mod_php_memory_usage",
 			apr_psprintf(ctx->r->pool, "%u", zend_memory_peak_usage(1 TSRMLS_CC)));
 	}
diff -ruN php-5.2.5.orig/sapi/apache_hooks/config.m4 php-5.2.5/sapi/apache_hooks/config.m4
--- php-5.2.5.orig/sapi/apache_hooks/config.m4	2007-07-11 17:20:36.000000000 -0600
+++ php-5.2.5/sapi/apache_hooks/config.m4	2007-12-10 22:17:11.000000000 -0700
@@ -57,11 +57,11 @@
   APXS_HTTPD=`$APXS -q SBINDIR`/`$APXS -q TARGET`
   APACHE_INCLUDE=-I$APXS_INCLUDEDIR
 
-  # Test that we're trying to configure with apache 1.x
-  PHP_AP_EXTRACT_VERSION($APXS_HTTPD)
-  if test "$APACHE_VERSION" -ge 2000000; then
-    AC_MSG_ERROR([You have enabled Apache 1.3 support while your server is Apache 2.  Please use the appropiate switch --with-apxs2]) 
-  fi
+dnl  # Test that we're trying to configure with apache 1.x
+dnl  PHP_AP_EXTRACT_VERSION($APXS_HTTPD)
+dnl  if test "$APACHE_VERSION" -ge 2000000; then
+dnl    AC_MSG_ERROR([You have enabled Apache 1.3 support while your server is Apache 2.  Please use the appropiate switch --with-apxs2])
+dnl  fi
 
   for flag in $APXS_CFLAGS; do
     case $flag in
diff -ruN php-5.2.5.orig/sapi/cli/php.1.in php-5.2.5/sapi/cli/php.1.in
--- php-5.2.5.orig/sapi/cli/php.1.in	2007-04-23 14:54:22.000000000 -0600
+++ php-5.2.5/sapi/cli/php.1.in	2007-12-10 21:51:51.000000000 -0700
@@ -306,13 +306,14 @@
 .B name
 .SH FILES
 .TP 15
-.B php\-cli.ini
+.B @FINKPREFIX@/etc/php5/cli/php.ini
 The configuration file for the CLI version of PHP.
 .TP
-.B php.ini
-The standard configuration file will only be used when 
-.B php\-cli.ini
-cannot be found.
+.B @FINKPREFIX@/etc/php5/cgi/php.ini
+The configuration file for the CGI version of PHP.
+.TP
+.B @FINKPREFIX@/etc/php5/apache2/php.ini
+The configuration file for the version of PHP that apache2 uses.
 .SH EXAMPLES
 .TP 5
 \fIphp -r 'echo "Hello World\\n";'\fP
diff -ruN php-5.2.5.orig/scripts/Makefile.frag php-5.2.5/scripts/Makefile.frag
--- php-5.2.5.orig/scripts/Makefile.frag	2005-11-21 16:08:02.000000000 -0700
+++ php-5.2.5/scripts/Makefile.frag	2007-12-10 21:52:27.000000000 -0700
@@ -3,8 +3,8 @@
 # Build environment install
 #
 
-phpincludedir = $(includedir)/php
-phpbuilddir = $(libdir)/build
+phpincludedir = $(includedir)/php5
+phpbuilddir = $(prefix)/lib/php5/build
 
 BUILD_FILES = \
 	scripts/phpize.m4 \
diff -ruN php-5.2.5.orig/scripts/php-config.in php-5.2.5/scripts/php-config.in
--- php-5.2.5.orig/scripts/php-config.in	2007-08-24 05:44:10.000000000 -0600
+++ php-5.2.5/scripts/php-config.in	2007-12-10 21:53:49.000000000 -0700
@@ -5,8 +5,8 @@
 exec_prefix="@exec_prefix@"
 version="@PHP_VERSION@"
 vernum="@PHP_VERSION_ID@"
-include_dir="@includedir@/php"
-includes="-I$include_dir -I$include_dir/main -I$include_dir/TSRM -I$include_dir/Zend -I$include_dir/ext -I$include_dir/ext/date/lib"
+include_dir="@includedir@/php5"
+includes="-I$include_dir -I$include_dir/main -I$include_dir/TSRM -I$include_dir/Zend -I$include_dir/ext -I$include_dir/ext/date/lib $(getconf LFS_CFLAGS)"
 ldflags="@PHP_LDFLAGS@"
 libs="@EXTRA_LIBS@"
 extension_dir='@EXTENSION_DIR@'
diff -ruN php-5.2.5.orig/scripts/phpize.in php-5.2.5/scripts/phpize.in
--- php-5.2.5.orig/scripts/phpize.in	2007-06-28 19:10:35.000000000 -0600
+++ php-5.2.5/scripts/phpize.in	2007-12-10 21:54:35.000000000 -0700
@@ -3,8 +3,8 @@
 # Variable declaration
 prefix='@prefix@'
 exec_prefix="`eval echo @exec_prefix@`"
-phpdir="`eval echo @libdir@`/build"
-includedir="`eval echo @includedir@`/php"
+phpdir="$prefix/lib/php5/build"
+includedir="$prefix/include/php5"
 builddir="`pwd`"
 SED="@SED@"
 
