diff -ru libao-0.8.8/configure libao-0.8.8-patched/configure
--- libao-0.8.8/configure	2007-05-24 12:51:52.000000000 +0200
+++ libao-0.8.8-patched/configure	2010-03-27 13:24:36.000000000 +0100
@@ -20203,7 +20204,7 @@
 	DLOPEN_FLAG='(RTLD_LAZY)'
 	SHARED_LIB_EXT='.sl'
 	;;
-    *openbsd* | *netbsd* | *solaris2.7)
+    *darwin* | *openbsd* | *netbsd* | *solaris2.7)
 	DLOPEN_FLAG='(RTLD_LAZY)'
 	SHARED_LIB_EXT='.so'
 	;;
diff -ru libao-0.8.8/doc/Makefile.in libao-0.8.8-patched/doc/Makefile.in
--- libao-0.8.8/doc/Makefile.in	2007-05-24 12:51:43.000000000 +0200
+++ libao-0.8.8-patched/doc/Makefile.in	2010-03-27 13:25:24.000000000 +0100
@@ -161,7 +161,7 @@
 builddir = @builddir@
 datadir = @datadir@
 datarootdir = @datarootdir@
-docdir = $(datadir)/doc/$(PACKAGE)-$(VERSION)
+docdir = $(datadir)/doc/$(PACKAGE)
 dvidir = @dvidir@
 exec_prefix = @exec_prefix@
 host = @host@
diff -ru libao-0.8.8/src/plugins/macosx/ao_macosx.c libao-0.8.8-patched/src/plugins/macosx/ao_macosx.c
--- libao-0.8.8/src/plugins/macosx/ao_macosx.c	2007-05-24 11:19:07.000000000 +0200
+++ libao-0.8.8-patched/src/plugins/macosx/ao_macosx.c	2010-03-27 13:24:36.000000000 +0100
@@ -173,6 +173,26 @@
 	return 0;
     }
 
+	if (internal->outputStreamBasicDescription.mChannelsPerFrame != format->channels)
+	{
+		internal->outputStreamBasicDescription.mChannelsPerFrame = format->channels;
+		internal->outputStreamBasicDescription.mBytesPerFrame =
+			internal->outputStreamBasicDescription.mChannelsPerFrame * sizeof (float);
+		internal->outputStreamBasicDescription.mBytesPerPacket =
+			internal->outputStreamBasicDescription.mBytesPerFrame *
+			internal->outputStreamBasicDescription.mFramesPerPacket;
+		status = AudioDeviceSetProperty(internal->outputDeviceID, 0, 0, 0,
+			kAudioDevicePropertyStreamFormat,
+			sizeof (internal->outputStreamBasicDescription),
+			&internal->outputStreamBasicDescription);
+		if (status != noErr)
+		{
+			fprintf(stderr, "ao_macosx_open: AudioDeviceSetProperty returned %.*s when setting kAudioDevicePropertyStreamFormat\n",
+				(int) sizeof (status), (char *) &status);
+			return 0;
+		}
+	}
+
     fprintf(stderr, "hardware format...\n");
     fprintf(stderr, "%f mSampleRate\n", internal->outputStreamBasicDescription.mSampleRate);
     fprintf(stderr, "%c%c%c%c mFormatID\n", (int)(internal->outputStreamBasicDescription.mFormatID & 0xff000000) >> 24,
