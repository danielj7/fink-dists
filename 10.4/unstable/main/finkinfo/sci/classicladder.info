Package: classicladder
Version: 0.7.80
Revision: 1
Maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>
Description: Free ladder logic simulator in C
Source: mirror:sourceforge:%n/%n-%v.zip
Source-MD5: 54a6ca19ea8ae9b84c8f9202c735444c 
SourceDirectory:%n
Depends: <<
gtk+2-shlibs, x11, x11-shlibs, atk1-shlibs, pango1-xft2-shlibs, glib2-shlibs,
libgettext3-shlibs, libiconv, libgnomeprintui2.2-shlibs, libgnomecanvas2-shlibs,
libxml2-shlibs, libart2-shlibs, libgnomeprint2.2-shlibs
<<
BuildDepends: <<
gtk+2-dev, x11-dev, atk1, pango1-xft2-dev, glib2-dev, libgettext3-dev,
libiconv-dev, libgnomeprintui2.2-dev, libgnomecanvas2-dev, libxml2,
libart2, pkgconfig,libgnomeprint2.2-dev
<<
Patch: %n.patch
CompileScript: make 
InstallScript: << 
make install PREFIX=%d%p
/usr/bin/install -d %d%p/share/classicladder/projects_examples
/usr/bin/install %b/projects_examples/* %d%p/share/classicladder/projects_examples/
<<
License: LGPL
DocFiles: README.txt HISTORY.txt lesserGPL.txt	
DescDetail:<<
Classic Ladder is coded 100% in C. 
It can be used for educational purposes or anything you want... 
The graphical user interface uses GTK(2). 

The following elements are implemented :
	*	Booleans elements
	*	Rising / falling edges
	*	Timers
	*	Monostables
	*	Counters
	*	Compare via arithmetic expressions
	*	Booleans outputs
	*	Set / Reset coils
	*	Jumps
	*	Operate via arithmetic expressions

There a full editor for rungs
You can:
	*	add a rung after the current rung.
	*	insert a rung before the current rung.
	*	modify the current rung.
	*	delete the current rung.
When editing, use the pointer of the toolbar if you want only to modify 
properties, else select the element you want to place in the rung. 
<< 
DescPackaging: <<
Install example files in %p/share
<< 
DescPort: <<
I/O support disabled, as it's apparently Linux-centric, so it can only be used
for simulation.
<<
HomePage: http://membres.lycos.fr/mavati/classicladder/
