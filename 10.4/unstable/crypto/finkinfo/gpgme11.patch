funopen is defined on OS X
#include <netdb.h> for socklen_t
ttyname_r returns a char* on OS X instead of int.

diff --git a/assuan/assuan.h b/assuan/assuan.h
--- a/assuan/assuan.h
+++ b/assuan/assuan.h
@@ -25,7 +25,8 @@
 #include <stdio.h>
 #include <sys/types.h>
 #include <unistd.h>
-
+/* for socklen_t */
+#include <netdb.h>
 
 /* To use this file with libraries the following macros are useful:
 
diff --git a/assuan/funopen.c b/assuan/funopen.c
--- a/assuan/funopen.c
+++ b/assuan/funopen.c
@@ -59,6 +59,4 @@ _assuan_funopen(void *cookie,
 		      readfn ? ( writefn ? "rw" : "r" )
 		      : ( writefn ? "w" : ""), io);
 }
-#else
-#error No known way to implement funopen.
 #endif
diff --git a/gpgme/engine-gpgsm.c b/gpgme/engine-gpgsm.c
--- a/gpgme/engine-gpgsm.c
+++ b/gpgme/engine-gpgsm.c
@@ -448,7 +448,8 @@ gpgsm_new (void **engine, const char *fi
 
   if (isatty (1))
     {
-      if (ttyname_r (1, dft_ttyname, sizeof (dft_ttyname)))
+      /* ttyname_r returns a char* on OS X */
+      if (!ttyname_r (1, dft_ttyname, sizeof (dft_ttyname)))
 	{
 	  err = gpg_error_from_errno (errno);
 	  goto leave;
diff --git a/gpgme/rungpg.c b/gpgme/rungpg.c
--- a/gpgme/rungpg.c
+++ b/gpgme/rungpg.c
@@ -476,7 +476,8 @@ gpg_new (void **engine, const char *file
 
   if (isatty (1))
     {
-      if (ttyname_r (1, dft_ttyname, sizeof (dft_ttyname)))
+      /* ttyname_r returns char* on OS X */
+      if (!ttyname_r (1, dft_ttyname, sizeof (dft_ttyname)))
 	rc = gpg_error_from_errno (errno);
       else
 	{
