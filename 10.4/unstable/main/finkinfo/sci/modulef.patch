--- modulef99_ori/ascii/sta/s/emc2/drawc.f	1999-06-02 14:57:07.000000000 +0200
+++ modulef99/ascii/sta/s/emc2/drawc.f	2006-04-18 12:28:19.000000000 +0200
@@ -10,7 +10,7 @@
  
        real alpha,alpha1,alpha2,dalpha,msq(4)
        real cmsq(0:3),p(0:5,2)
-       integer i,topo
+       integer i,topo,n
 c
       drawc=.false.
       if(c(0).le.point)return
@@ -42,7 +42,10 @@
       endif
       dalpha = 2.*pi/min(max( (c(0) * 200.)/cmsq(0),20.),3000.)
       call mov2to(c(1)+c(0)*cos(alpha1),c(2)+c(0)*sin(alpha1))
-      do 1 alpha=alpha1,alpha2,dalpha
+      n = (alpha2-alpha1)/dalpha
+c      do 1 alpha=alpha1,alpha2,dalpha
+      do 1 i=0,n
+      alpha = alpha1+i*dalpha
         call lin2to(c(1)+c(0)*cos(alpha),c(2)+c(0)*sin(alpha))
 1     continue
       call lin2to(c(1)+c(0)*cos(alpha2),c(2)+c(0)*sin(alpha2))
--- modulef99_ori/ascii/sta/s/emc2/gecran.f	1999-06-02 14:57:24.000000000 +0200
+++ modulef99/ascii/sta/s/emc2/gecran.f	2006-04-18 12:31:29.000000000 +0200
@@ -17,7 +17,7 @@
        real mmx,mmy,fx,fy,hx,hy,mx,my,dmx,dmy,rr,alpha,aa
        integer pt,numn
 c      case marquees
-       integer mkcas1,i
+       integer mkcas1,i,j
        logical ffac
 c
        gecran=0
@@ -284,7 +284,9 @@
            dx=bd(3,i)-bd(1,i)
            dy=bd(4,i)-bd(2,i)
            alpha=bd(5,i)
-           do 1201 aa=0.,1.,0.25
+c           do 1201 aa=0.,1.,0.25
+           do 1201 j=0,4
+             aa = j*0.25
              fx=bd(1,i)+dx*cos(alpha*aa) - dy*sin(alpha*aa)
              fy=bd(2,i)+dx*sin(alpha*aa) + dy*cos(alpha*aa)
              pnt(1,1)=min(pnt(1,1),fx)
--- modulef99_ori/ascii/sta/s/emc2/genspl.f	1999-06-02 14:39:07.000000000 +0200
+++ modulef99/ascii/sta/s/emc2/genspl.f	2006-04-18 12:38:20.000000000 +0200
@@ -176,7 +176,9 @@
 87672     continue
 87671   continue
         tgen(i)=nbgen+1
-        do 87675 t=0.,1.-step+0.51*step,step
+c        do 87675 t=0.,1.-step+0.51*step,step
+        do 87675 l=0,9
+          t = l*step 
           do 87676 nd=1,ndim
             c(nd)=(t**3*w(1,nd)+t**2*w(2,nd)+t*w(3,nd)+w(4,nd))
 87676     continue
--- modulef99_ori/ascii/sta/s/emc2/traspl.f	1999-06-02 14:39:09.000000000 +0200
+++ modulef99/ascii/sta/s/emc2/traspl.f	2006-04-18 12:48:09.000000000 +0200
@@ -167,12 +167,14 @@
 87674       continue
 87672     continue
 87671   continue
-        do 87675 t=0.,1.+0.51*step,step
+c        do 87675 t=0.,1.+0.51*step,step
+        do 87675 l=0,9
+          t=l*step
           do 87676 nd=1,ndim
             c(nd)=(t**3*w(1,nd)+t**2*w(2,nd)+t*w(3,nd)+w(4,nd))
             tg2(nd)=c(nd)-old(nd)
             old(nd)=c(nd)
-            if(i.eq.1.and.t.eq.step)then
+            if(i.eq.1.and.l.eq.1)then
               tg1(nd)=c(nd)-depart(nd)
             endif
 87676     continue
--- modulef99_ori/ascii/sta/s/trac/mesag0.f	1999-06-02 14:40:56.000000000 +0200
+++ modulef99/ascii/sta/s/trac/mesag0.f	2006-04-18 15:36:58.000000000 +0200
@@ -741,7 +741,10 @@
             CALL LIGH3(0,0,IC)
             CALL DRAW3(0)
             STEP = PI / SPEED
-            DO 4 TETA = 0. , 4.*PI , STEP
+C            DO 4 TETA = 0. , 4.*PI , STEP
+            K = 4.*PI/STEP
+            DO 4 J=0,K
+               TETA = J*STEP
                PHI = TETA/4. - PI/2.
                NEWOBS(1) = PVULOU(1) + DIST*COS(PHI)*COS(TETA)
                NEWOBS(2) = PVULOU(2) + DIST*COS(PHI)*SIN(TETA)
--- modulef99_ori/ascii/sta/s/trac/trmc3t.f	1999-06-02 14:40:59.000000000 +0200
+++ modulef99/ascii/sta/s/trac/trmc3t.f	2006-04-18 15:48:01.000000000 +0200
@@ -617,8 +617,8 @@
       CALL TUER ( 'TRTN',M )
 C     --- DESSIN DES FLECHES INTRODUITE MANUELLEMENT
       CALL LIGH3(-1,-1,COULRF(-2))
-      DO 320 FL = 1 , FLENBR
-         L = NINT( FL )
+      DO 320 L = 1 , FLENBR
+C         L = NINT( FL )
          CALL FLECH3( COOFLE(1,L),COOFLE(2,L),COOFLE(3,L),
      +                COOFLE(4,L),COOFLE(5,L),COOFLE(6,L),IFLEC)
   320 CONTINUE
--- modulef99_ori/ascii/sta/s/utsd/sddesc.f	1999-06-02 14:41:28.000000000 +0200
+++ modulef99/ascii/sta/s/utsd/sddesc.f	2006-04-18 15:51:01.000000000 +0200
@@ -28,6 +28,7 @@
 C ......................................................................
 C   PROGRAMMEUR : B.MULLER   OCTOBRE 1985     INRIA  POSTE 5559
 C ......................................................................
+      INTEGER NBSD, SDDI
       PARAMETER (NBSD = 18,SDDI = 5)
       CHARACTER*4 NOMSD,STOC(NBSD)
       COMMON/TRAVA1/NX(28),LONREE,IMPRE,IFILL(3)
--- modulef99_ori/ascii/sta/s/visu/drwlcur2.f	1999-06-02 14:41:42.000000000 +0200
+++ modulef99/ascii/sta/s/visu/drwlcur2.f	2006-04-18 18:28:34.000000000 +0200
@@ -32,7 +32,8 @@
       real prdscl
       logical inelm
 c ======================================================================
-      real p(3,4),vv(3,4),p0dep(3),sens,step,deb,ffin
+      real p(3,4),vv(3,4),p0dep(3),sens
+      integer isens,step,deb,ffin
       real tt(9,3),v0(3)
       integer i,l,k,aout,nueosc,nuedep,nufdep,nuv,nufv
       integer nueold,aoutold,nufold
@@ -80,21 +81,22 @@
       nufdep=nuf        ! face de depart
       
       if(nbsens.eq.2)then
-        deb=1.
-        ffin=-1.
-        step=-2.
+        deb=1
+        ffin=-1
+        step=-2
       elseif(nbsens.eq.1)then
-        deb=1.
-        ffin=2.
-        step=2.
+        deb=1
+        ffin=2
+        step=2
       elseif(nbsens.eq.-1)then
-        deb=-1.
-        ffin=0.
-        step=2.
+        deb=-1
+        ffin=0
+        step=2
       endif
 
 c     pour tous les sens demandes
-      do sens=deb,ffin,step
+      do isens=deb,ffin,step
+        sens = real(isens)
         nue=nuedep
         nuf=nufdep
         do k=1,dim
--- modulef99_ori/ascii/sta/s/visu/drwlcur3.f	1999-06-02 14:41:42.000000000 +0200
+++ modulef99/ascii/sta/s/visu/drwlcur3.f	2006-04-18 18:31:31.000000000 +0200
@@ -21,7 +21,8 @@
       integer ptcur(nbe),aplcur(lmax),anfac(lmax),anelm(lmax)
       include 'td2d.ins'
 c ======================================================================
-      real p(3,4),vv(3,4),p0dep(3),sens,step,deb,ffin
+      real p(3,4),vv(3,4),p0dep(3),sens
+      integer isens,step,deb,ffin
       integer l,k,aout,nueosc,nuedep
       integer next3(3),osc
       real p0osc(3)
@@ -45,21 +46,22 @@
       nuedep=abs(nue)   ! element de depart
       
       if(nbsens.eq.2)then
-        deb=1.
-        ffin=-1.
-        step=-2.
+        deb=1
+        ffin=-1
+        step=-2
       elseif(nbsens.eq.1)then
-        deb=1.
-        ffin=2.
-        step=2.
+        deb=1
+        ffin=2
+        step=2
       elseif(nbsens.eq.-1)then
-        deb=-1.
-        ffin=0.
-        step=2.
+        deb=-1
+        ffin=0
+        step=2
       endif
 
 c     pour tous les sens demandes
-      do sens=deb,ffin,step
+      do isens=deb,ffin,step
+        sens = real(isens)
         nue=nuedep
         do k=1,dim
           p0(k)=p0dep(k)
--- modulef99_ori/ascii/sta/s/visu/image.f	1999-06-02 14:41:44.000000000 +0200
+++ modulef99/ascii/sta/s/visu/image.f	2006-04-18 18:34:55.000000000 +0200
@@ -18,7 +18,9 @@
           ymax=-infini
         endif
         
-        do 1 t=tmin,tmax,s
+c        do 1 t=tmin,tmax,s
+        do 1 j=0,int((tmax-tmin)/s)
+          s=tmin+j*s
           i=i+1
           if(i.gt.imax)goto 2
           x(i)=cos(5.*t)+sin(3.*t)

--- modulef99_ori/make/makefile.mm	2006-04-23 13:16:29.000000000 +0200
+++ modulef99/make/makefile.mm	2006-04-23 13:15:42.000000000 +0200
@@ -251,5 +251,5 @@
 $(MR)/$(MM)/$(MV)/etc/proc.direct: $(ms)/ppad/symd.d  $(mb)/procat
 	\rm -f $@ 
-	( export MR ; MR=$(MR)  ;\
+	( export MR ; MR=../..  ;\
           export MM ; MM=$(MM)  ;\
           export MV ; MV=$(MV)  ;\
@@ -277,5 +277,5 @@
 
 $(dir)/Listtest.depend: $(mb)/proimp $(MR)/$(MM)/$(MV)/etc/proc.direct
-	$(dir)/ListBib.test $(mb) $(dir) $(MAJMIN)  $(MR) $(MM) $(MV) > $@
+	$(dir)/ListBib.test $(mb) $(dir) $(MAJMIN) ../.. $(MM) $(MV) > $@
 
 $(dir)/Install$(MM)/List_f3d1: $(dir)/Install$(MM)/periphin.in $(dir)/Install$(MM)/periph 
@@ -341,5 +341,5 @@
 	@\rm -f $@ 
 	USER=$${USER:-modulef} ;export USER; \
-          (echo "'$?'" ; echo "'$@'") | $(mb)/pobaxx > $(dir)/Install$(MM)/poba.out
+          (echo "'$?'" ; echo "'$@'") |  sed "s|$(MR)/|../../|g" | $(mb)/pobaxx > $(dir)/Install$(MM)/poba.out
 	if [  -f $@ ] ;then exit 0; else exit 1; fi
 	@echo ""
@@ -354,5 +354,5 @@
 	@\rm -f $@ 
 	USER=$${USER:-modulef} ;export USER; \
-	  (echo "'$?'" ; echo "'$@'" ) |$(mb)/pobvxx > $(dir)/Install$(MM)/pobv.out
+	  (echo "'$?'" ; echo "'$@'" ) | sed "s|$(MR)/|../../|g" | $(mb)/pobvxx > $(dir)/Install$(MM)/pobv.out
 	if [  -f $@ ] ;then exit 0; else exit 1; fi
 	@echo ""
