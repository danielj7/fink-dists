
--- kdeutils-3.5.4/klaptopdaemon/Makefile.am	2006-01-19 11:49:18.000000000 -0500
+++ kdeutils-3.5.4-new/klaptopdaemon/Makefile.am	2006-08-01 23:42:11.000000000 -0400
@@ -21,7 +21,7 @@
 kcm_laptop_la_SOURCES = battery.cpp main.cpp pcmcia.cpp power.cpp warning.cpp \
 	acpi.cpp sony.cpp profile.cpp buttons.cpp apm.cpp  
 kcm_laptop_la_LDFLAGS  = $(all_libraries) $(KDE_PLUGIN) -module
-kcm_laptop_la_LIBADD = $(LIB_KFILE) $(LIB_KDEUI) libkcmlaptop.la
+kcm_laptop_la_LIBADD = $(LIB_KFILE) $(LIB_KDEUI) libkcmlaptop.la $(LIBZ)
 kcm_laptop_la_COMPILE_FIRST = crcresult.h
 
 AM_CPPFLAGS = $(all_includes)
--- kdeutils-3.5.4/ksim/monitors/snmp/configure.in.in	2006-07-22 04:12:20.000000000 -0400
+++ kdeutils-3.5.4-new/ksim/monitors/snmp/configure.in.in	2006-08-01 23:42:11.000000000 -0400
@@ -37,4 +37,4 @@
   fi
 fi
 
-AM_CONDITIONAL(include_ksim_monitors_snmp, test "x$enable_snmp" = xyes)
+AM_CONDITIONAL(include_ksim_monitors_snmp, /usr/bin/false)
--- kdeutils-3.5.4/ksim/monitors/snmp/configure.in.in.orig	1969-12-31 19:00:00.000000000 -0500
+++ kdeutils-3.5.4-new/ksim/monitors/snmp/configure.in.in.orig	2006-07-22 04:12:20.000000000 -0400
@@ -0,0 +1,40 @@
+AC_ARG_WITH(snmp,
+  [AC_HELP_STRING(--with-snmp,
+    [enable support for SNMP @<:@default=check@:>@])],
+  [], with_snmp=check)
+
+enable_snmp=no
+if test "x$with_snmp" != xno; then
+  KDE_CHECK_HEADER( net-snmp/library/snmp_api.h, 
+    [ have_netsnmp_h=yes ], [ have_netsnmp_h=no ],
+    [ #include <net-snmp/net-snmp-config.h>
+      #include <net-snmp/types.h>
+    ]
+  )
+
+  if test "$have_netsnmp_h" = yes; then
+    KDE_CHECK_LIB( netsnmp, snmp_sess_init, [
+        AC_SUBST( LIBSNMP, "-lnetsnmp" )
+        enable_snmp=yes
+    ], [], [] )
+  fi
+
+  if test "$enable_snmp" != yes; then
+    AC_MSG_CHECKING([if libnetsnmp needs -lcrypto])
+
+    dnl use a different symbol to prevent autoconf from caching
+    KDE_CHECK_LIB( netsnmp, snmp_open, [
+        AC_SUBST( LIBSNMP, "-lnetsnmp -lcrypto" )
+        enable_snmp=yes
+        AC_MSG_RESULT(yes)
+    ], [
+        AC_MSG_RESULT(no)
+    ], [-lcrypto] )
+  fi
+
+  if test "x$with_snmp" != xcheck && test "x$enable_snmp" != xyes; then
+    AC_MSG_ERROR([--with-snmp was given, but test for net-snmp failed])
+  fi
+fi
+
+AM_CONDITIONAL(include_ksim_monitors_snmp, test "x$enable_snmp" = xyes)
--- kdeutils-3.5.4/superkaramba/configure.in.in	2006-01-20 01:49:18.000000000 -0500
+++ kdeutils-3.5.4-new/superkaramba/configure.in.in	2006-08-01 23:42:11.000000000 -0400
@@ -75,3 +75,5 @@
 if test -z "$PYTHONINC" ; then
         DO_NOT_COMPILE="$DO_NOT_COMPILE superkaramba"
 fi
+
+AC_CHECK_HEADERS(netinet/in.h sys/sockio.h)
--- kdeutils-3.5.4/superkaramba/configure.in.in.orig	1969-12-31 19:00:00.000000000 -0500
+++ kdeutils-3.5.4-new/superkaramba/configure.in.in.orig	2006-01-20 01:49:18.000000000 -0500
@@ -0,0 +1,77 @@
+#MIN_CONFIG
+
+AM_INIT_AUTOMAKE(superkaramba, 0.38)
+AC_C_BIGENDIAN
+AC_CHECK_KDEMAXPATHLEN
+
+dnl AM_PATH_XMMS([1.0.0])
+dnl AC_PATH_PROG(XMMS_CONFIG, xmms-config, no)
+dnl AM_PATH_XMMS(1.0.0,,AC_MSG_ERROR([*** XMMS >= 1.0.0 not installed - please install first ***]))
+
+KDE_CHECK_PYTHON
+AC_DEFUN([AC_CHECK_XMMS],
+[
+  AC_MSG_CHECKING([for libxmms])
+  AC_CACHE_VAL(ac_cv_have_xmms,
+  [
+    ac_save_libs="$LIBS"
+    LIBS="`xmms-config --libs`"
+    ac_CPPFLAGS_save="$CPPFLAGS"
+    CPPFLAGS="$CPPFLAGS $all_includes `xmms-config --cflags`"
+    ac_LDFLAGS_save="$LDFLAGS"
+    LDFLAGS="$LDFLAGS $all_libraries"
+    AC_TRY_LINK(
+      [#include <xmms/xmmsctrl.h>],
+      [xmms_remote_stop(0);],
+      [ac_cv_have_xmms="yes"],
+      [ac_cv_have_xmms="no"]
+    )
+    LIBS="$ac_save_libs"
+    LDFLAGS="$ac_LDFLAGS_save"
+    CPPFLAGS="$ac_CPPFLAGS_save"
+  ])
+  AC_MSG_RESULT($ac_cv_have_xmms)
+  if test "$ac_cv_have_xmms" = "yes"; then
+    XMMS_INCLUDES="`xmms-config --cflags`"
+
+    for arg in `xmms-config --libs`; do
+	case $arg in
+	    -[[lL]]*)
+	    XMMS_LIBS="$XMMS_LIBS $arg"
+	    ;;
+	    *)
+	    XMMS_LDFLAGS="$XMMS_LDFLAGS $arg"
+	esac
+    done
+    AC_DEFINE(HAVE_XMMS, 1, [Define if you have xmms libraries and header files.])
+  fi
+])
+
+AC_ARG_WITH(xmms,
+  [AC_HELP_STRING(--with-xmms,
+    [enable support for XMMS @<:@default=check@:>@])],
+  [], with_xmms=check)
+
+if test "x$with_xmms" != xno; then
+  AC_CHECK_XMMS
+
+  if test "x$with_xmms" != xcheck && test "x$ac_cv_have_xmms" = xno; then
+    AC_MSG_ERROR([--with-xmms was given, but test for XMMS failed])
+  fi
+fi
+AC_SUBST(XMMS_LIBS)
+AC_SUBST(XMMS_LDFLAGS)
+AC_SUBST(XMMS_INCLUDES)
+
+kde_have_knewstuff=yes
+KDE_CHECK_LIB(knewstuff, main, [MY_LIBKNEWSTUFF="-lknewstuff"], kde_have_knewstuff=no)
+if test "$kde_have_knewstuff" = "yes"; then
+  AC_DEFINE(HAVE_KNEWSTUFF, 1, [Define if you have knewstuff])
+  AC_SUBST(MY_LIBKNEWSTUFF)
+fi
+
+AC_CHECK_LIB(kvm, main, [LIBKVM="-lkvm"])
+AC_SUBST(LIBKVM)
+if test -z "$PYTHONINC" ; then
+        DO_NOT_COMPILE="$DO_NOT_COMPILE superkaramba"
+fi
--- kdeutils-3.5.4/superkaramba/src/Makefile.am	2006-01-19 11:49:35.000000000 -0500
+++ kdeutils-3.5.4-new/superkaramba/src/Makefile.am	2006-08-01 23:42:11.000000000 -0400
@@ -40,7 +40,7 @@
 
 # kde_cfg_DATA = superkaramba.kcfg
 
-superkaramba_LDFLAGS = -Wl,-export-dynamic  $(KDE_RPATH) $(all_libraries) $(PYTHONLIB) $(XMMS_LDFLAGS)
+superkaramba_LDFLAGS = $(KDE_RPATH) $(all_libraries) $(PYTHONLIB) $(XMMS_LDFLAGS)
 #superkaramba_LDADD = -lkio $(LIB_KDEUI) $(XMMS_LDADD) $(LIBPYTHON) $(LIBKVM) $(MY_LIBKNEWSTUFF)
 superkaramba_LDADD = -lkio $(LIB_KDEUI) $(XMMS_LIBS) $(LIBPYTHON) $(LIBKVM) $(MY_LIBKNEWSTUFF)
 
--- kdeutils-3.5.4/superkaramba/src/misc_python.cpp	2006-03-17 05:13:37.000000000 -0500
+++ kdeutils-3.5.4-new/superkaramba/src/misc_python.cpp	2006-08-01 23:42:11.000000000 -0400
@@ -617,10 +617,10 @@
 #include <sys/ioctl.h>
 #include <net/if.h>
 #include <arpa/inet.h>
-#ifdef __FreeBSD__
+#ifdef HAVE_NETINET_IN_H
 #include <netinet/in.h>
 #endif
-#if defined(Q_OS_SOLARIS)
+#ifdef HAVE_SYS_SOCKIO_H
 #include <sys/sockio.h>
 #endif
 /* now a method we need to expose to Python */
