Package: fpc-cross-arm-iphone
Version: 2.4.0
Revision: 2
Architecture: i386, x86_64
Depends: findutils, fpc, fpc-cross-arm-wince
Recommends: fpc-doc

CustomMirror: <<
eur-AT: ftp://gd.tuwien.ac.at/languages/pascal/fpc/
eur-BE: ftp://ftp.freepascal.org/pub/fpc/
eur-HU: ftp://ftp.hu.freepascal.org/pub/fpc/
eur-IL: http://mirror.mirimar.net/freepascal/
eur-NL: ftp://freepascal.stack.nl/mirrors/fpc/
eur-NO: ftp://ftp.no.freepascal.org/pub/fpc/
eur-RU: ftp://ftp.chg.ru/pub/lang/pascal/fpc/
Primary: ftp://ftp.freepascal.org/pub/fpc/
<<
Source: mirror:custom:/dist/%v/source/fpcbuild-%v.tar.gz
Source-MD5: af49e9a8bb632f361395add30ece8934

SourceDirectory: fpcbuild-%v/fpcsrc

BuildDepends: fink (>= 0.24.12)
# Patch the endian problem with MOFiles in packages/fcl-base/src/gettext.pp
PatchFile: fpc.patch
PatchFile-MD5: f01af3524aa65f6b2eb4eb1712a54901

Patchscript: <<
#!/bin/sh -ev

# Patch the endian problem with MOFiles in packages/fcl-base/src/gettext.pp
  sed 's|@PREFIX@|%p|g' < %{PatchFile} | patch -p1
# preliminary fix of fcl-base Makefile. Can probably be removed with newer tarball.
  sed -i.bak 's|src/win|src/dummy|g' packages/fcl-base/Makefile
# this should probably be fixed upstream in the future.
  sed -i.bak 's|armpe|arm_wince_pe|g' compiler/systems/t_win.pas
<<

CompileScript: <<
#!/bin/sh -ev
locate -c iPhoneOS.platform/Developer/usr/bin/as
# ok when it reutrns 1. Dialog about what to do otherwise?

# Obtain the installation directory of the SDK.
#if [ -f "/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS3.1.sdk/usr/include/arm/_structs.h" ]; then
#  IPHONEINSTALLDIR=/Developer
#  IPHONESDKDIR=iPhoneOS3.1.sdk
#elif [ -f "/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS3.0.sdk/usr/include/arm/_structs.h" ]; then
#  IPHONEINSTALLDIR=/Developer
#  IPHONESDKDIR=iPhoneOS3.0.sdk
#elif [ -f "/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS2.2.1.sdk/usr/include/arm/_structs.h" ]; then
#  IPHONEINSTALLDIR=/Developer
#  IPHONESDKDIR=iPhoneOS2.2.1.sdk
#else
#  echo
#  echo "To start, please drag the folder in which the iPhone SDK is installed on top"
#  echo "of this window, or copy it in the Finder and paste it in this window. This"
#  echo "will fill in the full path to this folder. Then, press the return key to"
#  echo "continue."
#  echo
#  echo -n "Enter iPhone SDK installation directory (e.g., /iPhoneSDK): "
#  read IPHONEINSTALLDIR
#  if [ -f "/$IPHONEINSTALLDIR/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS3.1.sdk/usr/include/arm/_structs.h" ]; then
#    IPHONESDKDIR=iPhoneOS3.1.sdk
#  elif [ -f "/$IPHONEINSTALLDIR/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS3.0.sdk/usr/include/arm/_structs.h" ]; then
#    IPHONESDKDIR=iPhoneOS3.0.sdk
#  elif [ -f "/$IPHONEINSTALLDIR/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS2.2.1.sdk/usr/include/arm/_structs.h" ]; then
#    IPHONESDKDIR=iPhoneOS2.2.1.sdk
#  else
#    IPHONESDKDIR=not_found
#  fi
#fi

# construction and conversion of the file _structs.h
# _structs.h files are identical from iOS 2.0 to iOS 3.2
# so we can take the first one found by locate.

ARM_STRUCT_H=`locate -e -l 1 include/arm/_structs.h`
SDK=`locate -e -l 1 iPhoneOS3.2.sdk`

gcc -I$SDK/usr/include/                                               \
    -E                                                                \
    -D__need_mcontext_t                                               \
    -D__DARWIN_UNIX03                                                 \
    $ARM_STRUCT_H                                                     \
  | sed                                                               \
    -e 's/__uint32_t/cuint32/g'                                       \
    -e 's/_STRUCT_ARM_EXCEPTION_STATE/__darwin_arm_exception_state/'  \
    -e 's/_STRUCT_ARM_THREAD_STATE/__darwin_arm_thread_state/'        \
    -e 's/_STRUCT_ARM_VFP_STATE/__darwin_arm_vfp_state/'              \
    -e 's/__darwin_mcontext/mcontext_t/'                              \
    > rtl/darwin/arm/sig_cpu.h

#if [ $? != 0 ]; then
#  echo "Unable to preprocess the _structs.h header file at \"$STRUCTSHEADER\" using \"/usr/bin/gcc\""
#  failure
#fi

h2pas -i -o rtl/darwin/arm/sig_cpu.inc rtl/darwin/arm/sig_cpu.h

TOOLS_PATH=`locate -e -l 1 iPhoneOS.platform/Developer`

# compile the crosscompiler, rtl and packages ************ is -XR really needed? ***************
  make rtl      PP=ppcarm CPU_TARGET=arm OS_TARGET=darwin CROSSOPT="-FD$TOOLS_PATH/usr/bin -XR$SDK/ -ap"
  make packages PP=ppcarm CPU_TARGET=arm OS_TARGET=darwin CROSSOPT="-FD$TOOLS_PATH/usr/bin -XR$SDK/ -ap"
<<

InstallScript: <<
#!/bin/sh -ev
# install all units from the rtl and packages

# leftovers from the build script. Is this checked?
#symlinks for
#as
#ar
#c++
#cc
#cpp
#g++
#gcc
#gdb
#gprof
#install_name_tool
#ld
#libtool
#lipo
#nm
#otool
#ranlib
#size
#strings
#strip
#
#short cut symlinks for -FD/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin  KMS: I don't think this is needed
#short cut symlinks for -XR/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/

  make rtl_install      OS_TARGET=darwin CPU_TARGET=arm INSTALL_PREFIX=%i CROSSINSTALL=1 PP=ppcarm
  make packages_install OS_TARGET=darwin CPU_TARGET=arm INSTALL_PREFIX=%i CROSSINSTALL=1 PP=ppcarm
<<

License: GPL/LGPL

Description: FPC cross-compiler arm-darwin

DescDetail: <<
  Free Pascal (aka FPK Pascal) is a 32 and 64 bit professional Pascal
  compiler. Supported processors: Intel x86, Amd64/x86 64, PowerPC, 
  Sparc, ARM.
  Supported operating systems: nds, FreeBSD, Mac OS X/Darwin, 
  Mac OS classic, DOS, Win32, OS/2, Netware (libc and classic) and MorphOS.
 
  The language syntax has excellent compatibility with TP 7.0 as well as 
  with most versions of Delphi (classes, rtti, exceptions, ansistrings,
  widestrings, interfaces). A Mac Pascal compatibility mode is also provided
  to assist users of previous Pascal compilers for the Mac. 
  Furthermore, Free Pascal supports function overloading, operator 
  overloading, global properties and other modern features.
 
  http://wiki.freepascal.org/User_Changes_2.4.0 lists changes in fpc 2.4.0.
<<

DescUsage: <<
 This Pascal crosscompiler produces arm executables, which run 
 natively on arm-darwin systems.
 get help with: fpc -h
 compile and link a Pascal file with:
 
 fpc -Tdarwin -Parm FILENAME

 For more documentation about Free Pascal in HTML and pdf, install fpc-doc
<<

DescPort: <<
<<

Homepage: http://www.freepascal.org
Maintainer: Karl-Michael Schindler <karl-michael.schindler@web.de>
