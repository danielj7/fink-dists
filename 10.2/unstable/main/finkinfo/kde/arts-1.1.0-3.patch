Index: admin/Makefile.common
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/admin/Makefile.common,v
retrieving revision 1.1.1.3
retrieving revision 1.4
diff -u -b -u -r1.1.1.3 -r1.4
Index: admin/acinclude.m4.in
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/admin/acinclude.m4.in,v
retrieving revision 1.1.1.3
diff -u -b -u -r1.1.1.3 acinclude.m4.in
--- admin/acinclude.m4.in	14 Aug 2002 13:18:45 -0000	1.1.1.3
+++ admin/acinclude.m4.in	25 Sep 2002 00:28:53 -0000
@@ -699,13 +699,10 @@
      AC_CHECK_LIB(ipc, shmat, X_EXTRA_LIBS="$X_EXTRA_LIBS -lipc"))
    
    # darwin needs this to initialize the environment
-   AC_CHECK_HEADERS(crt_externs.h)
+   AC_CHECK_HEADERS([crt_externs.h sys/types.h])
    AC_CHECK_FUNC(_NSGetEnviron, [AC_DEFINE(HAVE_NSGETENVIRON, 1, [Define if your system needs _NSGetEnviron to set up the environment])])
  
-   # more headers that need to be explicitly included on darwin
-   AC_CHECK_HEADERS(sys/types.h stdint.h)
-
-   # darwin requires a poll emulation library
+   # darwin requires a poll.h emulation library
    AC_CHECK_LIB(poll, poll, LIB_POLL="-lpoll")
 
    # CoreAudio framework
@@ -714,6 +711,12 @@
      FRAMEWORK_COREAUDIO="-framework CoreAudio"
    ])
 
+   # CoreServices framework
+   AC_CHECK_HEADER(CoreServices/CoreServices.h, [
+     AC_DEFINE(HAVE_CORESERVICES, 1, [Define if you have the CoreServices API])
+     FRAMEWORK_CORESERVICES="-framework CoreServices"
+   ])
+
    # Solaris 2.6 and others need -lresolv for res_init
    AC_CHECK_FUNCS(res_init, , [
      kde_libs_safe="$LIBS"
@@ -736,6 +739,8 @@
    AC_SUBST(FRAMEWORK_COREAUDIO)
    LIBSOCKET="$X_EXTRA_LIBS"
    AC_SUBST(LIBSOCKET)
+   AC_SUBST(FRAMEWORK_COREAUDIO)
+   AC_SUBST(LIB_POLL)
    AC_SUBST(LIBRESOLV)
    AC_SUBST(X_EXTRA_LIBS)
    AC_CHECK_LIB(ucb, killpg, [LIBUCB="-lucb"]) dnl for Solaris2.4
@@ -905,7 +910,7 @@
 kde_ldflags_safe="$LDFLAGS"
 kde_libs_safe="$LIBS"
 
-LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS"
+LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS"
 LIBS="-lXext -lX11 $LIBSOCKET"
 
 AC_TRY_LINK([
@@ -947,9 +952,9 @@
 kde_save_LDFLAGS="$LDFLAGS"
 kde_save_CFLAGS="$CFLAGS"
 kde_save_LIBS="$LIBS"
-LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS"
+LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS"
 CFLAGS="$CFLAGS -I$x_includes"
-LIBS="-lXinerama -lXext"
+LIBS="-lXinerama -lXext -lX11"
 
 if test "x$no_xinerama" = "xno"; then
 
@@ -1846,15 +1851,29 @@
    AC_REQUIRE([K_PATH_X])
 
 if test $kde_qtver = 3; then
+   AC_SUBST(LIB_ARTSKDE, "-lartskde")
+   AC_SUBST(LIB_DCOP, "-lDCOP")
+   AC_SUBST(LIB_KAB, "-lkab")
+   AC_SUBST(LIB_KABC, "-lkabc")
    AC_SUBST(LIB_KDECORE, "-lkdecore")
+   AC_SUBST(LIB_KDED, "@PREFIX@/lib/kded.la")
+   AC_SUBST(LIB_KDEFX, "-lkdefx")
+   AC_SUBST(LIB_KDEPRINT, "-lkdeprint")
+   AC_SUBST(LIB_KDESASL, "-lkdesasl")
+   AC_SUBST(LIB_KDESU, "-lkdesu")
    AC_SUBST(LIB_KDEUI, "-lkdeui")
-   AC_SUBST(LIB_KIO, "-lkio")
-   AC_SUBST(LIB_SMB, "-lsmb")
-   AC_SUBST(LIB_KAB, "-lkab")
    AC_SUBST(LIB_KHTML, "-lkhtml")
-   AC_SUBST(LIB_KSPELL, "-lkspell")
+   AC_SUBST(LIB_KIO, "-lkio")
    AC_SUBST(LIB_KPARTS, "-lkparts")
-   AC_SUBST(LIB_KDEPRINT, "-lkdeprint")
+   AC_SUBST(LIB_KJAVA, "-lkjava")
+   AC_SUBST(LIB_KJS, "-lkjs")
+   AC_SUBST(LIB_KMID, "-lkmid")
+   AC_SUBST(LIB_KSCRIPT, "-lkscript")
+   AC_SUBST(LIB_KSPELL, "-lkspell")
+   AC_SUBST(LIB_KTEXTEDITOR, "-lktexteditor")
+   AC_SUBST(LIB_SHELLSCRIPT, "-lshellscript")
+   AC_SUBST(LIB_SMB, "-lsmb")
+   AC_SUBST(LIB_VCARD, "-lvcard")
 # these are for backward compatibility
    AC_SUBST(LIB_KSYCOCA, "-lkio")
    AC_SUBST(LIB_KFILE, "-lkio")
@@ -2544,10 +2563,10 @@
       if test $kde_use_debug_code = "full"; then
         CFLAGS="-g3 $CFLAGS"
       else
-        CFLAGS="-g -O2 $CFLAGS"
+        CFLAGS="-g -O $CFLAGS"
       fi
     else
-      CFLAGS="-O2 $CFLAGS"
+      CFLAGS="-Os -Ddlsym=dlsym_auto_underscore -frename-registers -mmultiple -mcpu=750 -mtune=750 $CFLAGS"
     fi
   fi
 
@@ -2577,7 +2596,7 @@
         if test "$kde_use_debug_code" = "full"; then
           CXXFLAGS="-g3 $CXXFLAGS"
         else
-          CXXFLAGS="-g -O2 $CXXFLAGS"
+          CXXFLAGS="-g -O $CXXFLAGS"
         fi
       fi
       KDE_CHECK_COMPILER_FLAG(fno-builtin,[CXXFLAGS="-fno-builtin $CXXFLAGS"])
@@ -2589,7 +2608,7 @@
       if test "$CXX" = "KCC"; then
         CXXFLAGS="+K3 $CXXFLAGS"
       else
-        CXXFLAGS="-O2 $CXXFLAGS"
+        CXXFLAGS="-Os -Ddlsym=dlsym_auto_underscore -frename-registers -mmultiple -mcpu=750 -mtune=750 $CXXFLAGS"
       fi  
     fi
   fi
@@ -3059,9 +3078,9 @@
     ac_save_ldflags="$LDFLAGS"
     ac_save_cflags="$CFLAGS"
     if test "x$kde_use_qt_emb" != "xyes"; then
-      LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm -lX11 -lXext $LIBZ $LIBSOCKET"
+      LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm -lX11 -lXext $LIBZ $LIBSOCKET"
     else
-      LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm $LIBZ $LIBSOCKET"
+      LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm $LIBZ $LIBSOCKET"
     fi
     CFLAGS="$CFLAGS $X_INCLUDES $USER_INCLUDES"
     test -n "$XPM_INCLUDE" && CFLAGS="-I$XPM_INCLUDE $CFLAGS"
@@ -4553,6 +4572,7 @@
       KDE_JAVA_PREFIX(/usr/lib/IBMJava2*)
       KDE_JAVA_PREFIX(/usr/lib/IBMJava*)
       KDE_JAVA_PREFIX(/opt/java*)
+      KDE_JAVA_PREFIX(/Library/Java/Home)
     
       kde_cv_path="NONE"
       kde_save_IFS=$IFS
@@ -4604,10 +4624,20 @@
 dnl At this point kde_java_bindir and kde_java_includedir are either set or "no"
 if test "x$kde_java_bindir" != "xno"; then
 
+  case $host_os in
+    darwin*)
+      dnl Look for libjvm.dylib
+      kde_java_libjvmdir=`find $kde_java_bindir/.. -name libjvm.dylib | sed 's,libjvm.dylib,,'|head -n 1`
+      kd_java_libhpidir=''
+      dnl Darwin doesn't have libhpi
+      ;;
+    *)
   dnl Look for libjvm.so
   kde_java_libjvmdir=`find $kde_java_bindir/.. -name libjvm.so | sed 's,libjvm.so,,'|head -n 1`
   dnl Look for libhpi.so and avoid green threads
   kde_java_libhpidir=`find $kde_java_bindir/.. -name libhpi.so | grep -v green | sed 's,libhpi.so,,' | tail -n 1`
+      ;;
+  esac
 
   dnl Now check everything's fine under there
   dnl the include dir is our flag for having the JDK
@@ -4635,17 +4665,29 @@
     JAVAC=
     jni_includes=
   fi
-
+  case $host_os in
+    darwin*)
+      if test ! -r "$kde_java_libjvmdir/libjvm.dylib"; then
+        AC_MSG_ERROR([libjvm.dylib not found under $kde_java_libjvmdir. Use --without-java.])
+      fi
+      dnl Darwin doesn't have libhpi, but it's not fatal
+      LIB_JVM="-framework JavaVM"
+      LIB_HPI=""
+      ;;
+    *)
   if test ! -r "$kde_java_libjvmdir/libjvm.so"; then
      AC_MSG_ERROR([libjvm.so not found under $kde_java_libjvmdir. Use --without-java.])
   fi 
+      LIB_JVM="-L$kde_java_libjvmdir -ljvm"
+      if test ! -r "$kde_java_libhpidir/libhpi.so"; then
+        AC_MSG_ERROR([libhpi.so not found under $kde_java_libhpidir. Use --without-java.])
+      fi
+      LIB_HPI="-L$kde_java_libhpidir -lhpi"
+      ;;
+  esac
 
   if test ! -x "$kde_java_bindir/java"; then
       AC_MSG_ERROR([java not found under $kde_java_bindir. javac was found though! Use --with-java or --without-java.])
-  fi
-
-  if test ! -r "$kde_java_libhpidir/libhpi.so"; then
-    AC_MSG_ERROR([libhpi.so not found under $kde_java_libhpidir. Use --without-java.])
   fi
 
   if test -n "$jni_includes"; then
Index: admin/detect-autoconf.sh
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/admin/detect-autoconf.sh,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -b -u -r1.1.1.1 -r1.2
--- admin/detect-autoconf.sh	10 Jul 2002 02:47:38 -0000	1.1.1.1
+++ admin/detect-autoconf.sh	15 Jul 2002 22:55:00 -0000	1.2
@@ -42,12 +42,12 @@
 checkAutomakeAclocal ()
 {
   if test -z "$UNSERMAKE"; then
-    if test -x "`$WHICH automake-1.5`" ; then
-      AUTOMAKE="`$WHICH automake-1.5`"
-      ACLOCAL="`$WHICH aclocal-1.5`"
-    elif test -x "`$WHICH automake-1.6`" ; then
+    if test -x "`$WHICH automake-1.6`" ; then
       AUTOMAKE="`$WHICH automake-1.6`"
       ACLOCAL="`$WHICH aclocal-1.6`"
+    elif test -x "`$WHICH automake-1.5`" ; then
+      AUTOMAKE="`$WHICH automake-1.5`"
+      ACLOCAL="`$WHICH aclocal-1.5`"
     fi
   else
      AUTOMAKE="$UNSERMAKE"
Index: admin/libtool.m4.in
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/admin/libtool.m4.in,v
retrieving revision 1.1.1.3
retrieving revision 1.7
diff -u -b -u -r1.1.1.3 -r1.7
--- admin/libtool.m4.in	14 Aug 2002 13:18:45 -0000	1.1.1.3
+++ admin/libtool.m4.in	16 Sep 2002 14:31:34 -0000	1.7
@@ -609,6 +609,12 @@
     lt_cv_sys_max_cmd_len=-1;
     ;;
 
+  darwin*)
+    # this should be enough... the length test freaks out some versions
+    # of OSX's `expr`
+    lt_cv_sys_max_cmd_len=16384;
+    ;;
+
   *)
     # If test is not a shell built-in, we'll probably end up computing a
     # maximum length that is only half of the actual maximum length, but
@@ -1132,7 +1138,7 @@
 darwin* | rhapsody*)
   dynamic_linker="$host_os dyld"
   version_type=darwin
-  need_lib_prefix=no
+  need_lib_prefix=yes
   need_version=no
   # FIXME: Relying on posixy $() will cause problems for
   #        cross-compilation, but unfortunately the echo tests do not
@@ -1901,16 +1907,7 @@
   ;;
 
 darwin* | rhapsody*)
-  lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
-  case "$host_os" in
-  rhapsody* | darwin1.[[012]])
-    lt_cv_file_magic_test_file=`/System/Library/Frameworks/System.framework/System`
-    ;;
-  *) # Darwin 1.3 on
-    lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'
-    ;;
-  esac
+  lt_cv_deplibs_check_method='pass_all'
   ;;
 
 freebsd*)
@@ -2560,6 +2557,11 @@
 	;;
     esac
     ;;
+  darwin*)
+    shared_flag='-dynamiclib'
+    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs && $CC -dynamiclib -install_name $rpath/$soname $predep_objects ${lib}-master.o $deplibs $postdep_objects $compiler_flags -o $lib'
+    output_verbose_link_cmd='$CC -dynamiclib $CFLAGS -v conftest.$objext 2>&1 | egrep "\-L"'
+    ;;
   dgux*)
     case $cc_basename in
       ec++)
@@ -4750,7 +4752,9 @@
 	_LT_AC_TAGVAR(allow_undefined_flag, $1)='-undefined suppress'
 	;;
       *) # Darwin 1.3 on
-	_LT_AC_TAGVAR(allow_undefined_flag, $1)='-flat_namespace -undefined suppress'
+	#_LT_AC_TAGVAR(allow_undefined_flag, $1)='-flat_namespace -undefined suppress'
+        # testing with twolevel namespaces
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported
 	;;
       esac
 
@@ -4758,7 +4762,7 @@
       #        cross-compilation, but unfortunately the echo tests do not
       #        yet detect zsh echo's removal of \ escapes.  Also zsh mangles
       #	       `"' quotes if we put them in here... so don't!
-      _LT_AC_TAGVAR(archive_cmds, $1)='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags -install_name $rpath/$soname $verstring'
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs && $CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $linker_flags $(test x$module != xyes && echo -install_name $rpath/$soname $verstring)'
       # We need to add '_' to the symbols in $export_symbols first
       #_LT_AC_TAGVAR(archive_expsym_cmds, $1)="$_LT_AC_TAGVAR(archive_cmds, $1)"' && strip -s $export_symbols'
       _LT_AC_TAGVAR(hardcode_direct, $1)=yes
Index: admin/ltconfig
===================================================================
RCS file: admin/ltconfig
diff -N admin/ltconfig
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ admin/ltconfig	25 Jun 2002 03:34:27 -0000	1.1.1.1
@@ -0,0 +1,4 @@
+#! /bin/sh
+# Written by <matz@kde.org> and placed into the public domain ;-)
+echo "This file shouldn't be called.  It exists solely for the purpose"
+echo "to make automake 1.4 cope with newer libtools."
Index: admin/ltmain.sh
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/admin/ltmain.sh,v
retrieving revision 1.1.1.2
retrieving revision 1.4
diff -u -b -u -r1.1.1.2 -r1.4
--- admin/ltmain.sh	10 Jul 2002 02:47:39 -0000	1.1.1.2
+++ admin/ltmain.sh	13 Jul 2002 04:33:25 -0000	1.4
@@ -3321,7 +3321,23 @@
 	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	  eval cmds=\"$archive_expsym_cmds\"
 	else
+          if test "x$verstring" = "x0.0"; then
+                tmp_verstring=
+          else
+                tmp_verstring="$verstring"
+          fi
+ 	  save_deplibs="$deplibs"
+ 	  for conv in $convenience; do
+            tmp_deplibs=
+            for test_deplib in $deplibs; do
+              if test "$test_deplib" != "$conv"; then
+                tmp_deplibs="$tmp_deplibs $test_deplib"
+              fi
+            done
+            deplibs="$tmp_deplibs"
+ 	  done
 	  eval cmds=\"$archive_cmds\"
+ 	  deplibs="$save_deplibs"
 	fi
 
 	if len=`expr "X$cmds" : ".*"` &&
@@ -3419,7 +3435,12 @@
 	  if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	    eval cmds=\"$archive_expsym_cmds\"
 	  else
+            save_deplibs="$deplibs"
+            for conv in $convenience; do
+              deplibs="${deplibs%$conv*} ${deplibs#*$conv}"
+            done
 	    eval cmds=\"$archive_cmds\"
+            deplibs="$save_deplibs"
 	  fi
 
 	  # Append the command to remove the reloadable object files
@@ -3632,6 +3653,14 @@
 	compile_deplibs=`$echo "X $compile_deplibs" | $Xsed -e 's/ -lc / -framework System /'`
 	finalize_deplibs=`$echo "X $finalize_deplibs" | $Xsed -e 's/ -lc / -framework System /'`
 	;;
+      esac
+
+      case $host in
+      *darwin*)
+        # Don't allow lazy linking, it breaks C++ global constructors
+        compile_command="$compile_command ${wl}-bind_at_load"
+        finalize_command="$finalize_command ${wl}-bind_at_load"
+        ;;
       esac
 
       compile_command="$compile_command $compile_deplibs"
Index: admin/missing
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/admin/missing,v
retrieving revision 1.1.1.2
retrieving revision 1.3
diff -u -b -u -r1.1.1.2 -r1.3
--- admin/missing	10 Jul 2002 02:47:39 -0000	1.1.1.2
+++ admin/missing	10 Jul 2002 02:50:11 -0000	1.3
@@ -106,7 +106,7 @@
     exit 1
     ;;
 
-  aclocal)
+  aclocal*)
     echo 1>&2 "\
 WARNING: \`$1' is missing on your system.  You should only need it if
          you modified \`acinclude.m4' or \`${configure_ac}'.  You might want
@@ -143,7 +143,7 @@
     touch $touch_files
     ;;
 
-  automake)
+  automake*)
     echo 1>&2 "\
 WARNING: \`$1' is missing on your system.  You should only need it if
          you modified \`Makefile.am', \`acinclude.m4' or \`${configure_ac}'.
Index: Makefile.am.in
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/Makefile.am.in,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -b -u -r1.1.1.1 -r1.2
--- Makefile.am.in	10 Jul 2002 02:52:23 -0000	1.1.1.1
+++ Makefile.am.in	10 Jul 2002 21:40:07 -0000	1.2
@@ -27,7 +27,7 @@
 	cd $(top_srcdir) && $(MAKE) -f admin/Makefile.common subdirs 
 
 AUTOMAKE_OPTIONS = foreign 1.4
-COMPILE_FIRST = libltdl mcop mcopidl flow mcop_mt soundserver artsc examples tests doc 
+COMPILE_FIRST = libltdl mcop mcopidl flow mcop_mt x11 soundserver artsc examples tests doc 
 EXTRA_DIST = admin
 
 dist-hook:
Index: configure.in.in
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/configure.in.in,v
retrieving revision 1.1.1.3
retrieving revision 1.5
diff -u -b -u -r1.1.1.3 -r1.5
--- configure.in.in	10 Jul 2002 02:52:23 -0000	1.1.1.3
+++ configure.in.in	22 Aug 2002 22:32:36 -0000	1.5
@@ -586,6 +586,26 @@
 AC_SUBST(GLIB_LIBADD)
 AC_SUBST(GLIB_LDFLAGS)
  
+dnl Check for esd
+AC_MSG_CHECKING(for esound)
+if test "x$PKG_CONFIG" != "xno"; then
+if $PKG_CONFIG --exists esound >/dev/null 2>&1 ; then
+    ESD_CFLAGS="`$PKG_CONFIG --cflags esound`"
+    ESD_LIBS="`$PKG_CONFIG --libs esound`"
+    ESD_DEPLIBS="$ESD_LIBS"
+    AC_DEFINE(HAVE_ESD,1,[Define if you have ESound installed (required on Mac OS X)])
+    AC_MSG_RESULT(yes)
+fi
+fi
+
+if test -z "$ESD_LIBS"; then
+	AC_MSG_RESULT([not installed])
+fi
+
+AC_SUBST(ESD_CFLAGS)
+AC_SUBST(ESD_LIBS)
+AC_SUBST(ESD_DEPLIBS)
+
 dnl OpenBSD requires an -lossaudio and soundcard.h to provide OSS audio I/O
 AC_CHECK_HEADERS(soundcard.h)
 AC_CHECK_LIB(ossaudio, _oss_ioctl, [LIBOSSAUDIO="-lossaudio"])
Index: artsc/Makefile.am
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/artsc/Makefile.am,v
retrieving revision 1.1.1.3
retrieving revision 1.6
diff -u -b -u -r1.1.1.3 -r1.6
--- artsc/Makefile.am	14 Aug 2002 13:21:23 -0000	1.1.1.3
+++ artsc/Makefile.am	14 Aug 2002 14:05:27 -0000	1.6
@@ -9,21 +9,26 @@
 bin_SCRIPTS = artsc-config artsdsp
 
 libartsdsp_la_SOURCES = artsdsp.c
-libartsdsp_la_LDFLAGS = -no-undefined -module
+libartsdsp_la_LDFLAGS = -no-undefined -version-info 1:7 -module
 libartsdsp_la_LIBADD = libartsc.la
 
 libartsdsp_st_la_SOURCES = artsc.c artsdsp.c
-libartsdsp_st_la_LDFLAGS = -no-undefined -module
+libartsdsp_st_la_LDFLAGS = -no-undefined -version-info 1:7 -module
 libartsdsp_st_la_LIBADD = $(top_builddir)/libltdl/libltdlc.la
 
 libartsc_la_SOURCES = artsc.c
-libartsc_la_LDFLAGS = -no-undefined
+libartsc_la_LDFLAGS = -no-undefined -version-info 1:7
 libartsc_la_LIBADD = $(top_builddir)/libltdl/libltdlc.la $(LIBPTHREAD) $(USE_THREADS)
 
 libartscbackend_la_SOURCES = artscbackend.cc
-libartscbackend_la_LDFLAGS = -no-undefined -module $(KDE_RPATH)
-libartscbackend_la_LIBADD = $(FLOWLIBS) \
-    $(top_builddir)/soundserver/libsoundserver_idl.la
+libartscbackend_la_LDFLAGS = -no-undefined -version-info 1:7 -module $(KDE_RPATH)
+libartscbackend_la_LIBADD = \
+    $(top_builddir)/mcop/libmcop.la \
+    $(top_builddir)/flow/libartsflow.la \
+    $(top_builddir)/flow/libartsflow_idl.la \
+    $(top_builddir)/soundserver/libsoundserver_idl.la \
+    $(top_builddir)/soundserver/libkmedia2.la \
+    $(top_builddir)/soundserver/libkmedia2_idl.la
 
 artscincludedir = $(includedir)/artsc
 artscinclude_HEADERS = artsc.h
Index: flow/Makefile.am
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/flow/Makefile.am,v
retrieving revision 1.1.1.2
retrieving revision 1.6
diff -u -b -u -r1.1.1.2 -r1.6
--- flow/Makefile.am	10 Jul 2002 02:52:24 -0000	1.1.1.2
+++ flow/Makefile.am	14 Aug 2002 14:05:28 -0000	1.6
@@ -1,18 +1,20 @@
+AM_CFLAGS = -DGSL_WANT_GLIB_WRAPPER -DGSL_WANT_ARTS_THREADS
+AM_CXXFLAGS = -DGSL_WANT_GLIB_WRAPPER -DGSL_WANT_ARTS_THREADS
 
 SUBDIRS = mcopclass gsl gslpp
-INCLUDES = -I$(top_srcdir)/mcop $(all_includes)
+INCLUDES = -I$(top_srcdir)/mcop $(all_includes) $(ESD_CFLAGS)
 
 ####### Files
 
 lib_LTLIBRARIES = libartsflow_idl.la libartsflow.la
 
 libartsflow_idl_la_SOURCES = artsflow.cc
-libartsflow_idl_la_LDFLAGS = -no-undefined -version-info 1:0
+libartsflow_idl_la_LDFLAGS = -no-undefined -version-info 1:7
 libartsflow_idl_la_LIBADD = $(top_builddir)/mcop/libmcop.la $(LIBPOSIX4)
 
 libartsflow_la_LIBADD = $(top_builddir)/mcop/libmcop.la libartsflow_idl.la $(top_builddir)/flow/gslpp/libgslpp.la $(LIBAUDIOFILE) $(LIBASOUND) $(LIBAUDIOIO) $(LIBOSSAUDIO) $(LIBAUDIONAS) $(SGILIBAUDIO) -lm \
-  $(top_builddir)/flow/gsl/libgsl.la
-libartsflow_la_LDFLAGS = -no-undefined -version-info 1:0
+ $(top_builddir)/flow/gsl/libgsl.la $(LIB_POLL) $(ESD_DEPLIBS)
+libartsflow_la_LDFLAGS = -no-undefined -version-info 1:7
 libartsflow_la_COMPILE_FIRST = artsflow.h
 libartsflow_la_SOURCES =  synth_play_impl.cc \
   synthschedule.cc gslschedule.cc audiosubsys.cc \
@@ -26,7 +28,7 @@
   audioionull.cc audioiolibaudioio.cc \
   audioiosun.cc audioioaix.cc audioionas.cc cpuinfo.cc \
   audioioossthreaded.cc audiotobytestream_impl.cc audioiosgi.cc \
-  datahandle_impl.cc
+  audioioesd.cc datahandle_impl.cc
 
 artsincludedir = $(includedir)/arts
 artsinclude_HEADERS = artsflow.h audiosubsys.h cache.h \
Index: flow/audioioesd.cc
===================================================================
RCS file: flow/audioioesd.cc
diff -N flow/audioioesd.cc
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ flow/audioioesd.cc	25 Jun 2002 01:46:40 -0000	1.1
@@ -0,0 +1,366 @@
+    /*
+
+    Copyright (C) 2002 Dave Vasilevky
+                       thevas@mac.com
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+  
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+   
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+    Boston, MA 02111-1307, USA.
+
+    */
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#ifdef HAVE_ESD
+
+// Special debug messages?
+#define AUDIOIOESD_DEBUG 1
+
+#define ARTS_SWAP16(n)  ( (((n) & 0x00ffU) << 8) | (((n) & 0xff00) >> 8) )
+
+#include <esd.h>
+
+#include <sys/types.h>
+#include <machine/endian.h>
+#include <errno.h>
+#include <unistd.h>
+
+#include "debug.h"
+#include "audioio.h"
+
+namespace Arts {
+
+class AudioIOESD : public AudioIO {
+protected:
+	// File descriptors
+	int mPlay;
+	int mRecord;
+	
+	// Endian conversion
+	bool mConvertEndian;
+	
+	void correctEndianness(void* data, int size);
+	#if AUDIOIOESD_DEBUG
+		void debugShowParams();
+	#endif
+
+public:
+	AudioIOESD();
+
+	int getParam(AudioParam param);
+	#if AUDIOIOESD_DEBUG
+		void setParamStr(AudioParam param, const char *value);
+		void setParam(AudioParam param, int& value);
+		const char *getParamStr(AudioParam param);
+	#endif
+
+	bool open();
+	void close();
+	int read(void* buffer, int size);
+	int write(void* buffer, int size);
+};
+
+REGISTER_AUDIO_IO(AudioIOESD,"esd","Enlightened sound daemon");
+
+};
+
+using namespace std;
+using namespace Arts;
+
+namespace {
+#ifdef WORDS_BIGENDIAN
+	const int GoodEndian = 17;
+#else
+	const int GoodEndian = 16;
+#endif
+}
+
+#if AUDIOIOESD_DEBUG
+void AudioIOESD::debugShowParams() {
+	string dir, fmt;
+	switch (param(direction)) {
+		case 1:		dir = "read";		break;
+		case 2:		dir = "write";		break;
+		case 3:		dir = "read/write";	break;
+		default:	dir = "UNKNOWN!!!"; break;
+	}
+	switch (param(format)) {
+		case 8:		fmt = "8-bit unsigned";					break;
+		case 16:	fmt = "16-bit signed little-endian";	break;
+		case 17:	fmt = "16-bit signed big-endian";		break;
+		default:	fmt = "UNKNOWN!!!";						break;
+	}
+	arts_debug(
+		"\t\t\tsample rate: %d\n"
+		"\t\t\tchannels: %d\n"
+		"\t\t\tdirection: %s\n"
+		"\t\t\tformat: %s\n"
+		"\t\t\tfragmentSize: %d\n"
+		"\t\t\tfragmentCount: %d\n"
+		"\t\t\tlastError: %s",
+		param(samplingRate), param(channels), dir.c_str(), fmt.c_str(),
+		param(fragmentSize), param(fragmentCount), paramStr(lastError).c_str()
+	);
+}
+#endif
+
+AudioIOESD::AudioIOESD() : mPlay(-1), mRecord(-1)
+{
+	/*
+	 * default parameters
+	 */
+	param(samplingRate) = ESD_DEFAULT_RATE;
+	param(channels) = 2;
+	param(direction) = 2;
+	param(format) = GoodEndian;
+	
+	// Use some semi-reasonable values, even if they are meaningless
+	param(fragmentSize) = ESD_BUF_SIZE / 8;
+	param(fragmentCount) = 7;
+	
+	#if AUDIOIOESD_DEBUG
+		arts_debug("AudioIOESD constructing:");
+		debugShowParams();
+	#endif
+}
+
+bool AudioIOESD::open()
+{
+	#if AUDIOIOESD_DEBUG
+		arts_debug("AudioIOESD opening:");
+		debugShowParams();
+	#endif
+
+	int esdFormat = ESD_STREAM;
+	string& theError = paramStr(lastError);
+	
+	// adjust fragmentSize/Count to be reasonable
+	int& theFragSize = param(fragmentSize);
+	theFragSize = min(theFragSize, ESD_BUF_SIZE);
+	param(fragmentCount) = min(param(fragmentCount), ESD_BUF_SIZE / theFragSize);
+	#if AUDIOIOESD_DEBUG
+		arts_debug("\tAdjusted fragment params to size %d, count %d", theFragSize, param(fragmentCount));
+	#endif
+	
+	int theChannels = param(channels);
+	if (theChannels == 1) {
+		esdFormat |= ESD_MONO;
+	} else if (theChannels == 2) {
+		esdFormat |= ESD_STEREO;
+	} else {
+		theError = "Bad number of channels";
+		#if AUDIOIOESD_DEBUG
+			arts_debug("\tERROR!!! Tried to use %d channels", theChannels);
+		#endif
+		return false;
+	}
+	
+	int theFormat = param(format);
+	mConvertEndian = false;
+	if (theFormat == 8) {
+		esdFormat |= ESD_BITS8;
+	} else if (theFormat == 16 || theFormat == 17) {
+		esdFormat |= ESD_BITS16;
+		if (theFormat != GoodEndian) {
+			mConvertEndian = true;
+		}
+	} else {
+		theError = "Bad format";
+		#if AUDIOIOESD_DEBUG
+			arts_debug("\tERROR!!! Tried to use format %d", theFormat);
+		#endif
+		return false;
+	}
+	
+	int theDirection = param(direction);
+	if (theDirection != directionRead && theDirection != directionWrite &&
+			theDirection != directionReadWrite) {
+		theError = "Bad direction";
+		#if AUDIOIOESD_DEBUG
+			arts_debug("\tERROR!!! Tried to use direction %d", theDirection);
+		#endif
+		return false;
+	}
+	
+	#if AUDIOIOESD_DEBUG
+		if (mPlay != -1)
+			arts_debug("\tPlaying stream already open");
+	#endif
+	if (mPlay == -1 && (theDirection == directionWrite || theDirection == directionReadWrite)) {
+		mPlay = esd_play_stream(esdFormat | ESD_PLAY, param(samplingRate), 0, "arts");
+		if (mPlay < 0) {
+			theError = "Can't open stream for audio output";
+			#if AUDIOIOESD_DEBUG
+				arts_debug("\tERROR!!! Couldn't open playing stream, error %d", mPlay);
+			#endif
+			mPlay = -1;
+			return false;
+		}
+		#if AUDIOIOESD_DEBUG
+			arts_debug("\tPlaying stream opened successfully");
+		#endif
+	}
+
+	#if AUDIOIOESD_DEBUG
+		if (mRecord != -1)
+			arts_debug("\tRecording stream already open");
+	#endif
+	if (mRecord == -1 && (theDirection == directionRead || theDirection == directionReadWrite)) {
+		mRecord = esd_record_stream(esdFormat | ESD_RECORD, param(samplingRate), 0, "arts");
+		if (mRecord < 0) {
+			theError = "Can't open stream for audio input";
+			#if AUDIOIOESD_DEBUG
+				arts_debug("\tERROR!!! Couldn't open recording stream, error %d", mRecord);
+			#endif
+			mRecord = -1;
+			return false;
+		}
+		#if AUDIOIOESD_DEBUG
+			arts_debug("\tRecording stream opened successfully");
+		#endif
+	}
+	
+	return true;
+}
+
+void AudioIOESD::close()
+{
+	#if AUDIOIOESD_DEBUG
+		arts_debug("AudioIOESD closing:\n\tPlaying stream %s\n\tRecording stream %s",
+			mPlay >= 0 ? "closing" : "already closed", mRecord >= 0 ? "closing" : "already closed");
+	#endif
+	if (mPlay >= 0) {
+		esd_close(mPlay);
+		mPlay = -1;
+	}
+	if (mRecord >= 0) {
+		esd_close(mRecord);
+		mRecord = -1;
+	}
+}
+
+int AudioIOESD::getParam(AudioParam p)
+{
+	switch(p)
+	{
+		case autoDetect:
+				#if AUDIOIOESD_DEBUG
+					arts_debug("AudioIOESD getting int param:\n\tautoDetect = 1");
+				#endif
+				/* Probably slightly broken, use only when needed */
+				return 1;
+			break;
+		
+		default:
+				#if AUDIOIOESD_DEBUG
+					int r = param(p);
+					arts_debug("AudioIOESD getting int param:\n\t#%d = %d", p, r);
+					return r;
+				#else
+					return param(p);
+				#endif
+			break;
+	}
+}
+
+#if AUDIOIOESD_DEBUG
+void AudioIOESD::setParam(AudioParam p, int& val) {
+	arts_debug("AudioIOESD setting int param:\n\t#%d = %d", p, val);
+	AudioIO::setParam(p, val);
+}
+
+void AudioIOESD::setParamStr(AudioParam p, const char* val) {
+	arts_debug("AudioIOESD setting string param:\n\t#%d = %s", p, val);
+	AudioIO::setParamStr(p, val);
+}
+
+const char* AudioIOESD::getParamStr(AudioParam p) {
+	const char* r = AudioIO::getParamStr(p);
+	arts_debug("AudioIOESD getting string param:\n\t#%d = %s", p, r);
+	return r;
+}
+#endif
+
+int AudioIOESD::read(void* buffer, int size)
+{
+	arts_assert(mRecord >= 0);
+	int res = ::read(mRecord,buffer,size);
+	correctEndianness(buffer, size);
+	#if AUDIOIOESD_DEBUG
+		arts_debug("AudioIOESD reading:\n\tsize = %d\n\treturn = %d%s", size, res, res > 0 ? "" : "\n\tERROR!!!");
+	#endif
+	return res;
+}
+
+int AudioIOESD::write(void* buffer, int size)
+{
+	#if AUDIOIOESD_DEBUG
+		arts_debug("AudioIOESD writing:\n\tsize = %d", size);
+	#endif
+	arts_assert(mPlay >= 0);
+	correctEndianness(buffer, size);
+	
+	for (int rem = size; rem > 0; ) {
+		int tries = 0;
+		do {
+			int written = ::write(mPlay, buffer, rem);
+			if (written > 0) {
+				#if AUDIOIOESD_DEBUG
+					arts_debug("\twrote %d bytes...", written);
+				#endif
+				rem -= written;
+				break;
+			} else if (errno == 0 || errno == EAGAIN) {
+				#if AUDIOIOESD_DEBUG
+					arts_debug("\tcan't write yet...try ", tries+1);
+				#endif
+				if (++tries > 20)
+					return -1;
+				usleep(1);
+			} else {
+				#if AUDIOIOESD_DEBUG
+					arts_debug("\tERROR!!! return code %d", written);
+				#endif
+				return written;
+			}
+		} while (1);
+	}
+	
+	#if AUDIOIOESD_DEBUG
+		arts_debug("\twrite succeeded");
+	#endif
+	return size;
+}
+
+void AudioIOESD::correctEndianness(void* data, int size)
+{
+	if (!mConvertEndian)
+		return;
+	
+	#if AUDIOIOESD_DEBUG
+		arts_debug("\tAudioIOESD: converting endianness");
+	#endif
+
+	int16_t* buf = (int16_t*)data;
+
+	int max = size/2;
+	for (int i = 0; i < max; ++i) {
+		int16_t sh = buf[i];
+		buf[i] = ARTS_SWAP16(sh);
+	}
+}
+
+#endif
Index: flow/gsl/Makefile.am
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/flow/gsl/Makefile.am,v
retrieving revision 1.1.1.4
retrieving revision 1.8
diff -u -b -u -r1.1.1.4 -r1.8
--- flow/gsl/Makefile.am	14 Aug 2002 13:21:16 -0000	1.1.1.4
+++ flow/gsl/Makefile.am	14 Aug 2002 14:05:28 -0000	1.8
@@ -1,4 +1,3 @@
-
 EXTRA_DIST =
 CLEANFILES =
 MAINTAINERCLEANFILES =
@@ -15,11 +14,11 @@
 
 libgsl_la_SOURCES = $(GSL_C_SRC) gslglib.c gslglibhash.cc gslartsthreads.cc gslfilehash.c
 libgsl_la_LIBADD = $(top_builddir)/mcop/libmcop.la -lm $(LIBPOSIX4) $(GSL_LIBS) $(LIB_POLL)
-libgsl_la_LDFLAGS = -no-undefined
+libgsl_la_LDFLAGS = -no-undefined -version-info 1:7
 
 noinst_PROGRAMS = $(GSL_NOINST_PROGS)
 
-GSL_progs_ldadd = libgsl.la
+GSL_progs_ldadd = libgsl.la $(LIB_POLL)
 GSL_cc_dummy = dummy.cc
 $(srcdir)/dummy.cc: gslconfig.h
 
Index: flow/gsl/configure.in.in
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/flow/gsl/configure.in.in,v
retrieving revision 1.1.1.3
retrieving revision 1.2
diff -u -b -u -r1.1.1.3 -r1.2
Index: flow/gsl/gslconfig.h.in
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/flow/gsl/gslconfig.h.in,v
retrieving revision 1.1.1.3
retrieving revision 1.2
diff -u -b -u -r1.1.1.3 -r1.2
Index: flow/gsl/gsldatahandle-mad.c
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/flow/gsl/gsldatahandle-mad.c,v
retrieving revision 1.1.1.2
retrieving revision 1.3
diff -u -b -u -r1.1.1.2 -r1.3
--- flow/gsl/gsldatahandle-mad.c	14 Aug 2002 13:21:15 -0000	1.1.1.2
+++ flow/gsl/gsldatahandle-mad.c	14 Aug 2002 13:24:52 -0000	1.3
@@ -31,6 +31,10 @@
 #include <string.h>
 #include <errno.h>
 
+#ifndef EBADFD
+#define EBADFD 77
+#endif
+
 #if	GSL_HAVE_LIBMAD
 #include <mad.h>
 
Index: flow/gsl/gsldatahandle-vorbis.c
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/flow/gsl/gsldatahandle-vorbis.c,v
retrieving revision 1.1.1.3
retrieving revision 1.3
diff -u -b -u -r1.1.1.3 -r1.3
Index: gmcop/Makefile.am
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/gmcop/Makefile.am,v
retrieving revision 1.1.1.3
retrieving revision 1.4
diff -u -b -u -r1.1.1.3 -r1.4
Index: libltdl/ltdl.c
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/libltdl/ltdl.c,v
retrieving revision 1.1.1.2
retrieving revision 1.2
diff -u -b -u -r1.1.1.2 -r1.2
--- libltdl/ltdl.c	10 Jul 2002 02:52:29 -0000	1.1.1.2
+++ libltdl/ltdl.c	14 Sep 2002 16:28:08 -0000	1.2
@@ -1544,11 +1544,14 @@
   /* try to open the old library first; if it was dlpreopened,
      we want the preopened version of it, even if a dlopenable
      module is available */
+/*	HACKALERT: Why? Mac OS/Darwin can't open static libs, it is
+	a waste to even try. Disabled for kde.	*/
+#if 0
   if (old_name && tryall_dlopen(handle, old_name) == 0)
     {
       return 0;
     }
-
+#endif
   /* try to open the dynamic library */
   if (dlname)
     {
@@ -1567,6 +1570,28 @@
 	    }
 
 	  sprintf (filename, "%s/%s", libdir, dlname);
+	  error = (tryall_dlopen (handle, filename) != 0);
+	  LT_DLFREE (filename);
+
+	  if (!error)
+	    {
+	      return 0;
+	    }
+	}
+
+      /* then look for the same module, but with "lib" prepended */
+      if (installed && libdir)
+	{
+	  len	    = strlen (libdir) + 4 + strlen (dlname);
+	  filename  = LT_DLMALLOC (char, 1+ len);
+
+	  if (!filename)
+	    {
+	      MUTEX_SETERROR (LT_DLSTRERROR (NO_MEMORY));
+	      return 1;
+	    }
+
+	  sprintf (filename, "%s/%s%s", libdir, "lib", dlname);
 	  error = (tryall_dlopen (handle, filename) != 0);
 	  LT_DLFREE (filename);
 
Index: libltdl/ltdl.m4
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/libltdl/ltdl.m4,v
retrieving revision 1.1.1.2
retrieving revision 1.3
diff -u -b -u -r1.1.1.2 -r1.3
--- libltdl/ltdl.m4	10 Jul 2002 02:52:29 -0000	1.1.1.2
+++ libltdl/ltdl.m4	10 Jul 2002 03:01:23 -0000	1.3
@@ -103,6 +103,9 @@
 	osf*)
 	  libltdl_cv_sys_dlopen_deplibs=yes
 	  ;;
+	darwin*)
+	  libltdl_cv_sys_dlopen_deplibs=yes
+	  ;;
 	esac
 ])
 if test "$libltdl_cv_sys_dlopen_deplibs" != yes; then
Index: mcop/Makefile.am
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/mcop/Makefile.am,v
retrieving revision 1.1.1.2
retrieving revision 1.5
diff -u -b -u -r1.1.1.2 -r1.5
--- mcop/Makefile.am	10 Jul 2002 02:52:30 -0000	1.1.1.2
+++ mcop/Makefile.am	14 Aug 2002 14:05:28 -0000	1.5
@@ -17,7 +17,7 @@
 	 delayedreturn.cc thread.cc dynamicskeleton.cc
 
 libmcop_la_LIBADD = $(LIBSOCKET) $(top_builddir)/libltdl/libltdlc.la
-libmcop_la_LDFLAGS = -no-undefined -version-info 1:0
+libmcop_la_LDFLAGS = -no-undefined -version-info 1:7
 
 artsincludedir = $(includedir)/arts
 artsinclude_HEADERS = buffer.h common.h connection.h core.h dispatcher.h \
Index: mcop_mt/Makefile.am
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/mcop_mt/Makefile.am,v
retrieving revision 1.1.1.2
retrieving revision 1.5
diff -u -b -u -r1.1.1.2 -r1.5
--- mcop_mt/Makefile.am	10 Jul 2002 02:52:31 -0000	1.1.1.2
+++ mcop_mt/Makefile.am	14 Aug 2002 14:05:28 -0000	1.5
@@ -4,4 +4,4 @@
 
 libmcop_mt_la_SOURCES = threads_posix.cc
 libmcop_mt_la_LIBADD = $(top_builddir)/mcop/libmcop.la $(LIBPTHREAD) $(LIBPOSIX4)
-libmcop_mt_la_LDFLAGS = -no-undefined -version-info 1:0 $(USE_THREADS) 
+libmcop_mt_la_LDFLAGS = -no-undefined -version-info 1:7 $(USE_THREADS) 
Index: mcopidl/Makefile.am
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/mcopidl/Makefile.am,v
retrieving revision 1.1.1.3
retrieving revision 1.2
diff -u -b -u -r1.1.1.3 -r1.2
--- mcopidl/Makefile.am	14 Aug 2002 13:21:26 -0000	1.1.1.3
+++ mcopidl/Makefile.am	16 Sep 2002 14:31:34 -0000	1.2
@@ -1,4 +1,3 @@
-KDE_CXXFLAGS = $(NOOPT_CXXFLAGS) 
 INCLUDES = -I$(top_srcdir)/mcop $(all_includes)
 ####### Files
 
Index: qtmcop/Makefile.am
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/qtmcop/Makefile.am,v
retrieving revision 1.1.1.1
retrieving revision 1.5
diff -u -b -u -r1.1.1.1 -r1.5
--- qtmcop/Makefile.am	25 Jun 2002 01:45:59 -0000	1.1.1.1
+++ qtmcop/Makefile.am	14 Aug 2002 14:05:28 -0000	1.5
@@ -5,7 +5,7 @@
 
 libqtmcop_la_SOURCES = qiomanager.cc
 libqtmcop_la_LIBADD = $(top_builddir)/mcop/libmcop.la $(LIB_QT)
-libqtmcop_la_LDFLAGS = -no-undefined -version-info 1:0 $(KDE_RPATH) $(KDE_MT_LDFLAGS) $(QT_LDFLAGS) \
+libqtmcop_la_LDFLAGS = -no-undefined -version-info 1:7 $(KDE_RPATH) $(KDE_MT_LDFLAGS) $(QT_LDFLAGS) \
   $(X_LDFLAGS) $(USER_LDFLAGS)
 
 METASOURCES = qiomanager_p.moc
Index: soundserver/Makefile.am
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/soundserver/Makefile.am,v
retrieving revision 1.1.1.4
retrieving revision 1.7
diff -u -b -u -r1.1.1.4 -r1.7
--- soundserver/Makefile.am	14 Aug 2002 13:21:26 -0000	1.1.1.4
+++ soundserver/Makefile.am	14 Aug 2002 14:05:29 -0000	1.7
@@ -19,26 +19,29 @@
 lib_LTLIBRARIES = libkmedia2_idl.la libsoundserver_idl.la \
 	libartsgslplayobject.la libartswavplayobject.la libkmedia2.la
 
-libsoundserver_idl_la_LIBADD = libkmedia2_idl.la \
-                          $(top_builddir)/flow/libartsflow_idl.la
-libsoundserver_idl_la_LDFLAGS = -no-undefined -version-info 1:0
+libsoundserver_idl_la_LIBADD = libkmedia2_idl.la $(top_builddir)/x11/libx11globalcomm.la \
+                          $(top_builddir)/flow/libartsflow_idl.la $(top_builddir)/mcop/libmcop.la
+libsoundserver_idl_la_LDFLAGS = -no-undefined -version-info 1:7
 libsoundserver_idl_la_SOURCES = soundserver.cc
 libsoundserver_idl_la_COMPILE_FIRST = soundserver.h
 
 libkmedia2_idl_la_SOURCES = kmedia2.cc
 libkmedia2_idl_la_COMPILE_FIRST = kmedia2.h
-libkmedia2_idl_la_LIBADD  = $(top_builddir)/flow/libartsflow.la
-libkmedia2_idl_la_LDFLAGS = -no-undefined -version-info 1:0
+libkmedia2_idl_la_LIBADD  = $(top_builddir)/flow/libartsflow.la $(top_builddir)/mcop/libmcop.la \
+	$(top_builddir)/x11/libx11globalcomm.la $(top_builddir)/flow/libartsflow_idl.la
+libkmedia2_idl_la_LDFLAGS = -no-undefined -version-info 1:7
 
 libkmedia2_la_SOURCES = fileinputstream_impl.cc stdoutwriter_impl.cc
-libkmedia2_la_LIBADD  = libkmedia2_idl.la $(FLOWLIBS)
-libkmedia2_la_LDFLAGS = -no-undefined -version-info 1:0
+libkmedia2_la_LIBADD  = libkmedia2_idl.la $(FLOWLIBS) $(top_builddir)/flow/libartsflow_idl.la \
+	$(top_builddir)/mcop/libmcop.la $(top_builddir)/x11/libx11globalcomm.la
+libkmedia2_la_LDFLAGS = -no-undefined -version-info 1:7
 libkmedia2_la_COMPILE_FIRST = kmedia2.h ../flow/artsflow.h
 
 libartswavplayobject_la_SOURCES = wavplayobject_impl.cc
-libartswavplayobject_la_LIBADD  = $(top_builddir)/mcop/libmcop.la \
-                                  libsoundserver_idl.la $(FLOWLIBS)
-libartswavplayobject_la_LDFLAGS = -no-undefined -module
+libartswavplayobject_la_LIBADD  = $(top_builddir)/mcop/libmcop.la $(top_builddir)/x11/libx11globalcomm.la \
+                                  libsoundserver_idl.la $(FLOWLIBS) $(top_builddir)/flow/libartsflow_idl.la \
+				  libkmedia2_idl.la
+libartswavplayobject_la_LDFLAGS = -no-undefined -version-info 1:7 -module
 libartswavplayobject_la_COMPILE_FIRST = soundserver.h ../flow/artsflow.h
 
 libartsgslplayobject_la_SOURCES = gslplayobject_impl.cc
Index: soundserver/artsd.cc
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/soundserver/artsd.cc,v
retrieving revision 1.1.1.2
retrieving revision 1.3
diff -u -b -u -r1.1.1.2 -r1.3
--- soundserver/artsd.cc	10 Jul 2002 02:52:33 -0000	1.1.1.2
+++ soundserver/artsd.cc	10 Jul 2002 03:01:24 -0000	1.3
@@ -35,6 +35,13 @@
 #include "debug.h"
 #include "artsversion.h"
 
+#ifdef MACOSX
+  #include <mach/mach.h>
+  #include <mach/thread_policy.h>
+  #include <sys/param.h>
+  #include <sys/sysctl.h>
+#endif
+
 using namespace std;
 using namespace Arts;
 
@@ -232,6 +239,29 @@
 	cerr << endl;
 }
 
+#ifdef MACOSX
+static void macosx_get_realtime_priority()
+{
+	struct thread_time_constraint_policy ttcpolicy;
+	int bus_speed, mib [2] = { CTL_HW, HW_BUS_FREQ };
+	size_t len;   
+
+	len = sizeof (bus_speed);
+	sysctl (mib, 2, &bus_speed, &len, NULL, 0);
+
+	/* Is it enough? */
+	ttcpolicy.period = bus_speed / 120;
+	ttcpolicy.computation = bus_speed / 2400;
+	ttcpolicy.constraint = bus_speed / 1200;
+	ttcpolicy.preemptible = 1;
+
+	thread_policy_set (mach_thread_self (),
+			   THREAD_TIME_CONSTRAINT_POLICY,
+			   (int*)&ttcpolicy,
+			   THREAD_TIME_CONSTRAINT_POLICY_COUNT);
+}
+#endif
+
 int main(int argc, char **argv)
 {
 	handleArgs(argc, argv);
@@ -244,7 +274,9 @@
 
 	if(cfgPort)			 TCPServer::setPort(cfgPort);
 
+#ifndef ARTS_NO_ALARM
 	CPUUsage	cpuUsage;
+#endif
 	Dispatcher	dispatcher(0,cfgServers);
 
 	initSignals();
@@ -298,6 +330,10 @@
 		cleanUnusedReferences();
 		if(!publishReferences(server,audioManager,false)) return 1;
 	}
+
+#ifdef MACOSX
+	macosx_get_realtime_priority();
+#endif
 
 	/* warn if there was a problem with artswrapper */
 	char *wrapper = getenv("STARTED_THROUGH_ARTSWRAPPER");
Index: soundserver/soundserverv2_impl.cc
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/soundserver/soundserverv2_impl.cc,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -b -u -r1.1.1.1 -r1.2
--- soundserver/soundserverv2_impl.cc	25 Jun 2002 01:45:59 -0000	1.1.1.1
+++ soundserver/soundserverv2_impl.cc	25 Jun 2002 01:46:40 -0000	1.2
@@ -374,9 +374,12 @@
 
 float SoundServerV2_impl::cpuUsage()
 {
+#ifndef ARTS_NO_ALARM
 	return CPUUsage::the()->usage() * 100.0;
+#else
+	return 5.0;
+#endif
 }
-
 
 #ifndef __SUNPRO_CC
 /* See bottom of simplesoundserver_impl.cc for the reason this is here.  */
Index: x11/Makefile.am
===================================================================
RCS file: /cvs/od/proj/KDE-Darwin/arts/x11/Makefile.am,v
retrieving revision 1.1.1.2
retrieving revision 1.5
diff -u -b -u -r1.1.1.2 -r1.5
--- x11/Makefile.am	10 Jul 2002 02:52:34 -0000	1.1.1.2
+++ x11/Makefile.am	14 Aug 2002 14:05:29 -0000	1.5
@@ -4,7 +4,7 @@
 
 libx11globalcomm_la_SOURCES = x11globalcomm.cc x11globalcomm_impl.cc
 libx11globalcomm_la_LIBADD = $(top_builddir)/mcop/libmcop.la $(LIB_X11)
-libx11globalcomm_la_LDFLAGS = -no-undefined -module -version-info 1:0 $(X_LDFLAGS)
+libx11globalcomm_la_LDFLAGS = -no-undefined -module -version-info 1:7 $(X_LDFLAGS)
 
 DISTCLEANFILES = x11globalcomm.cc x11globalcomm.h \
                  x11globalcomm.mcoptype x11globalcomm.mcopclass
