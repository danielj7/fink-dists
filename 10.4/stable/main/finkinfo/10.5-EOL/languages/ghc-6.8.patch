configure: Replace hardcoded /sw with @FINKPREFIX@
libraries/base/base.cabal, libraries/hpc/hpc.cabal:
  Add @FINKPREFIX@/include to include-dirs
compiler/nativeGen/PprMach.hs: work around leopard linker bug in PPC
ghc.1, hp2ps.1: man pages borrowed from the Debian package

diff --git a/compiler/nativeGen/PprMach.hs b/compiler/nativeGen/PprMach.hs
--- a/compiler/nativeGen/PprMach.hs
+++ b/compiler/nativeGen/PprMach.hs
@@ -657,7 +657,7 @@ pprSectionHeader RelocatableReadOnlyData
                                    SLIT(".section .data\n\t.align 4"))
 	,IF_ARCH_x86_64(IF_OS_darwin(SLIT(".const_data\n.align 3"),
                                      SLIT(".section .data\n\t.align 8"))
-        ,IF_ARCH_powerpc(IF_OS_darwin(SLIT(".const_data\n.align 2"),
+        ,IF_ARCH_powerpc(IF_OS_darwin(SLIT(".text\n.align 2"),
                                       SLIT(".data\n\t.align 2"))
 	,)))))
 pprSectionHeader UninitialisedData
diff --git a/configure b/configure
--- a/configure
+++ b/configure
@@ -5226,7 +5226,7 @@ EOF
 EOF
 
   fp_cv_dir_docbook_xsl=no
-  for fp_var in /usr/share/xml/docbook/stylesheet/nwalsh/current /usr/share/xml/docbook/stylesheet/nwalsh /usr/share/xml/docbook/xsl-stylesheets* /usr/share/sgml/docbook/docbook-xsl-stylesheets* /usr/share/sgml/docbook/xsl-stylesheets* /opt/kde?/share/apps/ksgmltools2/docbook/xsl /usr/share/docbook-xsl /usr/share/sgml/docbkxsl /usr/local/share/xsl/docbook /sw/share/xml/xsl/docbook-xsl /opt/local/share/xsl/docbook-xsl; do
+  for fp_var in /usr/share/xml/docbook/stylesheet/nwalsh/current /usr/share/xml/docbook/stylesheet/nwalsh /usr/share/xml/docbook/xsl-stylesheets* /usr/share/sgml/docbook/docbook-xsl-stylesheets* /usr/share/sgml/docbook/xsl-stylesheets* /opt/kde?/share/apps/ksgmltools2/docbook/xsl /usr/share/docbook-xsl /usr/share/sgml/docbkxsl /usr/local/share/xsl/docbook @FINKPREFIX@/share/xml/xsl/docbook-xsl /opt/local/share/xsl/docbook-xsl; do
      if $XsltprocCmd ${fp_var}/html/docbook.xsl conftest.xml > /dev/null 2>&1; then
         fp_cv_dir_docbook_xsl=$fp_var
         break
diff --git a/ghc.1 b/ghc.1
new file mode 100644
--- /dev/null
+++ b/ghc.1
@@ -0,0 +1,1535 @@
+.\"
+.\" This is a generated file.  Changes might get clobbered.  Edit at own risk.
+.\"
+.TH GHC 1 "2002-10-25" "Glasgow FP Suite" "Glasgow Haskell Compiler"
+.SH NAME
+GHC \- the Glasgow Haskell Compiler
+
+
+.SH SYNOPSIS
+.B ghc
+.RI [ option | filename ]...
+.br
+.B ghci
+.RI [ option | filename ]...
+.br
+.B ghc6
+.RI [ option | filename ]...
+.br
+.B ghci6
+.RI [ option | filename ]...
+
+.SH DESCRIPTION
+This manual page documents briefly the
+.B ghc
+and
+.B ghci
+commands.
+Extensive documentation is available in various other formats
+including DVI, PostScript and HTML; see below.
+
+.PP
+Each of GHC's command line options is classified as either 
+.IR static " or " dynamic .
+A static flag may only be specified on the command line, whereas a
+dynamic flag may also be given in an \f(CROPTIONS\fP pragma in a
+source file or set from the GHCi command-line with \f(CR:set\fP.
+
+As a rule of thumb, all the language options are dynamic, as are the
+warning options and the debugging options.
+
+The rest are static, with the notable exceptions of
+.BR \-v ", " \-cpp ", " \-fasm ", " \-fvia\-C ", and " \-#include .
+The OPTIONS sections lists the status of each flag.
+
+.PP
+Common suffixes of file names for Haskell are:
+.TP
+.B .hs
+Haskell source code; preprocess, compile
+.TP
+.B .lhs
+literate Haskell source; unlit, preprocess, compile
+.TP
+.B .hi
+Interface file; contains information about exported
+symbols
+.TP
+.B .hc
+intermediate C files
+.TP
+.BI . x _o
+way 
+.I x 
+object files; common ways are:
+.BR p ", " u ", " s
+.TP
+.BI . x _hi
+way 
+.I x
+interface files
+
+
+.SH OPTIONS
+
+
+.SS Help and verbosity options
+.nh
+\-?  \-help  \-v  \-v\fIn\fP  \-V  \-\-version  \-\-numeric\-version  \-\-print\-libdir  \-ferror\-spans  
+.hy
+
+.SS Which phases to run
+.nh
+\-E  \-C  \-S  \-c  
+.hy
+
+.SS Alternative modes of operation
+.nh
+\-\-interactive  \-\-make  \-e expr  \-M  \-\-mk\-dll  
+.hy
+
+.SS Redirecting output
+.nh
+\-hcsuf \fIsuffix\fP  \-hidir \fIdir\fP  \-hisuf \fIsuffix\fP  \-o \fIfilename\fP  \-odir \fIdir\fP  \-ohi \fIfilename\fP   \-osuf \fIsuffix\fP  
+.hy
+
+.SS Keeping intermediate files
+.nh
+\-keep\-hc\-file  \-keep\-s\-file  \-keep\-raw\-s\-file  \-keep\-tmp\-files  
+.hy
+
+.SS Temporary files
+.nh
+\-tmpdir  
+.hy
+
+.SS Finding imports
+.nh
+\-i\fIdir1\fP:\fIdir2\fP:...  \-i  
+.hy
+
+.SS Interface file options
+.nh
+\-ddump\-hi  \-ddump\-hi\-diffs  \-ddump\-minimal\-imports  \-\-show\-iface \fIfile\fP  
+.hy
+
+.SS Recompilation checking
+.nh
+\-no\-recomp \-recomp  
+.hy
+
+.SS Interactive-mode options
+.nh
+\-ignore\-dot\-ghci  \-read\-dot\-ghci  
+.hy
+
+.SS Packages
+.nh
+\-package \fIP\fP  \-hide\-all\-packages  \-hide\-package \fIname\fP  \-ignore\-package \fIname\fP  \-package\-conf \fIfile\fP  \-no\-user\-package\-conf  
+.hy
+
+.SS Language options
+.nh
+\-fallow\-overlapping\-instances \-fno\-allow\-overlapping\-instances  \-fallow\-undecidable\-instances \-fno\-allow\-undecidable\-instances  \-fallow\-incoherent\-instances \-fno\-allow\-incoherent\-instances  \-farrows \-fno\-arrows  \-fcontext\-stack\fIn\fP  \-ffi or \-fffi \-fno\-ffi  \-fgenerics \-fno\-fgenerics  \-fglasgow\-exts \-fno\-glasgow\-exts  \-fignore\-asserts \-fno\-ignore\-asserts  \-fimplicit\-params \-fno\-implicit\-params  \-firrefutable\-tuples \-fno\-irrefutable\-tuples  \-fno\-implicit\-prelude \-fimplicit\-prelude  \-fno\-monomorphism\-restriction \-fmonomorphism\-restriction  \-fscoped\-type\-variables \-fno\-scoped\-type\-variables  \-fth \-fno\-th  
+.hy
+
+.SS Warnings
+.nh
+\-W \-w  \-w  \-Wall \-w  \-Werror   \-fwarn\-deprecations \-fno\-warn\-deprecations  \-fwarn\-duplicate\-exports \-fno\-warn\-duplicate\-exports  \-fwarn\-hi\-shadowing \-fno\-warn\-hi\-shadowing  \-fwarn\-incomplete\-patterns \-fno\-warn\-incomplete\-patterns  \-fwarn\-incomplete\-record\-updates \-fno\-warn\-incomplete\-record\-updates  \-fwarn\-misc \-fno\-warn\-misc  \-fwarn\-missing\-fields \-fno\-warn\-missing\-fields  \-fwarn\-missing\-methods \-fno\-warn\-missing\-methods  \-fwarn\-missing\-signatures \-fno\-warn\-missing\-signatures  \-fwarn\-name\-shadowing \-fno\-warn\-name\-shadowing  \-fwarn\-oprhans \-fno\-warn\-orphans  \-fwarn\-overlapping\-patterns \-fno\-warn\-overlapping\-patterns  \-fwarn\-simple\-patterns \-fno\-warn\-simple\-patterns  \-fwarn\-type\-defaults \-fno\-warn\-type\-defaults  \-fwarn\-unused\-binds \-fno\-warn\-unused\-binds  \-fwarn\-unused\-imports \-fno\-warn\-unused\-imports  \-fwarn\-unused\-matches \-fno\-warn\-unused\-matches  
+.hy
+
+.SS Optimisation levels
+.nh
+\-O \-O0  \-O\fIn\fP \-O0  
+.hy
+
+.SS Individual optimisations
+.nh
+\-fcase\-merge \-fno\-case\-merge  \-fdicts\-strict \-fno\-dicts\-strict  \-fdo\-eta\-reduction \-fno\-do\-eta\-reduction  \-fdo\-lambda\-eta\-expansion \-fno\-do\-lambda\-eta\-expansion  \-fexcess\-precision \-fno\-excess\-precision  \-frules\-off \-frules\-off  \-fignore\-asserts \-fno\-ignore\-asserts  \-fignore\-interface\-pragmas \-fno\-ignore\-interface\-pragmas  \-fliberate\-case\-threshold \-fno\-liberate\-case\-threshold  \-fomit\-interface\-pragmas \-fno\-omit\-interface\-pragmas  \-fmax\-worker\-args  \-fmax\-simplifier\-iterations  \-fno\-state\-hack  \-fno\-cse  \-fno\-full\-laziness   \-fno\-pre\-inlining  \-fno\-strictness  \-funbox\-strict\-fields \-fno\-unbox\-strict\-fields  \-funfolding\-creation\-threshold \-fno\-unfolding\-creation\-threshold  \-funfolding\-fun\-discount \-fno\-unfolding\-fun\-discount  \-funfolding\-keeness\-factor \-fno\-unfolding\-keeness\-factor  \-funfolding\-update\-in\-place \-fno\-unfolding\-update\-in\-place  \-funfolding\-use\-threshold \-fno\-unfolding\-use\-threshold  
+.hy
+
+.SS Profiling options
+.nh
+\-auto \-no\-auto  \-auto\-all \-no\-auto\-all  \-auto\-dicts \-no\-auto\-dicts  \-caf\-all \-no\-caf\-all  \-prof  \-ticky  
+.hy
+
+.SS Parallelism options
+.nh
+\-gransim  \-parallel  \-smp  
+.hy
+
+.SS C pre-processor options
+.nh
+\-cpp  \-D\fIsymbol\fP=\fIvalue\fP \-U  \-U\fIsymbol\fP  \-I\fIdir\fP  
+.hy
+
+.SS C compiler options
+.nh
+\-#include \fIfile\fP  
+.hy
+
+.SS Code generation options
+.nh
+\-fasm   \-fvia\-C   \-fno\-code  
+.hy
+
+.SS Linking options
+.nh
+\-dynamic  \-framework \fIname\fP  \-framework\-path \fIname\fP  \-l\fIlib\fP  \-L\fIdir\fP  \-main\-is  \-no\-hs\-main  \-no\-link  \-package \fIname\fP  \-split\-objs  \-static  \-threaded  \-debug  
+.hy
+
+.SS Replacing phases
+.nh
+\-pgmL \fIcmd\fP  \-pgmP \fIcmd\fP  \-pgmc \fIcmd\fP  \-pgma \fIcmd\fP  \-pgml \fIcmd\fP  \-pgmdll \fIcmd\fP  \-pgmdep \fIcmd\fP  \-pgmF \fIcmd\fP  
+.hy
+
+.SS Forcing options to particular phases
+.nh
+\-optL \fIoption\fP  \-optP \fIoption\fP  \-optF \fIoption\fP  \-optc \fIoption\fP  \-opta \fIoption\fP  \-optl \fIoption\fP  \-optdll \fIoption\fP  \-optdep \fIoption\fP  
+.hy
+
+.SS Platform-specific options
+.nh
+\-mv8  \-monly\-[32]\-regs  
+.hy
+
+.SS External core file options
+.nh
+\-fext\-core  
+.hy
+
+.SS Compiler debugging options
+.nh
+\-dcore\-lint  \-ddump\-absC  \-ddump\-asm  \-ddump\-bcos  \-ddump\-cpranal  \-ddump\-cse  \-ddump\-deriv  \-ddump\-ds  \-ddump\-flatC  \-ddump\-foreign  \-ddump\-inlinings  \-ddump\-occur\-anal  \-ddump\-parsed  \-ddump\-realC  \-ddump\-rn  \-ddump\-rules  \-ddump\-sat  \-ddump\-simpl  \-ddump\-simpl\-iterations  \-ddump\-spec  \-ddump\-stg  \-ddump\-stranal  \-ddump\-tc  \-ddump\-types  \-ddump\-usagesp  \-ddump\-worker\-wrapper  \-ddump\-rn\-trace  \-ddump\-rn\-stats  \-ddump\-stix  \-ddump\-simpl\-stats  \-dppr\-debug  \-dppr\-noprags  \-dppr\-user\-length  \-dsource\-stats  \-dstg\-lint  \-dstg\-stats  \-dusagesp\-lint  \-dverbose\-core2core  \-dverbose\-stg2stg  \-unreg  
+.hy
+
+.SS Misc compiler options
+.nh
+\-femit\-extern\-decls  \-fglobalise\-toplev\-names  \-fno\-hi\-version\-check  \-dno\-black\-holing  \-fno\-method\-sharing  \-fno\-prune\-decls  \-fhistory\-size  \-funregisterised  \-fno\-asm\-mangling  
+.hy
+
+
+.SH HELP AND VERBOSITY OPTIONS
+
+.TP
+\fB\-?\fP 
+help
+.rj
+[static]
+
+.TP
+\fB\-help\fP 
+help
+.rj
+[static]
+
+.TP
+\fB\-v\fP 
+verbose mode (equivalent to \fB\-v3\fP)
+.rj
+[dynamic]
+
+.TP
+\fB\-v\fP\fIn\fP 
+set verbosity level
+.rj
+[dynamic]
+
+.TP
+\fB\-V\fP 
+display GHC version
+.rj
+[static]
+
+.TP
+\fB\-\-version\fP 
+display GHC version
+.rj
+[static]
+
+.TP
+\fB\-\-numeric\-version\fP 
+display GHC version (numeric only)
+.rj
+[static]
+
+.TP
+\fB\-\-print\-libdir\fP 
+display GHC library directory
+.rj
+[static]
+
+.TP
+\fB\-ferror\-spans\fP 
+output full span in error messages
+.rj
+[static]
+
+
+.SH WHICH PHASES TO RUN
+
+.TP
+\fB\-E\fP 
+Stop after preprocessing (\f(CR.hspp\fP file)
+.rj
+[static]
+
+.TP
+\fB\-C\fP 
+Stop after generating C (\f(CR.hc\fP file)
+.rj
+[static]
+
+.TP
+\fB\-S\fP 
+Stop after generating assembly (\f(CR.s\fP file)
+.rj
+[static]
+
+.TP
+\fB\-c\fP 
+Stop after compiling to object code (\f(CR.o\fP file)
+.rj
+[static]
+
+
+.SH ALTERNATIVE MODES OF OPERATION
+
+.TP
+\fB\-\-interactive\fP 
+Interactive mode - normally used by just running ghci
+.rj
+[static]
+
+.TP
+\fB\-\-make\fP 
+Build a multi-module Haskell program, automatically figuring out dependencies. Likely to be much easier, and faster, than using make.
+.rj
+[static]
+
+.TP
+\fB\-e expr\fP 
+Evaluate \fIexpr\fP
+.rj
+[static]
+
+.TP
+\fB\-M\fP 
+Generate dependency information suitable for use in a Makefile.
+.rj
+[static]
+
+.TP
+\fB\-\-mk\-dll\fP 
+DLL-creation mode (Windows only)
+.rj
+[static]
+
+
+.SH REDIRECTING OUTPUT
+
+.TP
+\fB\-hcsuf\fP \fIsuffix\fP 
+set the suffix to use for intermediate C files
+.rj
+[static]
+
+.TP
+\fB\-hidir\fP \fIdir\fP 
+set directory for interface files
+.rj
+[static]
+
+.TP
+\fB\-hisuf\fP \fIsuffix\fP 
+set the suffix to use for interface files
+.rj
+[static]
+
+.TP
+\fB\-o\fP \fIfilename\fP 
+set output filename
+.rj
+[static]
+
+.TP
+\fB\-odir\fP \fIdir\fP 
+set output directory
+.rj
+[static]
+
+.TP
+\fB\-ohi\fP \fIfilename\fP 
+set the filename in which to put the interface
+.rj
+[static]
+
+.TP
+\fB\-osuf\fP \fIsuffix\fP 
+set the output file suffix
+.rj
+[static]
+
+
+.SH KEEPING INTERMEDIATE FILES
+
+.TP
+\fB\-keep\-hc\-file\fP 
+retain intermediate \f(CR.hc\fP files
+.rj
+[static]
+
+.TP
+\fB\-keep\-s\-file\fP 
+retain intermediate \f(CR.s\fP files
+.rj
+[static]
+
+.TP
+\fB\-keep\-raw\-s\-file\fP 
+retain intermediate \f(CR.raw_s\fP files
+.rj
+[static]
+
+.TP
+\fB\-keep\-tmp\-files\fP 
+retain all intermediate temporary files
+.rj
+[static]
+
+
+.SH TEMPORARY FILES
+
+.TP
+\fB\-tmpdir\fP 
+set the directory for temporary files
+.rj
+[static]
+
+
+.SH FINDING IMPORTS
+
+.TP
+\fB\-i\fP\fIdir1\fP:\fIdir2\fP:... 
+add \fIdir\fP, \fIdir2\fP, etc. to import path
+.rj
+[static]
+
+.TP
+\fB\-i\fP 
+Empty the import directory list
+.rj
+[static]
+
+
+.SH INTERFACE FILE OPTIONS
+
+.TP
+\fB\-ddump\-hi\fP 
+Dump the new interface to stdout
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-hi\-diffs\fP 
+Show the differences vs. the old interface
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-minimal\-imports\fP 
+Dump a minimal set of imports
+.rj
+[dynamic]
+
+.TP
+\fB\-\-show\-iface\fP \fIfile\fP 
+Read the interface in \fIfile\fP and dump it as text to \f(CRstdout\fP.
+.rj
+[static]
+
+
+.SH RECOMPILATION CHECKING
+
+.TP
+\fB\-no\-recomp\fP 
+Turn off recompilation checking; implied by any \fB\-ddump\-X\fP option
+.rj
+[dynamic]
+
+
+.SH INTERACTIVE-MODE OPTIONS
+
+.TP
+\fB\-ignore\-dot\-ghci\fP 
+Disable reading of .ghci files
+.rj
+[static]
+
+.TP
+\fB\-read\-dot\-ghci\fP 
+Enable reading of .ghci files
+.rj
+[static]
+
+
+.SH PACKAGES
+
+.TP
+\fB\-package\fP \fIP\fP 
+Expose package \fIP\fP
+.rj
+[static]
+
+.TP
+\fB\-hide\-all\-packages\fP 
+Hide all packages by default
+.rj
+[static]
+
+.TP
+\fB\-hide\-package\fP \fIname\fP 
+Hide package \fIP\fP
+.rj
+[static]
+
+.TP
+\fB\-ignore\-package\fP \fIname\fP 
+Ignore package \fIP\fP
+.rj
+[static]
+
+.TP
+\fB\-package\-conf\fP \fIfile\fP 
+Load more packages from \fIfile\fP
+.rj
+[static]
+
+.TP
+\fB\-no\-user\-package\-conf\fP 
+Don't load the user's package config file.
+.rj
+[static]
+
+
+.SH LANGUAGE OPTIONS
+
+.TP
+\fB\-fallow\-overlapping\-instances\fP 
+Enable overlapping instances
+.rj
+[dynamic]
+
+.TP
+\fB\-fallow\-undecidable\-instances\fP 
+Enable undecidable instances
+.rj
+[dynamic]
+
+.TP
+\fB\-fallow\-incoherent\-instances\fP 
+Enable incoherent instances
+.rj
+[dynamic]
+
+.TP
+\fB\-farrows\fP 
+Enable arrow notation extension
+.rj
+[dynamic]
+
+.TP
+\fB\-fcontext\-stack\fP\fIn\fP 
+set the limit for context reduction
+.rj
+[static]
+
+.TP
+\fB\-ffi\fP or \fB\-fffi\fP 
+Enable foreign function interface (implied by \fB\-fglasgow\-exts\fP)
+.rj
+[dynamic]
+
+.TP
+\fB\-fgenerics\fP 
+Enable generics
+.rj
+[dynamic]
+
+.TP
+\fB\-fglasgow\-exts\fP 
+Enable most language extensions
+.rj
+[dynamic]
+
+.TP
+\fB\-fignore\-asserts\fP 
+Ignore assertions
+.rj
+[dynamic]
+
+.TP
+\fB\-fimplicit\-params\fP 
+Enable Implicit Parameters. Implied by \fB\-fglasgow\-exts\fP.
+.rj
+[dynamic]
+
+.TP
+\fB\-firrefutable\-tuples\fP 
+Make tuple pattern matching irrefutable
+.rj
+[dynamic]
+
+.TP
+\fB\-fno\-implicit\-prelude\fP 
+Don't implicitly \f(CRimport Prelude\fP
+.rj
+[dynamic]
+
+.TP
+\fB\-fno\-monomorphism\-restriction\fP 
+Disable the monomorphism restriction
+.rj
+[dynamic]
+
+.TP
+\fB\-fscoped\-type\-variables\fP 
+Enable lexically-scoped type variables. Implied by \fB\-fglasgow\-exts\fP.
+.rj
+[dynamic]
+
+.TP
+\fB\-fth\fP 
+Enable Template Haskell. Implied by \fB\-fglasgow\-exts\fP.
+.rj
+[dynamic]
+
+
+.SH WARNINGS
+
+.TP
+\fB\-W\fP 
+enable normal warnings
+.rj
+[dynamic]
+
+.TP
+\fB\-w\fP 
+disable all warnings
+.rj
+[dynamic]
+
+.TP
+\fB\-Wall\fP 
+enable all warnings
+.rj
+[dynamic]
+
+.TP
+\fB\-Werror\fP 
+make warnings fatal
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-deprecations\fP 
+warn about uses of functions & types that are deprecated
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-duplicate\-exports\fP 
+warn when an entity is exported multiple times
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-hi\-shadowing\fP 
+warn when a \f(CR.hi\fP file in the current directory shadows a library
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-incomplete\-patterns\fP 
+warn when a pattern match could fail
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-incomplete\-record\-updates\fP 
+warn when a record update could fail
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-misc\fP 
+enable miscellaneous warnings
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-missing\-fields\fP 
+warn when fields of a record are uninitialised
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-missing\-methods\fP 
+warn when class methods are undefined
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-missing\-signatures\fP 
+warn about top-level functions without signatures
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-name\-shadowing\fP 
+warn when names are shadowed
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-oprhans\fP 
+warn when the module contains "orphan" instance declarations or rewrite rules
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-overlapping\-patterns\fP 
+warn about overlapping patterns
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-simple\-patterns\fP 
+warn about lambda-patterns that can fail
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-type\-defaults\fP 
+warn when defaulting happens
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-unused\-binds\fP 
+warn about bindings that are unused
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-unused\-imports\fP 
+warn about unnecessary imports
+.rj
+[dynamic]
+
+.TP
+\fB\-fwarn\-unused\-matches\fP 
+warn about variables in patterns that aren't used
+.rj
+[dynamic]
+
+
+.SH OPTIMISATION LEVELS
+
+.TP
+\fB\-O\fP 
+Enable default optimisation (level 1)
+.rj
+[dynamic]
+
+.TP
+\fB\-O\fP\fIn\fP 
+Set optimisation level \fIn\fP
+.rj
+[dynamic]
+
+
+.SH INDIVIDUAL OPTIMISATIONS
+
+.TP
+\fB\-fcase\-merge\fP 
+Enable case-merging
+.rj
+[dynamic]
+
+.TP
+\fB\-fdicts\-strict\fP 
+Make dictionaries strict
+.rj
+[static]
+
+.TP
+\fB\-fdo\-eta\-reduction\fP 
+Enable eta-reduction
+.rj
+[dynamic]
+
+.TP
+\fB\-fdo\-lambda\-eta\-expansion\fP 
+Enable lambda eta-reduction
+.rj
+[dynamic]
+
+.TP
+\fB\-fexcess\-precision\fP 
+Enable excess intermediate precision
+.rj
+[static]
+
+.TP
+\fB\-frules\-off\fP 
+Switch off all rewrite rules (including rules generated by automatic specialisation of overloaded functions)
+.rj
+[static]
+
+.TP
+\fB\-fignore\-asserts\fP 
+Ignore assertions in the source
+.rj
+[static]
+
+.TP
+\fB\-fignore\-interface\-pragmas\fP 
+Ignore pragmas in interface files
+.rj
+[static]
+
+.TP
+\fB\-fliberate\-case\-threshold\fP 
+Tweak the liberate-case optimisation (default: 10)
+.rj
+[static]
+
+.TP
+\fB\-fomit\-interface\-pragmas\fP 
+Don't generate interface pragmas
+.rj
+[dynamic]
+
+.TP
+\fB\-fmax\-worker\-args\fP 
+If a worker has that many arguments, none will be unpacked anymore (default: 10)
+.rj
+[static]
+
+.TP
+\fB\-fmax\-simplifier\-iterations\fP 
+Set the max iterations for the simplifier
+.rj
+[dynamic]
+
+.TP
+\fB\-fno\-state\-hack\fP 
+Turn off the "state hack" whereby any lambda with a real-world state token as argument is considered to be single-entry. Hence OK to inline things inside it.
+.rj
+[static]
+
+.TP
+\fB\-fno\-cse\fP 
+Turn off common sub-expression
+.rj
+[dynamic]
+
+.TP
+\fB\-fno\-full\-laziness\fP 
+Turn off full laziness (floating bindings outwards).
+.rj
+[dynamic]
+
+.TP
+\fB\-fno\-pre\-inlining\fP 
+Turn off pre-inlining
+.rj
+[static]
+
+.TP
+\fB\-fno\-strictness\fP 
+Turn off strictness analysis
+.rj
+[dynamic]
+
+.TP
+\fB\-funbox\-strict\-fields\fP 
+Flatten strict constructor fields
+.rj
+[dynamic]
+
+.TP
+\fB\-funfolding\-creation\-threshold\fP 
+Tweak unfolding settings
+.rj
+[static]
+
+.TP
+\fB\-funfolding\-fun\-discount\fP 
+Tweak unfolding settings
+.rj
+[static]
+
+.TP
+\fB\-funfolding\-keeness\-factor\fP 
+Tweak unfolding settings
+.rj
+[static]
+
+.TP
+\fB\-funfolding\-update\-in\-place\fP 
+Tweak unfolding settings
+.rj
+[static]
+
+.TP
+\fB\-funfolding\-use\-threshold\fP 
+Tweak unfolding settings
+.rj
+[static]
+
+
+.SH PROFILING OPTIONS
+
+.TP
+\fB\-auto\fP 
+Auto-add \f(CR_scc_\fPs to all exported functions
+.rj
+[static]
+
+.TP
+\fB\-auto\-all\fP 
+Auto-add \f(CR_scc_\fPs to all top-level functions
+.rj
+[static]
+
+.TP
+\fB\-auto\-dicts\fP 
+Auto-add \f(CR_scc_\fPs to all dictionaries
+.rj
+[static]
+
+.TP
+\fB\-caf\-all\fP 
+Auto-add \f(CR_scc_\fPs to all CAFs
+.rj
+[static]
+
+.TP
+\fB\-prof\fP 
+Turn on profiling
+.rj
+[static]
+
+.TP
+\fB\-ticky\fP 
+Turn on ticky-ticky profiling
+.rj
+[static]
+
+
+.SH PARALLELISM OPTIONS
+
+.TP
+\fB\-gransim\fP 
+Enable GRANSIM
+.rj
+[static]
+
+.TP
+\fB\-parallel\fP 
+Enable Parallel Haskell
+.rj
+[static]
+
+.TP
+\fB\-smp\fP 
+Enable SMP support
+.rj
+[static]
+
+
+.SH C PRE-PROCESSOR OPTIONS
+
+.TP
+\fB\-cpp\fP 
+Run the C pre-processor on Haskell source files
+.rj
+[dynamic]
+
+.TP
+\fB\-D\fP\fIsymbol\fP=\fIvalue\fP 
+Define a symbol in the C pre-processor
+.rj
+[dynamic]
+
+.TP
+\fB\-U\fP\fIsymbol\fP 
+Undefine a symbol in the C pre-processor
+.rj
+[dynamic]
+
+.TP
+\fB\-I\fP\fIdir\fP 
+Add \fIdir\fP to the directory search list for \f(CR#include\fP files
+.rj
+[static]
+
+
+.SH C COMPILER OPTIONS
+
+.TP
+\fB\-#include\fP \fIfile\fP 
+Include \fIfile\fP when compiling the .hc file
+.rj
+[dynamic]
+
+
+.SH CODE GENERATION OPTIONS
+
+.TP
+\fB\-fasm\fP 
+Use the native code generator
+.rj
+[dynamic]
+
+.TP
+\fB\-fvia\-C\fP 
+Compile via C
+.rj
+[dynamic]
+
+.TP
+\fB\-fno\-code\fP 
+Omit code generation
+.rj
+[static]
+
+
+.SH LINKING OPTIONS
+
+.TP
+\fB\-dynamic\fP 
+Use dynamic Haskell libraries (if available)
+.rj
+[static]
+
+.TP
+\fB\-framework\fP \fIname\fP 
+On Darwin/MacOS X only, link in the framework \fIname\fP. This option corresponds to the \fB\-framework\fP option for Apple's Linker.
+.rj
+[static]
+
+.TP
+\fB\-framework\-path\fP \fIname\fP 
+On Darwin/MacOS X only, add \fIdir\fP to the list of directories searched for frameworks. This option corresponds to the \fB\-F\fP option for Apple's Linker.
+.rj
+[static]
+
+.TP
+\fB\-l\fP\fIlib\fP 
+Link in library \fIlib\fP
+.rj
+[static]
+
+.TP
+\fB\-L\fP\fIdir\fP 
+Add \fIdir\fP to the list of directories searched for libraries
+.rj
+[static]
+
+.TP
+\fB\-main\-is\fP 
+Set main function
+.rj
+[static]
+
+.TP
+\fB\-no\-hs\-main\fP 
+Don't assume this program contains \f(CRmain\fP
+.rj
+[static]
+
+.TP
+\fB\-no\-link\fP 
+Omit linking
+.rj
+[static]
+
+.TP
+\fB\-package\fP \fIname\fP 
+Link in package \fIname\fP
+.rj
+[static]
+
+.TP
+\fB\-split\-objs\fP 
+Split objects (for libraries)
+.rj
+[static]
+
+.TP
+\fB\-static\fP 
+Use static Haskell libraries
+.rj
+[static]
+
+.TP
+\fB\-threaded\fP 
+Use the threaded runtime
+.rj
+[static]
+
+.TP
+\fB\-debug\fP 
+Use the debugging runtime
+.rj
+[static]
+
+
+.SH REPLACING PHASES
+
+.TP
+\fB\-pgmL\fP \fIcmd\fP 
+Use \fIcmd\fP as the literate pre-processor
+.rj
+[static]
+
+.TP
+\fB\-pgmP\fP \fIcmd\fP 
+Use \fIcmd\fP as the C pre-processor (with \fB\-cpp\fP only)
+.rj
+[static]
+
+.TP
+\fB\-pgmc\fP \fIcmd\fP 
+Use \fIcmd\fP as the C compiler
+.rj
+[static]
+
+.TP
+\fB\-pgma\fP \fIcmd\fP 
+Use \fIcmd\fP as the assembler
+.rj
+[static]
+
+.TP
+\fB\-pgml\fP \fIcmd\fP 
+Use \fIcmd\fP as the linker
+.rj
+[static]
+
+.TP
+\fB\-pgmdll\fP \fIcmd\fP 
+Use \fIcmd\fP as the DLL generator
+.rj
+[static]
+
+.TP
+\fB\-pgmdep\fP \fIcmd\fP 
+Use \fIcmd\fP as the dependency generator
+.rj
+[static]
+
+.TP
+\fB\-pgmF\fP \fIcmd\fP 
+Use \fIcmd\fP as the pre-processor (with \fB\-F\fP only)
+.rj
+[static]
+
+
+.SH FORCING OPTIONS TO PARTICULAR PHASES
+
+.TP
+\fB\-optL\fP \fIoption\fP 
+pass \fIoption\fP to the literate pre-processor
+.rj
+[dynamic]
+
+.TP
+\fB\-optP\fP \fIoption\fP 
+pass \fIoption\fP to cpp (with \fB\-cpp\fP only)
+.rj
+[dynamic]
+
+.TP
+\fB\-optF\fP \fIoption\fP 
+pass \fIoption\fP to the custom pre-processor
+.rj
+[dynamic]
+
+.TP
+\fB\-optc\fP \fIoption\fP 
+pass \fIoption\fP to the C compiler
+.rj
+[dynamic]
+
+.TP
+\fB\-opta\fP \fIoption\fP 
+pass \fIoption\fP to the assembler
+.rj
+[dynamic]
+
+.TP
+\fB\-optl\fP \fIoption\fP 
+pass \fIoption\fP to the linker
+.rj
+[static]
+
+.TP
+\fB\-optdll\fP \fIoption\fP 
+pass \fIoption\fP to the DLL generator
+.rj
+[static]
+
+.TP
+\fB\-optdep\fP \fIoption\fP 
+pass \fIoption\fP to the dependency generator
+.rj
+[static]
+
+
+.SH PLATFORM-SPECIFIC OPTIONS
+
+.TP
+\fB\-mv8\fP 
+(SPARC only) enable version 8 support
+.rj
+[static]
+
+.TP
+\fB\-monly\-[32]\-regs\fP 
+(x86 only) give some registers back to the C compiler
+.rj
+[dynamic]
+
+
+.SH EXTERNAL CORE FILE OPTIONS
+
+.TP
+\fB\-fext\-core\fP 
+Generate .hcr external Core files
+.rj
+[static]
+
+
+.SH COMPILER DEBUGGING OPTIONS
+
+.TP
+\fB\-dcore\-lint\fP 
+Turn on internal sanity checking
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-absC\fP 
+Dump abstract C
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-asm\fP 
+Dump assembly
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-bcos\fP 
+Dump interpreter byte code
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-cpranal\fP 
+Dump output from CPR analysis
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-cse\fP 
+Dump CSE output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-deriv\fP 
+Dump deriving output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-ds\fP 
+Dump desugarer output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-flatC\fP 
+Dump `flat' C
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-foreign\fP 
+Dump \f(CRforeign export\fP stubs
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-inlinings\fP 
+Dump inlining info
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-occur\-anal\fP 
+Dump occurrence analysis output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-parsed\fP 
+Dump parse tree
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-realC\fP 
+Dump `real' C
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-rn\fP 
+Dump renamer output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-rules\fP 
+Dump rules
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-sat\fP 
+Dump saturated output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-simpl\fP 
+Dump final simplifier output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-simpl\-iterations\fP 
+Dump output from each simplifier iteration
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-spec\fP 
+Dump specialiser output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-stg\fP 
+Dump final STG
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-stranal\fP 
+Dump strictness analyser output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-tc\fP 
+Dump typechecker output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-types\fP 
+Dump type signatures
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-usagesp\fP 
+Dump UsageSP analysis output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-worker\-wrapper\fP 
+Dump worker-wrapper output
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-rn\-trace\fP 
+Trace renamer
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-rn\-stats\fP 
+Renamer stats
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-stix\fP 
+Native code generator intermediate form
+.rj
+[dynamic]
+
+.TP
+\fB\-ddump\-simpl\-stats\fP 
+Dump simplifier stats
+.rj
+[dynamic]
+
+.TP
+\fB\-dppr\-debug\fP 
+Turn on debug printing (more verbose)
+.rj
+[static]
+
+.TP
+\fB\-dppr\-noprags\fP 
+Don't output pragma info in dumps
+.rj
+[static]
+
+.TP
+\fB\-dppr\-user\-length\fP 
+Set the depth for printing expressions in error msgs
+.rj
+[static]
+
+.TP
+\fB\-dsource\-stats\fP 
+Dump haskell source stats
+.rj
+[dynamic]
+
+.TP
+\fB\-dstg\-lint\fP 
+STG pass sanity checking
+.rj
+[dynamic]
+
+.TP
+\fB\-dstg\-stats\fP 
+Dump STG stats
+.rj
+[dynamic]
+
+.TP
+\fB\-dusagesp\-lint\fP 
+UsageSP sanity checker
+.rj
+[dynamic]
+
+.TP
+\fB\-dverbose\-core2core\fP 
+Show output from each core-to-core pass
+.rj
+[dynamic]
+
+.TP
+\fB\-dverbose\-stg2stg\fP 
+Show output from each STG-to-STG pass
+.rj
+[dynamic]
+
+.TP
+\fB\-unreg\fP 
+Enable unregisterised compilation
+.rj
+[static]
+
+
+.SH MISC COMPILER OPTIONS
+
+.TP
+\fB\-femit\-extern\-decls\fP 
+???
+.rj
+[static]
+
+.TP
+\fB\-fglobalise\-toplev\-names\fP 
+Make all top-level names global (for \fB\-split\-objs\fP)
+.rj
+[static]
+
+.TP
+\fB\-fno\-hi\-version\-check\fP 
+Don't complain about \f(CR.hi\fP file mismatches
+.rj
+[static]
+
+.TP
+\fB\-dno\-black\-holing\fP 
+Turn off black holing (probably doesn't work)
+.rj
+[static]
+
+.TP
+\fB\-fno\-method\-sharing\fP 
+Don't share specialisations of overloaded functions
+.rj
+[static]
+
+.TP
+\fB\-fno\-prune\-decls\fP 
+Renamer: don't prune declarations
+.rj
+[static]
+
+.TP
+\fB\-fhistory\-size\fP 
+Set simplification history size
+.rj
+[static]
+
+.TP
+\fB\-funregisterised\fP 
+Unregisterised compilation (use \fB\-unreg\fP instead)
+.rj
+[static]
+
+.TP
+\fB\-fno\-asm\-mangling\fP 
+Turn off assembly mangling (use \fB\-unreg\fP instead)
+.rj
+[static]
+
+
+
+.SH FILES
+.I @FINKPREFIX@/lib/ghc-6.4.1/
+
+.SH COPYRIGHT
+
+Copyright 2002, The University Court of the University of Glasgow.
+.br
+All rights reserved.
+
+
+.SH AUTHOR
+
+This manual page was generated from the XML documentation of GHC with blood,
+sweat, tears and a breaks-if-you-look-at-it-the-wrong-way XSL
+stylesheet by Michael Weber <michaelw@debian.org> for the Debian
+GNU/Linux system (but may be used by others).
+
+.\" End
diff --git a/hp2ps.1 b/hp2ps.1
new file mode 100644
--- /dev/null
+++ b/hp2ps.1
@@ -0,0 +1,145 @@
+.\" man page for hp2ps
+.ds PS P\s-2OST\s+2S\s-2CRIPT\s+2
+.\" typeset examples in fixed size font as indented paragraph
+.de Ex
+.sp
+.RS
+.nf
+.ft C
+..
+.de Xe
+.RE
+.sp
+.fi
+..
+.TH HP2PS 1 "18 April 1992" 
+.SH NAME
+hp2ps \- convert a heap profile to a \*(PS graph
+.SH SYNOPSIS
+.B hp2ps
+[flags] [file][.hp] 
+.SH DESCRIPTION
+The program
+.B hp2ps
+converts a heap profile stored in
+.IR file
+into a \*(PS graph, sending the result to
+.IR file.ps.
+By convention, files to be processed by 
+.B hp2ps
+have a 
+.I .hp
+extension. However, for compatibility with older versions of
+.B hp2ps, 
+this extension can be omitted. If 
+.IR file
+is omitted entirely, then the program behaves as a filter.
+.SH OPTIONS
+The flags are:
+.IP "\fB\-d\fP"
+In order to make graphs more readable,
+.B hp2ps
+sorts the shaded bands for each identifier. The default sort ordering is for
+the bands with the largest area to be stacked on top of the smaller ones.
+The
+.B \-d
+option causes rougher bands (those reprsenting series of values with the
+largest standard deviations) to be stacked on top of smoother ones.
+.IP "\fB\-b\fP"
+Normally,
+.B hp2ps
+puts the title of the graph in a small box at the top of the page. However, 
+if the JOB string is too long to fit in a small box (more than 35 characters), 
+then
+.B hp2ps
+will choose to use a big box instead. The
+.B \-b
+option forces
+.B hp2ps
+to use a big box.
+.IP "\fB\-e\fP \fIfloat\fP[in|mm|pt]"
+Generate encapsulated \*(PS suitable for inclusion in LaTeX documents.
+Usually, the \*(PS graph is drawn in landscape mode in an area 
+9 inches wide by 6 inches high, and
+.B hp2ps
+arranges for this area to be approximately centered on a sheet of a4
+paper. This format is convenient of studying the graph in detail, but
+it is unsuitable for inclusion in LaTeX documents. The 
+.B \-e 
+option causes the graph to be drawn in portrait mode, with 
+.I float
+specifying the width in inches, millimetres or points (the default).
+The resulting \*(PS file conforms to the  
+.I "Encapsulated Post Script"
+(EPS) convention, and it can be included in a LaTeX document using Rokicki's 
+dvi-to-\*(PS converter
+.B dvips.
+.B hp2ps
+requires the width to exceed 2 inches.
+.IP "\fB\-g\fP" 
+Create output suitable for the
+.B gs
+\*(PS previewer (or similar). In this case the graph is printed in portrait
+mode without scaling. The output is unsuitable for a laser printer.
+.IP "\fB\-p\fP"
+Use previous parameters. By default, the \*(PS graph is automatically
+scaled both horizontally and vertically so that it fills the page.
+However, when preparing a seires of graphs for use in a presentation, 
+it is often useful to draw a new graph using the same scale, shading and
+ordering as a previous one. The
+.B \-p
+flag causes the graph to be drawn using the parameters determined by
+a previous run of 
+.B hp2ps
+on
+.IR file.  
+.IP "\fB\-s\fP"
+Use a small box for the title.
+.IP "\fB\-y\fP"
+Draw the graph in the traditional York style, ignoring marks.
+.IP "\fB\-?\fP"
+Print out usage information. 
+.SH "INPUT FORMAT"
+The format of a heap profile is best described by example:
+.Ex
+JOB "a.out -p"
+DATE "Fri Apr 17 11:43:45 1992"
+SAMPLE_UNIT "seconds"
+VALUE_UNIT "bytes"
+BEGIN_SAMPLE 0.00
+  SYSTEM 24
+END_SAMPLE 0.00
+BEGIN_SAMPLE 1.00
+  elim 180
+  insert 24
+  intersect 12
+  disin 60
+  main 12
+  reduce 20
+  SYSTEM 12
+END_SAMPLE 1.00
+MARK 1.50
+MARK 1.75
+MARK 1.80
+BEGIN_SAMPLE 2.00
+  elim 192
+  insert 24
+  intersect 12
+  disin 84
+  main 12
+  SYSTEM 24
+END_SAMPLE 2.00
+BEGIN_SAMPLE 2.82 
+END_SAMPLE 2.82 
+
+.Xe
+.SH "SEE ALSO"
+dvips(1), latex(1), hbchp (1), lmlchp(1)
+.br
+C. Runciman and D. Wakeling,
+.I
+Heap Profiling for Lazy Functional Languages, YCS-172, University of York, 1992
+.SH NOTES
+\*(PS is a registered trademark of Adobe Systems Incorporated.
+.SH AUTHOR
+David Wakeling of the University of York. 
diff --git a/libraries/base/base.cabal b/libraries/base/base.cabal
--- a/libraries/base/base.cabal
+++ b/libraries/base/base.cabal
@@ -159,7 +159,7 @@ Library {
         cbits/inputReady.c
         cbits/longlong.c
         cbits/selectUtils.c
-    include-dirs: include
+    include-dirs: include @FINKPREFIX@/include
     includes:    HsBase.h
     install-includes:    HsBase.h HsBaseConfig.h WCsubst.h dirUtils.h consUtils.h Typeable.h
     if os(windows) {
diff --git a/libraries/hpc/hpc.cabal b/libraries/hpc/hpc.cabal
--- a/libraries/hpc/hpc.cabal
+++ b/libraries/hpc/hpc.cabal
@@ -8,6 +8,7 @@ synopsis:     Code Coverage Library for 
 synopsis:     Code Coverage Library for Haskell
 build-type:   Simple
 ghc-options: -Wall
+include-dirs: @FINKPREFIX@/include
 exposed-modules:
 		 Trace.Hpc.Util,
 		 Trace.Hpc.Mix,
diff --git a/libraries/readline/readline.cabal b/libraries/readline/readline.cabal
--- a/libraries/readline/readline.cabal
+++ b/libraries/readline/readline.cabal
@@ -28,7 +28,7 @@ library
   else
     build-depends:	base < 3
   extensions:	CPP
-  include-dirs: 	include
+  include-dirs: 	include @FINKPREFIX@/include
   includes:	HsReadline.h
   install-includes:	HsReadline.h HsReadlineConfig.h
   c-sources:	HsReadline_cbits.c
