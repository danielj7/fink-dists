diff --git a/admin/Makefile.def b/admin/Makefile.def
--- a/admin/Makefile.def
+++ b/admin/Makefile.def
@@ -71,16 +71,16 @@ CLDLIBS = $(GAG_LIB_FLAGS)
 FLDLIBS = $(GAG_LIB_FLAGS)
 
 # The following variables are provided to the user so that he can override
 # the preprocessing, compilation and linking options defined by default
 # later in this file. User can modify them here.
-CPPFLAGS = $(GAG_CPPFLAGS)
-SLDFLAGS = $(GAG_SLDFLAGS)
-FLDFLAGS = $(GAG_FLDFLAGS)
-CLDFLAGS = $(GAG_CLDFLAGS)
-FFLAGS = $(GAG_FFLAGS)
-CFLAGS = $(GAG_CFLAGS)
+CPPFLAGS = @CPPFLAGS@ $(GAG_CPPFLAGS)
+SLDFLAGS = @LDFLAGS@ $(GAG_SLDFLAGS)
+FLDFLAGS = @LDFLAGS@ $(GAG_FLDFLAGS)
+CLDFLAGS = @LDFLAGS@ $(GAG_CLDFLAGS)
+FFLAGS = @FCFLAGS@ $(GAG_FFLAGS)
+CFLAGS = @CCFLAGS@ $(GAG_CFLAGS)
 
 # The following variables are for mandatory GLOBAL definitions.
 # They should be modified only in this file.
 GLOBAL_CPPFLAGS = 
 GLOBAL_SLDFLAGS = 
@@ -229,11 +229,11 @@ GLOBAL_DIRTY = $(builddir) *~ TAGS Chang
 
 ###########################################################################
 # Fortran preprocessing
 
 # Preprocessor command
-CPP = cpp
+CPP = @CPP@
 ifeq ($(GAG_OS_KIND),solaris)
   CPP = /usr/ccs/lib/cpp
 endif
 ifeq ($(GAG_OS_KIND),aix)
   CPP = /usr/ccs/lib/cpp
@@ -307,12 +307,12 @@ endif
 
 ###########################################################################
 # C compilation
 
 # C compiler name
-CC = gcc
-CXX = g++
+CC = @CC@
+CXX = @CXX@
 ifeq ($(GAG_OS_KIND),aix)
   CC = xlc
 endif
 ifeq ($(GAG_OS_KIND),osf)
   CC = cc
@@ -331,11 +331,11 @@ GLOBAL_CFLAGS += -I$(execincdir)
 ifneq ($(useincdir),)
     GLOBAL_CFLAGS += -I$(useincdir)
 endif
 
 # GCC flags
-ifeq ($(CC),gcc)
+ifeq ($(CC),@CC@)
   # Generic to GCC
   GLOBAL_CFLAGS += -pipe -fPIC
   OPTION_CFLAGS += -Wall
   ifeq ($(GAG_USE_32BITS),yes)
     GLOBAL_CFLAGS += -m32
diff --git a/admin/Makefile.main b/admin/Makefile.main
--- a/admin/Makefile.main
+++ b/admin/Makefile.main
@@ -16,11 +16,11 @@ ifeq ($(GAG_OS_KIND),mingw)
 RC_FILES = $(patsubst %,win-%.rc,$(EXECUTABLES))
 RC_EXISTING_FILES = $(wildcard $(RC_FILES))
 RC_DLLS = $(patsubst %.rc,$(libdir)/%.dll,$(RC_EXISTING_FILES))
 TARGETS += $(RC_DLLS)
 $(libdir)/%.dll: $(builddir)/%.o
-	gcc -o $@ -shared $?
+	$(CC) -o $@ -shared $?
 endif
 ifneq ($(GAG_OS_KIND),cygwin)
 DIRTY = $(PCL) $(EXECS) $(OBJECTS)
 else
 DIRTY = $(PCL) $(patsubst %,%.exe,$(EXECS)) $(OBJECTS)
diff --git a/admin/Makefile.python b/admin/Makefile.python
--- a/admin/Makefile.python
+++ b/admin/Makefile.python
@@ -39,11 +39,11 @@ include $(gagadmdir)/Makefile.build
 # Specific targets and rules
 
 ifneq ($(MOD_IDENTITY),)
 
 $(MOD_NAME): $(MOD_SOURCES) $(MOD_INCLUDES) $(MOD_EXTRAS) $(builddir)/setup.py
-	$(GAG_PYTHON_DISTFLAGS) python $(builddir)/setup.py build --build-base $(builddir) --build-lib $(builddir)
+	$(GAG_PYTHON_DISTFLAGS) @PYTHON@ $(builddir)/setup.py build --build-base $(builddir) --build-lib $(builddir)
 	$(MV) $(builddir)/*.$(SO_EXT) $(pythondir)
 
 $(builddir)/setup.py: setup.py.src Makefile
 	sed \
 	   -e 's?\$$MOD_IDENTITY?$(MOD_IDENTITY)?g' \
diff --git a/admin/Makefile.build b/admin/Makefile.build
--- a/admin/Makefile.build
+++ b/admin/Makefile.build
@@ -372,6 +372,8 @@ endif
 -lm:
 
 # Required by ASDM libs:
 -lstdc++:
 
+-lc++:
+
 ###########################################################################
diff --git a/admin/Makefile.def b/admin/Makefile.def
--- a/admin/Makefile.def
+++ b/admin/Makefile.def
@@ -531,11 +531,11 @@ endif
 # various systems
 ifeq ($(GAG_USE_32BITS),yes)
   # Compilation in 32 bits mode
   GAG_32BITS_SWITCH = "-m32"
 endif
-STDCpp_LIB += $(shell g++ $(GAG_32BITS_SWITCH) -print-file-name=libstdc++.$(LIB_CPP_EXT))
+STDCpp_LIB += @STDCXXLIB@
 
 ###########################################################################
 # Kernel libraries
 
 LEGACY_LIBS = -lslatec -llapack -lblas
--- gildas-src-jun14a/admin/define-system.sh.orig	2014-06-06 10:30:59.000000000 +0200
+++ gildas-src-jun14a/admin/define-system.sh	2014-06-06 10:31:24.000000000 +0200
@@ -227,8 +227,8 @@
         	fi
         	if which ifort > /dev/null 2>&1; then
         	    DEFAULT_COMPILER=ifort
-        	elif which gfortran > /dev/null 2>&1; then
-        	    DEFAULT_COMPILER=gfortran
+        	elif which @FC@ > /dev/null 2>&1; then
+        	    DEFAULT_COMPILER=@FC@
         	fi
             fi ;;
         CYGWIN*)
@@ -297,7 +297,7 @@
         if [ "$GAG_COMPILER_KIND" = "ifort" ]; then
             # Compress Major+Minor (no dot = easier preprocessing tests)
             GAG_COMPILER_VERSION=`$GAG_COMPILER_EXE -v 2>&1 | head -1 | cut -d" " -f2 | sed "s%\.%%"`
-        elif [ "$GAG_COMPILER_KIND" = "gfortran" ]; then
+        elif [ "$GAG_COMPILER_KIND" != "${GAG_COMPILER_KIND/gfortran/}" ]; then
             # Compress Major+Minor+Micro (no dot = easier preprocessing tests)
             GAG_COMPILER_VERSION=`$GAG_COMPILER_EXE --version | head -1 | sed "s%.*[^0-9]\([0-9][0-9]*\)\.\([0-9][0-9]*\)\.\([0-9][0-9]*\).*%\1\2\3%"`
             # Reject gfortran unstable versions
@@ -346,7 +346,7 @@
                 # GAG_COMPILER_CPPFLAGS="-DFORTRAN2003_PP"
                 :
             fi
-        elif [ "$GAG_COMPILER_KIND" = "gfortran" ]; then
+        elif [ "$GAG_COMPILER_KIND" != "${GAG_COMPILER_KIND/gfortran/}" ]; then
             GAG_COMPILER_LIBS="-lgfortran"
             if [ "$GFORTRAN_VERSION3" ">" "4.5.1" ]; then
                 # Fortran 2003 pointer procedures:
@@ -359,10 +359,12 @@
             fi
         fi
         #
-        GCC_VERSION=`gcc --version | head -1 | sed "s%.*[^0-9]\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\).*%\1%"`
+        GCC_VERSION=`@CC@ --version | head -1 | sed "s%.*[^0-9]\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\).*%\1%"`
         if [ "$GCC_VERSION" ">" "4.7.9" ]; then
             # See http://gcc.gnu.org/gcc-4.8/porting_to.html
             GAG_COMPILER_CPPFLAGS="$GAG_COMPILER_CPPFLAGS -ffreestanding"
+        elif [ "$GCC_VERSION" != "${GCC_VERSION/clang/}" ]; then
+            GAG_COMPILER_CPPFLAGS="$GAG_COMPILER_CPPFLAGS -ffreestanding"
         fi
         #
         export GAG_COMPILER_FFLAGS GAG_COMPILER_LIBS GAG_COMPILER_CPPFLAGS
diff --git a/admin/gildas-env.sh b/admin/gildas-env.sh
--- a/admin/gildas-env.sh
+++ b/admin/gildas-env.sh
@@ -416,11 +416,11 @@ EOF
         unset PYTHON_INC_DIR PYTHON_LIB_DIR
         unset NUMPY_PRESENT  NUMPY_INC_PRESENT NUMPY_INC_DIR
     fi
     #
     # Check availability of g++. This only has an impact on ATM2009
-    if \which g++ > /dev/null 2>&1; then
+    if \which @CXX@ > /dev/null 2>&1; then
         ATM2009_PRESENT=yes
     else
         gagenv_message "g++ not found in your \$PATH"
         gagenv_message "This means that ATM 2009 will not be available"
         ATM2009_PRESENT=no
@@ -433,38 +433,38 @@ EOF
         PYTHON_INC=no
         PYTHON_LIB=no
         NUMPY_PRESENT=no
         NUMERIC_PRESENT=no
         SQLITE3_PRESENT=no
-        if \which python > /dev/null 2>&1; then
+        if \which @PYTHON@ > /dev/null 2>&1; then
             # Check the version of python the user is currently using
-            if python -V 2>&1 > /dev/null 2>&1; then
-        	PY_VERS_FULL=`python -V 2>&1 | cut -d' ' -f2`
+            if @PYTHON@ -V 2>&1 > /dev/null 2>&1; then
+        	PY_VERS_FULL=`@PYTHON@ -V 2>&1 | cut -d' ' -f2`
         	PY_VERS=`echo $PY_VERS_FULL | sed "s%\([0-9]\.[0-9][0-9]*\).*%\1%"`
         	# Search for Python header and library. kernel/python/binding/setup.py
         	# does exactly the same, so this should be consistent
-        	PYTHON_INC_DIR=`python -c "import distutils.sysconfig; print(distutils.sysconfig.get_config_var('INCLUDEPY'))"`
+        	PYTHON_INC_DIR=`@PYTHON@ -c "import distutils.sysconfig; print(distutils.sysconfig.get_config_var('INCLUDEPY'))"`
         	if [ -e "$PYTHON_INC_DIR/Python.h" ]; then PYTHON_INC=yes; else PYTHON_INC=no; fi
-        	PYTHON_LIB_DIR=`python -c "import distutils.sysconfig; print(distutils.sysconfig.get_config_var('LIBDIR'))"`
+        	PYTHON_LIB_DIR=`@PYTHON@ -c "import distutils.sysconfig; print(distutils.sysconfig.get_config_var('LIBDIR'))"`
         	PYTHON_LIB=yes  # libpython name on the various supported systems is just
         	                # unpredictible. Can not check in advance if the linker will
         	                # find it or not.
         	#
         	# Now search for Numpy or Numeric
-        	if python -c "import numpy" > /dev/null 2>&1; then
+        	if @PYTHON@ -c "import numpy" > /dev/null 2>&1; then
         	    NUMPY_PRESENT=yes
-        	    NUMPY_INC_DIR=`python -c "import numpy; print(numpy.__path__[0] + '/core/include')"`
+        	    NUMPY_INC_DIR=`@PYTHON@ -c "import numpy; print(numpy.__path__[0] + '/core/include')"`
         	    if [ -e "$NUMPY_INC_DIR/numpy/arrayobject.h" ]; then
         		NUMPY_INC_PRESENT=yes
         	    else
         		NUMPY_INC_PRESENT=no
         	    fi
-        	elif  python -c "import Numeric"> /dev/null 2>&1; then
+        	elif  @PYTHON@ -c "import Numeric"> /dev/null 2>&1; then
         	    NUMERIC_PRESENT=yes
         	fi
         	# Search for sqlite3
-        	if python -c "import sqlite3" > /dev/null 2>&1; then
+        	if @PYTHON@ -c "import sqlite3" > /dev/null 2>&1; then
         	    SQLITE3_PRESENT=yes
         	fi
             fi
         else
             gagenv_message "Python not found in your \$PATH"
@@ -536,29 +536,29 @@ EOF
         fi
         if file_present "libatm2003." "${DIR}"; then
             ATM2003_PRESENT=yes
             ATM2003_LIB_DIR=$DIR
         fi
-        if file_present "liblapack." "${DIR}"; then
+        if file_present "libLAPACK." "${DIR}"; then
             LAPACK_PRESENT=yes
             LAPACK_LIB_DIR=$DIR
         fi
-        if file_present "libblas." "${DIR}"; then
+        if file_present "libBLAS." "${DIR}"; then
             BLAS_PRESENT=yes
             BLAS_LIB_DIR=$DIR
         fi
         if file_present "libslatec." "${DIR}"; then
             SLATEC_PRESENT=yes
             SLATEC_LIB_DIR=$DIR
         fi
-        if file_present "libfftw3." "${DIR}"; then
-            FFTW3_PRESENT=yes
-            FFTW3_LIB_DIR=$DIR
-            if file_present "libfftw3f." "${DIR}"; then
-        	FFTW3F_PRESENT=yes
-            fi
-        fi
+#        if file_present "libfftw3." "${DIR}"; then
+#            FFTW3_PRESENT=yes
+#            FFTW3_LIB_DIR=$DIR
+#            if file_present "libfftw3f." "${DIR}"; then
+#        	FFTW3F_PRESENT=yes
+#            fi
+#        fi
         if file_present "libasdmStandalone." "${DIR}"; then
             SDM_PRESENT=yes
             if [ "$SDM_PRESENT" = "yes" ]; then
         	SDM_LIB_DIR=$DIR
             fi
@@ -588,10 +588,12 @@ EOF
     IFS=$OLDIFS
     #
     XML_PRESENT="yes"
     #
     unset GAG_LIB_DEP_PATH GAG_INC_DEP_PATH
+    GAG_INC_DEP_PATH=$GAG_INC_DEP_PATH:@PREFIX@/include
+    GAG_LIB_DEP_PATH=$GAG_INC_DEP_PATH:@PREFIX@/lib
     #
     if [ "$X11_INC" = "yes" ]; then
         gagenv_message "Found X11 header  in $X11_INC_DIR"
         GAG_INC_DEP_PATH=$GAG_INC_DEP_PATH:$X11_INC_DIR
     else
make: use frameworks for lapack

diff --git a/admin/Makefile.build b/admin/Makefile.build
--- a/admin/Makefile.build
+++ b/admin/Makefile.build
@@ -353,13 +353,13 @@ endif
 ###########################################################################
 # The following targets are there to avoid make error (target search) when 
 # only the shared libraries are installed (i.e. the corresponding archive 
 # libraries are missing).
 
--lblas:
+-framework:
 
--llapack:
+Accelerate:
 
 -lslatec:
 
 -lX11:
 
diff --git a/admin/Makefile.def b/admin/Makefile.def
--- a/admin/Makefile.def
+++ b/admin/Makefile.def
@@ -536,11 +536,11 @@ endif
 STDCpp_LIB += @STDCXXLIB@
 
 ###########################################################################
 # Kernel libraries
 
-LEGACY_LIBS = -lslatec -llapack -lblas
+LEGACY_LIBS = -lslatec -framework Accelerate
 _GAG_LIBS = -lggui -lgcore -lgio -lgwcs -lgmath -lgsys -lginc
 ifndef GAG_WIN32
   GAG_LIBS = $(_GAG_LIBS)
 else
   GAG_LIBS = -lgkernel
diff --git a/legacy/slatec/Makefile b/legacy/slatec/Makefile
--- a/legacy/slatec/Makefile
+++ b/legacy/slatec/Makefile
@@ -22,11 +22,11 @@ M-all.o N-all.o O-all.o  Q-all.o R-all.o
 Sd-slatec.o Se-slatec.o Sg-slatec.o Si-slatec.o Sln-slatec.o So-slatec.o    \
 Sp-slatec.o Sqr-slatec.o Ss-slatec.o St-slatec.o Suz-slatec.o T-all.o	    \
 U-all.o V-all.o W-all.o X-all.o Y-all.o Z-all.o d1mach.o i1mach.o pimach.o  \
 r1mach.o dummy.o P-all.o P-value.o Dp-1vlu.o 
 
-LIB_DEPENDS = -llapack -lblas
+LIB_DEPENDS = -framework Accelerate
 
 ifeq ($(GAG_COMPILER_KIND),ifc)
   OPTION_FFLAGS = 
 endif
 ifeq ($(GAG_COMPILER_KIND),ifort)
diff --git a/packages/clic/lib/Makefile b/packages/clic/lib/Makefile
--- a/packages/clic/lib/Makefile
+++ b/packages/clic/lib/Makefile
@@ -62,11 +62,11 @@ CLIC_LIB_OBJECTS = blockdata.o check.o c
         sg_line_table.o table_passband.o clic_index.o
 
 # Mathematical library dependency
 ifeq ($(LINEAR),lapack)
   LINEAR_LIB_OBJECTS = singular.o mth_lapack.o
-  LINEAR_LIB_DEPENDS = -llapack -lblas
+  LINEAR_LIB_DEPENDS = -framework Accelerate
 else 
   ifeq ($(LINEAR),nag)
     LINEAR_LIB_OBJECTS = mth_nag.o
     LINEAR_LIB_DEPENDS = -lnag
   else	
