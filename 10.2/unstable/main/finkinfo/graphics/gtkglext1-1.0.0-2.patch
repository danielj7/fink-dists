diff -Nurd -x'*~' gtkglext-1.0.0.orig/gdk/x11/gdkglquery-x11.c gtkglext-1.0.0/gdk/x11/gdkglquery-x11.c
--- gtkglext-1.0.0.orig/gdk/x11/gdkglquery-x11.c	2003-05-15 16:21:58.000000000 -0400
+++ gtkglext-1.0.0/gdk/x11/gdkglquery-x11.c	2003-07-02 18:25:49.000000000 -0400
@@ -29,6 +29,10 @@
 #include <gdk/gdkdisplay.h>
 #endif /* GDKGLEXT_MULTIHEAD_SUPPORT */
 
+#ifdef __APPLE__
+#include <mach-o/dyld.h>
+#endif /* __APPLE__ */
+
 /**
  * gdk_gl_query_extension:
  *
@@ -208,6 +212,150 @@
  *
  * Return value: the address of the function named by @proc_name.
  **/
+
+#ifdef __APPLE__
+
+#define _GDK_GL_LIBGL_PATH  "/usr/X11R6/lib/libGL.1.dylib"
+#define _GDK_GL_LIBGLU_PATH "/usr/X11R6/lib/libGLU.1.dylib"
+
+GdkGLProc
+gdk_gl_get_proc_address (const char *proc_name)
+{
+  typedef GdkGLProc (*__glXGetProcAddressProc) (const GLubyte *);
+  static __glXGetProcAddressProc glx_get_proc_address = NULL;
+  static gboolean initialized = FALSE;
+  const char *image_name;
+  static const struct mach_header *libgl_image = NULL;
+  static const struct mach_header *libglu_image = NULL;
+  NSSymbol symbol;
+  char *symbol_name;
+  GdkGLProc proc_address = NULL;
+
+  GDK_GL_NOTE (FUNC, g_message (" - gdk_gl_get_proc_address ()"));
+
+  if (strncmp ("glu", proc_name, 3) != 0)
+    {
+      /* libGL */
+
+      if (libgl_image == NULL)
+        {
+          image_name = g_getenv ("GDK_GL_LIBGL_PATH");
+          if (image_name == NULL)
+            image_name = _GDK_GL_LIBGL_PATH;
+
+          GDK_GL_NOTE (MISC, g_message (" - Add Mach-O image %s", image_name));
+
+          libgl_image = NSAddImage (image_name, NSADDIMAGE_OPTION_RETURN_ON_ERROR);
+          if (libgl_image == NULL)
+            {
+              g_warning ("Cannot add Mach-O image %s", image_name);
+              return NULL;
+            }
+        }
+
+      if (!initialized)
+        {
+          /*
+           * Look up glXGetProcAddress () function.
+           */
+
+          symbol = NSLookupSymbolInImage (libgl_image,
+                                          "_glXGetProcAddress",
+                                          NSLOOKUPSYMBOLINIMAGE_OPTION_BIND |
+                                          NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR);
+          if (symbol == NULL)
+            {
+              symbol = NSLookupSymbolInImage (libgl_image,
+                                              "_glXGetProcAddressARB",
+                                              NSLOOKUPSYMBOLINIMAGE_OPTION_BIND |
+                                              NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR);
+              if (symbol == NULL)
+                symbol = NSLookupSymbolInImage (libgl_image,
+                                                "_glXGetProcAddressEXT",
+                                                NSLOOKUPSYMBOLINIMAGE_OPTION_BIND |
+                                                NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR);
+            }
+
+          GDK_GL_NOTE (MISC, g_message (" - glXGetProcAddress () - %s",
+                                        symbol ? "supported" : "not supported"));
+
+          if (symbol != NULL)
+            glx_get_proc_address = NSAddressOfSymbol (symbol);
+
+          initialized = TRUE;
+        }
+
+      /* Try glXGetProcAddress () */
+
+      if (glx_get_proc_address != NULL)
+        {
+          proc_address = glx_get_proc_address (proc_name);
+
+          GDK_GL_NOTE (IMPL, g_message (" * glXGetProcAddress () - %s",
+                                        proc_address ? "succeeded" : "failed"));
+
+          if (proc_address != NULL)
+            return proc_address;
+        }
+
+      /* Try Mach-O dyld */
+
+      symbol_name = g_strconcat ("_", proc_name, NULL);
+
+      symbol = NSLookupSymbolInImage (libgl_image,
+                                      symbol_name,
+                                      NSLOOKUPSYMBOLINIMAGE_OPTION_BIND |
+                                      NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR);
+
+      GDK_GL_NOTE (MISC, g_message (" - NSLookupSymbolInImage () - %s",
+                                    symbol ? "succeeded" : "failed"));
+
+      if (symbol)
+        proc_address = NSAddressOfSymbol (symbol);
+
+      g_free (symbol_name);
+    }
+  else
+    {
+      /* libGLU */
+
+      if (libglu_image == NULL)
+        {
+          image_name = g_getenv ("GDK_GL_LIBGLU_PATH");
+          if (image_name == NULL)
+            image_name = _GDK_GL_LIBGLU_PATH;
+
+          GDK_GL_NOTE (MISC, g_message (" - Add Mach-O image %s", image_name));
+
+          libglu_image = NSAddImage (image_name, NSADDIMAGE_OPTION_RETURN_ON_ERROR);
+          if (libglu_image == NULL)
+            {
+              g_warning ("Cannot add Mach-O image %s", image_name);
+              return NULL;
+            }
+        }
+
+      symbol_name = g_strconcat ("_", proc_name, NULL);
+
+      symbol = NSLookupSymbolInImage (libglu_image,
+                                      symbol_name,
+                                      NSLOOKUPSYMBOLINIMAGE_OPTION_BIND |
+                                      NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR);
+
+      GDK_GL_NOTE (MISC, g_message (" - NSLookupSymbolInImage () - %s",
+                                    symbol ? "succeeded" : "failed"));
+
+      if (symbol)
+        proc_address = NSAddressOfSymbol (symbol);
+
+      g_free (symbol_name);
+    }
+
+  return proc_address;
+}
+
+#else  /* __APPLE__ */
+
 GdkGLProc
 gdk_gl_get_proc_address (const char *proc_name)
 {
@@ -345,6 +493,8 @@
   return proc_address;
 }
 
+#endif /* __APPLE__ */
+
 /*< private >*/
 void
 _gdk_x11_gl_print_glx_info (Display *xdisplay,
