diff -ur cmake-2.0.2/Modules/FindOpenGL.cmake cmake-2.0.2.corr/Modules/FindOpenGL.cmake
--- cmake-2.0.2/Modules/FindOpenGL.cmake	Sat May  1 16:07:41 2004
+++ cmake-2.0.2.corr/Modules/FindOpenGL.cmake	Mon Jun 28 13:39:54 2004
@@ -97,9 +97,9 @@
   IF (OPENGL_gl_LIBRARY)
     INCLUDE( ${CMAKE_ROOT}/Modules/FindX11.cmake )
     IF (X11_FOUND)
-      IF (NOT APPLE)
+#      IF (NOT APPLE)
         SET (OPENGL_LIBRARIES ${X11_LIBRARIES})
-      ENDIF (NOT APPLE)
+#      ENDIF (NOT APPLE)
     ENDIF (X11_FOUND)
   ENDIF (OPENGL_gl_LIBRARY)
 
diff -ur cmake-2.0.2/Modules/Platform/Darwin.cmake cmake-2.0.2.corr/Modules/Platform/Darwin.cmake
--- cmake-2.0.2/Modules/Platform/Darwin.cmake	Wed Apr 28 19:21:56 2004
+++ cmake-2.0.2.corr/Modules/Platform/Darwin.cmake	Mon Jun 28 13:38:54 2004
@@ -10,6 +10,9 @@
 IF("${CMAKE_BACKWARDS_COMPATIBILITY}" MATCHES "^1\\.[0-6]$")
   SET(CMAKE_SHARED_MODULE_CREATE_C_FLAGS
     "${CMAKE_SHARED_MODULE_CREATE_C_FLAGS} -flat_namespace -undefined suppress")
+ELSE("${CMAKE_BACKWARDS_COMPATIBILITY}" MATCHES "^1\\.[0-6]$")
+  SET(CMAKE_SHARED_MODULE_CREATE_C_FLAGS
+    "${CMAKE_SHARED_MODULE_CREATE_C_FLAGS} -undefined dynamic_lookup -bind_at_load")
 ENDIF("${CMAKE_BACKWARDS_COMPATIBILITY}" MATCHES "^1\\.[0-6]$")
 
 IF(NOT XCODE)

Index: Source/cmTarget.cxx
===================================================================
RCS file: /cvsroot/CMake/CMake/Source/cmTarget.cxx,v
retrieving revision 1.96.2.2
retrieving revision 1.100
diff -u -b -w -r1.96.2.2 -r1.100
--- cmake-2.4.2/Source/cmTarget.cxx	14 May 2006 19:22:43 -0000	1.96.2.2
+++ cmake-2.4.2/Source/cmTarget.cxx	5 Jun 2006 17:45:43 -0000	1.100
@@ -3,8 +3,8 @@
   Program:   CMake - Cross-Platform Makefile Generator
   Module:    $RCSfile: cmTarget.cxx,v $
   Language:  C++
-  Date:      $Date: 2006/05/14 19:22:43 $
-  Version:   $Revision: 1.96.2.2 $
+  Date:      $Date: 2006/06/05 17:45:43 $
+  Version:   $Revision: 1.100 $
 
   Copyright (c) 2002 Kitware, Inc., Insight Consortium.  All rights reserved.
   See Copyright.txt or http://www.cmake.org/HTML/Copyright.html for details.
@@ -23,6 +23,11 @@
 #include <set>
 #include <queue>
 #include <stdlib.h> // required for atof
+const char* cmTarget::TargetTypeNames[] = {
+  "EXECUTABLE", "STATIC_LIBRARY",
+  "SHARED_LIBRARY", "MODULE_LIBRARY", "UTILITY", "GLOBAL_TARGET",
+  "INSTALL_FILES", "INSTALL_PROGRAMS", "INSTALL_DIRECTORY"
+};
 
 //----------------------------------------------------------------------------
 cmTarget::cmTarget()
@@ -1316,19 +1321,36 @@
     soversion = version;
     }
 
+  // Get the components of the library name.
+  std::string prefix;
+  std::string base;
+  std::string suffix;
+  this->GetFullNameInternal(type, config, false, prefix, base, suffix);
+
   // The library name.
-  name = this->GetFullNameInternal(type, config, false);
+  name = prefix+base+suffix;
 
   // The library's soname.
+#if defined(__APPLE__)
+  soName = prefix+base;
+#else
   soName = name;
+#endif
   if(soversion)
     {
     soName += ".";
     soName += soversion;
     }
+#if defined(__APPLE__)
+  soName += suffix;
+#endif
 
   // The library's real name on disk.
+#if defined(__APPLE__)
+  realName = prefix+base;
+#else
   realName = name;
+#endif
   if(version)
     {
     realName += ".";
@@ -1339,6 +1361,9 @@
     realName += ".";
     realName += soversion;
     }
+#if defined(__APPLE__)
+  realName += suffix;
+#endif
 
   // The import library name.
   if(type == cmTarget::SHARED_LIBRARY)
Index: Source/cmTarget.h
===================================================================
RCS file: /cvsroot/CMake/CMake/Source/cmTarget.h,v
retrieving revision 1.62.2.1
retrieving revision 1.64
diff -u -b -w -r1.62.2.1 -r1.64
--- cmake-2.4.2/Source/cmTarget.h	14 May 2006 19:22:44 -0000	1.62.2.1
+++ cmake-2.4.2/Source/cmTarget.h	19 May 2006 17:02:12 -0000	1.64
@@ -3,8 +3,8 @@
   Program:   CMake - Cross-Platform Makefile Generator
   Module:    $RCSfile: cmTarget.h,v $
   Language:  C++
-  Date:      $Date: 2006/05/14 19:22:44 $
-  Version:   $Revision: 1.62.2.1 $
+  Date:      $Date: 2006/05/19 17:02:12 $
+  Version:   $Revision: 1.64 $
 
   Copyright (c) 2002 Kitware, Inc., Insight Consortium.  All rights reserved.
   See Copyright.txt or http://www.cmake.org/HTML/Copyright.html for details.
@@ -36,7 +36,7 @@
   enum TargetType { EXECUTABLE, STATIC_LIBRARY,
                     SHARED_LIBRARY, MODULE_LIBRARY, UTILITY, GLOBAL_TARGET,
                     INSTALL_FILES, INSTALL_PROGRAMS, INSTALL_DIRECTORY};
-
+  static const char* TargetTypeNames[];
   enum CustomCommandType { PRE_BUILD, PRE_LINK, POST_BUILD };
 
   /**
Index: Source/cmFileCommand.cxx
===================================================================
RCS file: /cvsroot/CMake/CMake/Source/cmFileCommand.cxx,v
retrieving revision 1.56.2.3
retrieving revision 1.62
diff -u -b -w -r1.56.2.3 -r1.62
--- cmake-2.4.2/Source/cmFileCommand.cxx	11 May 2006 20:05:56 -0000	1.56.2.3
+++ cmake-2.4.2/Source/cmFileCommand.cxx	27 Jun 2006 13:56:21 -0000	1.62
@@ -3,8 +3,8 @@
   Program:   CMake - Cross-Platform Makefile Generator
   Module:    $RCSfile: cmFileCommand.cxx,v $
   Language:  C++
-  Date:      $Date: 2006/05/11 20:05:56 $
-  Version:   $Revision: 1.56.2.3 $
+  Date:      $Date: 2006/06/27 13:56:21 $
+  Version:   $Revision: 1.62 $
 
   Copyright (c) 2002 Kitware, Inc., Insight Consortium.  All rights reserved.
   See Copyright.txt or http://www.cmake.org/HTML/Copyright.html for details.
@@ -233,6 +233,11 @@
         }
       g.SetRelative(i->c_str());
       ++i;
+      if(i == args.end())
+        {
+        this->SetError("GLOB requires a glob expression after the directory");
+        return false;
+        }
       }
     if ( !cmsys::SystemTools::FileIsFullPath(i->c_str()) )
       {
@@ -775,15 +780,10 @@
           std::string libname = toFile;
           std::string soname = toFile;
           std::string soname_nopath = fromName;
-          soname += ".";
-          soname += lib_soversion;
-          soname_nopath += ".";
-          soname_nopath += lib_soversion;
-
-          fromName += ".";
-          fromName += lib_version;
-          toFile += ".";
-          toFile += lib_version;
+          this->ComputeVersionedName(soname, lib_soversion);
+          this->ComputeVersionedName(soname_nopath, lib_soversion);
+          this->ComputeVersionedName(fromName, lib_version);
+          this->ComputeVersionedName(toFile, lib_version);
 
           cmSystemTools::RemoveFile(soname.c_str());
           cmSystemTools::RemoveFile(libname.c_str());
@@ -946,6 +946,26 @@
 }
 
 //----------------------------------------------------------------------------
+void cmFileCommand::ComputeVersionedName(std::string& name,
+                                         const char* version)
+{
+#if defined(__APPLE__)
+  std::string ext;
+  kwsys_stl::string::size_type dot_pos = name.rfind(".");
+  if(dot_pos != name.npos)
+    {
+    ext = name.substr(dot_pos, name.npos);
+    name = name.substr(0, dot_pos);
+    }
+#endif
+  name += ".";
+  name += version;
+#if defined(__APPLE__)
+  name += ext;
+#endif
+}
+
+//----------------------------------------------------------------------------
 bool cmFileCommand::HandleRelativePathCommand(
   std::vector<std::string> const& args)
 {
Index: Source/cmFileCommand.h
===================================================================
RCS file: /cvsroot/CMake/CMake/Source/cmFileCommand.h,v
retrieving revision 1.16.2.1
retrieving revision 1.18
diff -u -b -w -r1.16.2.1 -r1.18
--- cmake-2.4.2/Source/cmFileCommand.h	11 May 2006 02:15:09 -0000	1.16.2.1
+++ cmake-2.4.2/Source/cmFileCommand.h	5 Jun 2006 17:45:43 -0000	1.18
@@ -3,8 +3,8 @@
   Program:   CMake - Cross-Platform Makefile Generator
   Module:    $RCSfile: cmFileCommand.h,v $
   Language:  C++
-  Date:      $Date: 2006/05/11 02:15:09 $
-  Version:   $Revision: 1.16.2.1 $
+  Date:      $Date: 2006/06/05 17:45:43 $
+  Version:   $Revision: 1.18 $
 
   Copyright (c) 2002 Kitware, Inc., Insight Consortium.  All rights reserved.
   See Copyright.txt or http://www.cmake.org/HTML/Copyright.html for details.
@@ -125,6 +125,7 @@
   bool HandleRelativePathCommand(std::vector<std::string> const& args);
   bool HandleCMakePathCommand(std::vector<std::string> const& args,
                               bool nativePath);
+  void ComputeVersionedName(std::string& name, const char* version);
 };
 
 
