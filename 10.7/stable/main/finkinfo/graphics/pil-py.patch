diff --git a/setup.py b/setup.py
index 40d5057..dbf677f 100644
--- a/setup.py
+++ b/setup.py
@@ -201,24 +201,24 @@ class pil_build_ext(build_ext):
 
         elif sys.platform == "darwin":
             # attempt to make sure we pick freetype2 over other versions
-            _add_directory(include_dirs, "/sw/include/freetype2")
-            _add_directory(include_dirs, "/sw/lib/freetype2/include")
+            _add_directory(include_dirs, "@PREFIX@/include/freetype2")
+            _add_directory(include_dirs, "@PREFIX@/lib/freetype2/include")
             # fink installation directories
-            _add_directory(library_dirs, "/sw/lib")
-            _add_directory(include_dirs, "/sw/include")
+            _add_directory(library_dirs, "@PREFIX@/lib")
+            _add_directory(include_dirs, "@PREFIX@include")
             # darwin ports installation directories
-            _add_directory(library_dirs, "/opt/local/lib")
-            _add_directory(include_dirs, "/opt/local/include")
+#             _add_directory(library_dirs, "/opt/local/lib")
+#             _add_directory(include_dirs, "/opt/local/include")
 
             # if Homebrew is installed, use its lib and include directories
-            import subprocess
-            try:
-                prefix = subprocess.check_output(
-                    ['brew', '--prefix']
-                ).strip().decode('latin1')
-            except:
-                # Homebrew not installed
-                prefix = None
+#             import subprocess
+#             try:
+#                 prefix = subprocess.check_output(
+#                     ['brew', '--prefix']
+#                 ).strip().decode('latin1')
+#             except:
+#                 # Homebrew not installed
+            prefix = None
 
             ft_prefix = None
 
@@ -346,9 +346,6 @@ class pil_build_ext(build_ext):
                 _add_directory(include_dirs, tcl_dir)
 
         # standard locations
-        _add_directory(library_dirs, "/usr/local/lib")
-        _add_directory(include_dirs, "/usr/local/include")
-
         _add_directory(library_dirs, "/usr/lib")
         _add_directory(include_dirs, "/usr/include")
 
@@ -460,7 +457,8 @@ class pil_build_ext(build_ext):
                     feature.freetype = "freetype"
                     feature.freetype_version = freetype_version
                     if dir:
-                        _add_directory(self.compiler.include_dirs, dir, 0)
+                        # ft also needs its subdir; place after the one local -I flag
+                        _add_directory(self.compiler.include_dirs, dir, 1)
 
         if feature.want('lcms'):
             if _find_include_file(self, "lcms2.h"):
@@ -570,29 +568,7 @@ class pil_build_ext(build_ext):
             exts.append(Extension(
                 "PIL._webp", ["_webp.c"], libraries=libs, define_macros=defs))
 
-        if sys.platform == "darwin":
-            # locate Tcl/Tk frameworks
-            frameworks = []
-            framework_roots = [
-                "/Library/Frameworks",
-                "/System/Library/Frameworks"]
-            for root in framework_roots:
-                if (
-                        os.path.exists(os.path.join(root, "Tcl.framework")) and
-                        os.path.exists(os.path.join(root, "Tk.framework"))):
-                    print("--- using frameworks at %s" % root)
-                    frameworks = ["-framework", "Tcl", "-framework", "Tk"]
-                    dir = os.path.join(root, "Tcl.framework", "Headers")
-                    _add_directory(self.compiler.include_dirs, dir, 0)
-                    dir = os.path.join(root, "Tk.framework", "Headers")
-                    _add_directory(self.compiler.include_dirs, dir, 1)
-                    break
-            if frameworks:
-                exts.append(Extension(
-                    "PIL._imagingtk", ["_imagingtk.c", "Tk/tkImaging.c"],
-                    extra_compile_args=frameworks, extra_link_args=frameworks))
-                feature.tcl = feature.tk = 1  # mark as present
-        elif feature.tcl and feature.tk:
+        if feature.tcl and feature.tk:
             exts.append(Extension(
                 "PIL._imagingtk", ["_imagingtk.c", "Tk/tkImaging.c"],
                 libraries=[feature.tcl, feature.tk]))
