--- screen-4.0.2/Makefile.in.orig	Thu Feb 14 07:36:33 2002
+++ screen-4.0.2/Makefile.in	Mon Jun 24 15:28:21 2002
@@ -74,7 +74,7 @@
 	-if [ -f $(DESTDIR)$(bindir)/$(SCREEN) ] && [ ! -f $(DESTDIR)$(bindir)/$(SCREEN).old ]; \
 		then mv $(DESTDIR)$(bindir)/$(SCREEN) $(DESTDIR)$(bindir)/$(SCREEN).old; fi
 	$(INSTALL_PROGRAM) screen $(DESTDIR)$(bindir)/$(SCREEN)
-	-chown root $(DESTDIR)$(bindir)/$(SCREEN) && chmod 4755 $(DESTDIR)$(bindir)/$(SCREEN)
+#	-chown root $(DESTDIR)$(bindir)/$(SCREEN) && chmod 4755 $(DESTDIR)$(bindir)/$(SCREEN)
 # This doesn't work if $(bindir)/screen is a symlink
 	-if [ -f $(DESTDIR)$(bindir)/screen ] && [ ! -f $(DESTDIR)$(bindir)/screen.old ]; then mv $(DESTDIR)$(bindir)/screen $(DESTDIR)$(bindir)/screen.old; fi
 	rm -f $(DESTDIR)$(bindir)/screen
--- screen-4.0.2/osdef.h.in.orig	Sat Apr 28 08:26:43 2001
+++ screen-4.0.2/osdef.h.in	Mon Jun 24 16:12:04 2002
@@ -87,16 +87,31 @@
 extern int   setresuid __P((int, int, int));
 extern int   setresgid __P((int, int, int));
 # else
+#  if defined(__MACH__) && defined(__APPLE__)
+extern int   setreuid __P((uid_t, uid_t));
+extern int   setregid __P((gid_t, gid_t));
+#  else
 extern int   setreuid __P((int, int));
 extern int   setregid __P((int, int));
+#  endif
 # endif
 #endif
+
 #ifdef HAVE_SETEUID
+# if defined(__MACH__) && defined(__APPLE__)
+extern int   seteuid __P((uid_t));
+extern int   setegid __P((gid_t));
+# else
 extern int   seteuid __P((int));
 extern int   setegid __P((int));
+# endif
 #endif
 
+#if defined(__MACH__) && defined(__APPLE__)
+extern char *crypt __P((const char *, const char *));
+#else
 extern char *crypt __P((char *, char *));
+#endif
 extern int   putenv __P((char *));
 
 extern int   tgetent __P((char *, char *));
@@ -116,25 +131,55 @@
 extern int   kill __P((int, int));
 
 extern int   getpid __P((void));
+
+#if defined(__MACH__) && defined(__APPLE__)
+extern uid_t getuid __P((void));
+#else
 extern int   getuid __P((void)); 
+#endif
+
+#if defined(__MACH__) && defined(__APPLE__)
+extern uid_t geteuid __P((void));
+extern gid_t getgid __P((void));
+#else
 extern int   geteuid __P((void));
 extern int   getgid __P((void)); 
+#endif
+
+#if defined(__MACH__) && defined(__APPLE__)
+extern gid_t getegid __P((void));
+#else
 extern int   getegid __P((void));
+#endif
+
 struct passwd;	/* for getpwuid __P */
 extern struct passwd *getpwuid __P((int));
 extern struct passwd *getpwnam __P((char *));
 extern int   isatty __P((int)); 
+#if defined(__MACH__) && defined(__APPLE__)
+extern int   chown __P((const char *, uid_t, gid_t));
+#else
 extern int   chown __P((char *, int, int)); 
+#endif
 extern int   rename __P((char *, char *));
 
 extern int   gethostname __P((char *, int));
+#if defined(__MACH__) && defined(__APPLE__)
+extern off_t lseek __P((int, off_t, int));
+#else
 extern int   lseek __P((int, int, int));
+#endif
 extern void  exit __P((int));
 extern char *getwd __P((char *));
 extern char *getenv __P((char *));
 extern time_t time __P((time_t *));
 
+#if defined(__MACH__) && defined(__APPLE__)
+extern char *getpass __P((const char *));
+#else
 extern char *getpass __P((char *));
+#endif
+
 extern char *getlogin __P((void));
 extern char *ttyname __P((int));
 
@@ -148,7 +193,11 @@
 extern void  free __P((char *));
 
 #ifdef NAMEDPIPE
+# if defined(__MACH__) && defined(__APPLE__)
+extern int   mknod __P((const char *, mode_t, dev_t));
+# else
 extern int   mknod __P((char *, int, int));
+# endif
 #else
 struct sockaddr;	/* for connect __P */
 extern int   socket __P((int, int, int));

--- screen-4.0.2/screen.csh.orig	Thu Jun 27 05:51:29 2002
+++ screen-4.0.2/screen.csh	Thu Jun 27 05:51:22 2002
@@ -0,0 +1,6 @@
+# screen.csh
+if ($?version) then
+   if ("$version" =~ tcsh*) then
+      complete screen n@-r@F:/tmp/uscreens/S-$USER@
+   endif
+endif

