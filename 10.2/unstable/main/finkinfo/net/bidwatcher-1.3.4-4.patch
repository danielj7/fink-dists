--- bidwatcher-1.3.4/netstuff.cpp	2002-06-05 18:52:08.000000000 -0700
+++ bidwatcher-1.3.4-patched/netstuff.cpp	2002-08-24 05:10:00.000000000 -0700
@@ -240,13 +240,14 @@
    int    buffLength,recerr;
    int    socketID;
    char   lineBuff[1024];
-   char   htmlBuff[HUGEBUFF];
+   char   *htmlBuff;
 
    struct    sockaddr_in soc_in;
    int	  err;
    fd_set fds;
    struct timeval tm;
 
+   htmlBuff = malloc(HUGEBUFF);
    GTimer * time_since_start=g_timer_new();
    g_timer_start(time_since_start);
 
@@ -261,6 +262,7 @@
    if (hostinfo==NULL) {
      // DNS error
      free(time_since_start);
+     free(htmlBuff);
      return NET_NETERROR;
    }
    soc_in.sin_addr=*(struct in_addr*)hostinfo->h_addr;
@@ -269,6 +271,7 @@
    socketID = socket(AF_INET, SOCK_STREAM, 0);
    if (socketID < 0) {
      free(time_since_start);
+     free(htmlBuff);
      return NET_NETERROR;
    }
 
@@ -289,6 +292,7 @@
 #endif
 	       CloseSocket(socketID);
 	       free(time_since_start);
+               free(htmlBuff);
 	       return NET_TIMEOUT;
 	   }
        }
@@ -300,6 +304,7 @@
 #endif
 	   CloseSocket(socketID);
 	   free(time_since_start);
+           free(htmlBuff);
 	   return NET_NETERROR;
        }
    }
@@ -326,6 +331,7 @@
 #endif
      CloseSocket(socketID);
      free(time_since_start);
+     free(htmlBuff);
      return NET_NETERROR;
    }
 
@@ -340,6 +346,7 @@
 #endif
        CloseSocket(socketID);
        free(time_since_start);
+       free(htmlBuff);
        return NET_NETERROR;
    }
 
@@ -354,6 +361,7 @@
       if (cancelPressed) {
 	free(time_since_pkt);
 	free(time_since_start);
+        free(htmlBuff);
 	return NET_USERCANCEL;
       }
       if (counter == 5) {
@@ -363,6 +371,7 @@
 	  CloseSocket(socketID);
 	  free(time_since_pkt);
 	  free(time_since_start);
+          free(htmlBuff);
 	  return NET_TIMEOUT;
 	}
 
@@ -370,6 +379,7 @@
 	  CloseSocket(socketID);
 	  free(time_since_pkt);
 	  free(time_since_start);
+          free(htmlBuff);
 	  return NET_TIMEOUT;
 	}
       }
@@ -403,11 +413,13 @@
    if (checkredir(url,htmlBuff)) {
      free(time_since_pkt);
      free(time_since_start);
+     free(htmlBuff);
      return fetchURL(url, Buff, timeOut);
    } else {
      if (!goodcall) {
        free(time_since_pkt);
        free(time_since_start);
+       free(htmlBuff);
        return NET_NETERROR;
      } 
      /* make and copy buffer */
@@ -417,6 +429,7 @@
 
      free(time_since_start);
      free(time_since_pkt);
+     free(htmlBuff);
      return NET_SUCCESS; 
    }
 } 
