diff -rauN ldapvi-1.7/NEWS ldapvi-1.7-p1/NEWS
--- ldapvi-1.7/NEWS	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/NEWS	2017-02-21 23:59:13.000000000 +0100
@@ -1,3 +1,6 @@
+1.8 2007-mm-dd
+  - new configuration option `unpaged-help'
+
 1.7 2007-05-05
   - Fixed buffer overrun in home_filename(), thanks to Thomas Friebel.
 
diff -rauN ldapvi-1.7/arguments.c ldapvi-1.7-p1/arguments.c
--- ldapvi-1.7/arguments.c	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/arguments.c	2017-02-21 23:58:30.000000000 +0100
@@ -115,7 +115,7 @@
 	OPTION_NOQUESTIONS, OPTION_LDAPSEARCH, OPTION_LDAPMODIFY,
 	OPTION_LDAPDELETE, OPTION_LDAPMODDN, OPTION_LDAPMODRDN, OPTION_ADD,
 	OPTION_CONFIG, OPTION_READ, OPTION_LDAP_CONF, OPTION_BIND,
-	OPTION_BIND_DIALOG
+	OPTION_BIND_DIALOG, OPTION_UNPAGED_HELP
 };
 
 static struct poptOption options[] = {
@@ -170,14 +170,16 @@
 	{"ldapdelete",	  0, 0, 0, OPTION_LDAPDELETE, 0, 0},
 	{"ldapmoddn",	  0, 0, 0, OPTION_LDAPMODDN, 0, 0},
 	{"ldapmodrdn",	  0, 0, 0, OPTION_LDAPMODRDN, 0, 0},
+	{"unpaged-help",  0, 0, 0, OPTION_UNPAGED_HELP, 0, 0},
 	{0, 0, 0, 0, 0}
 };
 
+static int usage_pagerp = 1;
 
 void
 usage(int fd, int rc)
 {
-	if (fd == -1 && rc == 0 && isatty(1)) {
+	if (usage_pagerp && fd == -1 && rc == 0 && isatty(1)) {
 		int fd;
 		int pid = pipeview(&fd);
 		write(fd, USAGE, strlen(USAGE));
@@ -479,6 +481,9 @@
 	case OPTION_LDAP_CONF:
 		result->profileonlyp = 0;
 		break;
+	case OPTION_UNPAGED_HELP:
+		usage_pagerp = 0;
+		break;
 	case 'p':
 		parse_configuration(arg, result, ctrls);
 		break;
diff -rauN ldapvi-1.7/common.h ldapvi-1.7-p1/common.h
--- ldapvi-1.7/common.h	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/common.h	2017-02-22 00:01:18.000000000 +0100
@@ -273,7 +273,7 @@
 char *home_filename(char *name);
 void read_ldapvi_history(void);
 void write_ldapvi_history(void);
-char *getline(char *prompt, char *value);
+char *ldapvi_getline(char *prompt, char *value);
 char *get_password();
 char *append(char *a, char *b);
 void *xalloc(size_t size);
diff -rauN ldapvi-1.7/config.h.in ldapvi-1.7-p1/config.h.in
--- ldapvi-1.7/config.h.in	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/config.h.in	2017-02-21 23:53:07.000000000 +0100
@@ -5,5 +5,6 @@
 #undef HAVE_OPENSSL
 #undef HAVE_GNUTLS
 #undef HAVE_SHA1
+#undef HAVE_MD5
 #undef RAND_PSEUDO_BYTES
 #undef HAVE_SASL
diff -rauN ldapvi-1.7/configure ldapvi-1.7-p1/configure
--- ldapvi-1.7/configure	2007-05-05 12:17:40.000000000 +0200
+++ ldapvi-1.7-p1/configure	2017-02-21 23:54:40.000000000 +0100
@@ -4937,6 +4937,100 @@
 done
 
 
+for ac_func in MD5
+do
+as_ac_var=`echo "ac_cv_func_$ac_func" | $as_tr_sh`
+{ echo "$as_me:$LINENO: checking for $ac_func" >&5
+echo $ECHO_N "checking for $ac_func... $ECHO_C" >&6; }
+if { as_var=$as_ac_var; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* Define $ac_func to an innocuous variant, in case <limits.h> declares $ac_func.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define $ac_func innocuous_$ac_func
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char $ac_func (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef $ac_func
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char $ac_func ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_$ac_func || defined __stub___$ac_func
+choke me
+#endif
+
+int
+main ()
+{
+return $ac_func ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  eval "$as_ac_var=yes"
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	eval "$as_ac_var=no"
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+ac_res=`eval echo '${'$as_ac_var'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+if test `eval echo '${'$as_ac_var'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+done
+
+
 for ac_func in RAND_pseudo_bytes
 do
 as_ac_var=`echo "ac_cv_func_$ac_func" | $as_tr_sh`
diff -rauN ldapvi-1.7/configure.in ldapvi-1.7-p1/configure.in
--- ldapvi-1.7/configure.in	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/configure.in	2017-02-21 23:50:53.000000000 +0100
@@ -73,11 +73,14 @@
 		AC_DEFINE(HAVE_GNUTLS)
 		AC_DEFINE(SHA_DIGEST_LENGTH,20)
 		;;
+	none)
+		;;
 	*)
 		AC_MSG_ERROR([invalid value --with-libcrypto=$with_libcrypto, expected openssl or gnutls])
 		;;
 esac
 AC_CHECK_FUNCS([SHA1])
+AC_CHECK_FUNCS([MD5])
 AC_CHECK_FUNCS([RAND_pseudo_bytes])
 
 AC_CHECK_LIB([crypt],[main])
diff -rauN ldapvi-1.7/ldapvi.1 ldapvi-1.7-p1/ldapvi.1
--- ldapvi-1.7/ldapvi.1	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/ldapvi.1	2017-02-22 00:00:24.000000000 +0100
@@ -41,7 +41,7 @@
 .TP
 \fB\-\-bind\-dialog\fR [never,auto,always]
 Interactive login dialog.
-.SS "SASL options (these parameters set --bind sasl):"
+.SS "SASL options (these parameters set \-\-bind sasl):"
 .HP
 \fB\-I\fR, \fB\-\-sasl\-interactive\fR Set \fB\-\-bind\-dialog\fR always.
 .TP
@@ -177,10 +177,10 @@
 Assuming a suitably configured LDAP library, run ldapvi without arguments
 to see all entries available. 
 
-Otherwise, try `ldapvi -h HOSTNAME --discover' to query the ROOT DSE for
+Otherwise, try `ldapvi \-h HOSTNAME \-\-discover' to query the ROOT DSE for
 available naming contexts.
 
-Once that works, run `ldapvi -h HOSTNAME --discover --config' to
+Once that works, run `ldapvi \-h HOSTNAME \-\-discover \-\-config' to
 generate sample configuration that can be pasted into ~/.ldaprc or
 /etc/ldap/ldap.conf.
 
diff -rauN ldapvi-1.7/ldapvi.1.in ldapvi-1.7-p1/ldapvi.1.in
--- ldapvi-1.7/ldapvi.1.in	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/ldapvi.1.in	2017-02-22 00:00:46.000000000 +0100
@@ -2,10 +2,10 @@
 Assuming a suitably configured LDAP library, run ldapvi without arguments
 to see all entries available. 
 
-Otherwise, try `ldapvi -h HOSTNAME --discover' to query the ROOT DSE for
+Otherwise, try `ldapvi \-h HOSTNAME \-\-discover' to query the ROOT DSE for
 available naming contexts.
 
-Once that works, run `ldapvi -h HOSTNAME --discover --config' to
+Once that works, run `ldapvi \-h HOSTNAME \-\-discover \-\-config' to
 generate sample configuration that can be pasted into ~/.ldaprc or
 /etc/ldap/ldap.conf.
 
diff -rauN ldapvi-1.7/ldapvi.c ldapvi-1.7-p1/ldapvi.c
--- ldapvi-1.7/ldapvi.c	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/ldapvi.c	2017-02-22 00:02:30.000000000 +0100
@@ -470,7 +470,7 @@
 		bo->authmethod = LDAP_AUTH_SASL;
 		puts("Switching to SASL authentication.");
 	}
-	bo->sasl_mech = getline("SASL mechanism", bo->sasl_mech);
+	bo->sasl_mech = ldapvi_getline("SASL mechanism", bo->sasl_mech);
 }
 
 static int
@@ -1414,7 +1414,7 @@
 	int nlines = 0;
 
 	if (print_binary_mode == PRINT_UTF8 && !cmdline->ldif) {
-		fputs("# -*- coding: utf-8 -*- vim:encoding=utf-8:\n", s);
+		fputs("# -*- coding: utf-8 -*- vim:fileencoding=utf-8:\n", s);
 		nlines++;
 	}
 	if (cmdline->ldif) {
diff -rauN ldapvi-1.7/manual/manual.xml ldapvi-1.7-p1/manual/manual.xml
--- ldapvi-1.7/manual/manual.xml	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/manual/manual.xml	2017-02-21 23:58:57.000000000 +0100
@@ -718,6 +718,10 @@
 		 suppress-configuration="suppress-configuration">
 	Print help on command line arguments.
       </parameter>
+      <parameter long="unpaged-help" brief="Disable pager for --help">
+	Disable the use of a pager
+	for <a href="#parameter-rename"><tt>--help</tt></a>.
+      </parameter>
       <parameter long="deleteoldrdn" brief="Delete the old RDN">
 	When changing the relative distinguished name to a new attribute
 	value, delete the old attribute value instead of keeping it.
diff -rauN ldapvi-1.7/misc.c ldapvi-1.7-p1/misc.c
--- ldapvi-1.7/misc.c	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/misc.c	2017-02-22 00:01:45.000000000 +0100
@@ -163,7 +163,9 @@
 
 	vi = getenv("VISUAL");
 	if (!vi) vi = getenv("EDITOR");
-	if (!vi) vi = "vi";
+	/* changed from "vi" as fallback to "sensible-editor" which is what
+	 * Debian really uses (closes: #367995) */
+	if (!vi) vi = "sensible-editor";
 
 	switch ( (childpid = fork())) {
 	case -1:
@@ -204,7 +206,9 @@
 	char *clear = tigetstr("clear");
 
 	pg = getenv("PAGER");
-	if (!pg) pg = "less";
+	/* changed from "less" as fallback to "sensible-pager" which is what
+	 * Debian really uses */
+	if (!pg) pg = "sensible-pager";
 
 	if (!invalidp(clear))
 		putp(clear);
@@ -231,7 +235,9 @@
 	int fds[2];
 
 	pg = getenv("PAGER");
-	if (!pg) pg = "less";
+	/* changed from "less" as fallback to "sensible-pager" which is what
+	 * Debian really uses */
+	if (!pg) pg = "sensible-pager";
 
 	if (!invalidp(clear))
 		putp(clear);
@@ -315,7 +321,7 @@
 }
 
 char *
-getline(char *prompt, char *value)
+ldapvi_getline(char *prompt, char *value)
 {
 	tdialog d;
 	init_dialog(&d, DIALOG_DEFAULT, prompt, value);
diff -rauN ldapvi-1.7/port.c ldapvi-1.7-p1/port.c
--- ldapvi-1.7/port.c	2007-05-05 12:17:26.000000000 +0200
+++ ldapvi-1.7-p1/port.c	2017-02-21 23:52:38.000000000 +0100
@@ -39,7 +39,7 @@
 #include <gnutls/gnutls.h>
 #include <gnutls/openssl.h>
 #else
-#error oops
+#warning Compiling without cryptographic routines.
 #endif
 
 #ifndef HAVE_RAND_PSEUDO_BYTES
@@ -148,15 +148,21 @@
 int
 g_string_append_md5(GString *string, char *key)
 {
+#ifdef HAVE_MD5
 	unsigned char tmp[MD5_DIGEST_LENGTH];
 	MD5((unsigned char *) key, strlen(key), tmp);
 	g_string_append_base64(string, tmp, sizeof(tmp));
 	return 1;
+#else
+	puts("Sorry, MD5 support not linked into ldapvi.");
+	return 0;
+#endif
 }
 
 int
 g_string_append_smd5(GString *string, char *key)
 {
+#ifdef HAVE_MD5
 	unsigned char rand[4];
 	unsigned char tmp[MD5_DIGEST_LENGTH + sizeof(rand)];
 	MD5_CTX MD5context;
@@ -172,4 +178,8 @@
 	g_string_append_base64(string, tmp, sizeof(tmp));
 
 	return 1;
+#else
+	puts("Sorry, SMD5 support not linked into ldapvi.");
+	return 0;
+#endif
 }
