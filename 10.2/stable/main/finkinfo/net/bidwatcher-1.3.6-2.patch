--- bidwatcher-1.3.6/netstuff.cpp.orig	2002-11-15 22:11:11.000000000 -0800
+++ bidwatcher-1.3.6/netstuff.cpp	2002-11-15 22:13:41.000000000 -0800
@@ -244,7 +244,7 @@
    int    socketID;
    char   UserAgent[256];
    char   lineBuff[1024];
-   char   htmlBuff[HUGEBUFF];
+   char   *htmlBuff;
 
    struct    utsname     utsbuf;
 
@@ -254,7 +254,8 @@
    struct timeval tm;
 
    *Buff = NULL;
-
+   
+   htmlBuff = (char *) malloc(HUGEBUFF);
    GTimer * time_since_start=g_timer_new();
    g_timer_start(time_since_start);
 
@@ -269,6 +270,7 @@
    if (hostinfo==NULL || (hostinfo->h_addr==NULL)) {
      // DNS error
      g_free(time_since_start);
+     free(htmlBuff);
      return NET_NETERROR;
    }
    soc_in.sin_addr=*(struct in_addr*)hostinfo->h_addr;
@@ -277,6 +279,7 @@
    socketID = socket(AF_INET, SOCK_STREAM, 0);
    if (socketID < 0) {
      g_free(time_since_start);
+     free(htmlBuff);
      return NET_NETERROR;
    }
 
@@ -297,6 +300,7 @@
 #endif
 	       CloseSocket(socketID);
 	       g_free(time_since_start);
+     	   free(htmlBuff);
 	       return NET_TIMEOUT;
 	   }
        }
@@ -334,6 +338,7 @@
 #endif
      CloseSocket(socketID);
      g_free(time_since_start);
+     free(htmlBuff);
      return NET_NETERROR;
    }
 
@@ -366,6 +371,7 @@
 #endif
        CloseSocket(socketID);
        g_free(time_since_start);
+       free(htmlBuff);
        return NET_NETERROR;
    }
 
@@ -380,6 +386,7 @@
       if (cancelPressed) {
 	g_free(time_since_pkt);
 	g_free(time_since_start);
+     free(htmlBuff);
 	return NET_USERCANCEL;
       }
       if (counter == 5) {
@@ -389,6 +396,7 @@
 	  CloseSocket(socketID);
 	  g_free(time_since_pkt);
 	  g_free(time_since_start);
+      free(htmlBuff);
 	  return NET_TIMEOUT;
 	}
 
@@ -396,6 +404,7 @@
 	  CloseSocket(socketID);
 	  g_free(time_since_pkt);
 	  g_free(time_since_start);
+      free(htmlBuff);
 	  return NET_TIMEOUT;
 	}
       }
@@ -429,11 +438,13 @@
    if (checkredir(url,htmlBuff)) {
      g_free(time_since_pkt);
      g_free(time_since_start);
+     free(htmlBuff);
      return fetchURL(url, 0, Buff, timeOut);
    } else {
      if (!goodcall) {
        g_free(time_since_pkt);
        g_free(time_since_start);
+       free(htmlBuff);
        return NET_NETERROR;
      } 
      /* make and copy buffer */
@@ -443,6 +454,7 @@
 
      g_free(time_since_start);
      g_free(time_since_pkt);
+     free(htmlBuff);
      return NET_SUCCESS; 
    }
 } 
