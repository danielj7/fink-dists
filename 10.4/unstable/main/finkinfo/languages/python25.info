Info2: <<
Package: python%type_pkg[python]
Version: 2.5.6
Revision: 2
Epoch: 1
Distribution: 10.4, 10.5
Type: python 2.5
Maintainer: Daniel Macks <dmacks@netspace.org>
Conflicts: <<
	python-nox (<= 2.2.1-8)
<<
Replaces: <<
	python (<= 2.2.1-8),
	python-nox (<= 2.2.1-8),
	python%type_pkg[python]-socket, python%type_pkg[python]-socket-ssl
<<
Depends: <<
	%N-shlibs (= %e:%v-%r),
	blt-shlibs,
	bzip2-shlibs,
	db44-aes-shlibs | db44-shlibs,
	gdbm3-shlibs,
	libgettext8-shlibs,
	libncursesw5-shlibs,
	readline5-shlibs,
	sqlite3-shlibs  (>= 3.2.8-1001),
	tcltk (>= 8.4.1-1),
	x11
<<
BuildConflicts: libquicktime0
BuildDepends: <<
	blt-dev (>= 2.4z-15),
	bzip2-dev,
	db44-aes | db44,
	fink (>= 0.24.12-1), 
	gdbm3,
	gettext-bin,
	gettext-tools,
	libgettext8-dev,
	libjpeg8,
	libncurses5 (>= 5.4-20041023-1006),
	libncursesw5,
	readline5,
	sqlite3-dev (>= 3.2.8-1001),
	system-openssl-dev,
	tcltk-dev (>= 8.4.1-1),
	x11-dev
<<
Source: http://python.org/ftp/python/%v/Python-%v.tar.bz2
Source2: http://www.python.org/ftp/python/doc/2.5.4/html-2.5.4.zip
Source-MD5: 5d45979c5f30fb2dd5f067c6b06b88e4
Source2-MD5: 64b4db34805109fcfd4ff528859c5a1b
PatchFile: %n.patch
PatchFile-MD5: 30ae833dbf37e9e57044569848a7ce71
PatchScript: <<
 sed 's|@PREFIX@|%p|g' < %{PatchFile} | patch -p1
 perl -pi -e 's|-Wno-long-double||' configure
 perl -pi -e 's|#include "Python.h"|#define _DARWIN_C_SOURCE\n#include "Python.h"|' Modules/posixmodule.c
<<
SetCPPFLAGS: -I/usr/include/ffi
SetLDFLAGS: -L%p/lib/system-openssl/lib
ConfigureParams: --mandir=%p/share/man --with-system-ffi
GCC: 4.0
CompileScript: <<
#!/bin/sh -ex
        if [ "%m" = "x86_64" ]; then
                perl -pi.bak -e 's|num_missing != 5:|num_missing != 7:|g' ./setup.py
                perl -pi.bak -e "s/8.4\'/8.5\'/" ./setup.py
                ./configure %c --disable-toolbox-glue
        else
                ./configure %c
        fi
        make
<<

# various failures and hangs on 10.6 (both arch)
#InfoTest: TestScript: LANG=en_US.UTF-8 make test EXTRATESTOPTS='-w -x test_distutils test_argparse test_httpservers' || exit 2

InstallScript: <<
#!/bin/sh -ex
	make install DESTDIR=%d

	# build a shared lib (why doesn't build system do this for us?)
	cc -dynamiclib -single_module -all_load -undefined dynamic_lookup -framework System -framework CoreServices -framework Foundation %i/lib/python2.5/config/libpython2.5.a -o %i/lib/python2.5/config/libpython2.5.dylib -install_name %p/lib/python2.5/config/libpython2.5.dylib -current_version 2.5 -compatibility_version 2.5

	# remove flag that isn't required and may cause link problems
	# because we don't use -bundle-loader for some reason
	perl -pi -e 's|-fno-common||g' %i/lib/python2.5/config/Makefile

	# don't propagate our hackery
	perl -pi -e 's|-L%p/lib/system-openssl/lib||' %i/lib/python%type_raw[python]/config/Makefile

	# fix all main things to be python-versioned filenames with
	# unversioned symlinks to them
	pushd %i/bin
		sed 's|%p/bin/python|%p/bin/python%type_raw[python]|g' < idle     > idle%type_raw[python]
		rm idle
		chmod 755 idle%type_raw[python]
		ln -s idle%type_raw[python] %i/bin/idle

		sed 's|%p/bin/python|%p/bin/python%type_raw[python]|g' < pydoc    > pydoc%type_raw[python]
		rm pydoc
		chmod 755 pydoc%type_raw[python]
		ln -s pydoc%type_raw[python] %i/bin/pydoc

		sed 's|%p/bin/python|%p/bin/python%type_raw[python]|g' < smtpd.py > smtpd.py%type_raw[python]
		rm smtpd.py
		chmod 755 smtpd.py%type_raw[python]
		ln -s smtpd.py%type_raw[python] %i/bin/smtpd.py
		
		# was created as hard-link...why do they do that?
		rm python
		ln -s python%type_raw[python] python
	popd
	/bin/mv %i/share/man/man1/python.1 %i/share/man/man1/python%type_pkg[python]].1
	ln -s python%type_pkg[python].1 %i/share/man/man1/python.1

	# install some docs and other useful tidbits
	rm -rf Misc/RPM
	/bin/cp -R Misc Tools %i/lib/python%type_raw[python]
	mkdir -p %i/share/doc/%n
	/bin/cp -R Demo Doc %i/share/doc/%n
	mkdir -p %i/share/doc/%n/html
	/bin/cp -R ../Python-Docs-2.5.4/ %i/share/doc/%n/html
<<
SplitOff: <<
 Package: %N-shlibs
 Replaces: python (<= 2.2.1-8), python-nox (<= 2.2.1-8)
 Files: lib/python%type_raw[python]/config/libpython%type_raw[python].dylib
 Shlibs: %p/lib/python2.5/config/libpython2.5.dylib 2.5.0 %n (>= 2.5-1)
 DocFiles: README LICENSE 
<<
SplitOff2: <<
 Package: python
 Depends: %N (>= %e:%v-%r)
 Conflicts: python-nox
 Replaces: python-nox, python25 (<< 1:2.5.1-3)
 Files: <<
		bin/idle
		bin/python
		bin/pydoc
		bin/python-config
		bin/smtpd.py
		share/man/man1/python.1
	<<
 DocFiles: README LICENSE
 Description: Generic "python" command that invokes python%type_pkg[python]
<<
DocFiles: README LICENSE 
Description: Interpreted, object-oriented language
DescDetail: <<
 Python is often compared to Tcl, Perl, Scheme or Java. 
 This package installs unix python - not the OSX Framework version.
 Builds a two-level namespace dynamic libpython (needed for koffice).

 The interpretter is installed as "python%type_raw[python]", and all associated
 commands are similarly named with the python-version in them. To get
 the simple "python" command, install the fink package "python" (note:
 the "python" command there is not guaranteed to be python%type_raw[python]!).
<<

DescPackaging: <<
	Originally packaged by Jeffrey Whitaker with much help from
	Dave Morrison and Peter O'Gorman

	As of 1:2.5.1-3, the socket modules, with ssl support, are in
	python25 itself and python25-socket and python25-socket-ssl
	are dummy packages that are no longer needed.

	Adjusts linker flags to ignore undefined symbols instead of
	using bundle-loader for libpython. Why? Should revert to
	default behavior (easier to detect other missing lib linkages)
	but wait for new pythonXX version to avoid propagating a
	different linking scheme into all existing *-py25 compiled
	modules.

	Should use --with-pth (fink's pth package)?

	Play lots of games to make sure we get expected support
	libraries. Also make sure -L/sw/lib/system-openssl is passed
	before -L/sw (build system seems to confuse standard meanings
	and uses of CFLAGS vs CPPFLAGS vs LDFLAGS) but avoid
	propagating into modules that compile using distutils.

	Shared lib is buried next to static one instead of being in
	%p/lib because that's where it's always been in the fink
	package series. Why would they be in different places?

	Cannot use db47 (or higher)
<<
DescPort: <<
	Fix 10.6 mmapmodule.c missing #include to get O_RDWR (compile
	failure which doesn't abort build process!). Seems safe enough
	keep in all distros' pkgs

	Fix language-encoding bug for japanese locale. See:
	https://trac.macports.org/attachment/ticket/21517/patch-locale-from-apple-darwinsource.diff

	Adjust some tokens so we get other needed tokens and types.

#	Sync ffitarget.h with darwin's to get 64bit platform support.
^--	only half-works (libffi .o missing symbols)...try system lib
<<
License: OSI-Approved
Homepage: http://www.python.org
<<
