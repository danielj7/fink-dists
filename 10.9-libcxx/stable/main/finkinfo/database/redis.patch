diff -x '*~' -urN redis-3.0.7_org/redis.conf redis-3.0.7_patched/redis.conf
--- redis-3.0.7_org/redis.conf	2016-01-25 15:57:52.000000000 +0100
+++ redis-3.0.7_patched/redis.conf	2016-03-26 21:30:27.000000000 +0100
@@ -38,12 +38,12 @@
 ################################ GENERAL  #####################################
 
 # By default Redis does not run as a daemon. Use 'yes' if you need it.
-# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.
-daemonize no
+# Note that Redis will write a pid file in @PREFIX@/var/run/redis/redis.pid when daemonized.
+daemonize yes
 
-# When running daemonized, Redis writes a pid file in /var/run/redis.pid by
+# When running daemonized, Redis writes a pid file in @PREFIX@/var/run/iredis/redis.pid by
 # default. You can specify a custom pid file location here.
-pidfile /var/run/redis.pid
+pidfile @PREFIX@/var/run/redis/redis.pid
 
 # Accept connections on the specified port, default is 6379.
 # If port 0 is specified Redis will not listen on a TCP socket.
@@ -66,7 +66,7 @@
 # Examples:
 #
 # bind 192.168.1.100 10.0.0.1
-# bind 127.0.0.1
+bind 127.0.0.1
 
 # Specify the path for the Unix socket that will be used to listen for
 # incoming connections. There is no default, so Redis will not listen
@@ -105,7 +105,7 @@
 # Specify the log file name. Also the empty string can be used to force
 # Redis to log on the standard output. Note that if you use standard
 # output for logging but daemonize, logs will be sent to /dev/null
-logfile ""
+logfile @PREFIX@/var/log/redis/redis.log
 
 # To enable logging to the system logger, just set 'syslog-enabled' to yes,
 # and optionally update the other syslog parameters to suit your needs.
@@ -144,9 +144,9 @@
 #
 #   save ""
 
-save 900 1
-save 300 10
-save 60 10000
+# save 900 1
+# save 300 10
+# save 60 10000
 
 # By default Redis will stop accepting writes if RDB snapshots are enabled
 # (at least one save point) and the latest background save failed.
@@ -161,13 +161,13 @@
 # and persistence, you may want to disable this feature so that Redis will
 # continue to work as usual even if there are problems with disk,
 # permissions, and so forth.
-stop-writes-on-bgsave-error yes
+# stop-writes-on-bgsave-error yes
 
 # Compress string objects using LZF when dump .rdb databases?
 # For default that's set to 'yes' as it's almost always a win.
 # If you want to save some CPU in the saving child set it to 'no' but
 # the dataset will likely be bigger if you have compressible values or keys.
-rdbcompression yes
+# rdbcompression yes
 
 # Since version 5 of RDB a CRC64 checksum is placed at the end of the file.
 # This makes the format more resistant to corruption but there is a performance
@@ -176,10 +176,10 @@
 #
 # RDB files created with checksum disabled have a checksum of zero that will
 # tell the loading code to skip the check.
-rdbchecksum yes
+# rdbchecksum yes
 
 # The filename where to dump the DB
-dbfilename dump.rdb
+# dbfilename dump.rdb
 
 # The working directory.
 #
@@ -189,7 +189,7 @@
 # The Append Only File will also be created inside this directory.
 #
 # Note that you must specify a directory here, not a file name.
-dir ./
+dir @PREFIX@/var/db/redis/
 
 ################################# REPLICATION #################################
 
@@ -227,7 +227,7 @@
 #    an error "SYNC with master in progress" to all the kind of commands
 #    but to INFO and SLAVEOF.
 #
-slave-serve-stale-data yes
+# slave-serve-stale-data yes
 
 # You can configure a slave instance to accept writes or not. Writing against
 # a slave instance may be useful to store some ephemeral data (because data
@@ -243,7 +243,7 @@
 # such as CONFIG, DEBUG, and so forth. To a limited extent you can improve
 # security of read only slaves using 'rename-command' to shadow all the
 # administrative / dangerous commands.
-slave-read-only yes
+# slave-read-only yes
 
 # Replication SYNC strategy: disk or socket.
 #
@@ -274,7 +274,7 @@
 #
 # With slow disks and fast (large bandwidth) networks, diskless replication
 # works better.
-repl-diskless-sync no
+# repl-diskless-sync no
 
 # When diskless replication is enabled, it is possible to configure the delay
 # the server waits in order to spawn the child that transfers the RDB via socket
@@ -286,7 +286,7 @@
 #
 # The delay is specified in seconds, and by default is 5 seconds. To disable
 # it entirely just set it to 0 seconds and the transfer will start ASAP.
-repl-diskless-sync-delay 5
+# repl-diskless-sync-delay 5
 
 # Slaves send PINGs to server in a predefined interval. It's possible to change
 # this interval with the repl_ping_slave_period option. The default value is 10
@@ -319,7 +319,7 @@
 # By default we optimize for low latency, but in very high traffic conditions
 # or when the master and slaves are many hops away, turning this to "yes" may
 # be a good idea.
-repl-disable-tcp-nodelay no
+# repl-disable-tcp-nodelay no
 
 # Set the replication backlog size. The backlog is a buffer that accumulates
 # slave data when slaves are disconnected for some time, so that when a slave
@@ -356,7 +356,7 @@
 # Redis Sentinel for promotion.
 #
 # By default the priority is 100.
-slave-priority 100
+# slave-priority 100
 
 # It is possible for a master to stop accepting writes if there are less than
 # N slaves connected, having a lag less or equal than M seconds.
@@ -506,11 +506,11 @@
 #
 # Please check http://redis.io/topics/persistence for more information.
 
-appendonly no
+# appendonly no
 
 # The name of the append only file (default: "appendonly.aof")
 
-appendfilename "appendonly.aof"
+# appendfilename "appendonly.aof"
 
 # The fsync() call tells the Operating System to actually write data on disk
 # instead of waiting for more data in the output buffer. Some OS will really flush
@@ -536,7 +536,7 @@
 # If unsure, use "everysec".
 
 # appendfsync always
-appendfsync everysec
+# appendfsync everysec
 # appendfsync no
 
 # When the AOF fsync policy is set to always or everysec, and a background
@@ -558,7 +558,7 @@
 # If you have latency problems turn this to "yes". Otherwise leave it as
 # "no" that is the safest pick from the point of view of durability.
 
-no-appendfsync-on-rewrite no
+# no-appendfsync-on-rewrite no
 
 # Automatic rewrite of the append only file.
 # Redis is able to automatically rewrite the log file implicitly calling
@@ -577,8 +577,8 @@
 # Specify a percentage of zero in order to disable the automatic AOF
 # rewrite feature.
 
-auto-aof-rewrite-percentage 100
-auto-aof-rewrite-min-size 64mb
+# auto-aof-rewrite-percentage 100
+# auto-aof-rewrite-min-size 64mb
 
 # An AOF file may be found to be truncated at the end during the Redis
 # startup process, when the AOF data gets loaded back into memory.
@@ -602,7 +602,7 @@
 # the server will still exit with an error. This option only applies when
 # Redis will try to read more data from the AOF file but not enough bytes
 # will be found.
-aof-load-truncated yes
+# aof-load-truncated yes
 
 ################################ LUA SCRIPTING  ###############################
 
@@ -620,7 +620,7 @@
 # termination of the script.
 #
 # Set it to 0 or a negative value for unlimited execution without warnings.
-lua-time-limit 5000
+# lua-time-limit 5000
 
 ################################ REDIS CLUSTER  ###############################
 #
@@ -748,11 +748,11 @@
 # The following time is expressed in microseconds, so 1000000 is equivalent
 # to one second. Note that a negative number disables the slow log, while
 # a value of zero forces the logging of every command.
-slowlog-log-slower-than 10000
+# slowlog-log-slower-than 10000
 
 # There is no limit to this length. Just be aware that it will consume memory.
 # You can reclaim memory used by the slow log with SLOWLOG RESET.
-slowlog-max-len 128
+# slowlog-max-len 128
 
 ################################ LATENCY MONITOR ##############################
 
@@ -773,7 +773,7 @@
 # impact, that while very small, can be measured under big load. Latency
 # monitoring can easily be enabled at runtime using the command
 # "CONFIG SET latency-monitor-threshold <milliseconds>" if needed.
-latency-monitor-threshold 0
+# latency-monitor-threshold 0
 
 ############################# EVENT NOTIFICATION ##############################
 
@@ -819,34 +819,34 @@
 #  By default all notifications are disabled because most users don't need
 #  this feature and the feature has some overhead. Note that if you don't
 #  specify at least one of K or E, no events will be delivered.
-notify-keyspace-events ""
+# notify-keyspace-events ""
 
 ############################### ADVANCED CONFIG ###############################
 
 # Hashes are encoded using a memory efficient data structure when they have a
 # small number of entries, and the biggest entry does not exceed a given
 # threshold. These thresholds can be configured using the following directives.
-hash-max-ziplist-entries 512
-hash-max-ziplist-value 64
+# hash-max-ziplist-entries 512
+# hash-max-ziplist-value 64
 
 # Similarly to hashes, small lists are also encoded in a special way in order
 # to save a lot of space. The special representation is only used when
 # you are under the following limits:
-list-max-ziplist-entries 512
-list-max-ziplist-value 64
+# list-max-ziplist-entries 512
+# list-max-ziplist-value 64
 
 # Sets have a special encoding in just one case: when a set is composed
 # of just strings that happen to be integers in radix 10 in the range
 # of 64 bit signed integers.
 # The following configuration setting sets the limit in the size of the
 # set in order to use this special memory saving encoding.
-set-max-intset-entries 512
+# set-max-intset-entries 512
 
 # Similarly to hashes and lists, sorted sets are also specially encoded in
 # order to save a lot of space. This encoding is only used when the length and
 # elements of a sorted set are below the following limits:
-zset-max-ziplist-entries 128
-zset-max-ziplist-value 64
+# zset-max-ziplist-entries 128
+# zset-max-ziplist-value 64
 
 # HyperLogLog sparse representation bytes limit. The limit includes the
 # 16 bytes header. When an HyperLogLog using the sparse representation crosses
@@ -860,7 +860,7 @@
 # which is O(N) with the sparse encoding. The value can be raised to
 # ~ 10000 when CPU is not a concern, but space is, and the data set is
 # composed of many HyperLogLogs with cardinality in the 0 - 15000 range.
-hll-sparse-max-bytes 3000
+# hll-sparse-max-bytes 3000
 
 # Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in
 # order to help rehashing the main Redis hash table (the one mapping top-level
@@ -880,7 +880,7 @@
 #
 # use "activerehashing yes" if you don't have such hard requirements but
 # want to free memory asap when possible.
-activerehashing yes
+# activerehashing yes
 
 # The client output buffer limits can be used to force disconnection of clients
 # that are not reading data from the server fast enough for some reason (a
@@ -915,9 +915,9 @@
 # subscribers and slaves receive data in a push fashion.
 #
 # Both the hard or the soft limit can be disabled by setting them to zero.
-client-output-buffer-limit normal 0 0 0
-client-output-buffer-limit slave 256mb 64mb 60
-client-output-buffer-limit pubsub 32mb 8mb 60
+# client-output-buffer-limit normal 0 0 0
+# client-output-buffer-limit slave 256mb 64mb 60
+# client-output-buffer-limit pubsub 32mb 8mb 60
 
 # Redis calls an internal function to perform many background tasks, like
 # closing connections of clients in timeout, purging expired keys that are
@@ -934,10 +934,10 @@
 # The range is between 1 and 500, however a value over 100 is usually not
 # a good idea. Most users should use the default of 10 and raise this up to
 # 100 only in environments where very low latency is required.
-hz 10
+# hz 10
 
 # When a child rewrites the AOF file, if the following option is enabled
 # the file will be fsync-ed every 32 MB of data generated. This is useful
 # in order to commit the file to the disk more incrementally and avoid
 # big latency spikes.
-aof-rewrite-incremental-fsync yes
+# aof-rewrite-incremental-fsync yes
diff -x '*~' -urN redis-3.0.7_org/redis.sh redis-3.0.7_patched/redis.sh
--- redis-3.0.7_org/redis.sh	1970-01-01 01:00:00.000000000 +0100
+++ redis-3.0.7_patched/redis.sh	2016-03-26 16:35:20.000000000 +0100
@@ -0,0 +1,11 @@
+#!/bin/sh
+
+export PREFIX="@PREFIX@"
+export PATH="$PREFIX/bin:$PATH"
+export CONFIG="$PREFIX/etc/redis.conf"
+
+case "$1" in
+    start)
+        sudo -u redis redis-server "$CONFIG"
+        ;;
+esac
diff -x '*~' -urN redis-3.0.7_org/sentinel.conf redis-3.0.7_patched/sentinel.conf
--- redis-3.0.7_org/sentinel.conf	2016-01-25 15:57:52.000000000 +0100
+++ redis-3.0.7_patched/sentinel.conf	2016-03-26 16:35:20.000000000 +0100
@@ -151,7 +151,7 @@
 #
 # Example:
 #
-# sentinel notification-script mymaster /var/redis/notify.sh
+# sentinel notification-script mymaster @PREFIX@/var/redis/notify.sh
 
 # CLIENTS RECONFIGURATION SCRIPT
 #
@@ -176,6 +176,6 @@
 #
 # Example:
 #
-# sentinel client-reconfig-script mymaster /var/redis/reconfig.sh
+# sentinel client-reconfig-script mymaster @PREFIX@/var/redis/reconfig.sh
 
 
diff -x '*~' -urN redis-3.0.7_org/src/redis.h redis-3.0.7_patched/src/redis.h
--- redis-3.0.7_org/src/redis.h	2016-01-25 15:57:52.000000000 +0100
+++ redis-3.0.7_patched/src/redis.h	2016-03-26 20:56:22.000000000 +0100
@@ -98,7 +98,7 @@
 #define REDIS_DEFAULT_REPL_BACKLOG_TIME_LIMIT (60*60)  /* 1 hour */
 #define REDIS_REPL_BACKLOG_MIN_SIZE (1024*16)          /* 16k */
 #define REDIS_BGSAVE_RETRY_DELAY 5 /* Wait a few secs before trying again. */
-#define REDIS_DEFAULT_PID_FILE "/var/run/redis.pid"
+#define REDIS_DEFAULT_PID_FILE "@PREFIX@/var/run/redis/redis.pid"
 #define REDIS_DEFAULT_SYSLOG_IDENT "redis"
 #define REDIS_DEFAULT_CLUSTER_CONFIG_FILE "nodes.conf"
 #define REDIS_DEFAULT_DAEMONIZE 0
diff -x '*~' -urN redis-3.0.7_org/tests/support/server.tcl redis-3.0.7_patched/tests/support/server.tcl
--- redis-3.0.7_org/tests/support/server.tcl	2016-01-25 15:57:52.000000000 +0100
+++ redis-3.0.7_patched/tests/support/server.tcl	2016-03-26 21:57:02.000000000 +0100
@@ -32,25 +32,29 @@
     if {![is_alive $config]} { return }
     set pid [dict get $config pid]
 
-    # check for leaks
-    if {![dict exists $config "skipleaks"]} {
-        catch {
-            if {[string match {*Darwin*} [exec uname -a]]} {
-                tags {"leaks"} {
-                    test "Check for memory leaks (pid $pid)" {
-                        set output {0 leaks}
-                        catch {exec leaks $pid} output
-                        if {[string match {*process does not exist*} $output] ||
-                            [string match {*cannot examine*} $output]} {
-                            # In a few tests we kill the server process.
-                            set output "0 leaks"
-                        }
-                        set output
-                    } {*0 leaks*}
-                }
-            }
-        }
-    }
+# finkproject patch:  
+#     removed memory leak check to prevent
+#       "leaks[...]: [fatal] unable to ask for permission to examine process;..."
+#
+#    # check for leaks
+#    if {![dict exists $config "skipleaks"]} {
+#        catch {
+#            if {[string match {*Darwin*} [exec uname -a]]} {
+#                tags {"leaks"} {
+#                    test "Check for memory leaks (pid $pid)" {
+#                        set output {0 leaks}
+#                        catch {exec leaks $pid} output
+#                        if {[string match {*process does not exist*} $output] ||
+#                            [string match {*cannot examine*} $output]} {
+#                            # In a few tests we kill the server process.
+#                            set output "0 leaks"
+#                        }
+#                        set output
+#                    } {*0 leaks*}
+#                }
+#            }
+#        }
+#    }
 
     # kill server and wait for the process to be totally exited
     catch {exec kill $pid}
