diff -Nurd -x'*~' blt2.4z.orig/Makefile.in blt2.4z/Makefile.in
--- blt2.4z.orig/Makefile.in	2002-02-18 19:11:43.000000000 -0500
+++ blt2.4z/Makefile.in	2008-08-27 21:14:50.000000000 -0400
@@ -47,9 +47,9 @@
 	(cd library; $(MAKE) install)
 	(cd man; $(MAKE) install)
 	(cd demos; $(MAKE) install)
-	$(INSTALL_DATA) $(srcdir)/README $(INSTALL_DIR)$(scriptdir)
-	$(INSTALL_DATA) $(srcdir)/PROBLEMS $(INSTALL_DIR)$(scriptdir)
-	$(INSTALL_DATA) $(srcdir)/NEWS $(INSTALL_DIR)$(scriptdir)
+	$(INSTALL_DATA) $(srcdir)/README $(INSTALL_ROOT)$(scriptdir)
+	$(INSTALL_DATA) $(srcdir)/PROBLEMS $(INSTALL_ROOT)$(scriptdir)
+	$(INSTALL_DATA) $(srcdir)/NEWS $(INSTALL_ROOT)$(scriptdir)
 
 mkdirs:
 	@for i in $(instdirs) ; do \
diff -Nurd -x'*~' blt2.4z.orig/configure blt2.4z/configure
--- blt2.4z.orig/configure	2002-10-04 01:33:59.000000000 -0400
+++ blt2.4z/configure	2008-08-27 21:50:54.000000000 -0400
@@ -3396,6 +3396,9 @@
   *-hpux*)
     SHLIB_SUFFIX="sl"
     ;;
+  *-darwin*)
+    SHLIB_SUFFIX="dylib"
+    ;;
   *)
     SHLIB_SUFFIX="so"
     ;;
@@ -3851,7 +3854,7 @@
 SHLIB_LD_FLAGS="$TCL_LD_FLAGS"
 SHLIB_RUNPATH="$TCL_LD_SEARCH_FLAGS"
 
-SHLIB_SUFFIX=".so"
+SHLIB_SUFFIX=".${SHLIB_SUFFIX}"
 SHLIB_TARGET=""
 SHLIB_CFLAGS=""
 SHLIB_LIB_SPECS="${JPEG_LIB_SPEC}"
@@ -4000,7 +4003,6 @@
       SHLIB_CFLAGS="+Z"
       SHLIB_LD="ld"
       SHLIB_LD_FLAGS="-b -E -n +s +b,${loader_run_path}:."
-      SHLIB_SUFFIX=".sl"
 
       # The run path is included in both LDFLAGS and SHLIB_LD_FLAGS
       # because SHLIB_LD is ld and LD is cc/gcc.
@@ -4208,6 +4210,9 @@
     SHLIB_LD_FLAGS=" -Wl,-Bexport"
     ;;
   
+  *-darwin*)
+    ;;
+
   *)
     build_shared="no"
     ;;
diff -Nurd -x'*~' blt2.4z.orig/library/Makefile.in blt2.4z/library/Makefile.in
--- blt2.4z.orig/library/Makefile.in	2002-07-14 19:33:24.000000000 -0400
+++ blt2.4z/library/Makefile.in	2008-08-27 21:00:45.000000000 -0400
@@ -58,7 +58,7 @@
 	for i in $(miscFiles) ; do \
 	    $(INSTALL_DATA) $(srcdir)/$$i $(INSTALL_ROOT)$(scriptdir) ; \
 	done 
-	$(INSTALL_DATA) pkgIndex.tcl $(scriptdir)
+	$(INSTALL_DATA) pkgIndex.tcl $(INSTALL_ROOT)$(scriptdir)
 
 mkdirs:
 	@for i in $(instdirs) ; do \
diff -Nurd -x'*~' blt2.4z.orig/library/pkgIndex.tcl.in blt2.4z/library/pkgIndex.tcl.in
--- blt2.4z.orig/library/pkgIndex.tcl.in	2002-07-14 19:33:24.000000000 -0400
+++ blt2.4z/library/pkgIndex.tcl.in	2008-08-27 21:53:36.000000000 -0400
@@ -10,9 +10,9 @@
     # the "lite" tcl-only version.
     
     if { [info commands tk] == "tk" } {
-        set name ${prefix}BLT${version_no_dots}${suffix}
+        set name ${prefix}BLT.2${suffix}
     } else {
-        set name ${prefix}BLTlite${version_no_dots}${suffix}
+        set name ${prefix}BLTlite.2${suffix}
     }
     
     global tcl_platform
diff -Nurd -x'*~' blt2.4z.orig/src/bltHash.c blt2.4z/src/bltHash.c
--- blt2.4z.orig/src/bltHash.c	2002-08-09 03:15:18.000000000 -0400
+++ blt2.4z/src/bltHash.c	2008-08-27 19:04:43.000000000 -0400
@@ -1302,7 +1302,7 @@
     sprintf(result, "%ld entries in table, %ld buckets\n",
 	    tablePtr->numEntries, tablePtr->numBuckets);
 #else 
-    sprintf(result, "%d entries in table, %d buckets\n",
+    sprintf(result, "%zd entries in table, %zd buckets\n",
 	    tablePtr->numEntries, tablePtr->numBuckets);
 #endif
     p = result + strlen(result);
@@ -1311,7 +1311,7 @@
 	sprintf(p, "number of buckets with %ld entries: %ld\n",
 		i, count[i]);
 #else 
-	sprintf(p, "number of buckets with %d entries: %d\n",
+	sprintf(p, "number of buckets with %zd entries: %zd\n",
 		i, count[i]);
 #endif
 	p += strlen(p);
@@ -1320,7 +1320,7 @@
     sprintf(p, "number of buckets with %d or more entries: %ld\n",
 	    NUM_COUNTERS, overflow);
 #else 
-    sprintf(p, "number of buckets with %d or more entries: %d\n",
+    sprintf(p, "number of buckets with %d or more entries: %zd\n",
 	    NUM_COUNTERS, overflow);
 #endif
     p += strlen(p);
@@ -1329,7 +1329,7 @@
 #if SIZEOF_VOID_P == 8
     sprintf(p, "maximum search distance for entry: %ld", max);
 #else
-    sprintf(p, "maximum search distance for entry: %d", max);
+    sprintf(p, "maximum search distance for entry: %zd", max);
 #endif
     return result;
 }
diff -Nurd -x'*~' blt2.4z.orig/src/shared/Makefile.in blt2.4z/src/shared/Makefile.in
--- blt2.4z.orig/src/shared/Makefile.in	2002-05-14 17:37:19.000000000 -0400
+++ blt2.4z/src/shared/Makefile.in	2008-08-27 22:01:37.000000000 -0400
@@ -120,8 +120,8 @@
 LN_S =		@LN_S@
 bltwish =	bltwish$(version)
 bltsh =		bltsh$(version)
-lib_so =	libBLT$(version)$(SHLIB_SUFFIX)
-tcl_only_lib_so = libBLTlite$(version)$(SHLIB_SUFFIX)
+lib_so =	libBLT.2$(SHLIB_SUFFIX)
+tcl_only_lib_so = libBLTlite.2$(SHLIB_SUFFIX)
 
 all: build_lib build_demo
 
@@ -144,19 +144,19 @@
 	$(CC) -c $(CC_SWITCHES) -DBLT_LIBRARY=\"$(scriptdir)\" \
 		$(srcdir)/bltInit.c
 	$(RM) $@
-	$(SHLIB_LD) $(SHLIB_LD_FLAGS) -o $@ bltInit.o $(OBJS) \
-		$(SHLIB_LIB_SPECS)
+	$(SHLIB_LD) $(SHLIB_LD_FLAGS) -o $@ -install_name $(libdir)/$@ -compatibility_version 2.0 -current_version 2.4 bltInit.o $(OBJS) \
+		$(SHLIB_LIB_SPECS) $(LIBS)
 
 $(tcl_only_lib_so): $(TCL_ONLY_OBJS)
 	$(CC) -c $(CC_SWITCHES) -DTCL_ONLY -DBLT_LIBRARY=\"$(scriptdir)\" \
 		$(srcdir)/bltInit.c
 	$(RM) $@
-	$(SHLIB_LD) $(SHLIB_LD_FLAGS) -o $@ bltInit.o $(TCL_ONLY_OBJS) \
-		$(SHLIB_TCL_ONLY_LIB_SPECS)
+	$(SHLIB_LD) $(SHLIB_LD_FLAGS) -o $@ -install_name $(libdir)/$@ -compatibility_version 2.0 -current_version 2.4 bltInit.o $(TCL_ONLY_OBJS) \
+		$(SHLIB_TCL_ONLY_LIB_SPECS) $(TCL_ONLY_LIB_SPECS)
 
 install: mkdirs install-lib install-demo
 
-install-demo: $(bltwish)
+install-demo: $(bltwish) $(bltsh)
 	$(INSTALL) -m 0755 bltwish$(version) $(INSTALL_ROOT)$(bindir)
 	$(INSTALL) -m 0755 bltsh$(version) $(INSTALL_ROOT)$(bindir)
 
diff -r -u blt2.4z.orig/src/bltTree.c blt2.4z/src/bltTree.c
--- blt2.4z.orig/src/bltTree.c	2002-09-29 07:44:12.000000000 +0200
+++ blt2.4z/src/bltTree.c	2004-11-05 12:27:45.797366712 +0100
@@ -95,17 +95,16 @@
  */
 
 #define REBUILD_MULTIPLIER	3
+#define START_LOGSIZE		5 /* Initial hash table size is 32. */
+#define MAX_LIST_VALUES		20 /* Convert to hash table when node
+				    * value list gets bigger than this
+				    * many values. */
 
 #if (SIZEOF_VOID_P == 8)
 #define RANDOM_INDEX(i)		HashOneWord(mask, downshift, i)
 #define BITSPERWORD		64
 #else 
 
-#define START_LOGSIZE		5 /* Initial hash table size is 32. */
-#define MAX_LIST_VALUES		20 /* Convert to hash table when node
-				    * value list gets bigger than this
-				    * many values. */
-
 /*
  * The following macro takes a preliminary integer hash value and
  * produces an index into a hash tables bucket list.  The idea is
diff -ur blt2.4z/src/bltNsUtil.h blt2.4z.new/src/bltNsUtil.h
--- blt2.4z/src/bltNsUtil.h	2002-07-18 08:35:32.000000000 +0200
+++ blt2.4z.new/src/bltNsUtil.h	2008-01-04 14:59:22.000000000 +0100
@@ -46,9 +46,8 @@
 #define TCL_NAMESPACE_ONLY TCL_GLOBAL_ONLY
 #endif
 
-
-EXTERN Tcl_Command Tcl_FindCommand _ANSI_ARGS_((Tcl_Interp *interp,
-	char *name, Tcl_Namespace *nsPtr, int flags));
+/*EXTERN Tcl_Command Tcl_FindCommand _ANSI_ARGS_((Tcl_Interp *interp,
+	char *name, Tcl_Namespace *nsPtr, int flags));*/
 
 #define NS_SEARCH_NONE		(0)
 #define NS_SEARCH_CURRENT	(1<<0)
@@ -64,7 +63,7 @@
 EXTERN Tcl_Namespace *Tcl_GetGlobalNamespace _ANSI_ARGS_((Tcl_Interp *interp));
 
 #if (TCL_MAJOR_VERSION >= 8)
-EXTERN Tcl_Namespace *Tcl_CreateNamespace _ANSI_ARGS_((Tcl_Interp *interp,
+/*EXTERN Tcl_Namespace *Tcl_CreateNamespace _ANSI_ARGS_((Tcl_Interp *interp,
 	char *name, ClientData clientData, Tcl_NamespaceDeleteProc *nsDelProc));
 
 EXTERN void Tcl_DeleteNamespace _ANSI_ARGS_((Tcl_Namespace *nsPtr));
@@ -85,6 +84,7 @@
 
 extern Tcl_HashTable *Blt_GetArrayVariableTable _ANSI_ARGS_((
 	Tcl_Interp *interp, CONST char *varName, int flags));
+*/
 
 #endif /* TCL_MAJOR_VERSION >= 8 */

diff -r -u blt2.4z-orig/src/bltInit.c blt2.4z/src/bltInit.c
--- blt2.4z-orig/src/bltInit.c	2002-09-09 22:12:33.000000000 -0700
+++ blt2.4z/src/bltInit.c	2009-09-16 23:27:19.000000000 -0700
@@ -413,7 +413,7 @@
 	 * Check that the versions of Tcl that have been loaded are
 	 * the same ones that BLT was compiled against.
 	 */
-	if (Tcl_PkgRequire(interp, "Tcl", TCL_VERSION, EXACT) == NULL) {
+	if (Tcl_InitStubs(interp, TCL_VERSION, 1) == NULL) {
 	    return TCL_ERROR;
 	}
 	/* Set the "blt_version", "blt_patchLevel", and "blt_libPath" Tcl
@@ -458,16 +458,23 @@
 	register Tcl_AppInitProc **p;
 	Tcl_Namespace *nsPtr;

+	if (Tk_InitStubs(interp, TK_VERSION, 1) == NULL) {
+		return TCL_OK;
+	}
+
+#if 0
 #if (TCL_VERSION_NUMBER >= _VERSION(8,1,0)) 
 	if (Tcl_PkgPresent(interp, "Tk", TK_VERSION, EXACT) == NULL) {
 	    return TCL_OK;
-	} 
+	}
 #else
 	if (Tcl_PkgRequire(interp, "Tk", TK_VERSION, EXACT) == NULL) {
 	    Tcl_ResetResult(interp);
 	    return TCL_OK;
 	} 
 #endif
+#endif
+
 	nsPtr = Tcl_CreateNamespace(interp, "blt::tile", NULL, 
 			    (Tcl_NamespaceDeleteProc *) NULL);
 	if (nsPtr == NULL) {
@@ -507,7 +514,7 @@
 	 * Check that the versions of Tcl that have been loaded are
 	 * the same ones that BLT was compiled against.
 	 */
-	if (Tcl_PkgRequire(interp, "Tcl", TCL_VERSION, EXACT) == NULL) {
+	if (Tcl_InitStubs(interp, TCL_VERSION, EXACT) == NULL) {
 	    return TCL_ERROR;
 	}
 	/* Set the "blt_version", "blt_patchLevel", and "blt_libPath" Tcl
@@ -543,6 +550,11 @@
     if (!tkLoaded) {
 	register Tcl_AppInitProc **p;

+	if (Tk_InitStubs(interp, TK_VERSION, 1) == NULL) {
+		return TCL_OK;
+	}
+
+#if 0
 #if (TCL_VERSION_NUMBER >= _VERSION(8,1,0)) 
 	if (Tcl_PkgPresent(interp, "Tk", TK_VERSION, EXACT) == NULL) {
 	    return TCL_OK;
@@ -553,6 +565,8 @@
 	    return TCL_OK;
 	} 
 #endif
+#endif
+
 	/* Initialize the BLT commands that use Tk too. */
 	for (p = tkCmds; *p != NULL; p++) {
 	    if ((**p) (interp) != TCL_OK) {
