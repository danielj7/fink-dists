diff -ru xz-4.999.9beta.orig/configure xz-4.999.9beta/configure
--- xz-4.999.9beta.orig/configure	2009-08-27 11:37:29.000000000 -0400
+++ xz-4.999.9beta/configure	2009-09-01 20:14:19.000000000 -0400
@@ -16169,7 +16169,7 @@
 	int name[2] = { CTL_HW, HW_PHYSMEM };
 	unsigned long mem;
 	size_t mem_ptr_size = sizeof(mem);
-	sysctl(name, 2, &mem, &mem_ptr_size, NULL, NULL);
+	sysctl(name, 2, &mem, &mem_ptr_size, NULL, 0);
 	return 0;
 }
 
@@ -16266,7 +16266,7 @@
 	int name[2] = { CTL_HW, HW_NCPU };
 	int cpus;
 	size_t cpus_size = sizeof(cpus);
-	sysctl(name, 2, &cpus, &cpus_size, NULL, NULL);
+	sysctl(name, 2, &cpus, &cpus_size, NULL, 0);
 	return 0;
 }
 
diff -ru xz-4.999.9beta.orig/src/common/cpucores.h xz-4.999.9beta/src/common/cpucores.h
--- xz-4.999.9beta.orig/src/common/cpucores.h	2009-08-27 11:37:12.000000000 -0400
+++ xz-4.999.9beta/src/common/cpucores.h	2009-09-01 20:15:08.000000000 -0400
@@ -40,7 +40,7 @@
 	int name[2] = { CTL_HW, HW_NCPU };
 	int cpus;
 	size_t cpus_size = sizeof(cpus);
-	if (!sysctl(name, &cpus, &cpus_size, NULL, NULL)
+	if (!sysctl(name, 2, &cpus, &cpus_size, NULL, 0)
 			&& cpus_size == sizeof(cpus) && cpus > 0)
 		ret = (uint32_t)(cpus);
 #endif
diff -ru xz-4.999.9beta.orig/src/common/physmem.h xz-4.999.9beta/src/common/physmem.h
--- xz-4.999.9beta.orig/src/common/physmem.h	2009-08-27 11:37:12.000000000 -0400
+++ xz-4.999.9beta/src/common/physmem.h	2009-09-01 20:15:50.000000000 -0400
@@ -104,7 +104,7 @@
 		uint64_t u64;
 	} mem;
 	size_t mem_ptr_size = sizeof(mem.u64);
-	if (!sysctl(name, 2, &mem.u64, &mem_ptr_size, NULL, NULL)) {
+	if (!sysctl(name, 2, &mem.u64, &mem_ptr_size, NULL, 0)) {
 		// IIRC, 64-bit "return value" is possible on some 64-bit
 		// BSD systems even with HW_PHYSMEM (instead of HW_PHYSMEM64),
 		// so support both.
