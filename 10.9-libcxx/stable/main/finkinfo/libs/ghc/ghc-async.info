Package: ghc-async
Version: 2.0.1.5
Revision: 4
Source: http://hackage.haskell.org/package/async-%v/async-%v.tar.gz
Source-MD5: fa571b9056764ed6d419dadd1349d1e3
SourceDirectory: async-%v

BuildDepends: <<
  fink (>= 0.38.3),
  ghc (>= 7.8.3-1), ghc (<< 7.8.4-1)
<<

Depends: <<
  ghc (>= 7.8.3-1), ghc (<< 7.8.4-1),
  ghc-stm (>= 2.2-1), ghc-stm (<< 2.5-1)
<<

CompileScript: <<
runghc Setup.hs configure --prefix=%p --docdir=%p/share/doc/%n
runghc Setup.hs build
runghc Setup.hs haddock
runghc Setup.hs register --gen-script
runghc Setup.hs unregister --gen-script
<<
InstallScript: runghc Setup.hs copy --destdir=%d

Shlibs: <<
@rpath/libHSasync-2.0.1.5-ghc7.8.3.dylib 0.0.0 %n (>= 2.0.1.5-2)
<<

DocFiles: LICENSE register.sh unregister.sh

PostInstScript: %p/share/doc/%n/register.sh
PreRmScript: sh %p/share/doc/%n/unregister.sh --force

Description: Run IO operations asynchronously
DescDetail: <<
This package provides a higher-level interface over threads, in which
an Async a is a concurrent thread that will eventually deliver a value
of type a. The package provides ways to create Async computations,
wait for their results, and cancel them.

Using Async is safer than using threads in two ways:

 * When waiting for a thread to return a result, if the thread dies
   with an exception then the caller must either re-throw the
   exception (wait) or handle it (waitCatch); the exception cannot be
   ignored.

 * The API makes it possible to build a tree of threads that are
   automatically killed when their parent dies (see withAsync).
<<
Homepage: http://hackage.haskell.org/package/async
License: BSD
Maintainer: Jack Howarth <howarth.at.fink@gmail.com>
