diff -ru PyQt-x11-gpl-4.8.3.orig/configure.py PyQt-x11-gpl-4.8.3/configure.py
--- PyQt-x11-gpl-4.8.3.orig/configure.py	2011-01-23 05:08:20.000000000 -0500
+++ PyQt-x11-gpl-4.8.3/configure.py	2011-01-24 08:45:23.000000000 -0500
@@ -936,13 +936,12 @@
                 from distutils.sysconfig import get_config_vars
                 ducfg = get_config_vars()
 
-                if sys.platform == "darwin":
+#                if sys.platform == "darwin":
                     # We need to work out how to specify the right framework
                     # version.
-                    link = "-framework Python"
-                elif ("--enable-shared" in ducfg.get("CONFIG_ARGS", "") and
-                      glob.glob("%s/lib/libpython%d.%d*" % (ducfg["exec_prefix"], py_major, py_minor))):
-                    lib_dir_flag = quote("-L%s/lib" % ducfg["exec_prefix"])
+#                    link = "-framework Python"
+                if 1:
+                    lib_dir_flag = quote("-L%s" % sipcfg.py_lib_dir)
                     link = "%s -lpython%d.%d%s" % (lib_dir_flag, py_major, py_minor, abi)
                 else:
                     sipconfig.inform("Qt Designer plugin disabled because Python library is static")
@@ -1037,8 +1036,8 @@
     if qt_licensee:
         sipconfig.inform("Qt is licensed to %s." % qt_licensee)
 
-    if sys.platform == "darwin" and qt_framework:
-        sipconfig.inform("Qt is built as a framework.")
+  #  if sys.platform == "darwin" and qt_framework:
+  #      sipconfig.inform("Qt is built as a framework.")
 
     sipconfig.inform("SIP %s is being used." % sipcfg.sip_version_str)
     sipconfig.inform("The Qt header files are in %s." % qt_incdir)
@@ -1456,7 +1455,7 @@
         if "__USE_WS_X11__" in sipcfg.build_macros()["DEFINES"]:
             plattag = "WS_X11"
         else:
-            plattag = "WS_MACX"
+            plattag = "WS_X11"
     else:
         plattag = "WS_X11"
 
@@ -1865,10 +1864,10 @@
         macros['CXXFLAGS'] += ' -mstackrealign'
 
     # Work out how Qt was built on MacOS.
-    if sys.platform == "darwin":
-        if os.access(os.path.join(qt_libdir, "QtCore.framework"), os.F_OK):
-            global qt_framework
-            qt_framework = 1
+#    if sys.platform == "darwin":
+#        if os.access(os.path.join(qt_libdir, "QtCore.framework"), os.F_OK):
+#            global qt_framework
+#            qt_framework = 1
 
     # Get the Makefile generator.
     generator = macros["MAKEFILE_GENERATOR"]
@@ -1892,7 +1891,7 @@
     """
     if sys.platform == "darwin":
         # The Qt binary installer has macx-xcode as the default.
-        args = "-spec %s %s" % (sipcfg.platform, args)
+        args = "-spec %s %s" % ("macx-g++", args)
 
     return args
 
@@ -1915,8 +1914,8 @@
     if sys.platform == 'win32':
         exe_file = os.path.join("release", app + ".exe")
         make_target = " release"
-    elif sys.platform == "darwin":
-        exe_file = os.path.join(app + ".app", "Contents", "MacOS", app)
+#    elif sys.platform == "darwin":
+#        exe_file = os.path.join(app + ".app", "Contents", "MacOS", app)
     else:
         exe_file = os.path.join(".", app)
 
