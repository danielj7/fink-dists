diff -Naur Python-2.2.1.old/Lib/distutils/util.py Python-2.2.1/Lib/distutils/util.py
--- Python-2.2.1.old/Lib/distutils/util.py	Fri Dec  7 05:51:35 2001
+++ Python-2.2.1/Lib/distutils/util.py	Wed Aug  7 21:56:01 2002
@@ -41,6 +41,11 @@
     # Try to distinguish various flavours of Unix
 
     (osname, host, release, version, machine) = os.uname()
+    
+    # On MacOS X, remove space from machine name
+
+    if machine == "Power Macintosh":
+       machine = "PowerMacintosh"
 
     # Convert the OS name to lowercase and remove '/' characters
     # (to accommodate BSD/OS)
diff -Naur Python-2.2.1.old/Makefile.pre.in Python-2.2.1/Makefile.pre.in
--- Python-2.2.1.old/Makefile.pre.in	Tue Mar  5 22:52:29 2002
+++ Python-2.2.1/Makefile.pre.in	Wed Aug  7 21:56:01 2002
@@ -56,7 +56,7 @@
 OPT=		@OPT@
 DEFS=		@DEFS@
 CFLAGS=		$(OPT)
-CPPFLAGS=	-I. -I$(srcdir)/Include $(DEFS)
+CPPFLAGS=	-I. -I<PREFIX>/include -I$(srcdir)/Include $(DEFS)
 LDFLAGS=	@LDFLAGS@
 LDLAST=		@LDLAST@
 SGI_ABI=	@SGI_ABI@
@@ -407,7 +407,7 @@
 		-$(PGEN) $(GRAMMAR_INPUT) $(GRAMMAR_H) $(GRAMMAR_C)
 
 $(PGEN):	$(PGENOBJS)
-		$(CC) $(OPT) $(PGENOBJS) $(LIBS) -o $(PGEN)
+		$(CC) $(OPT) $(PGENOBJS) $(LDFLAGS) $(LIBS) -o $(PGEN)
 
 Parser/grammar.o:	$(srcdir)/Parser/grammar.c \
 				$(srcdir)/Include/token.h \
diff -Naur Python-2.2.1.old/Misc/setuid-prog.c Python-2.2.1/Misc/setuid-prog.c
--- Python-2.2.1.old/Misc/setuid-prog.c	Fri Sep 11 05:18:09 1998
+++ Python-2.2.1/Misc/setuid-prog.c	Wed Aug  7 21:56:01 2002
@@ -70,6 +70,12 @@
 #define environ _environ
 #endif
 
+#if defined(__APPLE__)
+# include <sys/time.h>
+# include <crt_externs.h>
+# define environ (*_NSGetEnviron())
+#endif /* __APPLE__ */
+
 /* don't change def_IFS */
 char def_IFS[] = "IFS= \t\n";
 /* you may want to change def_PATH, but you should really change it in */
diff -Naur Python-2.2.1.old/Modules/posixmodule.c Python-2.2.1/Modules/posixmodule.c
--- Python-2.2.1.old/Modules/posixmodule.c	Wed Mar 13 06:38:31 2002
+++ Python-2.2.1/Modules/posixmodule.c	Wed Aug  7 21:56:01 2002
@@ -19,6 +19,11 @@
 #include "Python.h"
 #include "structseq.h"
 
+#if defined(__APPLE__)
+# include <sys/time.h>
+# include <crt_externs.h>
+# define environ (*_NSGetEnviron())
+#endif /* __APPLE__ */
 #if defined(PYOS_OS2)
 #define  INCL_DOS
 #define  INCL_DOSERRORS
diff -Naur Python-2.2.1.old/Modules/socketmodule.c Python-2.2.1/Modules/socketmodule.c
--- Python-2.2.1.old/Modules/socketmodule.c	Tue Mar 26 02:40:43 2002
+++ Python-2.2.1/Modules/socketmodule.c	Wed Aug  7 21:58:12 2002
@@ -222,9 +222,11 @@
    determine the bug just by checking for __APPLE__. If this bug
    gets ever fixed, perhaps checking for sys/version.h would be
    appropriate, which is 10/0 on the system with the bug. */
+#ifndef ENABLE_IPV6   
 #undef HAVE_GETADDRINFO
 /* avoid clashes with the C library definition of the symbol. */
 #define getaddrinfo fake_getaddrinfo
+#endif
 #endif
 
 /* I know this is a bad practice, but it is the easiest... */
diff -Naur Python-2.2.1.old/configure Python-2.2.1/configure
--- Python-2.2.1.old/configure	Fri Mar 22 20:22:24 2002
+++ Python-2.2.1/configure	Wed Aug  7 21:56:01 2002
@@ -7272,7 +7272,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lreadline -ltermcap $LIBS"
+LIBS="-lreadline $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 7278 "configure"
 #include "confdefs.h"
@@ -7317,7 +7317,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   ac_save_LIBS="$LIBS"
-LIBS="-lreadline -ltermcap $LIBS"
+LIBS="-lreadline $LIBS"
 cat > conftest.$ac_ext <<EOF
 #line 7323 "configure"
 #include "confdefs.h"
diff -Naur Python-2.2.1.old/setup.py Python-2.2.1/setup.py
--- Python-2.2.1.old/setup.py	Tue Mar 26 22:43:04 2002
+++ Python-2.2.1/setup.py	Wed Aug  7 21:56:00 2002
@@ -203,6 +203,12 @@
         if '/usr/local/include' not in self.compiler.include_dirs:
             self.compiler.include_dirs.insert(0, '/usr/local/include' )
 
+        # Ensure that <PREFIX> is always used
+        if '<PREFIX>/lib' not in self.compiler.library_dirs:
+            self.compiler.library_dirs.insert(0, '<PREFIX>/lib')
+        if '<PREFIX>/include' not in self.compiler.include_dirs:
+            self.compiler.include_dirs.insert(0, '<PREFIX>/include' )
+
         try:
             have_unicode = unicode
         except NameError:
@@ -338,7 +344,6 @@
                                                'termcap'):
                 readline_libs.append('termcap')
             exts.append( Extension('readline', ['readline.c'],
-                                   library_dirs=['/usr/lib/termcap'],
                                    libraries=readline_libs) )
 
         # crypt module.
@@ -349,27 +354,7 @@
             libs = []
         exts.append( Extension('crypt', ['cryptmodule.c'], libraries=libs) )
 
-        # socket(2)
-        # Detect SSL support for the socket module
-        ssl_incs = find_file('openssl/ssl.h', inc_dirs,
-                             ['/usr/local/ssl/include',
-                              '/usr/contrib/ssl/include/'
-                             ]
-                             )
-        ssl_libs = find_library_file(self.compiler, 'ssl',lib_dirs,
-                                     ['/usr/local/ssl/lib',
-                                      '/usr/contrib/ssl/lib/'
-                                     ] )
-
-        if (ssl_incs is not None and
-            ssl_libs is not None):
-            exts.append( Extension('_socket', ['socketmodule.c'],
-                                   include_dirs = ssl_incs,
-                                   library_dirs = ssl_libs,
-                                   libraries = ['ssl', 'crypto'],
-                                   define_macros = [('USE_SSL',1)] ) )
-        else:
-            exts.append( Extension('_socket', ['socketmodule.c']) )
+        exts.append( Extension('_socket', ['socketmodule.c']) )
 
         # Modules that provide persistent dictionary-like semantics.  You will
         # probably want to arrange for at least one of them to be available on
