Package: smlnj
Version: 110.45
Revision: 4
Description: Standard ML compiler, tools, & libraries
Maintainer: Likai Liu <liulk@cs.bu.edu>
Homepage: http://www.smlnj.org/
License: BSD
Provides: smlnj-burg, smlnj-ckit, smlnj-cml, smlnj-runtime
Conflicts: smlnj-burg, smlnj-ckit, smlnj-cml, smlnj-runtime
Replaces: smlnj-burg, smlnj-ckit, smlnj-cml, smlnj-runtime
Suggests: sml-mode
CustomMirror: <<
 Primary: http://smlnj.cs.uchicago.edu/dist/working/
<<
SourceDirectory: config
Source: mirror:custom:%v/config.tgz
Source-MD5: 41648889cc2b4f45e0a72ac13d319155
SourceRename: %v-config.tgz
Source2: mirror:custom:%v/boot.ppc-unix.tgz
Source2-MD5: 6f3c5658c9f9d2b8876d8998fa36273b
Source2Rename: %v-boot.ppc-unix.tgz
Source3: mirror:custom:%v/runtime.tgz
Source3-MD5: c2c9efcdfcaf1e70d3b546105b5ab7a2
Source3Rename: %v-runtime.tgz
Source4: mirror:custom:%v/ml-yacc.tgz
Source4-MD5: 30fd1c8b4132600f838d3cb2289a070c
Source4Rename: %v-ml-yacc.tgz
Source5: mirror:custom:%v/ml-lex.tgz
Source5-MD5: 4fa0ae33f56a83b7294605bedc6a0c97
Source5Rename: %v-ml-lex.tgz
Source6: mirror:custom:%v/ml-burg.tgz
Source6-MD5: fd36faabc3e8833a4e32c55632c95b94
Source6Rename: %v-ml-burg.tgz
Source7: mirror:custom:%v/smlnj-lib.tgz
Source7-MD5: aa42c2dc8ab6be7c8e4b41bd2bbfd25f
Source7Rename: %v-smlnj-lib.tgz
Source8: mirror:custom:%v/cm.tgz
Source8-MD5: 6dbd89f4b63e0adb7f59176da0086c07
Source8Rename: %v-cm.tgz
Source9: mirror:custom:%v/cml.tgz
Source9-MD5: 3386ad64c9cd321d6a398550827a8f84
Source9Rename: %v-cml.tgz
Source10: mirror:custom:%v/eXene.tgz
Source10-MD5: a578a05fdb83d09b99fb7aa455f93877
Source10Rename: %v-eXene.tgz
Source11: mirror:custom:%v/ckit.tgz
Source11-MD5: 527405b86c5e193475f6965208625fe1
Source11Rename: %v-ckit.tgz
Source12: mirror:custom:%v/MLRISC.tgz
Source12-MD5: 8e6ee2b2cd4200bfabb7212212407c91
Source12Rename: %v-MLRISC.tgz
DocFiles: LICENSE
PatchScript: <<
#!/bin/sh

echo Setting up build directory ...

# must first setup build directory exactly as config/install.sh
# expects. current directory is at %p/src/%n-%v-%r/config

# remove everything except for config
rm -rf ../MLRISC ../ckit ../cm ../cml ../eXene ../ml-burg ../ml-lex
rm -rf ../ml-yacc ../runtime ../sml.boot.ppc-unix ../smlnj-lib

# setting up a plain text version of LICENSE
cat <<EOF > LICENSE
STANDARD ML OF NEW JERSEY COPYRIGHT NOTICE, LICENSE AND DISCLAIMER.
http://www.smlnj.org/license.html

Copyright (c) 1989-1998 by Lucent Technologies

Permission to use, copy, modify, and distribute this software and
its documentation for any purpose and without fee is hereby
granted, provided that the above copyright notice appear in all
copies and that both the copyright notice and this permission
notice and warranty disclaimer appear in supporting documentation,
and that the name of Lucent Technologies, Bell Labs or any Lucent
entity not be used in advertising or publicity pertaining to
distribution of the software without specific, written prior
permission.

Lucent disclaims all warranties with regard to this software,
including all implied warranties of merchantability and fitness. In
no event shall Lucent be liable for any special, indirect or
consequential damages or any damages whatsoever resulting from loss
of use, data or profits, whether in an action of contract,
negligence or other tortious action, arising out of or in
connection with the use or performance of this software. 

EOF

ln -s %p/src/%v-config.tgz ../config.tgz
ln -s %p/src/%v-boot.ppc-unix.tgz ../boot.ppc-unix.tgz
ln -s %p/src/%v-runtime.tgz ../runtime.tgz
ln -s %p/src/%v-ml-yacc.tgz ../ml-yacc.tgz
ln -s %p/src/%v-ml-lex.tgz ../ml-lex.tgz
ln -s %p/src/%v-ml-burg.tgz ../ml-burg.tgz
ln -s %p/src/%v-smlnj-lib.tgz ../smlnj-lib.tgz
ln -s %p/src/%v-cm.tgz ../cm.tgz
ln -s %p/src/%v-cml.tgz ../cml.tgz
ln -s %p/src/%v-eXene.tgz ../eXene.tgz
ln -s %p/src/%v-ckit.tgz ../ckit.tgz
ln -s %p/src/%v-MLRISC.tgz ../MLRISC.tgz

targets="ml-yacc ml-lex ml-burg smlnj-lib cml cml-lib eXene mlrisc ckit mlrisc-tools"

echo Selecting targets: $targets

# enable the packages we need. leave already enabled ones enabled.
for t in $targets; do
	perl -pi -e "s,#request $t,request $t," targets
done
<<
CompileScript: (cd .. && config/install.sh)
InstallScript: <<
#!/bin/sh
# heap and run go to %i/lib/smlnj/bin, library goes to %i/lib/smlnj/lib

echo Making directories: %i/bin %i/lib/smlnj
mkdir -p %i/bin
mkdir -p %i/lib/smlnj

echo Install heaps and executable images ...
mv ../bin %i/lib/smlnj/bin

echo Install smlnj-script in %i/bin ...

# architecture suffix and alloc size only needs to be determined once
ARCH_N_OPSYS=`%i/lib/smlnj/bin/.arch-n-opsys`
if [ "$?" != "0" ]; then
  echo "unable to determine architecture/operating system"
  exit 1
fi
eval $ARCH_N_OPSYS

cat <<EOF > %i/bin/smlnj-script
#!/bin/sh
export SMLNJ_HOME=%p/lib/smlnj
export CM_PATHCONFIG=\$SMLNJ_HOME/lib/pathconfig
HEAPDIR=\$SMLNJ_HOME/bin/.heap
RUNDIR=\$SMLNJ_HOME/bin/.run

ALLOC=512k
APP=\`basename -- \$0\`
case \$APP in
    smlnj-script)
        echo "Please do not run \"smlnj-script\" directly."
        echo "It should be symlinked to an application name."
        exit 1
        ;;
esac

RUN="\$RUNDIR/run.$ARCH-$OPSYS"
exec \$RUN @SMLcmdname=\$0 @SMLload=\$HEAPDIR/\$APP @SMLalloc=\$ALLOC "\$@"
EOF

chmod 0755 %i/bin/smlnj-script

apps="ml-burg ml-lex ml-yacc sml"

echo Install symlinks for the executables: $apps

cd %i/bin
for run in $apps; do
	ln -sf smlnj-script $run
done

echo Fix absolute symlinks in \$SMLNJ_HOME/bin ...

cd %i/lib/smlnj/bin
for run in $apps; do
	rm $run; ln -sf ./.run-sml $run
done

echo Install smlnj libraries ...
cd %b
mv ../lib %i/lib/smlnj/lib
<<
DescDetail: <<
SML/NJ is an implementation of the Standard ML programming language,
produced and maintained by researchers at Bell Labs, Princeton, Yale,
and AT&T Research.  Standard ML has many features, including type
safety, algebraic data types with pattern matching, higher-order
functions, and a sophisticated module system. It is especially
well-suited for writing compilers and other language processors.

This package includes the interactive compiler (sml), the compilation
manager (CM), compiler generation tools (ml-lex, ml-yacc), the Basis
library, and the SML/NJ library.

Install this package if you want to program in SML.
<<
DescPackaging: <<
Based on Christopher League's smlnj*.info package info.

Command line programs are placed under %p/bin, symlinked to smlnj-script, a
launcher based on Christopher League's packaging. The launcher executes smlnj
runtime with a given application's heap image. You can also find command line
programs in %p/lib/smlnj/bin, where the symlinks are made to a launcher script
generated by the smlnj installer. These symlinks are provided so Compilation
Manager can find them. They're not used directly by the user. The heap images
and runtime are placed in %p/lib/smlnj/bin/{.heap|.run} respectively. Heap
images and runtime executables are placed with the usual ARCH-OS extension.

SML/NJ libraries are placed in %p/lib/smlnj/lib, so "pathconfig" should be
updated when new libraries are installed.

eXene does not depend on X11R6 development files to compile or run. It is
completely implemented in SML.

TODO: maybe someday do a spilt package?
<<
