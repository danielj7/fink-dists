diff -ru stellarium-0.6.0.orig/configure stellarium-0.6.0/configure
--- stellarium-0.6.0.orig/configure	Mon May 31 11:05:08 2004
+++ stellarium-0.6.0/configure	Mon Oct 11 23:23:25 2004
@@ -3331,8 +3331,8 @@
 
 
 
-CFLAGS=" -Wall -s -O3"
-CXXFLAGS=" -Wall -s -O3"
+CFLAGS=" -Wall -O3"
+CXXFLAGS=" -Wall -O3"
 
 ac_ext=c
 ac_cpp='$CPP $CPPFLAGS'
@@ -6389,7 +6389,7 @@
 #define MACOSX 1
 _ACEOF
 
-	LDFLAGS="$LDFLAGS -flat_namespace -undefined suppress -lz "
+	LDFLAGS="$LDFLAGS -flat_namespace -undefined suppress -lmx -lz "
 	LIBS="$LIBS -framework OpenGL -lobjc "
 ;;
 
diff -ru stellarium-0.6.0.orig/src/main.cpp stellarium-0.6.0/src/main.cpp
--- stellarium-0.6.0.orig/src/main.cpp	Fri Apr 30 04:16:56 2004
+++ stellarium-0.6.0/src/main.cpp	Mon Oct 11 23:23:25 2004
@@ -142,7 +142,7 @@
 
 	// If the system is non unix (windows) or if it's macosx the config file is in the
 	// config/ directory of the dataRoot directory
-#if defined(WIN32) || defined(CYGWIN) || defined(__MINGW32__) || defined(MACOSX)
+#if defined(WIN32) || defined(CYGWIN) || defined(__MINGW32__)
 	CDIR = DATA_ROOT + "/config/";
 
 	if ((tempFile = fopen((CDIR + "config.ini").c_str(),"r")))
diff -ru stellarium-0.6.0.orig/src/observator.cpp stellarium-0.6.0/src/observator.cpp
--- stellarium-0.6.0.orig/src/observator.cpp	Mon May 31 10:33:10 2004
+++ stellarium-0.6.0/src/observator.cpp	Mon Oct 11 23:23:25 2004
@@ -166,7 +166,16 @@
 // Fixed 31-05-2004 Now use the extern variables set by tzset()
 float Observator::get_GMT_shift_from_system(double JD) const
 {
+#ifdef MACOSX	
+	time_t rawtime = get_time_t_from_julian(JD);
+
+	struct tm * timeinfo;
+	timeinfo = localtime(&rawtime);
+	
+	return (float)timeinfo->tm_gmtoff/3600;
+#else
 	return -(float)timezone/3600 + (daylight!=0);
+#endif
 
 	
 /*	time_t rawtime = get_time_t_from_julian(JD);
diff -ru stellarium-0.6.0.orig/src/stel_sdl.cpp stellarium-0.6.0/src/stel_sdl.cpp
--- stellarium-0.6.0.orig/src/stel_sdl.cpp	Wed May  5 16:49:20 2004
+++ stellarium-0.6.0/src/stel_sdl.cpp	Tue Oct 12 23:27:05 2004
@@ -121,15 +121,36 @@
 					break;
 
 				case SDL_MOUSEMOTION:
-				  	core->handle_move(E.motion.x,E.motion.y);
+					if (core->get_Fullscreen())
+					{
+				  		core->handle_move(E.motion.x,E.motion.y);
+				  	}
+				  	else
+				  	{
+				  		core->handle_move(E.motion.x,(core->get_screen_H()-E.motion.y));
+				  	}
 					break;
 
 				case SDL_MOUSEBUTTONDOWN:
-					core->handle_clic(E.button.x,E.button.y,E.button.button,E.button.state);
+					if (core->get_Fullscreen())
+					{
+						core->handle_clic(E.button.x,E.button.y,E.button.button,E.button.state);
+					}
+					else
+					{
+						core->handle_clic(E.button.x,(core->get_screen_H()-E.motion.y),E.button.button,E.button.state);
+					}
 					break;
 
 				case SDL_MOUSEBUTTONUP:
-					core->handle_clic(E.button.x,E.button.y,E.button.button,E.button.state);
+					if (core->get_Fullscreen())
+					{
+						core->handle_clic(E.button.x,E.button.y,E.button.button,E.button.state);
+					}
+					else
+					{
+						core->handle_clic(E.button.x,(core->get_screen_H()-E.motion.y),E.button.button,E.button.state);
+					}
 					break;
 
 				case SDL_KEYDOWN:
