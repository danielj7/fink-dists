--- ngspice-25/src/spicelib/devices/hisim2/hsm2eval.c	2013-01-15 02:54:12.000000000 -0800
+++ ngspice-25/src/spicelib/devices/hisim2/hsm2eval.c	2013-01-15 02:56:20.000000000 -0800
@@ -131,7 +131,9 @@
 #define C_IDD_MIN    1.0e-15
 
 /* local variables used in macro functions */
+/*
 double TMF1 , TMF2 , TMF3 , TMF4 ; 
+*/
 /*===========================================================*
 * pow
 *=================*/
@@ -171,6 +173,7 @@
 *-----------------*/
 
 #define Fn_SU( y , x , xmax , delta , dx ) { \
+    double TMF1 , TMF2; \
     TMF1 = ( xmax ) - ( x ) - ( delta ) ; \
     TMF2 = 4.0 * ( xmax ) * ( delta) ; \
     TMF2 = TMF2 > 0.0 ?  TMF2 : - ( TMF2 ) ; \
@@ -180,6 +183,7 @@
   }
 
 #define Fn_SU2( y , x , xmax , delta , dy_dx , dy_dxmax ) { \
+    double TMF1 , TMF2; \
     TMF1 = ( xmax ) - ( x ) - ( delta ) ; \
     TMF2 = 4.0 * ( xmax ) * ( delta) ; \
     TMF2 = TMF2 > 0.0 ?  TMF2 : - ( TMF2 ) ; \
@@ -196,6 +200,7 @@
 *-----------------*/
 
 #define Fn_SL( y , x , xmin , delta , dx ) { \
+    double TMF1 , TMF2; \
     TMF1 = ( x ) - ( xmin ) - ( delta ) ; \
     TMF2 = 4.0 * ( xmin ) * ( delta ) ; \
     TMF2 = TMF2 > 0.0 ?  TMF2 : - ( TMF2 ) ; \
@@ -210,6 +215,7 @@
 *-----------------*/
 
 #define Fn_SZ( y , x , delta , dx ) { \
+    double TMF2; \
     TMF2 = sqrt ( ( x ) *  ( x ) + 4.0 * ( delta ) * ( delta) ) ; \
     dx = 0.5 * ( 1.0 + ( x ) / TMF2 ) ; \
     y = 0.5 * ( ( x ) + TMF2 ) ; \
@@ -322,6 +328,7 @@
 *-----------------*/
 
 #define Fn_DclPoly4( y , x , dx ) { \
+  double TMF2 , TMF3 , TMF4; \
   TMF2 = (x) * (x) ; \
   TMF3 = TMF2 * (x) ; \
   TMF4 = TMF2 * TMF2 ; \
@@ -334,6 +341,7 @@
 *-----------------*/
 
 #define Fn_SUPoly4( y , x , xmax , dx ) { \
+ double TMF1 ; \
  TMF1 = (x) / xmax ; \
  Fn_DclPoly4( y , TMF1 , dx ) ; \
  y = xmax * ( 1.0 - y ) ; \
@@ -346,6 +354,7 @@
 
 #define Fn_SymAdd( y , x , add0 , dx ) \
 { \
+    double TMF1, TMF2 , TMF3; \
     TMF1 = 2.0 * ( x ) / ( add0 ) ; \
     TMF2 = 1.0 + TMF1 * ( (1.0/2) + TMF1 * ( (1.0/6) \
                + TMF1 * ( (1.0/24) + TMF1 * ( (1.0/120) \
--- ngspice-25/src/ngsconvert.c	2013-01-16 13:56:10.000000000 -0800
+++ ngspice-25/src/ngsconvert.c	2013-01-16 14:25:02.000000000 -0800
@@ -18,14 +18,14 @@
 #include "frontend/display.h"
 #include "../misc/mktemp.h"
 
-FILE *cp_in = NULL;
-FILE *cp_out = NULL;
-FILE *cp_err = NULL;
-FILE *cp_curin = NULL;
-FILE *cp_curout = NULL;
-FILE *cp_curerr = NULL;
+extern FILE *cp_in;
+extern FILE *cp_out;
+extern FILE *cp_err;
+extern FILE *cp_curin;
+extern FILE *cp_curout;
+extern FILE *cp_curerr;
 int cp_maxhistlength;
-bool cp_debug = FALSE;
+extern bool cp_debug;
 char cp_chars[128];
 bool cp_nocc = TRUE;
 bool ft_stricterror = FALSE;
@@ -430,14 +430,11 @@
 
 void cp_pushcontrol(void) { }
 void cp_popcontrol(void) { }
-void out_init(void) { }
 void cp_doquit(void) { exit(0); }
 void cp_usrvars(struct variable **v1, struct variable **v2) { *v1 = NULL; *v2 = NULL;  return; }
 int cp_evloop(char *s) { NG_IGNORE(s); return (0); }
 void cp_ccon(bool o) { NG_IGNORE(o); }
 char*if_errstring(int c) { NG_IGNORE(c); return ("error"); }
-void out_printf(char *fmt, ...) { NG_IGNORE(fmt); }
-void out_send(char *string) { NG_IGNORE(string); }
 struct variable * cp_enqvar(char *word) { NG_IGNORE(word); return (NULL); }
 struct dvec *vec_get(const char *word) { NG_IGNORE(word); return (NULL); }
 void cp_ccom(wordlist *w, char *b, bool e) {
