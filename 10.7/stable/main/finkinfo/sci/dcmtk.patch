diff -Nurd dcmtk-3.6.0/config/include/dcmtk/config/osconfig.h dcmtk-3.6.0-patch/config/include/dcmtk/config/osconfig.h
--- dcmtk-3.6.0/config/include/dcmtk/config/osconfig.h	2010-06-23 16:19:40.000000000 +0200
+++ dcmtk-3.6.0-patch/config/include/dcmtk/config/osconfig.h	2012-09-10 01:47:33.000000000 +0200
@@ -1,6 +1,16 @@
 #ifndef OSCONFIG_H
 #define OSCONFIG_H
 
+#ifdef __DARWIN_C_LEVEL
+#undef __DARWIN_C_LEVEL
+#endif
+
+#define POSIX_C_SOURCE 1
+#define _POSIX_C_SOURCE 1
+#define DARWIN_C_SOURCE 1
+#define _DARWIN_C_SOURCE 1
+#define __DARWIN_C_LEVEL 900000L
+
 /*
 ** Define enclosures for include files with C linkage (mostly system headers)
 */
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/diargpxt.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/diargpxt.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/diargpxt.h	2010-10-14 15:16:29.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/diargpxt.h	2012-09-10 01:02:08.000000000 +0200
@@ -91,7 +91,7 @@
                  const unsigned long planeSize,
                  const int bits)
     {                                             // not very much optimized, but no one really uses ARGB !!
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             register T2 value;
             const T1 offset = OFstatic_cast(T1, DicomImageClass::maxval(bits - 1));
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dicmypxt.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dicmypxt.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dicmypxt.h	2010-10-14 15:16:29.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dicmypxt.h	2012-09-10 01:02:08.000000000 +0200
@@ -87,7 +87,7 @@
                  const unsigned long planeSize,
                  const int bits)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             // use the number of input pixels derived from the length of the 'PixelData'
             // attribute), but not more than the size of the intermediate buffer
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dicocpt.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dicocpt.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dicocpt.h	2010-10-14 15:16:29.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dicocpt.h	2012-09-10 01:02:08.000000000 +0200
@@ -86,7 +86,7 @@
     inline void copy(const T *pixel[3],
                      const unsigned long offset)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             for (int j = 0; j < 3; j++)
                 OFBitmanipTemplate<T>::copyMem(pixel[j] + offset, this->Data[j], this->getCount());
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dicoflt.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dicoflt.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dicoflt.h	2010-10-14 15:16:29.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dicoflt.h	2012-09-10 01:02:08.000000000 +0200
@@ -98,14 +98,14 @@
                      const int horz,
                      const int vert)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             if (horz && vert)
-                flipHorzVert(pixel, this->Data);
+                this->flipHorzVert(pixel, this->Data);
             else if (horz)
-                flipHorz(pixel, this->Data);
+                this->flipHorz(pixel, this->Data);
             else if (vert)
-                flipVert(pixel, this->Data);
+                this->flipVert(pixel, this->Data);
         }
     }
 };
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dicorot.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dicorot.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dicorot.h	2010-10-14 15:16:29.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dicorot.h	2012-09-10 01:02:08.000000000 +0200
@@ -98,14 +98,14 @@
     inline void rotate(const T *pixel[3],
                        const int degree)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             if (degree == 90)
-                rotateRight(pixel, this->Data);
+                this->rotateRight(pixel, this->Data);
             else if (degree == 180)
-                rotateTopDown(pixel, this->Data);
+                this->rotateTopDown(pixel, this->Data);
             else  if (degree == 270)
-                rotateLeft(pixel, this->Data);
+                this->rotateLeft(pixel, this->Data);
         }
     }
 };
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dicosct.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dicosct.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dicosct.h	2010-10-14 15:16:29.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dicosct.h	2012-09-10 01:02:08.000000000 +0200
@@ -107,8 +107,8 @@
     inline void scale(const T *pixel[3],
                       const int interpolate)
     {
-        if (Init(pixel))
-            scaleData(pixel, this->Data, interpolate);
+        if (this->Init(pixel))
+            this->scaleData(pixel, this->Data, interpolate);
     }
 };
 
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dihsvpxt.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dihsvpxt.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dihsvpxt.h	2010-10-14 15:16:29.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dihsvpxt.h	2012-09-10 01:02:08.000000000 +0200
@@ -87,7 +87,7 @@
                  const unsigned long planeSize,
                  const int bits)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             register T2 *r = this->Data[0];
             register T2 *g = this->Data[1];
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dipalpxt.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dipalpxt.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dipalpxt.h	2010-10-14 15:16:29.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dipalpxt.h	2012-09-10 01:02:08.000000000 +0200
@@ -92,7 +92,7 @@
     void convert(const T1 *pixel,
                  DiLookupTable *palette[3])
     {                                                                // can be optimized if necessary !
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             register const T1 *p = pixel;
             register T2 value = 0;
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dirgbpxt.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dirgbpxt.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/dirgbpxt.h	2010-10-14 15:16:30.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/dirgbpxt.h	2012-09-10 01:02:08.000000000 +0200
@@ -87,7 +87,7 @@
                  const unsigned long planeSize,
                  const int bits)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             // use the number of input pixels derived from the length of the 'PixelData'
             // attribute), but not more than the size of the intermediate buffer
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/diybrpxt.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/diybrpxt.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/diybrpxt.h	2010-10-14 15:16:30.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/diybrpxt.h	2012-09-10 01:02:08.000000000 +0200
@@ -91,7 +91,7 @@
                  const int bits,
                  const OFBool rgb)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             const T1 offset = OFstatic_cast(T1, DicomImageClass::maxval(bits - 1));
             // use the number of input pixels derived from the length of the 'PixelData'
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/diyf2pxt.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/diyf2pxt.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/diyf2pxt.h	2010-10-14 15:16:30.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/diyf2pxt.h	2012-09-10 01:02:08.000000000 +0200
@@ -95,7 +95,7 @@
                  const int bits,
                  const OFBool rgb)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             const T1 offset = OFstatic_cast(T1, DicomImageClass::maxval(bits - 1));
             register unsigned long i;
diff -Nurd dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/diyp2pxt.h dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/diyp2pxt.h
--- dcmtk-3.6.0/dcmimage/include/dcmtk/dcmimage/diyp2pxt.h	2010-10-14 15:16:30.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimage/include/dcmtk/dcmimage/diyp2pxt.h	2012-09-10 01:02:08.000000000 +0200
@@ -91,7 +91,7 @@
     void convert(const T1 *pixel,
                  const int bits)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             register T2 *r = this->Data[0];
             register T2 *g = this->Data[1];
diff -Nurd dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/diflipt.h dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/diflipt.h
--- dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/diflipt.h	2010-10-14 15:16:26.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/diflipt.h	2012-09-10 01:02:08.000000000 +0200
@@ -129,7 +129,7 @@
             else if (vert)
                 flipVert(src, dest);
             else
-                copyPixel(src, dest);
+                this->copyPixel(src, dest);
         }
     }
 
diff -Nurd dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/dimoflt.h dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/dimoflt.h
--- dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/dimoflt.h	2010-10-14 15:16:26.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/dimoflt.h	2012-09-10 01:02:08.000000000 +0200
@@ -106,11 +106,11 @@
             if (this->Data != NULL)
             {
                 if (horz && vert)
-                    flipHorzVert(&pixel, &this->Data);
+                    this->flipHorzVert(&pixel, &this->Data);
                 else if (horz)
-                    flipHorz(&pixel, &this->Data);
+                    this->flipHorz(&pixel, &this->Data);
                 else if (vert)
-                    flipVert(&pixel, &this->Data);
+                    this->flipVert(&pixel, &this->Data);
             }
         }
     }
diff -Nurd dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/dimoipxt.h dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/dimoipxt.h
--- dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/dimoipxt.h	2010-10-14 15:16:26.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/dimoipxt.h	2012-09-10 01:02:08.000000000 +0200
@@ -76,10 +76,10 @@
             else if ((this->Modality != NULL) && this->Modality->hasRescaling())
             {
                 rescale(pixel, this->Modality->getRescaleSlope(), this->Modality->getRescaleIntercept());
-                determineMinMax(OFstatic_cast(T3, this->Modality->getMinValue()), OFstatic_cast(T3, this->Modality->getMaxValue()));
+                this->determineMinMax(OFstatic_cast(T3, this->Modality->getMinValue()), OFstatic_cast(T3, this->Modality->getMaxValue()));
             } else {
                 rescale(pixel);                     // "copy" or reference pixel data
-                determineMinMax(OFstatic_cast(T3, this->Modality->getMinValue()), OFstatic_cast(T3, this->Modality->getMaxValue()));
+                this->determineMinMax(OFstatic_cast(T3, this->Modality->getMinValue()), OFstatic_cast(T3, this->Modality->getMaxValue()));
             }
         }
     }
diff -Nurd dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/dimorot.h dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/dimorot.h
--- dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/dimorot.h	2010-10-14 15:16:26.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/dimorot.h	2012-09-10 01:02:08.000000000 +0200
@@ -105,11 +105,11 @@
             if (this->Data != NULL)
             {
                 if (degree == 90)
-                    rotateRight(&pixel, &(this->Data));
+                    this->rotateRight(&pixel, &(this->Data));
                 else if (degree == 180)
-                    rotateTopDown(&pixel, &(this->Data));
+                    this->rotateTopDown(&pixel, &(this->Data));
                 else if (degree == 270)
-                    rotateLeft(&pixel, &(this->Data));
+                    this->rotateLeft(&pixel, &(this->Data));
             }
         }
     }
diff -Nurd dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/dimosct.h dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/dimosct.h
--- dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/dimosct.h	2010-10-14 15:16:26.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/dimosct.h	2012-09-10 01:02:08.000000000 +0200
@@ -124,7 +124,7 @@
             {
                 const T value = OFstatic_cast(T, OFstatic_cast(double, DicomImageClass::maxval(bits)) *
                     OFstatic_cast(double, pvalue) / OFstatic_cast(double, DicomImageClass::maxval(WIDTH_OF_PVALUES)));
-                scaleData(&pixel, &this->Data, interpolate, value);
+                this->scaleData(&pixel, &this->Data, interpolate, value);
              }
         }
     }
diff -Nurd dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/dirotat.h dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/dirotat.h
--- dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/dirotat.h	2010-10-14 15:16:27.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/dirotat.h	2012-09-10 01:02:08.000000000 +0200
@@ -132,7 +132,7 @@
         else if (degree == 270)
             rotateLeft(src, dest);
         else
-            copyPixel(src, dest);
+            this->copyPixel(src, dest);
     }
 
 
diff -Nurd dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/discalet.h dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/discalet.h
--- dcmtk-3.6.0/dcmimgle/include/dcmtk/dcmimgle/discalet.h	2010-10-14 15:16:27.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmimgle/include/dcmtk/dcmimgle/discalet.h	2012-09-10 01:24:00.000000000 +0200
@@ -206,12 +206,12 @@
                 (Left >= OFstatic_cast(signed long, Columns)) || (Top >= OFstatic_cast(signed long, Rows)))
             {                                                                         // no image to be displayed
                 DCMIMGLE_DEBUG("clipping area is fully outside the image boundaries");
-                fillPixel(dest, value);                                               // ... fill bitmap
+                this->fillPixel(dest, value);                                               // ... fill bitmap
             }
             else if ((this->Src_X == this->Dest_X) && (this->Src_Y == this->Dest_Y))  // no scaling
             {
                 if ((Left == 0) && (Top == 0) && (Columns == this->Src_X) && (Rows == this->Src_Y))
-                    copyPixel(src, dest);                                             // copying
+                    this->copyPixel(src, dest);                                             // copying
                 else if ((Left >= 0) && (OFstatic_cast(Uint16, Left + this->Src_X) <= Columns) &&
                          (Top >= 0) && (OFstatic_cast(Uint16, Top + this->Src_Y) <= Rows))
                     clipPixel(src, dest);                                             // clipping
@@ -567,7 +567,7 @@
         if ((xtemp == NULL) || (xvalue == NULL))
         {
             DCMIMGLE_ERROR("can't allocate temporary buffers for interpolation scaling");
-            clearPixel(dest);
+            this->clearPixel(dest);
         } else {
             for (int j = 0; j < this->Planes; ++j)
             {
@@ -905,7 +905,7 @@
         if (pTemp == NULL)
         {
             DCMIMGLE_ERROR("can't allocate temporary buffer for interpolation scaling");
-            clearPixel(dest);
+            this->clearPixel(dest);
         } else {
 
             /*
@@ -1029,7 +1029,7 @@
         if (pTemp == NULL)
         {
             DCMIMGLE_ERROR("can't allocate temporary buffer for interpolation scaling");
-            clearPixel(dest);
+            this->clearPixel(dest);
         } else {
 
             /*
diff -Nurd dcmtk-3.6.0/dcmnet/apps/echoscu.cc dcmtk-3.6.0-patch/dcmnet/apps/echoscu.cc
--- dcmtk-3.6.0/dcmnet/apps/echoscu.cc	2010-11-01 11:42:44.000000000 +0100
+++ dcmtk-3.6.0-patch/dcmnet/apps/echoscu.cc	2012-09-10 01:02:08.000000000 +0200
@@ -26,6 +26,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */
 
 #define INCLUDE_CSTDLIB
diff -Nurd dcmtk-3.6.0/dcmnet/apps/findscu.cc dcmtk-3.6.0-patch/dcmnet/apps/findscu.cc
--- dcmtk-3.6.0/dcmnet/apps/findscu.cc	2010-11-01 11:42:44.000000000 +0100
+++ dcmtk-3.6.0-patch/dcmnet/apps/findscu.cc	2012-09-10 01:02:08.000000000 +0200
@@ -26,6 +26,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */
 #include "dcmtk/dcmnet/dfindscu.h"
 #include "dcmtk/dcmdata/cmdlnarg.h"
diff -Nurd dcmtk-3.6.0/dcmnet/apps/movescu.cc dcmtk-3.6.0-patch/dcmnet/apps/movescu.cc
--- dcmtk-3.6.0/dcmnet/apps/movescu.cc	2010-11-17 14:01:21.000000000 +0100
+++ dcmtk-3.6.0-patch/dcmnet/apps/movescu.cc	2012-09-10 01:02:08.000000000 +0200
@@ -26,6 +26,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h" /* make sure OS specific configuration is included first */
 
 #define INCLUDE_CSTDLIB
diff -Nurd dcmtk-3.6.0/dcmnet/apps/storescu.cc dcmtk-3.6.0-patch/dcmnet/apps/storescu.cc
--- dcmtk-3.6.0/dcmnet/apps/storescu.cc	2010-11-01 11:42:44.000000000 +0100
+++ dcmtk-3.6.0-patch/dcmnet/apps/storescu.cc	2012-09-10 01:02:08.000000000 +0200
@@ -26,6 +26,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h" /* make sure OS specific configuration is included first */
 
 #define INCLUDE_CSTDLIB
diff -Nurd dcmtk-3.6.0/dcmnet/apps/termscu.cc dcmtk-3.6.0-patch/dcmnet/apps/termscu.cc
--- dcmtk-3.6.0/dcmnet/apps/termscu.cc	2010-11-01 11:42:44.000000000 +0100
+++ dcmtk-3.6.0-patch/dcmnet/apps/termscu.cc	2012-09-10 01:02:08.000000000 +0200
@@ -29,6 +29,11 @@
 
 // ----------------------------------------------------------------------------
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"
 
 #define INCLUDE_CSTDLIB
diff -Nurd dcmtk-3.6.0/dcmnet/libsrc/dulfsm.cc dcmtk-3.6.0-patch/dcmnet/libsrc/dulfsm.cc
--- dcmtk-3.6.0/dcmnet/libsrc/dulfsm.cc	2010-12-01 09:26:36.000000000 +0100
+++ dcmtk-3.6.0-patch/dcmnet/libsrc/dulfsm.cc	2012-09-10 01:02:08.000000000 +0200
@@ -2201,13 +2201,13 @@
 
 #ifdef NO_WINDOWS95_ADDRESS_TRANSLATION_WORKAROUND
     hp = gethostbyname(node);
-    if (hp == NULL)
+    if (hp == NULL || hp->h_length == 0)
     {
         char buf2[4095]; // node could be a long string
         sprintf(buf2, "Attempt to connect to unknown host: %s", node);
         return makeDcmnetCondition(DULC_UNKNOWNHOST, OF_error, buf2);
     }
-    (void) memcpy(&server.sin_addr, hp->h_addr, (size_t) hp->h_length);
+    (void) memcpy(&server.sin_addr, hp->h_addr_list[0], (size_t) hp->h_length);
 #else
     /*
      * Under Win95 gethostbyname will not accept an IP address e.g.
@@ -2222,13 +2222,13 @@
     } else {
         // must be a host name
         hp = gethostbyname(node);
-        if (hp == NULL)
+        if (hp == NULL || hp->h_length == 0)
         {
           char buf2[4095]; // node could be a long string
           sprintf(buf2, "Attempt to connect to unknown host: %s", node);
           return makeDcmnetCondition(DULC_UNKNOWNHOST, OF_error, buf2);
         }
-        (void) memcpy(&server.sin_addr, hp->h_addr, (size_t) hp->h_length);
+        (void) memcpy(&server.sin_addr, hp->h_addr_list[0], (size_t) hp->h_length);
     }
 #endif
 
diff -Nurd dcmtk-3.6.0/dcmpstat/apps/dcmpsrcv.cc dcmtk-3.6.0-patch/dcmpstat/apps/dcmpsrcv.cc
--- dcmtk-3.6.0/dcmpstat/apps/dcmpsrcv.cc	2010-10-14 15:13:45.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmpstat/apps/dcmpsrcv.cc	2012-09-10 01:02:08.000000000 +0200
@@ -26,6 +26,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */
 
 #ifdef HAVE_GUSI_H
diff -Nurd dcmtk-3.6.0/dcmpstat/apps/dcmpssnd.cc dcmtk-3.6.0-patch/dcmpstat/apps/dcmpssnd.cc
--- dcmtk-3.6.0/dcmpstat/apps/dcmpssnd.cc	2010-11-03 13:32:06.000000000 +0100
+++ dcmtk-3.6.0-patch/dcmpstat/apps/dcmpssnd.cc	2012-09-10 01:02:08.000000000 +0200
@@ -26,6 +26,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */
 
 #ifdef HAVE_GUSI_H
diff -Nurd dcmtk-3.6.0/dcmpstat/libsrc/dviface.cc dcmtk-3.6.0-patch/dcmpstat/libsrc/dviface.cc
--- dcmtk-3.6.0/dcmpstat/libsrc/dviface.cc	2010-10-14 15:14:31.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmpstat/libsrc/dviface.cc	2012-09-10 01:02:08.000000000 +0200
@@ -26,6 +26,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 
 #include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */
 #include "dcmtk/dcmpstat/dviface.h"
diff -Nurd dcmtk-3.6.0/dcmpstat/libsrc/dvpsmsg.cc dcmtk-3.6.0-patch/dcmpstat/libsrc/dvpsmsg.cc
--- dcmtk-3.6.0/dcmpstat/libsrc/dvpsmsg.cc	2010-10-14 15:14:32.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmpstat/libsrc/dvpsmsg.cc	2012-09-10 01:02:08.000000000 +0200
@@ -290,12 +290,12 @@
   if (s < 0) return;
 
   struct hostent *hp = gethostbyname("localhost");
-  if (NULL == hp) return;
+  if (NULL == hp || hp->h_length == 0) return;
 
   struct sockaddr_in server;
   server.sin_family = AF_INET;
   server.sin_port = (unsigned short) htons(port);
-  memcpy(&server.sin_addr, hp->h_addr, (size_t) hp->h_length);
+  memcpy(&server.sin_addr, hp->h_addr_list[0], (size_t) hp->h_length);
 
   if (connect(s, (struct sockaddr *) & server, sizeof(server)) < 0)
   {
diff -Nurd dcmtk-3.6.0/dcmpstat/libsrc/dvpspr.cc dcmtk-3.6.0-patch/dcmpstat/libsrc/dvpspr.cc
--- dcmtk-3.6.0/dcmpstat/libsrc/dvpspr.cc	2010-10-14 15:14:32.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmpstat/libsrc/dvpspr.cc	2012-09-10 01:02:08.000000000 +0200
@@ -27,6 +27,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */
 #include "dcmtk/ofstd/ofstring.h"
 #include "dcmtk/dcmpstat/dvpsdef.h"
diff -Nurd dcmtk-3.6.0/dcmqrdb/libsrc/dcmqrcbg.cc dcmtk-3.6.0-patch/dcmqrdb/libsrc/dcmqrcbg.cc
--- dcmtk-3.6.0/dcmqrdb/libsrc/dcmqrcbg.cc	2010-10-14 15:14:35.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmqrdb/libsrc/dcmqrcbg.cc	2012-09-10 01:02:08.000000000 +0200
@@ -26,6 +26,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */
 #include "dcmtk/dcmqrdb/dcmqrcbg.h"
 
diff -Nurd dcmtk-3.6.0/dcmqrdb/libsrc/dcmqrcbm.cc dcmtk-3.6.0-patch/dcmqrdb/libsrc/dcmqrcbm.cc
--- dcmtk-3.6.0/dcmqrdb/libsrc/dcmqrcbm.cc	2010-11-01 14:37:32.000000000 +0100
+++ dcmtk-3.6.0-patch/dcmqrdb/libsrc/dcmqrcbm.cc	2012-09-10 01:02:08.000000000 +0200
@@ -26,6 +26,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */
 #include "dcmtk/dcmqrdb/dcmqrcbm.h"
 
diff -Nurd dcmtk-3.6.0/dcmqrdb/libsrc/dcmqrdbi.cc dcmtk-3.6.0-patch/dcmqrdb/libsrc/dcmqrdbi.cc
--- dcmtk-3.6.0/dcmqrdb/libsrc/dcmqrdbi.cc	2010-11-05 11:29:55.000000000 +0100
+++ dcmtk-3.6.0-patch/dcmqrdb/libsrc/dcmqrdbi.cc	2012-09-10 01:02:08.000000000 +0200
@@ -27,6 +27,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */
 
 BEGIN_EXTERN_C
diff -Nurd dcmtk-3.6.0/dcmqrdb/libsrc/dcmqrtis.cc dcmtk-3.6.0-patch/dcmqrdb/libsrc/dcmqrtis.cc
--- dcmtk-3.6.0/dcmqrdb/libsrc/dcmqrtis.cc	2010-10-14 15:14:36.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmqrdb/libsrc/dcmqrtis.cc	2012-09-10 01:02:08.000000000 +0200
@@ -26,6 +26,11 @@
  *
  */
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"    /* make sure OS specific configuration is included first */
 #include "dcmtk/dcmqrdb/dcmqrtis.h"
 
diff -Nurd dcmtk-3.6.0/dcmwlm/libsrc/wldsfs.cc dcmtk-3.6.0-patch/dcmwlm/libsrc/wldsfs.cc
--- dcmtk-3.6.0/dcmwlm/libsrc/wldsfs.cc	2010-10-14 15:14:49.000000000 +0200
+++ dcmtk-3.6.0-patch/dcmwlm/libsrc/wldsfs.cc	2012-09-10 01:02:08.000000000 +0200
@@ -28,6 +28,11 @@
 
 // ----------------------------------------------------------------------------
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"  // specific configuration for operating system
 BEGIN_EXTERN_C
 #ifdef HAVE_FCNTL_H
diff -Nurd dcmtk-3.6.0/oflog/libsrc/threads.cc dcmtk-3.6.0-patch/oflog/libsrc/threads.cc
--- dcmtk-3.6.0/oflog/libsrc/threads.cc	2010-12-22 18:22:28.000000000 +0100
+++ dcmtk-3.6.0-patch/oflog/libsrc/threads.cc	2012-09-10 01:02:08.000000000 +0200
@@ -131,7 +131,7 @@
 #if defined (LOG4CPLUS_USE_PTHREADS)
     // Block all signals.
     ::sigset_t signal_set;
-#if defined (_DARWIN_C_SOURCE) || defined (__OpenBSD__)
+#if 1
     sigfillset (&signal_set);
 #else
     ::sigfillset (&signal_set);
diff -Nurd dcmtk-3.6.0/oflog/libsrc/unixsock.cc dcmtk-3.6.0-patch/oflog/libsrc/unixsock.cc
--- dcmtk-3.6.0/oflog/libsrc/unixsock.cc	2010-12-15 13:59:47.000000000 +0100
+++ dcmtk-3.6.0-patch/oflog/libsrc/unixsock.cc	2012-09-10 01:02:08.000000000 +0200
@@ -18,6 +18,11 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#undef _DARWIN_C_SOURCE
+
 //#include <cstring>
 //#include <vector>
 //#include <algorithm>
diff -Nurd dcmtk-3.6.0/ofstd/include/dcmtk/ofstd/offile.h dcmtk-3.6.0-patch/ofstd/include/dcmtk/ofstd/offile.h
--- dcmtk-3.6.0/ofstd/include/dcmtk/ofstd/offile.h	2010-12-17 11:50:30.000000000 +0100
+++ dcmtk-3.6.0-patch/ofstd/include/dcmtk/ofstd/offile.h	2012-09-10 01:02:08.000000000 +0200
@@ -29,13 +29,17 @@
 #ifndef OFFILE_H
 #define OFFILE_H
 
+#define _DARWIN_C_SOURCE 1
+#include <sys/file.h>
+#include <unistd.h>
+#include <stdio.h>
+#undef _DARWIN_C_SOURCE
+
 #include "dcmtk/config/osconfig.h"
 #include "dcmtk/ofstd/oftypes.h"    /* for class OFBool */
 #include "dcmtk/ofstd/ofstring.h"   /* for class OFString */
 #include "dcmtk/ofstd/ofstd.h"      /* for class OFStandard */
 
-#define INCLUDE_UNISTD
-#define INCLUDE_CSTDIO
 #define INCLUDE_CSTRING
 #define INCLUDE_CSTDARG
 #define INCLUDE_CERRNO
@@ -348,7 +352,7 @@
 #if defined(_WIN32) || defined(__hpux)
     this->setvbuf(NULL, _IOLBF, 0);
 #else
-    :: setlinebuf(file_);
+    STDIO_NAMESPACE setlinebuf(file_);
 #endif
   }
 
@@ -462,7 +466,7 @@
 #if defined(_WIN32) || defined(__hpux)
     this->setvbuf(NULL, buf ? _IOFBF : _IONBF, size);
 #else
-    :: setbuffer(file_, buf, size);
+    STDIO_NAMESPACE setbuffer(file_, buf, size);
 #endif
   }
 
@@ -573,7 +577,7 @@
 #ifdef EXPLICIT_LFS_64
     result = :: fseeko64(file_, off, whence);
 #else
-    result = :: fseeko(file_, off, whence);
+    result = STDIO_NAMESPACE fseeko(file_, off, whence);
 #endif
 #else
     result = STDIO_NAMESPACE fseek(file_, off, whence);
diff -Nurd dcmtk-3.6.0/ofstd/include/dcmtk/ofstd/ofoset.h dcmtk-3.6.0-patch/ofstd/include/dcmtk/ofstd/ofoset.h
--- dcmtk-3.6.0/ofstd/include/dcmtk/ofstd/ofoset.h	2010-10-14 15:15:50.000000000 +0200
+++ dcmtk-3.6.0-patch/ofstd/include/dcmtk/ofstd/ofoset.h	2012-09-10 01:02:08.000000000 +0200
@@ -146,7 +146,7 @@
       {
         // if size equals num, we need more space
         if( this->size == this->num )
-          Resize( this->size * 2 );
+          this->Resize( this->size * 2 );
 
         // copy item
         T *newItem = new T( item );
@@ -189,7 +189,7 @@
         {
           // if size equals num, we need more space
           if( this->size == this->num )
-            Resize( this->size * 2 );
+            this->Resize( this->size * 2 );
 
           // copy item
           T *newItem = new T( item );
diff -Nurd dcmtk-3.6.0/ofstd/include/dcmtk/ofstd/ofstd.h dcmtk-3.6.0-patch/ofstd/include/dcmtk/ofstd/ofstd.h
--- dcmtk-3.6.0/ofstd/include/dcmtk/ofstd/ofstd.h	2010-10-14 15:15:50.000000000 +0200
+++ dcmtk-3.6.0-patch/ofstd/include/dcmtk/ofstd/ofstd.h	2012-09-10 01:02:08.000000000 +0200
@@ -49,6 +49,7 @@
 END_EXTERN_C
 
 
+
 /*---------------------*
  *  class declaration  *
  *---------------------*/
@@ -96,7 +97,7 @@
      */
     static inline size_t strlcpy(char *dst, const char *src, size_t siz)
     {
-#ifdef HAVE_STRLCPY
+#if 0
       return ::strlcpy(dst, src, siz);
 #else
       return my_strlcpy(dst, src, siz);
@@ -122,7 +123,7 @@
      */
     static inline size_t strlcat(char *dst, const char *src, size_t siz)
     {
-#ifdef HAVE_STRLCAT
+#if 0
       return ::strlcat(dst, src, siz);
 #else
       return my_strlcat(dst, src, siz);
diff -Nurd dcmtk-3.6.0/ofstd/include/dcmtk/ofstd/ofstdinc.h dcmtk-3.6.0-patch/ofstd/include/dcmtk/ofstd/ofstdinc.h
--- dcmtk-3.6.0/ofstd/include/dcmtk/ofstd/ofstdinc.h	2010-10-14 15:15:50.000000000 +0200
+++ dcmtk-3.6.0-patch/ofstd/include/dcmtk/ofstd/ofstdinc.h	2012-09-10 01:02:08.000000000 +0200
@@ -332,6 +332,11 @@
 #ifndef INCLUDE_LIBC_H_AS_CXX
 BEGIN_EXTERN_C
 #endif
+// Fix compilation on Lion, where sys/mount.h uses some undefined types:
+typedef unsigned char u_char;
+typedef unsigned short u_short;
+typedef unsigned int u_int;
+typedef unsigned long u_long;
 #include <libc.h>
 #ifndef INCLUDE_LIBC_H_AS_CXX
 END_EXTERN_C
diff -Nurd dcmtk-3.6.0/ofstd/libsrc/ofstd.cc dcmtk-3.6.0-patch/ofstd/libsrc/ofstd.cc
--- dcmtk-3.6.0/ofstd/libsrc/ofstd.cc	2010-11-01 09:55:56.000000000 +0100
+++ dcmtk-3.6.0-patch/ofstd/libsrc/ofstd.cc	2012-09-10 01:02:08.000000000 +0200
@@ -221,7 +221,6 @@
 
 // --- string functions ---
 
-#ifndef HAVE_STRLCPY
 /*
  * Copy src to string dst of size siz.  At most siz-1 characters
  * will be copied.  Always NUL terminates (unless siz == 0).
@@ -253,10 +252,8 @@
 
   return(s - src - 1);    /* count does not include NUL */
 }
-#endif /* HAVE_STRLCPY */
 
 
-#ifndef HAVE_STRLCAT
 /*
  * Appends src to string dst of size siz (unlike strncat, siz is the
  * full size of dst, not space left).  At most siz-1 characters
@@ -290,7 +287,6 @@
 
   return(dlen + (s - src));       /* count does not include NUL */
 }
-#endif /* HAVE_STRLCAT */
 
 
 #ifdef HAVE_PROTOTYPE_STRERROR_R
