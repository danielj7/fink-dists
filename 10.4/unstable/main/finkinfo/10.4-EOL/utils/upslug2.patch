diff -ru upslug2-11/linux_wire.cc upslug2-11-patched/linux_wire.cc
--- upslug2-11/linux_wire.cc	2005-10-15 19:47:12.000000000 +0300
+++ upslug2-11-patched/linux_wire.cc	2006-08-20 15:48:19.000000000 +0300
@@ -196,7 +196,7 @@
 
 		/* Check the device name.  If not given use 'eth0'. */
 		if (device == NULL)
-			device = "eth0";
+			device = "en0";
 
 		/* We are using a level which requires a hardware specific address,
 		 * that's because the NSLU2 doesn't (for reasons which are far from
diff -ru upslug2-11/pcap_wire.cc upslug2-11-patched/pcap_wire.cc
--- upslug2-11/pcap_wire.cc	2005-11-23 09:13:51.000000000 +0200
+++ upslug2-11-patched/pcap_wire.cc	2006-08-20 15:48:47.000000000 +0300
@@ -291,7 +291,7 @@
 
 	/* Check the device name.  If not given use 'eth0'. */
 	if (device == NULL)
-		device = "eth0";
+		device = "en0";
 
 	pcap_t *pcap = NULL;
 	{
diff -ru upslug2-11/upslug2.cc upslug2-11-patched/upslug2.cc
--- upslug2-11/upslug2.cc	2005-11-23 08:54:08.000000000 +0200
+++ upslug2-11-patched/upslug2.cc	2006-08-20 15:48:39.000000000 +0300
@@ -369,7 +369,7 @@
 	char                kernel_sex(0);        /* Byte sex of kernel */
 	char                data_sex('b');        /* Byte sex of data */
 	char                directory_sex('b');   /* Byte sex of FIS directory entries */
-	const char*         device = "eth0";      /* Hardware device to use */
+	const char*         device = "en0";      /* Hardware device to use */
 	const char*         target = "broadcast"; /* User specified target name */
 	const unsigned char*mac = 0;              /* Ethernet address to upgrade. */
 	unsigned char       macBuffer[6];         /* To store the command line address */
@@ -396,7 +396,7 @@
 	/* The list of options, I combine the help text with the option name. */
 	struct option options[] = {
 { "help:                     output this help message",         no_argument,       0, 'h' },
-{ "device[eth0]:             local ethernet device to use",     required_argument, 0, 'd' },
+{ "device[en0]:              local ethernet device to use",     required_argument, 0, 'd' },
 { "target:                   NSLU2 to upgrade (MAC address)",   required_argument, 0, 't' },
 { "from:                     MAC of host (this machine)",       required_argument, 0, 'f' },
 { "verify:                   verify only (do not write flash)", no_argument,       0, 'v' },

 	  	 
