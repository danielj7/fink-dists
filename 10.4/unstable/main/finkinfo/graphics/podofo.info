Package: podofo
Version: 0.7.0
Revision: 1
GCC: 4.0
Source: mirror:sourceforge:%n/%n-%v.tar.gz
Source-MD5: b9623fd9279fca49f7cdd5c1fed182b1
License: GPL
Depends: %N-shlibs (= %v-%r), fontconfig2-shlibs, libjpeg-shlibs, libjpeg-bin, libtiff-shlibs, freetype219-shlibs
BuildDepends: fink (>= 0.24.12), fontconfig2-dev, libjpeg, libtiff, freetype219, cmake (>= 2.6.0-1)
PatchScript: <<
 perl -pi -e 's|^INCLUDE_DIRECTORIES\($|$&\n\$\{PoDoFo_SOURCE_DIR\}|' CMakeLists.txt
<<
CompileScript: <<
#!/bin/sh -ev
 mkdir build
 cd build
 cmake --debug-output -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
       -DCMAKE_INSTALL_PREFIX:PATH=%p \
       -DCMAKE_INCLUDE_PATH:PATH=%p/include \
       -DCMAKE_LIBRARY_PATH:PATH=%p/lib \
       -DPODOFO_BUILD_STATIC:BOOL=TRUE \
       -DCMAKE_INSTALL_NAME_DIR:STRING=%p/lib \
       -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=OFF \
       -DCMAKE_INSTALL_RPATH:STRING="${CMAKE_INSTALL_NAME_DIR}" \
       -DCMAKE_EXE_LINKER_FLAGS:STRING="" \
       ..
# evil hack to find installed headers after the headers in the source
# if you know how to do this more elegantly in cake, please tell me
 perl -pi -e 's|(\-I%p/include )(\S* )|-I.. \2\1|g' `find . -name flags.make`
 make
<< 
InstallScript: <<
#!/bin/sh -ev
 cd build
 make install DESTDIR=%d
<<
DocFiles: AUTHORS COPYING ChangeLog README.html 
Description: Library to work with the PDF file format
DescDetail: << 
The PoDoFo library is a free, portable C++ library 
which includes classes to parse PDF files and modify 
their contents into memory. 
The changes can be written back to disk easily. 
The parser can also be used to extract information 
from a PDF file (for example the parser could be used 
in a PDF viewer). Besides parsing PoDoFo includes also 
very simple classes to create your own PDF files. 
All classes are documented so it is easy to start 
writing your own application using PoDoFo.

The PoDoFo tools are simple tools built around the PoDoFo library. 
These tools are first of all examples on how to use the PoDoFo 
library in your own projects. But secondly they offer also 
features for working with PDF files. More tools will come with 
future release and the existing tools will gain more features.
Currently there are the following tools:

podofoencrypt - Encrypts any PDF and allows to set PDF permissions..
podofoimgextract - Extracts all images from a given PDF file.
podofoimpose - A powerful PDF imposition tool. It places pages 
               from one or more source PDFs onto pages of a new 
               PDF, applying scaling and positioning.
podofomerge - Merges two PDF files into onw.
podofopdfinfo - Provides some basic info about a PDF 
                - metadata, page details, etc.
podofotxt2pdf - Converts a text file to a PDF
podofotxtextract - A tool that extracts all text from a PDF file. 
                   Works only for simple PDFs at the moment.
podofouncompress - Removes all compression filters from a PDF file. 
                   This is useful for debugging existing PDF files. 
                   You might also find PoDoFoBrowser, distributed 
                   separately, to be useful if you're using this tool a lot.
<<
Splitoff: <<
  Package: %N-dev
  Description: Podofo headers and static lib
  BuildDependsOnly: True
  DocFiles: COPYING README.html
  Files: <<
    include
    lib/libpodofo.a
    lib/libpodofo.dylib
  <<
<<
Splitoff2: <<
  Package: %N-shlibs
  Description: Podofo shared library
  DocFiles: COPYING README.html
  Depends: fontconfig2-shlibs, libjpeg-shlibs, libjpeg-bin, libtiff-shlibs, freetype219-shlibs
  Files: lib
  Shlibs: <<
    %p/lib/libpodofo.0.6.0.dylib 0.6.0 %n (>= 0.6.0-1)
  <<
<<
Maintainer: Martin Costabel <costabel@wanadoo.fr>
Homepage: http://podofo.sourceforge.net/

