Info2: <<
Package: llvm
Version: 2.5
Revision: 1
Source: http://llvm.org/releases/%v/llvm-%v.tar.gz
Source-MD5: 55df2ea8665c8094ad2ef85187b9fc74
Type: -64bit
Architecture: ( %type_raw[-64bit] = -64bit ) powerpc, ( %type_raw[-64bit] = -64bit ) i386
ConfigureParams: <<
 --prefix=%p/lib/llvm --mandir=%p/share/man --infodir=%p/share/info --with-gmp=%p --with-libiconv-prefix=/usr --with-system-zlib --with-as=`xcode-select  -print-path`/usr/bin/as --with-ld=`xcode-select  -print-path`/usr/bin/ld --with-nm=`xcode-select  -print-path`/usr/bin/nm
<<
CompileScript: <<
 #!/bin/bash -ev
 export LD=`xcode-select  -print-path`/usr/bin/ld
 ulimit -s `ulimit -s`
 darwinvers=`uname -r|cut -f1 -d.`
 mkdir ../llvm_objdir
 cd ../llvm_objdir
 if [ `uname -p` = "powerpc" ]; then
   TRIPLE=powerpc-apple-darwin$darwinvers
 else
   TRIPLE=i686-apple-darwin$darwinvers
 fi
 ../llvm-%v/configure %c --build=$TRIPLE --target=$TRIPLE --host=$TRIPLE --enable-optimized --enable-assertions --enable-pic --enable-targets=host-only
 num_cpu=$(echo `sysctl -n hw.ncpu`)
 make -j $num_cpu
<<
InstallScript: <<
 #!/bin/sh -ev
 export LD=`xcode-select  -print-path`/usr/bin/ld
 cd ../llvm_objdir
 make install DESTDIR=%d 
 mkdir -p %i/bin
 ln -s %p/lib/llvm/bin/bugpoint %i/bin/bugpoint
 ln -s %p/lib/llvm/bin/gccas %i/bin/gccas
 ln -s %p/lib/llvm/bin/gccld %i/bin/gccld
 ln -s %p/lib/llvm/bin/llc %i/bin/llc
 ln -s %p/lib/llvm/bin/lli %i/bin/lli
 ln -s %p/lib/llvm/bin/llvm-ar %i/bin/llvm-ar
 ln -s %p/lib/llvm/bin/llvm-as %i/bin/llvm-as
 ln -s %p/lib/llvm/bin/llvm-bcanalyzer %i/bin/llvm-bcanalyzer
 ln -s %p/lib/llvm/bin/llvm-config %i/bin/llvm-config
 ln -s %p/lib/llvm/bin/llvm-db %i/bin/llvm-db
 ln -s %p/lib/llvm/bin/llvm-dis %i/bin/llvm-dis
 ln -s %p/lib/llvm/bin/llvm-extract %i/bin/llvm-extract
 ln -s %p/lib/llvm/bin/llvm-ld %i/bin/llvm-ld
 ln -s %p/lib/llvm/bin/llvm-link %i/bin/llvm-link
 ln -s %p/lib/llvm/bin/llvm-nm %i/bin/llvm-nm
 ln -s %p/lib/llvm/bin/llvm-prof  %i/bin/llvm-prof
 ln -s %p/lib/llvm/bin/llvm-ranlib %i/bin/llvm-ranlib
 ln -s %p/lib/llvm/bin/llvm-stub %i/bin/llvm-stub
 ln -s %p/lib/llvm/bin/llvmc %i/bin/llvmc
 ln -s %p/lib/llvm/bin/opt %i/bin/opt
 # remove build path from .la files
 perl -pi -e "s, \-L[^ ']*/%n-%v-%r/llvm_objdir/[^ ']*,,g" `find %i/lib/llvm/lib -name '*.la'`
 perl -pi -e "s,src/fink.build/%n-%v-%r/llvm_objdir/Release/,,g" `find %i/lib/llvm/lib -name '*.la'`
 rm %i/lib/llvm/lib/LLVMHello*.dylib
 <<
SplitOff: <<
  Package: %N-shlibs
  Files: <<
     lib/llvm/lib/libLTO.dylib
  << 
  Shlibs: <<
     %p/lib/llvm/lib/libLTO.dylib 0.0.0 %n (>= 2.5-1) 32
  <<
<<
License: GPL
Description: Low Level Virtual Machine Compiler
DescDetail: <<
A compilation strategy designed to enable effective program optimization across
the entire lifetime of a program. LLVM supports effective optimization at
compile time, link-time (particularly interprocedural), run-time and offline 
(i.e., after software is installed), while remaining transparent to developers
and maintaining compatibility with existing build scripts.
<<
DescPackaging: <<
The file libLTO.dylib in %p/lib/llvm/lib can be used to replace the libLTO.dylib
in /Developer/usr/lib from Xcode 3.1.2 to enable full LTO support at -O4 in
the compilers of the llvm-gcc42 package. Note that the fink maintainer mode
doesn't understand the @executable_path/../lib/libLTO.dylib syntax in libLTO.dylib's
otool -L output.
<<
Homepage: http://llvm.org/
Maintainer: Jack Howarth <howarth@bromo.med.uc.edu>
<<
