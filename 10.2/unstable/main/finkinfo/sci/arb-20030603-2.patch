--- ./config.makefile	2003-06-03 23:23:03.000000000 -0700
+++ ./config.makefile	2003-06-03 23:23:19.000000000 -0700
@@ -13,16 +13,16 @@
 # SEER = 1
 
 #********* LINUX / gcc g++ / static ********
-MACH = LINUX# Linus g++  and gcc
-LINUX = 1
-ECGS = 1# for newer Linux-versions
+#MACH = LINUX# Linus g++  and gcc
+#LINUX = 1
+#ECGS = 1# for newer Linux-versions
 
 # export DEBIAN = 1
 
 #********* Mac OSX ********
 
-# MACH   = DARWIN#
-# DARWIN = 1
+MACH   = DARWIN#
+DARWIN = 1
 
 #********* SUN4 / acc CC / dynamic ********
 
--- AWT/AWT_file_selection.cxx	2003-06-03 23:43:33.000000000 -0700
+++ AWT/AWT_file_selection.cxx	2003-06-03 23:42:45.000000000 -0700
@@ -18,6 +18,7 @@
 #include <dirent.h>
 #include <sys/types.h>
 #include <sys/stat.h>
+#include <sys/param.h>
 
 static GB_CSTR awt_get_base_directory(const char *pwd_envar) {
     GB_CSTR res;
--- AWT/AWT_imp_exp.cxx.orig	2003-06-03 23:57:19.000000000 -0700
+++ AWT/AWT_imp_exp.cxx	2003-06-04 00:05:47.000000000 -0700
@@ -217,10 +217,12 @@
 // --------------------------------------------
 const char * AWT_date_string(void) {
     struct timeval date;
+    struct timespec local;
     struct tm *p;
 
     gettimeofday(&date, 0);
-    p              = localtime(&date.tv_sec);
+    TIMEVAL_TO_TIMESPEC(&date, &local);
+    p              = localtime(&local.tv_sec);
     char *readable = asctime(p); // points to a static buffer
     char *cr       = strchr(readable, '\n');
     awt_assert(cr);
--- ARBDBS/Makefile.orig	2003-06-08 19:28:33.000000000 -0700
+++ ARBDBS/Makefile	2003-06-08 19:29:37.000000000 -0700
@@ -9,7 +9,7 @@
 $(MAIN): $(OBJECTS)
 	$(AR) $(MAIN) $(OBJECTS)
 .c.o:
-	$(CPP) $(cflags) -c $< $(CPPINCLUDES)
+	$(ACC) $(cflags) -c $< $(AINCLUDES)
 .cxx.o:
 	$(CPP) $(cflags) -c $< $(CPPINCLUDES)
 depend:
--- ARBDB/Makefile~	2003-02-06 07:21:08.000000000 -0800
+++ ARBDB/Makefile	2003-06-11 21:55:21.000000000 -0700
@@ -8,7 +8,7 @@
 	$(ARCPPLIB) $(@:.a=).$(SHARED_LIB_SUFFIX) $(OBJECTS)
 	touch $@
 .c.o:
-	$(CCPLIB) $(cflags) -c $< $(AINCLUDES)
+	$(CCLIB) $(cflags) -c $< $(AINCLUDES)
 .cxx.o:
 	$(CCPLIB) $(cflags) -c $< $(AINCLUDES)
 
--- ./Makefile~	2003-06-11 23:01:10.000000000 -0700
+++ ./Makefile	2003-06-11 23:01:29.000000000 -0700
@@ -107,13 +107,13 @@
    havebool = -DHAVE_BOOL
    lflags = $(LDFLAGS) -force_flat_namespace -Wl,-stack_size -Wl,10000000 -Wl,-stack_addr -Wl,c0000000
    DARWIN_SPECIALS = -DNO_REGEXPR  -no-cpp-precomp -DHAVE_BOOL
-   CPP = cc -D$(MACH) $(DARWIN_SPECIALS)
-   ACC = cc -D$(MACH) $(DARWIN_SPECIALS)
-   CCLIB = cc -fno-common -D$(MACH) $(DARWIN_SPECIALS)
-   CCPLIB = cc -fno-common -D$(MACH) $(DARWIN_SPECIALS)
+   CPP = g++2 -D$(MACH) $(DARWIN_SPECIALS)
+   ACC = gcc2 -D$(MACH) $(DARWIN_SPECIALS)
+   CCLIB = gcc2 -fno-common -D$(MACH) $(DARWIN_SPECIALS)
+   CCPLIB = g++2 -fno-common -D$(MACH) $(DARWIN_SPECIALS)
    AR = ld -r -o#                 # Archive Linker
    ARLIB = $(AR)#                 # Archive Linker shared libs.
-#  ARLIB = cc -bundle -flat_namespace -undefined suppress -o
+#  ARLIB = gcc2 -bundle -flat_namespace -undefined suppress -o
    SHARED_LIB_SUFFIX = a#
 # .. Just building shared libraries static, i was having problems otherwise
 
@@ -1177,7 +1177,7 @@
 arbshared: dball aw dp awt
 arbapplications: nt pa ed e4 we pr pg na al nal di ph ds trs
 
-arb: arbbasic arbshared arbapplications help arbxtras
+arb: arbbasic arbshared arbapplications arbxtras
 #arb: arbbasic db aw dp awt dbs nt pa ed e4 we pr pg na al nal di db2 ph ds trs help arbxtras
 
 save:	rmbak
--- HELP_SOURCE/to_help.xsl.orig	2003-06-14 22:07:00.000000000 -0700
+++ HELP_SOURCE/to_help.xsl	2003-06-14 22:07:08.000000000 -0700
@@ -45,7 +45,7 @@
   <!-- =============== -->
 
   <xsl:template name="error">
-    <xsl:param name="text" select="Unknown error"/>
+    <xsl:param name="text" select="'Unknown error'"/>
     <xsl:message terminate="yes"><xsl:value-of select="$text"/></xsl:message>
   </xsl:template>
 
--- MULTI_PROBE/MP_main.cxx.orig	2003-06-14 22:23:45.000000000 -0700
+++ MULTI_PROBE/MP_main.cxx	2003-06-14 22:26:18.000000000 -0700
@@ -67,22 +67,36 @@
     aw_root->awar_string(MP_AWAR_SEQUENZEINGABE)->add_target_var(& mp_gl_awars.manual_sequence);
 	aw_root->awar_string(MP_AWAR_SELECTEDPROBES)->add_target_var(& mp_gl_awars.selected_probes);
 	aw_root->awar_string(MP_AWAR_PROBELIST)->add_target_var(& mp_gl_awars.probelist);
+        printf("1 \n");
 	aw_root->awar_int(MP_AWAR_WEIGHTEDMISMATCHES)->add_target_var(& mp_gl_awars.weightedmismatches)->write_int(2);
+        printf("2 \n");
 	aw_root->awar_int(MP_AWAR_COMPLEMENT,1)->add_target_var(& mp_gl_awars.complement);
+        printf("3 \n");
 	aw_root->awar_int(MP_AWAR_MISMATCHES)->add_target_var(& mp_gl_awars.no_of_mismatches)->add_callback(MP_modify_selected,(AW_CL)0,(AW_CL)0);
+        printf("4 \n");
 	remembered_mismatches = 0;		//derselbe initiale Wert wie mp_gl_awars.no_of_mismatches
 	aw_root->awar_int(MP_AWAR_PTSERVER)->add_target_var( & mp_gl_awars.ptserver);
+        printf("5 \n");
 	aw_root->awar_string(MP_AWAR_RESULTPROBES)->add_target_var( & mp_gl_awars.result_probes );
 	aw_root->awar_string(MP_AWAR_RESULTPROBESCOMMENT)->add_target_var( & mp_gl_awars.result_probes_comment );
+        printf("6 \n");
 	aw_root->awar_int(MP_AWAR_NOOFPROBES)->add_target_var( & mp_gl_awars.no_of_probes )->write_int(3);
+        printf("7 \n");
 	aw_root->awar_int(MP_AWAR_QUALITY)->add_target_var( & mp_gl_awars.probe_quality )->add_callback(MP_gen_quality,(AW_CL)0,(AW_CL)0)->write_int(QUALITYDEFAULT);
+        printf("8 \n");
 	aw_root->awar_int(MP_AWAR_SINGLEMISMATCHES)->add_target_var( & mp_gl_awars.singlemismatches )->add_callback(MP_gen_singleprobe,(AW_CL)0,(AW_CL)0);
+        printf("9 \n");
 	aw_root->awar_float(MP_AWAR_OUTSIDEMISMATCHES)->add_target_var( & mp_gl_awars.outside_mismatches_difference )->write_float(1.0);
+        printf("10 \n");
 	aw_root->awar_int(MP_AWAR_QUALITYBORDER1)->add_target_var( & mp_gl_awars.qualityborder_best )->write_int(5);
+        printf("11 \n");
 
 	aw_root->awar_int(MP_AWAR_EMPHASIS)->add_target_var( & mp_gl_awars.emphasis )->write_int(0);
+        printf("12 \n");
 	aw_root->awar_float(MP_AWAR_GREYZONE)->add_target_var( & mp_gl_awars.greyzone )->write_float(0.0);
+        printf("13 \n");
 	aw_root->awar_int(MP_AWAR_ECOLIPOS)->add_target_var( & mp_gl_awars.ecolipos )->write_int(0);
+        printf("14 \n");
 
 	aw_root->awar_int(MP_AWAR_AUTOADVANCE,1);
 }
