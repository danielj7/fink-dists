--- gkrellm-2.0.4/src/gkrellm.h	2002-09-23 19:47:04.000000000 -0700
+++ gkrellm-2.0.4-patched/src/gkrellm.h	2002-10-10 02:30:15.000000000 -0700
@@ -52,7 +52,7 @@
 
 #if !defined(__FreeBSD__) && !defined(__linux__) && !defined(__NetBSD__) \
 	&& !defined(__OpenBSD__) && !defined(__solaris__) && !defined(WIN32) \
-	&& !defined(__APPLE)
+	&& !defined(__APPLE__)
 #define  USE_LIBGTOP
 #endif
 
--- gkrellm-2.0.4/src/inet.h	2002-07-28 17:59:15.000000000 -0700
+++ gkrellm-2.0.4-patched/src/inet.h	2002-10-10 02:07:13.000000000 -0700
@@ -46,6 +46,15 @@
 #endif
 #endif  /* __FreeBSD__ */
 
+#if defined(__APPLE__)
+#include <sys/types.h>
+#include <sys/socket.h>
+#include <sys/socketvar.h>
+#include <sys/sysctl.h>
+#include <net/route.h>
+#define INET6
+#endif /* __APPLE__ */
+
 #if defined(__NetBSD__) || defined(__OpenBSD__)
 #include <sys/types.h>
 #include <sys/socket.h>
--- gkrellm-2.0.4/src/sysdeps/bsd-common.c	2002-07-31 14:27:36.000000000 -0700
+++ gkrellm-2.0.4-patched/src/sysdeps/bsd-common.c	2002-10-10 02:27:39.000000000 -0700
@@ -23,6 +23,7 @@
 */
 
 #include <sys/sysctl.h>
+#include <sys/socket.h> // For PF_ROUTE, etc
 #include <net/if.h>
 #include <net/if_dl.h>
 #include <net/route.h>
--- gkrellm-2.0.4/server/gkrellmd.h	2002-09-23 19:47:20.000000000 -0700
+++ gkrellm-2.0.4-patched/server/gkrellmd.h	2002-10-10 03:12:01.000000000 -0700
@@ -84,13 +84,20 @@
 # endif
 #endif
 
+#if defined(__APPLE__)
+# ifndef socklen_t
+#  define socklen_t int
+# endif
+#define HAVE_GETADDRINFO	1
+#endif
+
 #ifndef	NI_WITHSCOPEID
 #define	NI_WITHSCOPEID	0
 #endif
 
 #if !defined(__FreeBSD__) && !defined(__linux__) && !defined(__NetBSD__) \
     && !defined(__OpenBSD__) && !defined(__solaris__) && !defined(WIN32) \
-    && !defined(__APPLE)
+    && !defined(__APPLE__)
 #define  USE_LIBGTOP
 #endif
 
--- gkrellm-2.0.4/server/sysdeps-unix.c	2002-07-31 16:07:47.000000000 -0700
+++ gkrellm-2.0.4-patched/server/sysdeps-unix.c	2002-10-10 03:11:52.000000000 -0700
@@ -27,8 +27,8 @@
 #endif
 
 #if defined(__APPLE__)
-#include "sysdeps/darwin.c"
-#include "sysdeps/bsd-common.c"
+#include "../src/sysdeps/darwin.c"
+#include "../src/sysdeps/bsd-common.c"
 #endif
 
 #if defined(__FreeBSD__)
 
--- gkrellm-2.1.0/src/sysdeps/darwin.c	2002-07-31 14:10:15.000000000 -0700
+++ gkrellm-2.1.0/src/sysdeps/darwin.c	2002-10-26 15:00:32.000000000 -0700
@@ -85,7 +85,6 @@
 	{
 	processor_cpu_load_info_data_t *pinfo;
 	mach_msg_type_number_t info_count;
-    int i;
 
 	n_cpus = 0;
 	
@@ -350,8 +349,7 @@
 
 gboolean
 gkrellm_sys_disk_init(void)
-	{
-	gchar	*name;
+    {
     kern_return_t status = 0;
     io_registry_entry_t drive      = 0;  /* needs release */
     io_registry_entry_t child      = 0;  /* needs release */
@@ -366,16 +364,28 @@
                                             &drivelist);                      
     while ( (drive = IOIteratorNext(drivelist)) )
     {
-        /* Obtain the properties for this drive object */
-        name = malloc(128);
-        disk_list = g_list_append(disk_list, name);
-            
+        gchar * name = malloc(128); /* io_name_t is char[128] */
+        int ptr = 0;
+   		
+   		if(!name) return FALSE;
+   		
+        /* Obtain the properties for this drive object */           
         if(!status)
         status = IORegistryEntryGetChildEntry(drive, kIOServicePlane, &child );
         
         if(!status)
         status = IORegistryEntryGetName(child, name );
         
+        /* Convert spaces to underscores, for prefs safety */
+        if(!status)
+        {
+            for(ptr = 0; ptr < strlen(name); ptr++) 
+            {
+                if(name[ptr] == ' ') 
+                    name[ptr] = '_';
+            }
+           disk_list = g_list_append(disk_list, name);
+        }
         IOObjectRelease(drive); drive = 0;
     }
     IOIteratorReset(drivelist);
@@ -425,7 +435,7 @@
 	kern_return_t	error;
 	static DIR *dirp;
 	struct dirent *dp;
-	guint64		total, used, x_used, free, shared, buffers, cached;
+	guint64		total, used, free, shared, buffers, cached;
 
 	info_count = HOST_VM_INFO_COUNT;
 
@@ -442,21 +452,20 @@
 			pshift++;
 	}
 	
-	x_used = (vm_info.active_count + vm_info.inactive_count + vm_info.wire_count) << pshift;
+	used = (vm_info.active_count + vm_info.inactive_count + vm_info.wire_count) << pshift;
 	free = vm_info.free_count << pshift;	
 	total = (vm_info.active_count + vm_info.inactive_count + vm_info.free_count + vm_info.wire_count) << pshift;
 	/* Don't know how to get cached or buffers. */
 	buffers = 0;
 	cached = 0;
-	used = mem.x_used; 
 	/* shared  0 for now, shared is a PITA */
-    shared = 0;	
+        shared = 0;	
 	gkrellm_mem_assign_data(total, used, free, shared, buffers, cached);
 
 	/* Swap is available at same time as mem, so grab values here.
 	*/
-	swap_in = vm_info.pageins;
-	swap_out = vm_info.pageouts;
+	swapin = vm_info.pageins;
+	swapout = vm_info.pageouts;
 	swap_used = vm_info.pageouts << pshift;
 	
 	/* Figure out total swap. This adds up the size of the swapfiles */
--- gkrellm-2.1.0/src/main.c~	2002-10-11 11:38:38.000000000 -0700
+++ gkrellm-2.1.0/src/main.c	2002-12-04 13:22:32.000000000 -0800
@@ -1121,7 +1121,7 @@
 	if (y_bottom >= 0)
 		{
 		if (_GK.y_position != y_gkrell)
-			gdk_window_move(gtree.window->window, x_gkrell, _GK.y_position);
+			gdk_window_move(gtree.window->window, _GK.x_position, _GK.y_position);
 		y_pack = -1;
 		}
 	else	/* Otherwise, do a y move to maximize visibility */
