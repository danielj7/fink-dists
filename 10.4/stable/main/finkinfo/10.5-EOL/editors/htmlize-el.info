Package: htmlize-el
Description: Convert emacs content to HTML
Depends: emacsen
BuildDepends: fink (>= 0.24.12)
Version: 1.37
Revision: 3
License: GPL
DocFiles: fink/README.fink
Maintainer: Jesse Alama <jesse.alama@gmail.com>
Source: http://centria.di.fct.unl.pt/~alama/fink/%n/%v/%n-%v.tar.gz
Source-MD5: 17a8615744414672afd052618f4136cb
PatchFile: %n.patch
PatchFile-MD5: 21c97d76dbfe1e8040244ac83d1f9e12
PatchScript: sed 's|@PREFIX@|%p|g' < %{PatchFile} | patch -p1
DescDetail: <<
From the Commentary section of htmlize.el:

This package converts the buffer text and the associated decorations
to HTML.  htmlize supports three types of HTML output, selected by
setting `htmlize-output-type': `css', `inline-css', and `font'.  In
`css' mode, htmlize uses cascading style sheets to specify colors; it
generates classes that correspond to Emacs faces and uses <span
class=FACE>...</span> to color parts of text.  In this mode, the
produced HTML is valid under the 4.01 strict DTD, as confirmed by the
W3C validator.  `inline-css' is like `css', except the CSS is put
directly in the STYLE attribute of the SPAN element, making it
possible to paste the generated HTML to other documents.  In `font'
mode, htmlize uses <font color="...">...</font> to colorize HTML,
which is not standard-compliant, but works better in older browsers.
`css' mode is the default.

You can also use htmlize from your Emacs Lisp code.  When called
non-interactively, `htmlize-buffer' and `htmlize-region' will
return the resulting HTML buffer, but will not change current
buffer or move the point.
<<
DescUsage: <<
From the Commentary section of htmlize.el:

To use this, just switch to the buffer you want HTML-ized and type
`M-x htmlize-buffer'.  You will be switched to a new buffer that
contains the resulting HTML code.  You can edit and inspect this
buffer, or you can just save it with C-x C-w.  `M-x htmlize-file' will
find a file, fontify it, and save the HTML version in FILE.html,
without any additional intervention.  `M-x htmlize-many-files' allows
you to htmlize any number of files in the same manner.  `M-x
htmlize-many-files-dired' does the same for files marked in a dired
buffer.
<<
CompileScript: <<
<<
InstallScript: <<
mkdir -p %i/share/emacs/site-lisp/htmlize
install -m 644 htmlize.el %i/share/emacs/site-lisp/htmlize

mkdir -p %i/lib/emacsen-common/packages/install
mkdir -p %i/lib/emacsen-common/packages/remove
install -m 755 fink/emacsen-install %i/lib/emacsen-common/packages/install/%n
install -m 755 fink/emacsen-remove %i/lib/emacsen-common/packages/remove/%n

mkdir -p %i/etc/emacs/site-start.d
install -m 644 fink/30htmlize.el %i/etc/emacs/site-start.d
<<
PostInstScript: %p/lib/emacsen-common/emacs-package-install %n
PreRmScript: %p/lib/emacsen-common/emacs-package-remove %n
Homepage: http://www.emacswiki.org/cgi-bin/wiki/Htmlize
