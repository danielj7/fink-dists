Package: duplicity
Version: 0.7.11
Revision: 6
Description: Encrypted backup using rsync algorithm
License: GPL
Homepage: http://duplicity.nongnu.org/
Maintainer:  Scott Hannahs <shannahs@users.sourceforge.net>

# Dependencies.
BuildDepends: <<
	fink (>= 0.24.12-1),
	librsync (>= 0.9.7-1002)
<<

Depends: <<
	boto-py27,
	gnupg-unified,
	lftp,
	librsync-shlibs (>= 0.9.7-1002),
	lockfile-py27 (>= 0.9),
	pycrypto-py27,
	python27
<<

# Unpack Phase.
Source: https://code.launchpad.net/%n/0.7-series/%v/+download/%n-%v.tar.gz
Source-MD5: 9904a5bd8eb1d57d50ff1518a106dfc6

# Patch Phase.
PatchFile: %n.patch
PatchFile-MD5: 4d4b01ad8cf14e90ddeb5b323d98ebcd
PatchScript: <<
# Fixing man page permissions as well
    sed 's|@PREFIX@|%p|g' < %{PatchFile} | patch -p1
	chmod 0644 %b/bin/rdiffdir.1
	chmod 0644 %b/bin/duplicity.1
<<

# Compile Phase.
CompileScript: %p/bin/python2.7 setup.py build  --librsync-dir=%p 

InfoTest: <<
	TestDepends: <<
		mock-py27,
		pexpect-py27,
		pluggy-py27,
		py-py27,
		tox-py27
<<
	TestScript: %p/bin/python2.7 setup.py test
<<

# Install Phase.
InstallScript: %p/bin/python2.7 setup.py install --prefix=%p --root=%d  --librsync-dir=%p
DocFiles: CHANGELOG COPYING Changelog.GNU README README-LOG README-REPO
# Documentation.
DescDetail: <<
Duplicity backs directories by producing encrypted
tar-format volumes and uploading them to a remote
or local file server. Because duplicity uses
librsync, the incremental archives are space
efficient and only record the parts of files that
have changed since the last backup. Because
duplicity uses GnuPG to encrypt and/or sign these
archives, they will be safe from spying and/or
modification by the server.

The duplicity package also includes the rdiffdir
utility. Rdiffdir is an extension of librsync's
rdiff to directories---it can be used to produce
signatures and deltas of directories as well as
regular files. These signatures and deltas are in
GNU tar format.
<<
DescPackaging:  <<
The testing phase creates files of various owners
and cannot be run as "build-as-nobody" the test in
maintainer mode must be --no-build-as-nobody

The testing phase needs more than the default 256
maximum files.  Use
sudo launchctl limit maxfiles 2048

Does not implement the version 2 paramiko backend
Will do so when that package is updated
Previously maintained by Murali Vadivelu
<<
