Package: ghc-vector
Version: 0.10.0.1
Revision: 1
Source: http://hackage.haskell.org/packages/archive/vector/%v/vector-%v.tar.gz
Source-MD5: a0d48ebfe68c8b90cb1d09589d86a79c
SourceDirectory: vector-%v

Depends: ghc (<< 7.6.4-1), ghc-primitive

CompileScript: <<
runghc Setup.hs configure --prefix=%p --docdir=%p/share/doc/%n
runghc Setup.hs build
runghc Setup.hs haddock
runghc Setup.hs register --gen-script
runghc Setup.hs unregister --gen-script
<<
InstallScript: runghc Setup.hs copy --destdir=%d

DocFiles: LICENSE register.sh unregister.sh

PostInstScript: %p/share/doc/%n/register.sh
PreRmScript: sh %p/share/doc/%n/unregister.sh --force

Description: Efficient Arrays
DescDetail: <<
An efficient implementation of Int-indexed arrays (both mutable and
immutable), with a powerful loop optimisation framework.

It is structured as follows:

Data.Vector
    Boxed vectors of arbitrary types. 
Data.Vector.Unboxed
    Unboxed vectors with an adaptive representation based on data type
    families.
Data.Vector.Storable
    Unboxed vectors of Storable types. 
Data.Vector.Primitive
    Unboxed vectors of primitive types as defined by the primitive
    package. Data.Vector.Unboxed is more flexible at no performance
    cost.
Data.Vector.Generic
    Generic interface to the vector types. 

There is also a (draft) tutorial on common uses of vector.

    http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial
<<
Homepage: http://hackage.haskell.org/package/vector
License: BSD
Maintainer: Brendan Cully <fink@brendan.cully.org>
