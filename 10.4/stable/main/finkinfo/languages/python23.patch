--- Python-2.3/Lib/distutils/util.py.orig	Thu Feb 20 06:07:01 2003
+++ Python-2.3/Lib/distutils/util.py	Thu Feb 20 06:07:37 2003
@@ -39,6 +39,12 @@
     # Try to distinguish various flavours of Unix
 
     (osname, host, release, version, machine) = os.uname()
+ 
+    # On MacOS X, remove space from machine name
+ 
+    if machine == "Power Macintosh":
+    	machine = "PowerMacintosh"
+
 
     # Convert the OS name to lowercase, remove '/' characters
     # (to accommodate BSD/OS), and translate spaces (for "Power Macintosh")
--- Python-2.3/Makefile.pre.in.orig	Thu Feb 20 06:07:50 2003
+++ Python-2.3/Makefile.pre.in	Thu Feb 20 06:08:33 2003
@@ -56,7 +56,7 @@
 OPT=		@OPT@
 BASECFLAGS=	@BASECFLAGS@
 CFLAGS=		$(BASECFLAGS) $(OPT)
-CPPFLAGS=	-I. -I$(srcdir)/Include
+CPPFLAGS=	-I. -I$(srcdir)/Include -I@PREFIX@/include
 LDFLAGS=	@LDFLAGS@
 LDLAST=		@LDLAST@
 SGI_ABI=	@SGI_ABI@
--- Python-2.3/Misc/setuid-prog.c.orig	Thu Feb 20 06:08:53 2003
+++ Python-2.3/Misc/setuid-prog.c	Thu Feb 20 06:09:50 2003
@@ -70,6 +70,12 @@
 #define environ _environ
 #endif
 
+#if defined(__APPLE__)
+# include <sys/time.h>
+# include <crt_externs.h>
+# define environ (*_NSGetEnviron())
+#endif /* __APPLE__ */
+
 /* don't change def_IFS */
 char def_IFS[] = "IFS= \t\n";
 /* you may want to change def_PATH, but you should really change it in */
--- Python-2.3/Modules/posixmodule.c.orig	Thu Feb 20 06:10:18 2003
+++ Python-2.3/Modules/posixmodule.c	Thu Feb 20 06:10:39 2003
@@ -325,7 +325,7 @@
 #endif
 
 /* Return a dictionary corresponding to the POSIX environment table */
-#ifdef WITH_NEXT_FRAMEWORK
+#ifdef __APPLE__
 /* On Darwin/MacOSX a shared library or framework has no access to
 ** environ directly, we must obtain it with _NSGetEnviron().
 */
@@ -535,7 +535,7 @@
 	d = PyDict_New();
 	if (d == NULL)
 		return NULL;
-#ifdef WITH_NEXT_FRAMEWORK
+#ifdef __APPLE__
 	if (environ == NULL)
 		environ = *_NSGetEnviron();
 #endif
--- Python-2.3/configure.orig	Thu Feb 20 06:13:05 2003
+++ Python-2.3/configure	Thu Feb 20 06:13:59 2003
@@ -3695,7 +3695,7 @@
 	    ;;
 	# is there any other compiler on Darwin besides gcc?
 	Darwin*)
-	    BASECFLAGS="$BASECFLAGS -Wno-long-double -no-cpp-precomp -mno-fused-madd"
+	    BASECFLAGS="$BASECFLAGS -fno-common -Wno-long-double -no-cpp-precomp -mno-fused-madd"
 	    ;;
     esac
     ;;
@@ -9627,7 +9627,7 @@
 			LDSHARED="$LDSHARED "'-framework $(PYTHONFRAMEWORK)'
 		else
 			# No framework. Ignore undefined symbols, assuming they come from Python
-			LDSHARED="$LDSHARED -undefined suppress"
+			LDSHARED="$LDSHARED -flat_namespace -undefined suppress"
 		fi ;;
 	Darwin/*)
 		LDSHARED='$(CC) $(LDFLAGS) -bundle'
@@ -9636,8 +9636,8 @@
 			LDSHARED="$LDSHARED "'-framework $(PYTHONFRAMEWORK)'
 		else
 			# No framework, use the Python app as bundle-loader
-			BLDSHARED="$LDSHARED "'-bundle_loader $(BUILDPYTHON)'
-			LDSHARED="$LDSHARED "'-bundle_loader $(BINDIR)/python$(VERSION)$(EXE)'
+			BLDSHARED="$LDSHARED -flat_namespace -undefined suppress"
+			LDSHARED="$LDSHARED -flat_namespace -undefined suppress"
 		fi ;;
 	Linux*|GNU*) LDSHARED='$(CC) -shared';;
 	dgux*) LDSHARED="ld -G";;
--- Python-2.3/setup.py.orig	Thu Feb 20 06:11:12 2003
+++ Python-2.3/setup.py	Thu Feb 20 06:12:47 2003
@@ -244,11 +244,11 @@
         add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
         add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
 
-        # fink installs lots of goodies in /sw/... - make sure we
+        # fink installs lots of goodies in @PREFIX@/... - make sure we
         # check there
         if sys.platform == "darwin":
-            add_dir_to_list(self.compiler.library_dirs, '/sw/lib')
-            add_dir_to_list(self.compiler.include_dirs, '/sw/include')
+            add_dir_to_list(self.compiler.library_dirs, '@PREFIX@/lib')
+            add_dir_to_list(self.compiler.include_dirs, '@PREFIX@/include')
 
         if os.path.normpath(sys.prefix) != '/usr':
             add_dir_to_list(self.compiler.library_dirs,
@@ -449,7 +449,7 @@
                                      ['/usr/local/ssl/lib',
                                       '/usr/contrib/ssl/lib/'
                                      ] )
-
+        ssl_incs = None
         if (ssl_incs is not None and
             ssl_libs is not None):
             exts.append( Extension('_ssl', ['_ssl.c'],
@@ -486,7 +486,7 @@
                                 '/usr/local/BerkeleyDB.4.0/lib',
                                 '/usr/local/lib',
                                 '/opt/sfw',
-                                '/sw/lib',
+                                '@PREFIX@/lib',
                                 ),
                     'incdirs': ('/usr/local/BerkeleyDB.4.2/include',
                                 '/usr/local/include/db42',
@@ -495,7 +495,7 @@
                                 '/usr/local/BerkeleyDB.4.0/include',
                                 '/usr/local/include/db4',
                                 '/opt/sfw/include/db4',
-                                '/sw/include/db4',
+                                '@PREFIX@/include/db4',
                                 '/usr/include/db4',
                                 )},
             'db3': {'libs': ('db-3.3', 'db-3.2', 'db-3.1', 'db3',),
@@ -504,14 +504,14 @@
                                 '/usr/local/BerkeleyDB.3.1/lib',
                                 '/usr/local/lib',
                                 '/opt/sfw/lib',
-                                '/sw/lib',
+                                '@PREFIX@/lib',
                                 ),
                     'incdirs': ('/usr/local/BerkeleyDB.3.3/include',
                                 '/usr/local/BerkeleyDB.3.2/include',
                                 '/usr/local/BerkeleyDB.3.1/include',
                                 '/usr/local/include/db3',
                                 '/opt/sfw/include/db3',
-                                '/sw/include/db3',
+                                '@PREFIX@/include/db3',
                                 '/usr/include/db3',
                                 )},
             }
@@ -937,9 +937,9 @@
         # AquaTk is a separate method. Only one Tkinter will be built on
         # Darwin - either AquaTk, if it is found, or X11 based Tk.
         platform = self.get_platform()
-        if platform == 'darwin' and \
-           self.detect_tkinter_darwin(inc_dirs, lib_dirs):
-            return
+#       if platform == 'darwin' and \
+#          self.detect_tkinter_darwin(inc_dirs, lib_dirs):
+#           return
 
         # Assume we haven't found any of the libraries or include files
         # The versions with dots are used on Unix, and the versions without
--- Python/Doc/Makefile.orig	Sun Dec 12 14:15:49 2004
+++ Python/Doc/Makefile	Sun Dec 12 13:41:47 2004
@@ -94,8 +94,8 @@
 # using the second version.  The standard documentation is typically
 # built using the second flavor, where the preferred version is from
 # the Python CVS trunk.
-#MKHOWTO=   TEXINPUTS=$(TEXINPUTS) $(PYTHON) $(PWD)/tools/mkhowto
-MKHOWTO=   TEXINPUTS=$(TEXINPUTS) mkhowto
+MKHOWTO=   TEXINPUTS=$(TEXINPUTS) $(PYTHON) $(PWD)/tools/mkhowto
+#MKHOWTO=   TEXINPUTS=$(TEXINPUTS) mkhowto
 
 MKDVI=	   $(MKHOWTO) --paper=$(PAPER) --dvi
 MKHTML=	   $(MKHOWTO) --html --about html/stdabout.dat \
--- Python-2.3.4/Lib/pydoc.py.orig	Mon Dec 13 12:07:30 2004
+++ Python-2.3.4/Lib/pydoc.py	Mon Dec 13 12:08:20 2004
@@ -1522,19 +1522,7 @@
     def __init__(self, input, output):
         self.input = input
         self.output = output
-        self.docdir = None
-        execdir = os.path.dirname(sys.executable)
-        homedir = os.environ.get('PYTHONHOME')
-        for dir in [os.environ.get('PYTHONDOCS'),
-                    homedir and os.path.join(homedir, 'doc'),
-                    os.path.join(execdir, 'doc'),
-                    '/usr/doc/python-docs-' + split(sys.version)[0],
-                    '/usr/doc/python-' + split(sys.version)[0],
-                    '/usr/doc/python-docs-' + sys.version[:3],
-                    '/usr/doc/python-' + sys.version[:3],
-                    os.path.join(sys.prefix, 'Resources/English.lproj/Documentation')]:
-            if dir and os.path.isdir(os.path.join(dir, 'lib')):
-                self.docdir = dir
+        self.docdir = os.path.join(sys.prefix, 'share','doc','python'+sys.version[0]+sys.version[2],'html')
 
     def __repr__(self):
         if inspect.stack()[1][3] == '?':
--- Python-2.3.5_ori/Modules/readline.c	2004-10-09 19:43:03.000000000 +0200
+++ Python-2.3.5/Modules/readline.c	2005-07-02 09:06:06.000000000 +0200
@@ -93,7 +93,7 @@
 	return Py_None;
 }
 
-static int history_length = -1; /* do not truncate history by default */
+static int _history_length = -1; /* do not truncate history by default */
 PyDoc_STRVAR(doc_read_history_file,
 "read_history_file([filename]) -> None\n\
 Load a readline history file.\n\
@@ -109,8 +109,8 @@
 	if (!PyArg_ParseTuple(args, "|z:write_history_file", &s))
 		return NULL;
 	errno = write_history(s);
-	if (!errno && history_length >= 0)
-		history_truncate_file(s, history_length);
+	if (!errno && _history_length >= 0)
+		history_truncate_file(s, _history_length);
 	if (errno)
 		return PyErr_SetFromErrno(PyExc_IOError);
 	Py_INCREF(Py_None);
@@ -128,10 +128,10 @@
 static PyObject*
 set_history_length(PyObject *self, PyObject *args)
 {
-	int length = history_length;
+	int length = _history_length;
 	if (!PyArg_ParseTuple(args, "i:set_history_length", &length))
 		return NULL;
-	history_length = length;
+	_history_length = length;
 	Py_INCREF(Py_None);
 	return Py_None;
 }
@@ -148,7 +148,7 @@
 static PyObject*
 get_history_length(PyObject *self, PyObject *noarg)
 {
-	return PyInt_FromLong(history_length);
+	return PyInt_FromLong(_history_length);
 }
 
 PyDoc_STRVAR(get_history_length_doc,
