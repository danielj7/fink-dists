Info4: <<
Package: qimageblitz-unified-x11
Version: 0.0.4
Revision: 2002
Description: Image Effect Library
Type: blitz (x11)
License: BSD
Maintainer: Benjamin Reed <blitz@fink.racoonfink.com>

Depends: qimageblitz-unified-%type_pkg[blitz]-shlibs (= %v-%r)
BuildDepends: <<
	fink (>= 0.32-1),
	kde4-buildenv (>= 4.4.0-1),
	kdelibs4-%type_pkg[blitz] (>= 4.4.0-1),
	qt4-base-%type_pkg[blitz] (>= 4.7.3-1),
<<
Replaces: <<
	blitz-%type_pkg[blitz]-dev (<< 0.0.4-2000),
	qimageblitz-mac (<< 0.0.4-2000),
	qimageblitz (<< 0.0.4-2000)
<<
BuildDependsOnly: true
GCC: 4.0

Source: mirror:sourceforge:qimageblitz/qimageblitz-%v.tar.bz2
Source-MD5: cb87c7f1c0455e8984ee4830f1e749cf

NoSetCPPFLAGS: true
NoSetLDFLAGS: true
CompileScript: <<
#!/bin/sh -ev

	export KDE4_PREFIX="%p" KDE4_TYPE="%type_pkg[blitz]"
	. %p/sbin/kde4-buildenv.sh

	mkdir -p build
	pushd build
		touch config.h
		cmake $KDE4_CMAKE_ARGS ..
		make VERBOSE=1
	popd
<<

InstallScript: <<
#!/bin/sh -ev

	pushd build
		make -j1 install/fast DESTDIR="%d"
	popd

	install -d -m 755 "%i/lib/qt4-%type_pkg[blitz]/bin"
	install -d -m 755 "%i/lib/qt4-%type_pkg[blitz]/include/qimageblitz"
	install -d -m 755 "%i/lib/qt4-%type_pkg[blitz]/lib"
	install -d -m 755 "%i/lib/qt4-%type_pkg[blitz]/lib/pkgconfig"
	for file in \
		bin/blitztest \
		include/qimageblitz/blitzcpu.h \
		include/qimageblitz/qimageblitz.h \
		include/qimageblitz/qimageblitz_export.h \
		lib/libqimageblitz.4.0.0.dylib \
		lib/libqimageblitz.4.dylib \
		lib/libqimageblitz.dylib \
		lib/pkgconfig/qimageblitz.pc \
	; do
		ln -sf "%p/opt/kde4/%type_pkg[blitz]/$file" "%i/lib/qt4-%type_pkg[blitz]/$file"
	done
<<
DocFiles: Changelog README*
SplitOff: <<
	Package: qimageblitz-unified-%type_pkg[blitz]-shlibs
	Description: Shared libraries for Blitz++
	Depends: <<
		qt4-base-%type_pkg[blitz]-qtcore-shlibs (>= 4.7.3-1),
		qt4-base-%type_pkg[blitz]-qtgui-shlibs (>= 4.7.3-1),
	<<
	Replaces: <<
		blitz-%type_pkg[blitz]-shlibs (<< 0.0.4-2000),
		qimageblitz-mac-shlibs (<< 0.0.4-2000),
		qimageblitz-shlibs (<< 0.0.4-2000)
	<<
	DocFiles: README*
	Files: opt/kde4/%type_pkg[blitz]/lib/libqimageblitz.4*.dylib
	Shlibs: %p/opt/kde4/%type_pkg[blitz]/lib/libqimageblitz.4.dylib 4.0.0 %n (>= 0.0.4-2000)
<<
SplitOff10: <<
	Package: blitz-%type_pkg[blitz]-dev
	Description: OBSOLETE: use 'qimageblitz-unified-%type_pkg[blitz]' instead
	RuntimeDepends: <<
		qimageblitz-unified-%type_pkg[blitz] (>= %v-%r),
		fink-obsolete-packages
	<<
	BuildDependsOnly: true
	DocFiles: README*
<<
SplitOff11: <<
	Package: qimageblitz
	Description: OBSOLETE: use 'qimageblitz-unified-%type_pkg[blitz]' instead
	RuntimeDepends: <<
		qimageblitz-unified-%type_pkg[blitz] (>= %v-%r),
		fink-obsolete-packages
	<<
	BuildDependsOnly: true
	DocFiles: README*
	Files: <<
		lib/qt4-%type_pkg[blitz]/bin/blitztest
		lib/qt4-%type_pkg[blitz]/include
		lib/qt4-%type_pkg[blitz]/lib/libqimageblitz.dylib
		lib/qt4-%type_pkg[blitz]/lib/pkgconfig/qimageblitz.pc
	<<
<<
SplitOff20: <<
	Package: blitz-%type_pkg[blitz]-shlibs
	Description: OBSOLETE: use 'qimageblitz-unified-%type_pkg[blitz]' instead
	RuntimeDepends: <<
		qimageblitz-unified-%type_pkg[blitz]-shlibs (>= %v-%r),
		fink-obsolete-packages
	<<
	DocFiles: README*
<<
SplitOff21: <<
	Package: qimageblitz-shlibs
	Description: OBSOLETE: use 'qimageblitz-unified-%type_pkg[blitz]-shlibs' instead
	RuntimeDepends: <<
		qimageblitz-unified-%type_pkg[blitz]-shlibs (>= %v-%r),
		fink-obsolete-packages
	<<
	DocFiles: README*
	Files: lib/qt4-%type_pkg[blitz]/lib/libqimageblitz.4*.dylib
<<

Homepage: http://www.kde.org/
DescDetail: <<
Blitz is an interm image effect library that people can use until KDE4.1 is
released. KImageEffect, the old image effect class is being dropped for KDE4.0
and the replacement, Quasar, won't be ready until KDE4.1. Blitz gives people 
something to use in the meantime.

At first glance Blitz may look like a KImageEffect2. That is what I originally 
intended. Nonetheless most of the effects have significantly changed so
may operate differently. Many of the methods in KImageEffect were quick hacks 
and ports I made. With Blitz I finally sat down, read my old code, and 
reimplemented everything. In some cases this was just code cleanup and 
bugfixing but in many other cases I used better algorithms and/or custom MMX 
code. Expect differences, hopefully for the better. I'm a little older,
a tad bit wiser, and a heck of a lot less drunk these days >:)
<<
<<

