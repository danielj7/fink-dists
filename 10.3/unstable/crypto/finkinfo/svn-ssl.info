Package: svn-ssl
Version: 1.1.1
Revision: 11
Description: Subversion - svnserve, tools (with SSL)
License: BSD
Maintainer: Christian Schaffner <chris01@users.sourceforge.net>

# Dependencies:
Depends: %N-shlibs (= %v-%r), daemonic
BuildDepends: apr-ssl (>= 0.9.5-15), apr-ssl-common (>= 0.9.5-15), db42-ssl, gdbm3, expat (>= 1.95.6-2), libxml2 (>= 2.5.10-12), python23 (>= 1:2.3.3-23) | python23-nox (>= 1:2.3.3-23), fink (>= 0.16.0-1), neon24-ssl (>= 0.24.7-11), openldap-ssl-dev (>= 2.1.22-24), cyrus-sasl2-dev (>= 2.1.15-23), openssl097-dev, swig (>= 1.3.20-2), texinfo (>= 4.2-22), libiconv-dev (>= 1.9.1-11), apache2-ssl-dev (>= 2.0.50-10), system-java14-dev, perl581-core, gettext-bin, gettext-dev, io-string-pm, libtool14 (>= 1.5.10-1), autoconf2.5, automake1.9
# Only needs to be enabled for 'make check-javahl':
#, junit
Conflicts: svn-client, svn-client-ssl (<= 0.26.0-2), apache2 (<< 2.0.47-1)
Replaces: svn-client, svn-client-ssl (<= 1.1.1-11)

# Unpack Phase:
Source: http://subversion.tigris.org/tarballs/subversion-%v.tar.bz2
Source-MD5: a180c3fe91680389c210c99def54d9e0

# Patch Phase:
Patch: %n.patch

# Compile Phase:
ConfigureParams: --libexecdir='${prefix}/lib/svn' --mandir='${prefix}/share/man' --infodir='${prefix}/share/info' --with-neon=%p --with-apr=%p --with-apr-util=%p --enable-shared --with-apxs=%p/sbin/apxs --without-apache --disable-mod-activation --with-jdk=/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home --enable-javahl --with-jikes=no --enable-swig-bindings=java,perl,python --with-swig=%p --with-python=%p/bin/python2.3 --with-perl=perl5.8.1 PYTHON2=%p/bin/python2.3 PERL=perl5.8.1
# Only needs to be enabled for 'make check-javahl':
# --with-junit=%p/share/java/junit/junit.jar 
SetCPPFLAGS: -I%p/include/db4 -no-cpp-precomp
GCC: 3.3
CompileScript: <<
#! /bin/sh -e
 ### Remove packages that are installed by fink
 rm -rf neon
 rm -rf apr
 rm -rf apr-util

 # recreate configure with libtool 1.5. The javahl bindings fail to build
 # correctly with libtool 1.4
 ./autogen.sh
 ### Configure shared
 ./configure %c
 
 ### make everything shared
 make
 
 ### Run tests over ra_local:
#  echo "Running tests over ra_local using BDB..."
#  make check
 
 ### Run tests over ra_local:
#  echo "Running tests over ra_local using fs_fs..."
#  make check FS_TYPE=fsfs

 ### Run tests over ra_svn:
#  echo "Running tests over ra_svn..."
#  subversion/svnserve/svnserve -d -r `pwd`/subversion/tests/clients/cmdline
#  make check BASE_URL=svn://localhost
#  killall -v -u root svnserve

 ### Run tests over ra_dav:
 # NOTE: The update_tests.py fails if tested against 1.0.x server
 # See DescPackaging on how to set up for tests over ra_dav
#  echo "Running tests over ra_dav..."
#  make check BASE_URL=http://localhost

 ### Build swig python bindings
 make swig-py
 
 ### Build swig perl bindings
 make swig-pl-lib
 (cd subversion/bindings/swig/perl/native && perl5.8.1 Makefile.PL PERL=perl5.8.1 FULLPERL=perl5.8.1 INSTALLDIRS=vendor PREFIX=%p LIB=%p/lib/perl5/5.8.1 INSTALLBIN=%i/bin INSTALLSCRIPT=%i/bin INSTALLPRIVLIB=%p/lib/perl5/5.8.1 INSTALLARCHLIB=%p/lib/perl5/5.8.1/darwin-thread-multi-2level INSTALLSITELIB=%p/lib/perl5/5.8.1 INSTALLSITEARCH=%p/lib/perl5/5.8.1/darwin-thread-multi-2level INSTALLMAN1DIR=%p/share/man/man1 INSTALLMAN3DIR=%p/share/man/man3 INSTALLSITEMAN1DIR=%p/share/man/man1 INSTALLSITEMAN3DIR=%p/share/man/man3 INSTALLVENDORMAN1DIR=%p/share/man/man1 INSTALLVENDORMAN3DIR=%p/share/man/man3  )
 curdir=`pwd`
 dylibs=`find $curdir -name "*.dylib"`
 for dylib in $dylibs
 do
 install_name=`otool -XD $dylib`
 case "$dylibfile" in
  *"$install_name:"*) ;;
  *) dylibfile="$dylibfile -dylib_file $install_name:$dylib" ;;
 esac
 done
 PERL_DYLIB_FLAGS=$dylibfile
 export PERL_DYLIB_FLAGS
 (cd subversion/bindings/swig/perl/native && PERL=perl5.8.1 FULLPERL=perl5.8.1 INSTALLDIRS=vendor PREFIX=%p LIB=%p/lib/perl5/5.8.1 INSTALLBIN=%i/bin INSTALLSCRIPT=%i/bin INSTALLPRIVLIB=%p/lib/perl5/5.8.1 INSTALLARCHLIB=%p/lib/perl5/5.8.1/darwin-thread-multi-2level INSTALLSITELIB=%p/lib/perl5/5.8.1 INSTALLSITEARCH=%p/lib/perl5/5.8.1/darwin-thread-multi-2level INSTALLMAN1DIR=%p/share/man/man1 INSTALLMAN3DIR=%p/share/man/man3 INSTALLSITEMAN1DIR=%p/share/man/man1 INSTALLSITEMAN3DIR=%p/share/man/man3 INSTALLVENDORMAN1DIR=%p/share/man/man1 INSTALLVENDORMAN3DIR=%p/share/man/man3 make 'OTHERLDFLAGS=$(PERL_DYLIB_FLAGS)')
#  (cd subversion/bindings/swig/perl/native && make test)
 
 ### Build swig java bindings (they don't build yet!)
 #make swig-java-lib
 #make swig-java-java

 ### Build javahl bindings
 # this makdir should no longer be necessary once svn issue #2032 is released
 mkdir -p subversion/bindings/java/javahl/classes/org/tigris/subversion/javahl
 make javahl
 # On Mac OS X jni libraries have to be named libfoo.jnilib
 # We are doing it with a symlink here.
 (cd subversion/bindings/java/javahl/native/.libs && ln -s libsvnjavahl-1.dylib libsvnjavahl-1.jnilib)
 ### The javahl tests don't work yet without already installed packages
 # see svn issue #2040 for more info
#  make check-javahl
<<

# Install Phase:
DocFiles: BUGS CHANGES COMMITTERS COPYING HACKING INSTALL README
InstallScript: <<
 make install DESTDIR=%d
 
 ### Install docu and notes
 /usr/bin/install -d %i/share
 /usr/bin/install -d %i/share/doc
 /usr/bin/install -d %i/share/doc/%n
 /usr/bin/install -d %i/share/doc/%n/book
 cp -r www %i/share/doc/%n
 cp -r doc/user %i/share/doc/%n
 cp -r notes %i/share/doc/%n
 cp -r doc/book/misc-docs %i/share/doc/%n/book
 cp -r doc/book/README doc/book/REVIEW doc/book/TODO %i/share/doc/%n/book
 cp doc/book/book/svn-book.pdf %i/share/doc/%n/book
 
 ### Configure and install examples, tools and notes
 perl -pi -e 's;#!/usr/bin/env python2;#!/usr/bin/env %p/bin/python2.3;' tools/backup/*.py
 perl -pi -e 's;#!/usr/bin/env python2;#!/usr/bin/env %p/bin/python2.3;' tools/client-side/*.py
 perl -pi -e 's;#!/usr/bin/env python2;#!/usr/bin/env %p/bin/python2.3;' tools/dev/*.py
 perl -pi -e 's;#!/usr/bin/env python2;#!/usr/bin/env %p/bin/python2.3;' tools/examples/*.py
 perl -pi -e 's;#!/usr/bin/env python2;#!/usr/bin/env %p/bin/python2.3;' tools/hook-scripts/mailer/*.py
 perl -pi -e 's;#!/usr/bin/env python2;#!/usr/bin/env %p/bin/python2.3;' tools/hook-scripts/mailer/tests/*.py
 perl -pi -e 's;#!/usr/bin/env python2;#!/usr/bin/env %p/bin/python2.3;' tools/hook-scripts/*.py
 
 /usr/bin/install -d %i/share/%n
 cp -r tools/backup %i/share/%n/tools
 cp -r tools/client-side %i/share/%n/tools
 cp -r tools/dev %i/share/%n/tools
 cp -r tools/examples %i/share/%n/tools
 cp -r tools/hook-scripts %i/share/%n/tools
 cp -r tools/test-scripts %i/share/%n/tools
 
 cp -r contrib %i/share/%n

 # Remove unneeded .in files
 find %i/share/%n -name \*.in -print0 | xargs -0 rm -f
 
 ### Install binaries
 /usr/bin/install -d %i/bin
 /usr/bin/install -m 755 svn-config %i/bin
 /usr/bin/install -d %i/var
 /usr/bin/install -m 770 -d %i/var/svn
 chown www:admin %i/var/svn

 ### Install swig python bindings
 make install-swig-py DESTDIR=%d DISTUTIL_PARAM=--prefix=%d swig_pydir=%p/lib/python2.3/site-packages/libsvn swig_pydir_extra=%p/lib/python2.3/site-packages/svn
 cp subversion/bindings/swig/INSTALL INSTALL.swig
 cp subversion/bindings/swig/README README.swig

 ### Install swig perl bindings
 make install-swig-pl DESTDIR=%d
 
 ### Install swig java bindings
 #make install-swig-java DESTDIR=%d swig_javadir=%p/share/java/svn-swig-java
 
 ### Install javahl bindings
 # INSTALL_EXTRA_JAVAHL_LIB is set to nothing since it would generate
 # a symbolic link directly in %p instead of %i
 make install-javahl INSTALL_EXTRA_JAVAHL_LIB="" DESTDIR=%d javahl_javadir=%p/share/java/svn-ssl-javahl javahl_javahdir=%p/include/svn-ssl-javahl
 #### make a symlink for the jnilib
 ln -sf libsvnjavahl-1.dylib %i/lib/libsvnjavahl-1.jnilib
 ln -sf %p/lib/libsvnjavahl-1.dylib %i/share/java/svn-ssl-javahl/libsvnjavahl-1.jnilib
 
 ### Check the javahl bindings (needs to be done after installation)
 # see svn issue #2040 for more info
#  javac -d subversion/bindings/java/javahl/classes -classpath %i/share/java/svn-ssl-javahl/svn-javahl.jar:%p/share/java/junit/junit.jar subversion/bindings/java/javahl/src/org/tigris/subversion/javahl/tests/*.java 
#  java -Djava.library.path=%i/lib -classpath %i/share/java/svn-ssl-javahl/svn-javahl.jar:%p/share/java/junit/junit.jar:subversion/bindings/java/javahl/classes org.tigris.subversion.javahl.tests.BasicTests
<<

DaemonicName: svnserve
DaemonicFile: <<
 <service>
  <description>Subversion server</description>
  <message>Subversion server</message>

  <daemon name="svnserve">
    <executable background="no">/usr/bin/sudo</executable>
    <parameters>-u www %p/bin/svnserve -d -r %p/var/svn</parameters>
  </daemon>
 </service>
<<
PostInstScript: <<
 daemonic install svnserve
<<
PreRmScript: <<
 if [ $1 != "upgrade" ]; then
   daemonic remove svnserve
 fi
<<

SplitOff: <<
  Description: Subversion - Development headers and libraries (with SSL)
  Package: %N-dev
  Depends: %N-shlibs (= %v-%r)
  BuildDependsOnly: True
  Conflicts: svn-client-ssl (<= 0.26.0-2)
  Replaces: svn-client-ssl (<= 0.26.0-2)
  Files: <<
    bin/svn-config
    include
    lib/*.a
    lib/*.la
    lib/libsvn_client-1.dylib
    lib/libsvn_delta-1.dylib
    lib/libsvn_diff-1.dylib
    lib/libsvn_fs-1.dylib
    lib/libsvn_fs_base-1.dylib
    lib/libsvn_fs_fs-1.dylib
    lib/libsvn_ra-1.dylib
    lib/libsvn_ra_dav-1.dylib
    lib/libsvn_ra_local-1.dylib
    lib/libsvn_ra_svn-1.dylib
    lib/libsvn_repos-1.dylib
    lib/libsvn_subr-1.dylib
    lib/libsvn_wc-1.dylib
  <<
  DocFiles: COPYING HACKING
<<
SplitOff2: <<
  Description: Subversion - Shared libraries (with SSL)
  Package: %N-shlibs
  Conflicts: svn-client-ssl (<= 0.26.0-2)
  Replaces: svn-client-ssl (<= 0.26.0-2)
  Depends: apr-ssl-shlibs (>= 0.9.5-15), db42-ssl-shlibs, gdbm3-shlibs, expat-shlibs (>= 1.95.6-2), libxml2-shlibs (>= 2.5.10-12), neon24-ssl-shlibs (>= 0.24.7-11), openldap-ssl-shlibs (>= 2.1.22-24), cyrus-sasl2-shlibs (>= 2.1.15-23), openssl097-shlibs, gettext
  Files: <<
    lib/libsvn_client-1.0.0.0.dylib
    lib/libsvn_delta-1.0.0.0.dylib
    lib/libsvn_diff-1.0.0.0.dylib
    lib/libsvn_fs-1.0.0.0.dylib
    lib/libsvn_fs_base-1.0.0.0.dylib
    lib/libsvn_fs_fs-1.0.0.0.dylib
    lib/libsvn_ra-1.0.0.0.dylib
    lib/libsvn_ra_dav-1.0.0.0.dylib
    lib/libsvn_ra_local-1.0.0.0.dylib
    lib/libsvn_ra_svn-1.0.0.0.dylib
    lib/libsvn_repos-1.0.0.0.dylib
    lib/libsvn_subr-1.0.0.0.dylib
    lib/libsvn_wc-1.0.0.0.dylib
    lib/libsvn_client-1.0.dylib
    lib/libsvn_delta-1.0.dylib
    lib/libsvn_diff-1.0.dylib
    lib/libsvn_fs-1.0.dylib
    lib/libsvn_fs_base-1.0.dylib
    lib/libsvn_fs_fs-1.0.dylib
    lib/libsvn_ra-1.0.dylib
    lib/libsvn_ra_dav-1.0.dylib
    lib/libsvn_ra_local-1.0.dylib
    lib/libsvn_ra_svn-1.0.dylib
    lib/libsvn_repos-1.0.dylib
    lib/libsvn_subr-1.0.dylib
    lib/libsvn_wc-1.0.dylib
  <<
  Shlibs: <<
    %p/lib/libsvn_client-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
    %p/lib/libsvn_delta-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
    %p/lib/libsvn_diff-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
    %p/lib/libsvn_fs-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
    %p/lib/libsvn_fs_base-1.0.dylib 1.0.0 %n (>= 1.1.0-11)
    %p/lib/libsvn_fs_fs-1.0.dylib 1.0.0 %n (>= 1.1.0-11)
    %p/lib/libsvn_ra-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
    %p/lib/libsvn_ra_dav-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
    %p/lib/libsvn_ra_local-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
    %p/lib/libsvn_ra_svn-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
    %p/lib/libsvn_repos-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
    %p/lib/libsvn_subr-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
    %p/lib/libsvn_wc-1.0.dylib 1.0.0 %n (>= 0.30.0-11)
  <<
  DocFiles: BUGS CHANGES COMMITTERS COPYING HACKING INSTALL README
<<
SplitOff3: <<
  Description: Subversion - Client (with SSL)
  Package: svn-client-ssl
  Depends: %N-shlibs (= %v-%r)
  Replaces: svn-ssl (<= 1.0.2-11)
  Files: <<
    bin/svn
    bin/svnversion
    share/locale
    share/man/man1/svn.1
    share/man/man1/svnversion.1
    share/%N/contrib/client-side
    share/%N/tools/client-side
  <<
  DocFiles: BUGS CHANGES COMMITTERS COPYING HACKING INSTALL README
  DescUsage: <<
    This installs the subversion client.
    Type 'svn help' for usage and look in /sw/share/svn-ssl/tools and 
    /sw/share/svn-ssl/contrib.
    
    WARNING:
    This client may be incompatible with ra_dav servers <= 0.35
  <<
  DescPackaging: <<
    The "Replaces: svn-ssl (<= 1.0.2-11)" is needed since the man page of 
    svnversion was (incorrectly) in the svn-ssl package < 1.0.2 and was 
    moved to the client split off in 1.0.2-11.
  <<
<<
SplitOff4: <<
  Package: libapache2-ssl-mod-svn
  Depends: %N-shlibs (= %v-%r), apache2-ssl (>= 2.0.50-10), apr-ssl-common
  Files: <<
    lib/apache2
    var/svn
  <<
  DocFiles: COPYING HACKING INSTALL
  Description: Subversion - mod_svn (with SSL)
  DescUsage: <<
    This installs the subversion network server for apache2.
    Please read section III C in the file 
    /sw/share/doc/libapache2-ssl-mod-svn/INSTALL
    for informations on how to run a subversion server via apache2.
    
    You could install the repositories under the preconfigured directory
    /sw/var/svn
    which should have the correct permissions. Make sure that all files
    in the new repository have the correct permissions for apache (and svnserve)
    to read and write. E.g. run 'chown -R www /sw/var/svn/yourrepos' and 
    'chmod -R go-rwx /sw/var/svn/yourrepos'.
    
    You then need to add the following lines to your /sw/etc/apache2/httpd.conf
    file:
    <Location /svn/yourrepos>
      DAV svn
      SVNPath /sw/var/svn/yourrepos
    </Location>
    
    Your repository should show up at <http://localhost/svn/yourrepos>. If it 
    does not check your apache2 logs at /sw/var/apache2/logs/error_log
    
    If you need the examples or the tools (e.g. svnadmin) install the 
    'svn-ssl' package.
  <<
  PostInstScript: <<
    APXS=%p/sbin/apxs
    MOD_PREFIX=`$APXS -q LIBEXECDIR`

    # Enable svn modules
    MODULENAME=dav_svn
    MODULE=$MOD_PREFIX/mod_$MODULENAME.so
    echo "Enabling mod_$MODULENAME module..."
    $APXS -e -a -n $MODULENAME $MODULE

    MODULENAME=authz_svn
    MODULE=$MOD_PREFIX/mod_$MODULENAME.so
    echo "Enabling mod_$MODULENAME module..."
    $APXS -e -a -n $MODULENAME $MODULE

    if test `ps -U www | grep -c %p/sbin/httpd` -ge 1; then
      echo "Restarting apache2..."
      %p/sbin/apachectl graceful
    fi
  <<
  PreRmScript: <<
    if [ "$1" != "remove" -a "$1" != "purge" ]; then
      exit 0
    fi

    # Disable svn modules
    APXS=%p/sbin/apxs
    MOD_PREFIX=`$APXS -q LIBEXECDIR`

    MODULENAME=dav_svn
    MODULE=$MOD_PREFIX/mod_$MODULENAME.so
    echo "Disabling mod_$MODULENAME module..."
    $APXS -e -A -n $MODULENAME $MODULE

    MODULENAME=authz_svn
    MODULE=$MOD_PREFIX/mod_$MODULENAME.so
    echo "Disabling mod_$MODULENAME module..."
    $APXS -e -A -n $MODULENAME $MODULE

    if %p/sbin/apachectl configtest > /dev/null 2>&1; then
      # httpd.conf is correct, e.g. doesn't contain any DAV provider
      if test `ps -U www | grep -c %p/sbin/httpd` -ge 1; then
        echo "Restarting apache2..."
        %p/sbin/apachectl graceful
      fi
    else
      # httpd.conf has syntax errors, e.g. remaining DAV providers
      echo "#####################################################################"
      echo "The subversion apache modules are now disabled in the"
      echo "%p/etc/apache2/httpd.conf file and will be removed. Please make sure"
      echo "that you haven't any svn repositories still enabled in your"
      echo "%p/etc/apache2/httpd.conf file. You then should restart apache by"
      echo "typing '%p/sbin/apachectl graceful'."
      echo "#####################################################################"
    fi
  <<
<<
SplitOff5: <<
  Package: %N-swig-pm581
  Depends: %N-shlibs (= %v-%r), perl581-core, swig-shlibs (>= 1.3.20-2)
  Files: <<
    lib/perl5
    share/man/man3
    lib/libsvn_swig_perl-1.0.0.0.dylib
    lib/libsvn_swig_perl-1.0.dylib
    lib/libsvn_swig_perl-1.dylib
  <<
  Shlibs: <<
    %p/lib/libsvn_swig_perl-1.0.dylib 1.0.0 %n (>= 0.37.0-11)
  <<
  DocFiles: COPYING HACKING INSTALL.swig README.swig
  Description: Subversion - Swig Perl bindings (with SSL)
  DescDetail: <<
    Bindings to call svn functions from perl 5.8.1.
  <<
  DescUsage: <<
    Please read the files in '/sw/share/doc/svn-ssl-swig-pm581/'.
  <<
<<
SplitOff6: <<
  Package: %N-swig-py23
  Depends: %N-shlibs (= %v-%r), python23 (>= 1:2.3.3-23) | python23-nox (>= 1:2.3.3-23), swig-shlibs (>= 1.3.20-2)
  Replaces: svn-ssl-shlibs (<< 1.0.4-11)
  Files: <<
    lib/python2.3
    lib/libsvn_swig_py*
  <<
  Shlibs: <<
    %p/lib/libsvn_swig_py-1.0.dylib 1.0.0 %n (>= 1.0.4-11)
  <<
  DocFiles: COPYING HACKING INSTALL.swig README.swig
  Description: Subversion - Swig Python bindings (with SSL)
  DescDetail: <<
    Bindings to call svn functions from python 2.3.
  <<
  DescUsage: <<
    Please read the files in '/sw/share/doc/svn-ssl-swig-py23/'.
  <<
  DescPackaging: <<
    The "Replaces: svn-ssl-shlibs (<< 1.0.4-11)" is needed since the 
    libsvn_swig_py-1.0.dylib was (incorrectly) in the svn-ssl-shlibs package.
  <<
<<
SplitOff8: <<
 Package: %N-doc
 Description: Subversion - Documentation
 Files: <<
  share/doc
  share/info
 <<
 DocFiles: COPYING
<<
SplitOff9: <<
  Package: %N-javahl
  Depends: %N-shlibs (= %v-%r), system-java14, libiconv
  Files: <<
    share/java
    lib/libsvnjavahl*
  <<
  JarFiles: subversion/bindings/java/javahl/svn-javahl.jar
  Shlibs: <<
    %p/lib/libsvnjavahl-1.0.dylib 1.0.0 %n (>= 1.1.0-11)
  <<
  DocFiles: <<
    subversion/bindings/java/javahl/AUTHORS
    subversion/bindings/java/javahl/README
    subversion/bindings/java/javahl/README-HIGH-LEVEL-API.txt
    COPYING HACKING INSTALL
  <<
  Description: Subversion - Java bindings (with SSL)
  DescDetail: <<
    Bindings to call svn functions from java 1.4.
  <<
  DescUsage: <<
    Please read the files in '/sw/share/doc/svn-ssl-javahl/'.
    
    If you get a java.lang.UnsatisfiedLinkError exception in java check 
    to make sure that the path /sw/share/java/svn-ssl-javahl is in your
    'java.library.path' or make a simbolic link to 
    /sw/lib/libsvnjavahl-1.dylib that is called 'libsvnjavahl-1.jnilib'
    in your working directory.
    
    To use the bindings together with Subclipse (an SVN plugin for Eclipse)
    do the following:
    
    cd /Developer/Applications/eclipse/plugins/org.tigris.subversion.subclipse.core_0.9.22
    cp /sw/share/java/svn-ssl-javahl/svn-javahl.jar .
    ln -sf /sw/lib/libsvnjavahl-1.jnilib
    
    (Adjust the path to your subclise plugin accordingly.)
  <<
<<
# SplitOff7: <<
#   Package: %N-swig-java
#   Depends: %N-shlibs (= %v-%r), system-java14, swig-shlibs (>= 1.3.20-2)
#   Files: <<
#     share/java/%N-swig-java
#   <<
#   JarFiles: subversion/bindings/swig/java/build/svn-api.jar
#   Shlibs: <<
#     %p/lib/libsvn_swig_java-1.0.dylib 1.0.0 %n (>= 1.0.4-11)
#   <<
#   DocFiles: COPYING HACKING INSTALL.swig README.swig
#   Description: Subversion - Swig Java bindings (with SSL)
#   DescDetail: <<
#     Bindings to call svn functions from java 1.4.
#   <<
#   DescUsage: <<
#     Please read the files in '/sw/share/doc/svn-ssl-swig-java/'.
#   <<
# <<

# Additional Info
DescDetail: <<
The goal of the Subversion project is to build a version control system that is
a compelling replacement for CVS in the open source community. 
	
Why should I switch to Subversion, after all CVS is the standard?  Some
advantages of Subversion include: 
- Commits are atomic
- Moving and renaming are versioned.
- Working with directories is easy. E.g. adding a directory adds all
  sub-files and folders to the repository.
- It is fast: branching and tagging are cheap (constant time) operations,
  client/server protocol sends diffs in both directions, and in general
  execution time is proportional to change size, not project size.
- Meta-data is versioned per file, e.g. store the 'execute' permission flag on
  files in the repository.
- Efficient handling of binary files - it uses a binary diffing algorithm to
  transmit and store successive revisions.

Is Subversion stable enough for me to use for my own projects?  The Developers
think so! Read the full FAQ answer on the website:
<http://subversion.tigris.org/project_faq.html#stable>

Subversion is broken into these packages in fink:
(The -ssl variants enable ssl encryption.)

- The "svn-client-ssl" package installs a command-line client program for using
  subversion. Type 'fink describe svn-client-ssl' to get usage help.
  
- The "svn-ssl" package installs a stand-alone server 'svnserve'.
  Install this package if you want to maintain a stand-alone server.
  Type 'fink describe svn-ssl' to get usage help.
  
- The "svn-ssl-doc" package installs html documentation, the pdf book, 
  and notes from the developers of svn.
  
- The "libapache2-ssl-mod-svn" package contains an apache2 module to enable
  serving a repository via web-dav. Type 'fink describe libapache2-ssl-mod-svn'
  to get usage help.

- The "svn-ssl-shlibs" package contains the shared libraries for the other
  packages. It is installed automatically by fink when needed.

- The "svn-ssl-dev" package contains the development headers and libraries.
  It is installed automatically by fink when needed.
  
- The "svn-ssl-swig-pm581" package contains the swig perl bindings to call
  svn from perl. Type 'fink describe svn-ssl-swig-pm581' to get usage help.
 
- The "svn-ssl-swig-py23" package contains the swig python bindings to call
  svn from python. Type 'fink describe svn-ssl-swig-py23' to get usage help.
 
- The "svn-ssl-javahl" package contains the java bindings to call
  svn from java. Type 'fink describe svn-ssl-javahl' to get usage help.
 
For More Information, check the main Subversion website below and read the book
at <http://svnbook.red-bean.com/>. Also check out the documentation in
/sw/share/doc/svn-ssl. These files are in the "svn-ssl-doc" package.
<<
DescUsage: <<
 Type 'svnserve --help', 'man svnserve', 'svnadmin help', or 'man svnadmin'
 for usage.
 Some tools (e.g. hook and back-up scripts) and examples are stored in 
 /sw/share/svn-ssl/tools and /sw/share/svn-ssl/contrib
 
 You can start the Subversion server manually using a command similar to
 '/usr/bin/sudo -u www /sw/bin/svnserve -d -r /sw/var/svn' or you can 
 run 'daemonic enable svnserve' as root to create a StartupItem for it.
 
 'svnserve' is run as user 'www' in order that apache and svnserve can
 access the same repositories at the same time under '/sw/var/svn'
 
 You could install the repositories under the preconfigured directory
 /sw/var/svn
 which should have the correct permissions. Make sure that all files
 in the new repository have the correct permissions for svnserve (and apache)
 to read and write. E.g. run 'chown -R www /sw/var/svn/yourrepos' and 
 'chmod -R go-rwx /sw/var/svn/yourrepos'.
<<
DescPackaging: <<
 To run the tests over ra_dav apache2 must be running with (an older) 
 fink 'libapache2-ssl-mod-svn' already installed. You need to add the
 following to your '/sw/etc/apache2/httpd.conf' file:
 
 <Location /repositories>
  DAV svn
  SVNParentPath /sw/src/svn-ssl-%v-%r/subversion-%v/subversion/tests/clients/cmdline/repositories
 </Location>
 <Location /local_tmp/repos>
  DAV svn
  SVNPath /sw/src/svn-ssl-%v-%r/subversion-%v/subversion/tests/clients/cmdline/local_tmp/repos
 </Location>
 
 where %v and %r are replaced with the correct versions. Then do
 'sudo apachectl graceful' to enable the mod_svn support.

 The "Replaces: svn-ssl (<= 1.1.1-11)" is needed since svnlook was 
 (incorrectly) in the svn-client-ssl package < 1.1.1 and was 
 moved to the main package in 1.1.1-11.
<<
DescPort: <<
Patch needed to stop relinking a .dylib in the install path, 
but hardcoding the %p/lib path in the link command (i.e. %p) instead 
of using %i

The patch also fixes problem with dependency_libs in other packages 
having -ldb-4.1 ot libdb-4.1.la in there, so that libtool ignores 
these.

Many thanks to Peter O'Gorman for the help with the libtool patch.

Prebinding cannot be enabled at this time since apr is not built 
prebound.
Once this is fixed, one could try to enable building two_level by doing:
perl -pi.bak -e 's,-flat_namespace -undefined suppress,,g' configure
If that fails, maybe try to add '-lfoo' to Makefile.in
Or, if that fails too,  change '-undefined suppress -flat_namespace' 
to '-undefined dynamic_lookup'

Many thanks to Ben Reser for fixing the perl bindings. The patch is
alredy included in the upstream development tree.

The swig java bindings don't work currently. Check out this thread:
<http://www.contactor.se/~dast/svn/archive-2004-05/index.shtml#1055>
<<
Homepage: http://subversion.tigris.org/
