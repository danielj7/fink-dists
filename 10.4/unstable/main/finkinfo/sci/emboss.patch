diff -Naur EMBOSS-4.0.0/ajax/ajacd.c EMBOSS-4.0.0-patched/ajax/ajacd.c
--- EMBOSS-4.0.0/ajax/ajacd.c	2006-07-12 11:37:44.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajacd.c	2006-08-25 09:45:04.000000000 -0400
@@ -2505,6 +2505,8 @@
     {"rdesshow",   "N", "boolean", "Show description in the report"},
     {"rscoreshow", "Y", "boolean", "Show the score in the report"},
     {"rusashow",   "N", "boolean", "Show the full USA in the report"},
+    {"rmaxall",    "0", "integer", "Maximum total hits to report"},
+    {"rmaxseq",    "0", "integer", "Maximum hits to report for one sequence"},
     {NULL, NULL, NULL, NULL}
 };
 
@@ -10597,6 +10599,10 @@
 			  &val->Showscore, &acdReplyDef);
 	    acdQualToBool(thys, "rusashow", ajFalse,
 			  &val->Showusa, &acdReplyDef);
+	    acdQualToInt(thys, "rmaxall", ajFalse,
+			  &val->MaxHitAll, &acdReplyDef);
+	    acdQualToInt(thys, "rmaxseq", ajFalse,
+			  &val->MaxHitSeq, &acdReplyDef);
     
 	    /* test acdc-reportbadtaglist */
 	    if(!ajReportSetTags(val, taglist))
diff -Naur EMBOSS-4.0.0/ajax/ajfeat.c EMBOSS-4.0.0-patched/ajax/ajfeat.c
--- EMBOSS-4.0.0/ajax/ajfeat.c	2006-07-07 15:08:21.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajfeat.c	2006-08-25 09:45:04.000000000 -0400
@@ -684,9 +684,18 @@
     if (thys->Handle)
 	return ajTrue;
 
-    if (!ajStrGetLen(thys->Filename))
+    if (ajStrGetLen(thys->Filename))
+    {
+	if(!featFindOutFormat (thys->Formatstr, &thys->Format))
+	    ajErr("unknown output feature format '%S' "
+		  "will write as gff instead\n",
+		  thys->Formatstr );
+    }
+    else
+    {
 	if (!featoutUfoProcess (thys, ufo))
 	    return ajFalse;
+    }
 
     /*ajDebug("trying to open dir:'%S' file:'%S' fmt:'%S'\n",
 	    thys->Directory, thys->Filename, thys->Formatstr);*/
@@ -1140,12 +1149,20 @@
 
     AjPFeature ret = NULL ;
 
+    ajDebug("ajFeatNewII %d %d\n", Start, End);
+
     if(!featTypeMiscfeat)
 	featTypeMiscfeat = ajStrNewC("misc_feature");
 
-    ret = featFeatNew(thys,source,featTypeMiscfeat,
-		      Start,End,score,strand,frame,
-		      0,0,0,NULL, NULL,flags);
+    if(Start > End)
+	ret = featFeatNew(thys,source,featTypeMiscfeat,
+			  Start,End,score,'-',frame,
+			  0,0,0,NULL, NULL,flags);
+    else
+	ret = featFeatNew(thys,source,featTypeMiscfeat,
+			  Start,End,score,strand,frame,
+			  0,0,0,NULL, NULL,flags);
+
     return ret;
 }
 
@@ -1176,7 +1193,13 @@
 {
     AjPFeature ret = NULL ;
 
-    ret = ajFeatNewII(thys,Start,End);
+    ajDebug("ajFeatNewIIRev %d %d\n", Start, End);
+
+    if(Start > End)
+	ret = ajFeatNewII(thys,Start,End);
+    else
+	ret = ajFeatNewII(thys,End,Start);
+
     ret->Strand = '-';
 
     return ret;
@@ -1422,6 +1445,8 @@
     AjPFeature ret          = NULL;
     static ajint maxexon    = 0;
     
+    ajDebug("featFeatNew %d %d '%c'\n", Start, End, strand);
+
     if(!featDefSource)
 	ajStrAssignS(&featDefSource, ajAcdGetProgram());
     
@@ -5922,6 +5947,8 @@
 **
 ** Returns the nth value of a named feature tag.
 **
+** If not found as a tag, also searches for a named note
+**
 ** @param [r] thys [const AjPFeature] Feature object
 ** @param [r] name [const AjPStr] Tag name
 ** @param [r] num [ajint] Tag number
@@ -5937,6 +5964,13 @@
     AjIList iter     = NULL;
     FeatPTagval item = NULL;
     ajint inum       = 0;
+    AjBool isnote;
+    ajint noteposcolon=0;
+    ajint noteposvalue=0;
+
+    isnote = ajStrMatchC(name, "note");
+    noteposcolon = ajStrGetLen(name) + 1;
+    noteposvalue = ajStrGetLen(name) + 3;
 
     if(thys->Tags)
     {
@@ -5954,6 +5988,20 @@
 		    return ajTrue;
 		}
 	    }
+	    else if (!isnote &&
+		     ajStrMatchCaseC(item->Tag, "note") &&
+		     ajStrGetCharFirst(item->Value) == '*' &&
+		     ajCharPrefixCaseS(ajStrGetPtr(item->Value)+1, name) &&
+		     ajStrGetCharPos(item->Value, noteposcolon) == ':')
+	    {
+		inum++;
+		if (num == inum)
+		{
+		    ajStrAssignSubS(val, item->Value, noteposvalue, -1);
+		    ajListIterFree(&iter);
+		    return ajTrue;
+		}
+	    }
 	}
     }
 
@@ -7946,6 +7994,55 @@
 
 
 
+/* @func ajFeattableCopyLimit *************************************************
+**
+** Makes a copy of a feature table using only a limited number of features.
+**
+** For cases where we need a copy we can safely change and/or delete.
+**
+** @param [r]   orig  [const AjPFeattable]  Original feature table
+** @param [r]   limit  [ajint]  Limit to number of features copied
+** @return [AjPFeattable] Feature table copy of the original
+** @@
+******************************************************************************/
+
+AjPFeattable ajFeattableCopyLimit(const AjPFeattable orig, ajint limit)
+{
+    AjPFeattable ret = NULL;
+    AjIList iter;
+    AjPFeature featorig;
+    AjPFeature feat = NULL;
+    ajint ift = 0;
+
+    if(!orig)
+	return NULL;
+
+    ret = featTableNew();
+
+    ajStrAssignS(&ret->Seqid, orig->Seqid);
+    ajStrAssignS(&ret->Type, orig->Type);
+    ret->DefFormat = orig->DefFormat;
+    ret->Start     = orig->Start;
+    ret->End       = orig->End;
+    ret->Len       = orig->Len;
+    ret->Groups    = orig->Groups;
+
+    iter = ajListIterRead(orig->Features);
+
+    while(ajListIterMore(iter) && (ift++ < limit))
+    {
+	featorig = ajListIterNext(iter);
+	feat = ajFeatCopy(featorig);
+	ajFeattableAdd(ret, feat);
+    }
+    ajListIterFree(&iter);
+
+    return ret;
+}
+
+
+
+
 /* @func ajFeatCopy ***********************************************************
 **
 ** Makes a copy of a feature.
diff -Naur EMBOSS-4.0.0/ajax/ajfeat.h EMBOSS-4.0.0-patched/ajax/ajfeat.h
--- EMBOSS-4.0.0/ajax/ajfeat.h	2006-07-03 10:44:35.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajfeat.h	2006-08-25 09:45:04.000000000 -0400
@@ -93,6 +93,7 @@
 ajint         ajFeattableBegin (const AjPFeattable thys);
 void          ajFeattableClear (AjPFeattable thys);
 AjPFeattable  ajFeattableCopy (const AjPFeattable orig);
+AjPFeattable  ajFeattableCopyLimit (const AjPFeattable orig, ajint limit);
 void          ajFeattableDel (AjPFeattable *pthis) ;
 ajint         ajFeattableEnd (const AjPFeattable thys);
 const AjPStr  ajFeattableGetName (const AjPFeattable thys);
diff -Naur EMBOSS-4.0.0/ajax/ajfile.c EMBOSS-4.0.0-patched/ajax/ajfile.c
--- EMBOSS-4.0.0/ajax/ajfile.c	2006-07-07 15:08:21.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajfile.c	2006-07-31 09:24:59.000000000 -0400
@@ -6041,6 +6041,7 @@
 	ajStrDel(&thys->Curr->Line);
 	AJFREE(thys->Curr);
 	thys->Curr = NULL;
+	thys->Last = saveprev;
 	--thys->Size;
 	thys->Pos = thys->Size;
 	return;
diff -Naur EMBOSS-4.0.0/ajax/ajjava.c EMBOSS-4.0.0-patched/ajax/ajjava.c
--- EMBOSS-4.0.0/ajax/ajjava.c	2006-06-20 05:12:35.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajjava.c	2006-08-26 19:55:26.000000000 -0400
@@ -89,9 +89,9 @@
 #define _XOPEN_SOURCE
 #endif
 
-#if !defined(__ppc__) && !defined(__FreeBSD__)
-#include <crypt.h>
-#endif
+//#if !defined(__ppc__) && !defined(__FreeBSD__)
+//#include <crypt.h>
+//#endif
 
 
 
diff -Naur EMBOSS-4.0.0/ajax/ajnam.c EMBOSS-4.0.0-patched/ajax/ajnam.c
--- EMBOSS-4.0.0/ajax/ajnam.c	2006-06-01 11:38:20.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajnam.c	2006-07-31 09:24:59.000000000 -0400
@@ -809,6 +809,10 @@
 	result = (METHOD_ENTRY | METHOD_QUERY);
     else if(!ajStrCmpC(method, "srswww"))
 	result = METHOD_ENTRY;
+    else if(!ajStrCmpC(method, "dbfetch"))
+	result = METHOD_ENTRY;
+    else if(!ajStrCmpC(method, "mrs"))
+	result = (METHOD_ENTRY | METHOD_QUERY | METHOD_ALL);
     else if(!ajStrCmpC(method, "url"))
 	result = METHOD_ENTRY;
     else if(!ajStrCmpC(method, "app"))
diff -Naur EMBOSS-4.0.0/ajax/ajreport.c EMBOSS-4.0.0-patched/ajax/ajreport.c
--- EMBOSS-4.0.0/ajax/ajreport.c	2006-05-19 07:10:34.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajreport.c	2006-08-25 09:45:04.000000000 -0400
@@ -59,6 +59,7 @@
     AjBool Showseq;
     AjBool Nuc;
     AjBool Prot;
+    AjBool Showheader;
     void (*Write) (AjPReport outrpt,
 		   const AjPFeattable ftable, const AjPSeq seq);
 } ReportOFormat;
@@ -129,53 +130,55 @@
 static ReportOFormat reportFormat[] =
 {
 /*   Name         Description */
-/*       Alias MinTags  Showseq  Nuc      Prot     Function */
+/*       Alias MinTags Showseq Nuc     Prot     Header   Function */
    /* standard feature formats */
+/*    {"unknown",   "Unknown feature format",
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJFALSE, AJFALSE, reportWriteSimple},*/
     {"embl",      "EMBL feature format",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJFALSE, reportWriteEmbl},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJFALSE, AJFALSE, reportWriteEmbl},
     {"genbank",   "Genbank feature format",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJFALSE, reportWriteGenbank},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJFALSE, AJFALSE, reportWriteGenbank},
     {"gff",       "GFF feature format",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteGff},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  AJFALSE, reportWriteGff},
     {"pir",       "PIR feature format",
-	 AJFALSE, 0, AJFALSE, AJFALSE, AJTRUE,  reportWritePir},
+	 AJFALSE, 0, AJFALSE, AJFALSE, AJTRUE,  AJFALSE, reportWritePir},
     {"swiss",     "Swissprot feature format",
-	 AJFALSE, 0, AJFALSE, AJFALSE, AJTRUE,  reportWriteSwiss},
+	 AJFALSE, 0, AJFALSE, AJFALSE, AJTRUE,  AJFALSE, reportWriteSwiss},
     /* trace  for debug */
     {"trace",     "Debugging trace of full internal data content",
-	 AJFALSE, 0, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteTrace},
+	 AJFALSE, 0, AJTRUE,  AJTRUE,  AJTRUE,  AJTRUE,  reportWriteTrace},
     /* list file for input to other programs */
     {"listfile",  "EMBOSS list file of sequence USAs with ranges",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteListFile},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteListFile},
     /* feature reports */
     {"dbmotif",   "Motif database hits",
-	 AJFALSE, 0, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteDbMotif},
+	 AJFALSE, 0, AJTRUE,  AJTRUE,  AJTRUE,  AJTRUE,  reportWriteDbMotif},
     {"diffseq",   "Differences between a pair of sequences",
-	 AJFALSE, 0, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteDiffseq},
+	 AJFALSE, 0, AJTRUE,  AJTRUE,  AJTRUE,  AJTRUE,  reportWriteDiffseq},
 /*    cirdna/lindna input format - looks horrible in those programs */
 /*    {"draw",      "",
 	 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteDraw},*/
     {"excel",     "Tab-delimited file for import to Microsoft Excel",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteExcel},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  AJFALSE, reportWriteExcel},
     {"feattable", "EMBL format feature table with internal tags",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteFeatTable},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  AJFALSE, reportWriteFeatTable},
     {"motif",     "Motif report",
-	 AJFALSE, 0, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteMotif},
+	 AJFALSE, 0, AJTRUE,  AJTRUE,  AJTRUE,  AJTRUE,  reportWriteMotif},
     {"nametable", "Simple table with sequence name",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteNameTable},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteNameTable},
     {"regions",   "Annotated sequence regions",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteRegions},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteRegions},
     {"seqtable",  "Simple table with sequence on each line",
-	 AJFALSE, 0, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteSeqTable},
+	 AJFALSE, 0, AJTRUE,  AJTRUE,  AJTRUE,  AJTRUE,  reportWriteSeqTable},
     {"simple",    "Simple report",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteSimple},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteSimple},
     {"srs",       "Simple report format for SRS",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteSrs},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteSrs},
     {"table",     "Simple table",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteTable},
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteTable},
     {"tagseq",    "Sequence with features marked below",
-	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  reportWriteTagseq},
-    {NULL, NULL, AJFALSE, 0, AJFALSE, AJFALSE, AJFALSE, NULL}
+	 AJFALSE, 0, AJFALSE, AJTRUE,  AJTRUE,  AJTRUE,  reportWriteTagseq},
+    {NULL, NULL, AJFALSE, 0, AJFALSE, AJFALSE, AJFALSE, AJFALSE, NULL}
 };
 
 
@@ -226,7 +229,7 @@
     if(!ftfmt)
 	ajStrAssignC(&ftfmt, "embl");
 
-    /*  ajFmtPrintF(thys->File, "#EMBL output\n"); */
+   /*  ajFmtPrintF(thys->File, "#EMBL output\n"); */
 
     ajFeattabOutDel(&thys->Ftquery);
     thys->Ftquery = ajFeattabOutNewSSF(ftfmt, ajSeqGetNameS(seq),
@@ -743,16 +746,10 @@
     while(ajListIterMore(iterft))
     {
 	feature = (AjPFeature)ajListIterNext(iterft);
-	if (feature->Strand == '-')
-	{
-	    istart = feature->End;
-	    iend = feature->Start;
-	}
-	else
-	{
-	    istart = feature->Start;
-	    iend = feature->End;
-	}
+
+	istart = feature->Start;
+	iend = feature->End;
+
 	score = feature->Score;
 
 	ajFmtPrintF(outf, "label\n");
@@ -984,7 +981,7 @@
 	if(feature->Strand == '-')
 	    ajFmtPrintF(outf, "FT   %-15.15S complement(%d..%d)\n",
 			ajFeatGetType(feature),
-			iend, istart);
+			istart, iend);
 	else
 	    ajFmtPrintF(outf, "FT   %-15.15S %d..%d\n",
 			ajFeatGetType(feature),
@@ -1074,12 +1071,21 @@
 	ajFmtPrintS(&tmpstr, "[");
 
 	if(istart)
-	    ajFmtPrintAppS(&tmpstr, "%d", istart);
-
+	{
+	    if(feature->Strand == '-')
+		ajFmtPrintAppS(&tmpstr, "%d", ajSeqGetLen(seq) - istart + 1);
+	    else
+		ajFmtPrintAppS(&tmpstr, "%d", istart);
+	}
 	ajFmtPrintAppS(&tmpstr, ":");
 
 	if(iend)
-	    ajFmtPrintAppS(&tmpstr, "%d", iend);
+	{
+	    if(feature->Strand == '-')
+		ajFmtPrintAppS(&tmpstr, "%d", ajSeqGetLen(seq) - iend + 1);
+	    else
+		ajFmtPrintAppS(&tmpstr, "%d", iend);
+	}
 
 	if(feature->Strand == '-')
 	    ajFmtPrintAppS(&tmpstr, ":r");
@@ -1553,18 +1559,21 @@
 	feature = (AjPFeature)ajListIterNext(iterft);
 	istart = feature->Start;
 	iend = feature->End;
-	ajStrAssignSubS(&subseq, ajSeqStr(seq), istart-1, iend-1);
-	/* ajStrFmtUpper(&subseq); */
 	if(feature->Strand == '-')
+	{
+	    ajStrAssignSubS(&subseq, ajSeqStr(seq), iend-1, istart-1);
 	    ajSeqstrReverse(&subseq);
+	}
+	else
+	{
+	    ajStrAssignSubS(&subseq, ajSeqStr(seq), istart-1, iend-1);
+	}
+	/* ajStrFmtUpper(&subseq); */
 	
 	ajDebug("reportWriteSeqTable subseq %d seq %d %d..%d\n",
 		ajStrGetLen(subseq), ajSeqGetLen(seq), istart, iend);
 	
-	if(feature->Strand == '-')
-	    ajFmtPrintF(outf, "%7d %7d", iend, istart);
-	else
-	    ajFmtPrintF(outf, "%7d %7d", istart, iend);
+	ajFmtPrintF(outf, "%7d %7d", istart, iend);
 
 	for(j=0; j < ntags; j++)
 	{
@@ -1872,16 +1881,9 @@
     while(ajListIterMore(iterft))
     {
 	feature = (AjPFeature)ajListIterNext(iterft);
-	if (feature->Strand == '-')
-	{
-	    istart = feature->End;
-	    iend = feature->Start;
-	}
-	else
-	{
-	    istart = feature->Start;
-	    iend = feature->End;
-	}
+
+	istart = feature->Start;
+	iend = feature->End;
 	score = feature->Score;
 	ajStrAssignSubS(&subseq, ajSeqStr(seq), istart-1, iend-1);
 	/* ajStrFmtUpper(&subseq); */
@@ -2111,7 +2113,7 @@
     ajFeattableDel(&thys->Fttable);
     ajFeattabOutDel(&thys->Ftquery);
 
-    ajReportClose(thys);
+    ajFileClose(&thys->File);
 
     AJFREE(*pthys);
 
@@ -2337,7 +2339,8 @@
 
     AJNEW0(pthis);
 
-    pthis->Count     = 0;
+    pthis->CountSeq  = 0;
+    pthis->CountHit  = 0;
     pthis->Name      = ajStrNew();
     pthis->Formatstr = ajStrNew();
     pthis->Format    = 0;
@@ -2361,13 +2364,19 @@
 ** @param [u] thys [AjPReport] Report object
 ** @param [r] ftable [const AjPFeattable] Feature table object
 ** @param [r] seq [const AjPSeq] Sequence object
-** @return [void]
+** @return [AjBool] True if data was written
+**                  False is maximum output has already been reached.
 ** @category output [AjPReport] Master sequence output routine
 ** @@
 ******************************************************************************/
 
-void ajReportWrite(AjPReport thys, const AjPFeattable ftable, const AjPSeq seq)
+AjBool ajReportWrite(AjPReport thys,
+		     const AjPFeattable ftable, const AjPSeq seq)
 {
+    ajint maxreport = 0;
+    AjPFeattable ftcopy = NULL;
+    AjPStr tmpstr = NULL;
+
     ajDebug("ajReportWrite\n");		/* add ftable name and size */
 
     if(!thys->Format)
@@ -2378,13 +2387,53 @@
 	    thys->Format, reportFormat[thys->Format].Name,
 	    ajFeattableSize(ftable));
 
+    if(thys->MaxHitAll)
+    {
+	maxreport = thys->MaxHitAll - thys->CountHit;
+	if(maxreport <= 0)
+	{
+	    return ajFalse;
+	}
+    }
+
+    if(thys->MaxHitSeq)
+    {
+	if(thys->MaxHitAll)
+	    maxreport = AJMIN(maxreport, thys->MaxHitSeq);
+	else
+	    maxreport = thys->MaxHitSeq;
+    }
+
+    ajDebug("ajReportWrite MaxHitSeq: %d MaxHitAll: %d "
+	    "CountHit: %d FeattableSize: %d maxreport: %d\n",
+	    thys->MaxHitSeq, thys->MaxHitAll, thys->CountHit,
+	    ajFeattableSize(ftable), maxreport);
+
     ajReportSetType(thys, ftable, seq);
 
     /* Calling funclist reportFormat() */
 
-    reportFormat[thys->Format].Write(thys, ftable, seq);
+    if(maxreport && maxreport < ajFeattableSize(ftable))
+    {
+	ajFmtPrintS(&tmpstr, "HitLimit: %d/%d",
+		    maxreport, ajFeattableSize(ftable));
+	ajReportAppendSubTail(thys, tmpstr);
+	ajDebug("new subtail '%S'\n", tmpstr);
+	ajStrDel(&tmpstr);
+	ftcopy = ajFeattableCopyLimit(ftable, maxreport);
+	reportFormat[thys->Format].Write(thys, ftcopy, seq);
+	ajFeattableDel(&ftcopy);
+	thys->CountHit += maxreport;
+    }
+    else
+    {
+	reportFormat[thys->Format].Write(thys, ftable, seq);
+	thys->CountHit += ajFeattableSize(ftable);
+    }
 
-    return;
+    ++thys->CountSeq;
+
+    return ajTrue;
 }
 
 
@@ -2401,7 +2450,21 @@
 
 void ajReportClose(AjPReport thys)
 {
-    ajDebug("ajReportClose '%F'\n", thys->File);
+    ajDebug("ajReportClose '%F' CountSeq %d CountHit %d\n",
+	    thys->File, thys->CountSeq, thys->CountHit);
+
+    if(!thys->File)	     /* already closed, nothing to write to */
+	return;
+
+    if(!thys->Format)
+	if(!ajReportFindFormat(thys->Formatstr, &thys->Format))
+	    ajDie("unknown report format '%S'", thys->Formatstr);
+
+    if(reportFormat[thys->Format].Showheader) {
+	if(!thys->CountSeq)
+	    ajReportWriteHeader(thys, NULL, NULL);
+	ajReportWriteTail(thys, NULL, NULL);
+    }
 
     ajFileClose(&thys->File);
 
@@ -2483,7 +2546,7 @@
     
     /* Header for the top of the file (first call for report only) */
     
-    if(!thys->Count)
+    if(!thys->CountSeq)
     {
 	ajFmtPrintF(outf, "########################################\n");
 	ajFmtPrintF(outf, "# Program: %S\n", ajAcdGetProgram());
@@ -2503,6 +2566,12 @@
 	    ajStrExchangeCC(&tmpstr, "\1", "\n");
 	    ajFmtPrintF(outf, "#    %S\n", tmpstr);
 	}
+	if(thys->MaxHitAll)
+	    ajFmtPrintF(outf, "# Max_hits_total: %d\n",
+			thys->MaxHitAll);
+	if(thys->MaxHitSeq)
+	    ajFmtPrintF(outf, "# Max_hits_sequence: %d\n",
+			thys->MaxHitSeq);
 	ajFmtPrintF(outf, "# Report_format: %S\n", thys->Formatstr);
 	ajFmtPrintF(outf, "# Report_file: %F\n", outf);
 	if(ajListLength(thys->FileNames))
@@ -2532,20 +2601,26 @@
     
     if(!doSingle || thys->Multi)
 	ajFmtPrintF(outf, "#=======================================\n#\n");
+ 
+    if(seq)
+    {
+	ajFmtPrintF(outf, "# Sequence: %S     from: %d   to: %d\n",
+		    ajReportSeqName(thys, seq),
+		    ajSeqGetBegin(seq) + ajSeqGetOffset(seq),
+		    ajSeqGetEnd(seq) + ajSeqGetOffset(seq));
     
-    ajFmtPrintF(outf, "# Sequence: %S     from: %d   to: %d\n",
-		ajReportSeqName(thys, seq),
-		ajSeqGetBegin(seq) + ajSeqGetOffset(seq),
-		ajSeqGetEnd(seq) + ajSeqGetOffset(seq));
-    
-    if(thys->Showacc)
-	ajFmtPrintF(outf, "# Accession: %S\n", ajSeqGetAccS(seq));
-    if(thys->Showdes)
-	ajFmtPrintF(outf, "# Description: %S\n", ajSeqGetDescS(seq));
-    
-    ajFmtPrintF(outf, "# HitCount: %d\n",
-		ajFeattableSize(ftable));
-    
+	if(thys->Showacc)
+	    ajFmtPrintF(outf, "# Accession: %S\n", ajSeqGetAccS(seq));
+	if(thys->Showdes)
+	    ajFmtPrintF(outf, "# Description: %S\n", ajSeqGetDescS(seq));
+    }
+
+    if(ftable)
+    {
+	ajFmtPrintF(outf, "# HitCount: %d\n",
+		    ajFeattableSize(ftable));
+    }
+
     if(ajStrGetLen(thys->Header))
     {
 	ajStrAssignS(&tmpstr, thys->Header);
@@ -2578,8 +2653,6 @@
     else
 	ajFmtPrintF(outf, "########################################\n\n");
     
-    ++thys->Count;
-    
     ajStrDel(&tmpstr);
     AJFREE(today);
     
@@ -2614,31 +2687,41 @@
     else
 	ajFmtPrintF(outf, "\n########################################\n");
 
-    if(ajStrGetLen(thys->SubTail))
+    if(ftable)
     {
-	ajStrAssignS(&tmpstr, thys->SubTail);
-	ajStrExchangeCC(&tmpstr, "\n", "\1# ");
-	ajStrExchangeCC(&tmpstr, "\1", "\n");
-	ajStrTrimEndC(&tmpstr, " ");
-	ajFmtPrintF(outf, "#\n");
-	ajFmtPrintF(outf, "# %S", tmpstr);
-	if(!ajStrSuffixC(tmpstr, "\n#"))
-	    ajFmtPrintF(outf, "\n#");
-	ajFmtPrintF(outf, "\n");
-	ajStrDel(&thys->SubTail);
+	if(ajStrGetLen(thys->SubTail))
+	{
+	    ajStrAssignS(&tmpstr, thys->SubTail);
+	    ajStrExchangeCC(&tmpstr, "\n", "\1# ");
+	    ajStrExchangeCC(&tmpstr, "\1", "\n");
+	    ajStrTrimEndC(&tmpstr, " ");
+	    ajFmtPrintF(outf, "#\n");
+	    ajFmtPrintF(outf, "# %S", tmpstr);
+	    if(!ajStrSuffixC(tmpstr, "\n#"))
+		ajFmtPrintF(outf, "\n#");
+	    ajFmtPrintF(outf, "\n");
+	    ajStrDel(&thys->SubTail);
+	}
+	if(ajStrGetLen(thys->Tail))
+	{
+	    ajStrAssignS(&tmpstr, thys->Tail);
+	    ajStrExchangeCC(&tmpstr, "\n", "\1# ");
+	    ajStrExchangeCC(&tmpstr, "\1", "\n");
+	    ajStrTrimEndC(&tmpstr, " ");
+	    ajFmtPrintF(outf, "#\n");
+	    ajFmtPrintF(outf, "# %S", tmpstr);
+	    if(!ajStrSuffixC(tmpstr, "\n#"))
+		ajFmtPrintF(outf, "\n#");
+	    ajFmtPrintF(outf, "\n");
+	}
     }
 
-    if(ajStrGetLen(thys->Tail))
+    if(!ftable)
     {
-	ajStrAssignS(&tmpstr, thys->Tail);
-	ajStrExchangeCC(&tmpstr, "\n", "\1# ");
-	ajStrExchangeCC(&tmpstr, "\1", "\n");
-	ajStrTrimEndC(&tmpstr, " ");
-	ajFmtPrintF(outf, "#\n");
-	ajFmtPrintF(outf, "# %S", tmpstr);
-	if(!ajStrSuffixC(tmpstr, "\n#"))
-	    ajFmtPrintF(outf, "\n#");
-	ajFmtPrintF(outf, "\n");
+	ajFmtPrintF(outf, "# Total_sequences: %d\n", thys->CountSeq);
+	ajFmtPrintF(outf, "# Total_hitcount: %d\n", thys->CountHit);
+	if(thys->MaxHitAll)
+	ajFmtPrintF(outf, "# Max_hitcount: %d\n", thys->MaxHitAll);
     }
 
     if(!doSingle || thys->Multi)
@@ -2694,6 +2777,56 @@
 
 
 
+/* @func ajReportSetHeader ****************************************************
+**
+** Defines a feature report header
+**
+** @param [u] thys [AjPReport] Report object
+** @param [r] header [const AjPStr] Report header with embedded newlines
+** @return [void]
+** @@
+******************************************************************************/
+
+void ajReportAppendHeader(AjPReport thys, const AjPStr header)
+{
+    if(ajStrGetLen(thys->Header))
+    {
+	if(ajStrGetCharLast(thys->Header) != '\n')
+	    ajStrAppendK(&thys->Header, '\n');
+    }
+    ajStrAppendS(&thys->Header, header);
+
+    return;
+}
+
+
+
+
+/* @func ajReportAppendHeaderC ************************************************
+**
+** Appends to a feature report header
+**
+** @param [u] thys [AjPReport] Report object
+** @param [r] header [const char*] Report header with embedded newlines
+** @return [void]
+** @@
+******************************************************************************/
+
+void ajReportAppendHeaderC(AjPReport thys, const char* header)
+{
+    if(ajStrGetLen(thys->Header))
+    {
+	if(ajStrGetCharLast(thys->Header) != '\n')
+	    ajStrAppendK(&thys->Header, '\n');
+    }
+    ajStrAppendC(&thys->Header, header);
+
+    return;
+}
+
+
+
+
 /* @func ajReportSetSubHeader *************************************************
 **
 ** Defines a feature report subheader
@@ -2714,9 +2847,9 @@
 
 
 
-/* @func ajReportSetSubHeaderC ************************************************
+/* @func ajReportAppendSubHeaderC *********************************************
 **
-** Defines a feature report subheader
+** Appends to a feature report subheader
 **
 ** @param [u] thys [AjPReport] Report object
 ** @param [r] header [const char*] Report header with embedded newlines
@@ -2733,6 +2866,56 @@
 
 
 
+/* @func ajReportSetSubHeader *************************************************
+**
+** Defines a feature report subheader
+**
+** @param [u] thys [AjPReport] Report object
+** @param [r] header [const AjPStr] Report header with embedded newlines
+** @return [void]
+** @@
+******************************************************************************/
+
+void ajReportAppendSubHeader(AjPReport thys, const AjPStr header)
+{
+    if(ajStrGetLen(thys->SubHeader))
+    {
+	if(ajStrGetCharLast(thys->SubHeader) != '\n')
+	    ajStrAppendK(&thys->SubHeader, '\n');
+    }
+    ajStrAppendS(&thys->SubHeader, header);
+
+    return;
+}
+
+
+
+
+/* @func ajReportAppendSubHeaderC *********************************************
+**
+** Appends to a feature report subheader
+**
+** @param [u] thys [AjPReport] Report object
+** @param [r] header [const char*] Report header with embedded newlines
+** @return [void]
+** @@
+******************************************************************************/
+
+void ajReportAppendSubHeaderC(AjPReport thys, const char* header)
+{
+    if(ajStrGetLen(thys->SubHeader))
+    {
+	if(ajStrGetCharLast(thys->SubHeader) != '\n')
+	    ajStrAppendK(&thys->SubHeader, '\n');
+    }
+    ajStrAppendC(&thys->SubHeader, header);
+
+    return;
+}
+
+
+
+
 
 /* @func ajReportSetTail ******************************************************
 **
@@ -2774,6 +2957,56 @@
 
 
 
+/* @func ajReportAppendTail ***************************************************
+**
+** Appends to a feature report tail
+**
+** @param [u] thys [AjPReport] Report object
+** @param [r] tail [const AjPStr] Report tail with embedded newlines
+** @return [void]
+** @@
+******************************************************************************/
+
+void ajReportAppendTail(AjPReport thys, const AjPStr tail)
+{
+    if(ajStrGetLen(thys->Tail))
+    {
+	if(ajStrGetCharLast(thys->Tail) != '\n')
+	    ajStrAppendK(&thys->Tail, '\n');
+    }
+    ajStrAppendS(&thys->Tail, tail);
+
+    return;
+}
+
+
+
+
+/* @func ajReportAppendTailC **************************************************
+**
+** Appends to a feature report tail
+**
+** @param [u] thys [AjPReport] Report object
+** @param [r] tail [const char*] Report tail with embedded newlines
+** @return [void]
+** @@
+******************************************************************************/
+
+void ajReportAppendTailC(AjPReport thys, const char* tail)
+{
+    if(ajStrGetLen(thys->Tail))
+    {
+	if(ajStrGetCharLast(thys->Tail) != '\n')
+	    ajStrAppendK(&thys->Tail, '\n');
+    }
+    ajStrAppendC(&thys->Tail, tail);
+
+    return;
+}
+
+
+
+
 /* @func ajReportSetSubTail ***************************************************
 **
 ** Defines a feature report subtail
@@ -2814,6 +3047,56 @@
 
 
 
+/* @func ajReportAppendSubTail ************************************************
+**
+** Appends to a feature report subtail
+**
+** @param [u] thys [AjPReport] Report object
+** @param [r] tail [const AjPStr] Report tail with embedded newlines
+** @return [void]
+** @@
+******************************************************************************/
+
+void ajReportAppendSubTail(AjPReport thys, const AjPStr tail)
+{
+    if(ajStrGetLen(thys->SubTail))
+    {
+	if(ajStrGetCharLast(thys->SubTail) != '\n')
+	    ajStrAppendK(&thys->SubTail, '\n');
+    }
+    ajStrAppendS(&thys->SubTail, tail);
+
+    return;
+}
+
+
+
+
+/* @func ajReportAppendSubTailC ***********************************************
+**
+** Appends to a feature report subtail
+**
+** @param [u] thys [AjPReport] Report object
+** @param [r] tail [const char*] Report tail with embedded newlines
+** @return [void]
+** @@
+******************************************************************************/
+
+void ajReportAppendSubTailC(AjPReport thys, const char* tail)
+{
+    if(ajStrGetLen(thys->SubTail))
+    {
+	if(ajStrGetCharLast(thys->SubTail) != '\n')
+	    ajStrAppendK(&thys->SubTail, '\n');
+    }
+    ajStrAppendC(&thys->SubTail, tail);
+
+    return;
+}
+
+
+
+
 /* @func ajReportSetType ******************************************************
 **
 ** Sets the report type (if it is not set already)
diff -Naur EMBOSS-4.0.0/ajax/ajreport.h EMBOSS-4.0.0-patched/ajax/ajreport.h
--- EMBOSS-4.0.0/ajax/ajreport.h	2006-05-18 07:48:13.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajreport.h	2006-08-25 09:45:04.000000000 -0400
@@ -45,7 +45,8 @@
 ** @attr Showscore [AjBool] Report score (if optional for format)
 ** @attr Multi [AjBool] if true, assume >1 sequence
 ** @attr Mintags [ajint] Minimum number of tags to report
-** @attr Count [ajint] Number of sequences reported so far
+** @attr CountSeq [ajint] Number of sequences reported so far
+** @attr CountHit [ajint] Number of features reported so far
 **
 ** @new ajReportNew Default constructor
 ** @delete ajReportDel Default destructor
@@ -78,7 +79,10 @@
   AjBool Showscore;
   AjBool Multi;
   ajint Mintags;
-  ajint Count;
+  ajint CountSeq;
+  ajint CountHit;
+  ajint MaxHitAll;
+  ajint MaxHitSeq;
 } AjOReport;
 
 #define AjPReport AjOReport*
@@ -105,19 +109,27 @@
 AjBool       ajReportOpen (AjPReport thys, const AjPStr name);
 void         ajReportPrintFormat (AjPFile outf, AjBool full);
 const AjPStr ajReportSeqName (const AjPReport thys, const AjPSeq seq);
+void         ajReportAppendHeader (AjPReport thys, const AjPStr header);
+void         ajReportAppendHeaderC (AjPReport thys, const char* header);
 void         ajReportSetHeader (AjPReport thys, const AjPStr header);
 void         ajReportSetHeaderC (AjPReport thys, const char* header);
+void         ajReportAppendSubHeader (AjPReport thys, const AjPStr header);
+void         ajReportAppendSubHeaderC (AjPReport thys, const char* header);
 void         ajReportSetSubHeader (AjPReport thys, const AjPStr header);
 void         ajReportSetSubHeaderC (AjPReport thys, const char* header);
 AjBool       ajReportSetTags (AjPReport thys, const AjPStr taglist);
+void         ajReportAppendTail (AjPReport thys, const AjPStr tail);
+void         ajReportAppendTailC (AjPReport thys, const char* tail);
 void         ajReportSetTail (AjPReport thys, const AjPStr tail);
 void         ajReportSetTailC (AjPReport thys, const char* tail);
+void         ajReportAppendSubTail (AjPReport thys, const AjPStr tail);
+void         ajReportAppendSubTailC (AjPReport thys, const char* tail);
 void         ajReportSetSubTail (AjPReport thys, const AjPStr tail);
 void         ajReportSetSubTailC (AjPReport thys, const char* tail);
 void         ajReportSetType (AjPReport thys,
 			      const AjPFeattable ftable, const AjPSeq seq);
 AjBool       ajReportValid (AjPReport thys);
-void         ajReportWrite (AjPReport thys,
+AjBool       ajReportWrite (AjPReport thys,
 			    const AjPFeattable ftable,  const AjPSeq seq);
 void         ajReportWriteHeader (AjPReport thys,
 				  const AjPFeattable ftable, const AjPSeq seq);
diff -Naur EMBOSS-4.0.0/ajax/ajseq.c EMBOSS-4.0.0-patched/ajax/ajseq.c
--- EMBOSS-4.0.0/ajax/ajseq.c	2006-07-12 11:40:28.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajseq.c	2006-08-16 10:06:56.000000000 -0400
@@ -1509,7 +1509,17 @@
     {
 	/*ajFmtPrintS(&thys->Usa, "%S::%S (%S)",
 	  thys->Formatstr, thys->Filename, thys->Entryname);*/
-	if(ajStrGetLen(thys->Entryname))
+	if(ajStrMatchC(thys->Formatstr, "text"))
+	    if(thys->Reversed)
+	    {
+		ajStrAssignS(&tmpstr, thys->Seq);
+		ajSeqstrReverse(&tmpstr);
+		ajFmtPrintS(usa, "asis::%S", tmpstr);
+		ajStrDel(&tmpstr);
+	    }
+	    else
+		ajFmtPrintS(usa, "asis::%S", thys->Seq);
+	else if(ajStrGetLen(thys->Entryname))
 	    ajFmtPrintS(usa, "%S::%S:%S", thys->Formatstr,
 			thys->Filename,thys->Entryname);
 	else
diff -Naur EMBOSS-4.0.0/ajax/ajseqdb.c EMBOSS-4.0.0-patched/ajax/ajseqdb.c
--- EMBOSS-4.0.0/ajax/ajseqdb.c	2006-07-03 10:43:14.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajseqdb.c	2006-08-25 09:45:04.000000000 -0400
@@ -6524,12 +6524,12 @@
 
     if(ajStrGetLen(qry->Id))
 	ajFmtPrintAppS(&get,
-		       "&query=%S",
+		       "&query=id:%S",
 		       qry->Id);
     else if(ajStrGetLen(qry->Acc))
     {
     	ajFmtPrintAppS(&get,
-		       "&query=%S",
+		       "&query=ac:%S",
 		       qry->Acc);
 	return ajFalse;
     }
@@ -6608,7 +6608,6 @@
     ajint iport;
     ajint proxyPort;
     FILE *fp;
-    ajint ipos;
     AjPSeqQuery qry;
 
     iport = 80;
@@ -6630,14 +6629,7 @@
 	ajFmtPrintS(&get, "GET %S HTTP/%S\n", urlget, httpver);
 
     /* replace %s in the "GET" command  with the ID */
-    ipos = ajStrFindC(get, "%s");
-    while(ipos >= 0)
-    {
-	ajDebug("get '%S' qryid '%S'\n", get, qry->Id);
-	ajFmtPrintS(&urlget, ajStrGetPtr(get), ajStrGetPtr(qry->Id));
-	ajStrAssignS(&get, urlget);
-	ipos = ajStrFindC(get, "%s");
-    }
+    ajStrExchangeCS(&get, "%s", qry->Id);
 
     /* finally we have set the GET command */
     ajDebug("host '%S' port %d get '%S'\n", host, iport, get);
diff -Naur EMBOSS-4.0.0/ajax/ajseqread.c EMBOSS-4.0.0-patched/ajax/ajseqread.c
--- EMBOSS-4.0.0/ajax/ajseqread.c	2006-05-30 13:03:08.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajseqread.c	2006-08-25 09:45:04.000000000 -0400
@@ -540,6 +540,7 @@
 static AjBool     seqSetInFormat(const AjPStr format);
 static void       seqSetName(AjPStr* name, const AjPStr str);
 static void       seqSetNameFile(AjPStr* name, const AjPSeqin seqin);
+static void       seqSetNameNospace(AjPStr* name, const AjPStr str);
 static void       seqStockholmCopy(AjPSeq *thys, SeqPStockholm stock, ajint n);
 static void       seqSvSave(AjPSeq thys, const AjPStr sv);
 static void       seqTaxSave(AjPSeq thys, const AjPStr tax);
@@ -1884,7 +1885,7 @@
 	seqin->Format = format;
 	ajStrAssignC(&seqin->Formatstr, seqInFormatDef[format].Name);
 	ajStrAssignC(&thys->Formatstr, seqInFormatDef[format].Name);
-	ajStrAssignS(&thys->Db, seqin->Db);
+	ajStrAssignEmptyS(&thys->Db, seqin->Db);
 	ajStrAssignS(&thys->Entryname, seqin->Entryname);
 	ajStrAssignS(&thys->Filename, seqin->Filename);
 
@@ -2211,7 +2212,7 @@
 	return ajFalse;
     }
 
-    seqSetName(&thys->Name, id);
+    seqSetNameNospace(&thys->Name, id);
 
     if(ajStrGetLen(sv))
 	seqSvSave(thys, sv);
@@ -2666,6 +2667,7 @@
     AjPStr acc       = NULL;
     AjPStr sv        = NULL;
     AjPStr gi        = NULL;
+    AjPStr db        = NULL;
     AjPStr desc      = NULL;
 
     AjPFileBuff buff;
@@ -2688,7 +2690,7 @@
     ajStrAssignC(&desc,"");
 
 
-    if(!ajSeqParseNcbi(seqReadLine,&id,&acc,&sv,&gi,&desc))
+    if(!ajSeqParseNcbi(seqReadLine,&id,&acc,&sv,&gi,&db,&desc))
     {
 	ajFileBuffReset(buff);
 	ajStrDel(&id);
@@ -2699,8 +2701,15 @@
 	return ajFalse;
     }
 
-    ajDebug("parsed id '%S' acc '%S' sv '%S' gi '%S' desc '%S'\n",
-	    id, acc, sv, gi, desc);
+    ajDebug("parsed id '%S' acc '%S' sv '%S' gi '%S' db '%S' (%S) desc '%S'\n",
+	    id, acc, sv, gi, db, thys->Setdb, desc);
+
+    if(ajStrGetLen(db))
+    {
+	ajStrAssignEmptyS(&thys->Setdb, db);
+	ajStrAssignEmptyS(&thys->Db, db);
+	ajDebug("set setdb '%S' db '%S'\n", thys->Setdb, thys->Db);
+    }
     if(ajStrGetLen(gi))
 	ajStrAssignS(&thys->Gi, gi);
 
@@ -5442,7 +5451,7 @@
     ajStrTokenNextParse(&handle, &token);	/* 'ENTRY' */
     ajStrTokenNextParse(&handle, &token);	/* entry name */
 
-    seqSetName (&thys->Name, token);
+    seqSetName(&thys->Name, token);
 
     ok = ajFileBuffGetStore(buff, &seqReadLine,
 			    seqin->Text, &thys->TextPtr);
@@ -8591,6 +8600,36 @@
 
 
 
+/* @funcstatic seqSetNameNospace **********************************************
+**
+** Sets the name for a sequence object by applying simple conversion
+** rules to the input which could be, for example, the name from a
+** FASTA format file.
+**
+** @param [u] name [AjPStr*] Sequence name derived.
+** @param [r] str [const AjPStr] User supplied name.
+** @return [void]
+** @@
+******************************************************************************/
+
+static void seqSetNameNospace(AjPStr* name, const AjPStr str)
+{
+    ajStrAssignS(name, str);
+    if(!ajStrIsWord(str))
+    {
+	ajDebug("seqSetNameNospace non-word '%S'\n", str);
+	ajStrRemoveWhite(name);
+	ajStrExchangeKK(name, ' ', '_');
+	ajDebug("seqSetNameNospace cleaned '%S'\n", *name);
+    }
+
+    ajDebug("seqSetNameNospace '%S' result: '%S'\n", str, *name);
+    return;
+}
+
+
+
+
 /* @funcstatic seqSetNameFile *************************************************
 **
 ** Sets the name for a sequence object by applying simple conversion
@@ -9417,6 +9456,7 @@
 {
     AjPStrTok handle = NULL;
     AjPStr token     = NULL;
+    AjPStr token2    = NULL;
     AjPStr str       = NULL;
     AjBool ok = ajFalse;
 
@@ -9431,16 +9471,18 @@
     ajStrTokenNextParseC(&handle, " \t\n\r", id);
 
     ok = ajStrTokenNextParse(&handle, &token);
+    ajStrAssignS(&token2, token);
+    ajStrRemoveSetC(&token2, "()");
 
-    if(ok && ajIsSeqversion(token))
+    if(ok && ajIsSeqversion(token2))
     {
-        ajStrAssignS(acc, ajIsSeqversion(token));
-	ajStrAssignS(sv, token);
+        ajStrAssignS(acc, ajIsSeqversion(token2));
+	ajStrAssignS(sv, token2);
 	ajStrTokenNextParseC(&handle, "\n\r", desc);
     }
-    else if(ok && ajIsAccession(token))
+    else if(ok && ajIsAccession(token2))
     {
-	ajStrAssignS(acc, token);
+	ajStrAssignS(acc, token2);
         ajStrAssignC(sv, "");
 	ajStrTokenNextParseC(&handle, "\n\r", desc);
     }
@@ -9457,6 +9499,7 @@
     }
 
     ajStrDel(&token); /* duplicate of accession or description */
+    ajStrDel(&token2);
     ajStrTokenDel(&handle);
     ajStrDel(&str);
     ajDebug("result id: '%S' acc: '%S' desc: '%S'\n", *id, *acc, *desc);
@@ -9474,7 +9517,7 @@
 ** Tries to cope with the amazing variety of identifiers NCBI inflicts
 ** on us all - see the BLAST document README.formatdb from NCBI for
 ** some of the gory detail, and look at some real files for clues
-** to what can really happen. Sadly,' real files' also includes
+** to what can really happen. Sadly,'real files' also includes
 ** internal IDs in blast databases reformatted by formatdb.
 **
 ** @param [r] instr [const AjPStr]   fasta line.
@@ -9482,13 +9525,14 @@
 ** @param [w] acc [AjPStr*]  accession number.
 ** @param [w] sv [AjPStr*]  sequence version number.
 ** @param [w] gi [AjPStr*]  GI version number.
+** @param [w] db [AjPStr*]  NCBI database name
 ** @param [w] desc [AjPStr*] description.
 ** @return [AjBool] ajTrue if ncbi format
 ** @@
 ******************************************************************************/
 
 AjBool ajSeqParseNcbi(const AjPStr instr, AjPStr* id, AjPStr* acc,
-		      AjPStr* sv, AjPStr* gi, AjPStr* desc)
+		      AjPStr* sv, AjPStr* gi, AjPStr* db, AjPStr* desc)
 {
     AjPStrTok idhandle = NULL;
     AjPStrTok handle   = NULL;
@@ -9504,6 +9548,8 @@
     ajint  nt;
     AjBool ret = ajFalse;
 
+    ajStrAssignC(db, "");
+
     /* NCBI's list of standard identifiers June 2001
      ** ftp://ncbi.nlm.nih.gov/blast/db/README.formatdb
      **
@@ -9638,8 +9684,9 @@
 	ajStrTokenNextParse(&handle, &numtoken); /* number */
 	ajStrInsertC(&reststr, 0, ">");
 
-	if(ajSeqParseNcbi(reststr,id,acc,sv,gi,desc))
+	if(ajSeqParseNcbi(reststr,id,acc,sv,gi,db,desc))
 	{
+	    ajStrAssignEmptyS(db, token);
 	    /* recursive ... */
 	    /* ajDebug("ajSeqParseNcbi recursive success\n"); */
 	    /* ajDebug("found pref: '%S' id: '%S', acc: '%S' "
@@ -9675,6 +9722,9 @@
 
     if(!strcmp(q,"bbs") || !strcmp(q,"lcl"))
     {
+	if(!strcmp(q, "lcl"))
+	    ajStrAssignS(db, prefix);
+
         /* ajDebug("bbs or lcl prefix\n"); */
 	ajStrTokenNextParse(&handle, id);
 	ajStrAssignC(acc,"");
@@ -9693,8 +9743,10 @@
 
     if(!strcmp(q,"gnl") || !strcmp(q,"pat"))
     {
-        /* ajDebug("gnl or pat or pdb prefix\n"); */
+	/* ajDebug("gnl or pat prefix\n"); */
 	ajStrTokenNextParse(&handle, &token);
+        if(!strcmp(q,"gnl"))
+	   ajStrAssignS(db, token);
 	ajStrTokenNextParse(&handle, id);
 	ajStrAssignC(acc,"");		/* no accession number */
 	ajStrAssignS(desc, reststr);
@@ -9713,6 +9765,7 @@
 
     if(!strcmp(q,"pdb"))
     {
+	ajStrAssignS(db, prefix);
         /* ajDebug("gnl or pat or pdb prefix\n"); */
 	ajStrTokenNextParse(&handle, id);
 	if(ajStrTokenNextParse(&handle, &token))
@@ -9739,6 +9792,7 @@
        || !strcmp(q,"sp") || !strcmp(q,"ref"))
     {
         /* ajDebug("gb,emb,dbj,sp,ref prefix\n"); */
+	ajStrAssignS(db, prefix);
 	ajStrTokenNextParse(&handle, &token);
 	vacc = ajIsSeqversion(token);
 	if(vacc)
@@ -9770,6 +9824,7 @@
 
     if(!strcmp(q,"pir") || !strcmp(q,"prf"))
     {
+	ajStrAssignS(db, prefix);
         /* ajDebug("pir,prf prefix\n"); */
 	ajStrTokenNextParse(&handle, id);
 	ajStrAssignS(desc, reststr);
@@ -9813,6 +9868,7 @@
     for(i=0;i<nt-2;++i)
 	ajStrTokenNextParse(&handle, &token);
 
+    ajStrAssignS(db, token);
     ajStrTokenNextParse(&handle, &token);
     /* ajDebug("token acc: '%S'\n", token); */
     vacc = ajIsSeqversion(token);
diff -Naur EMBOSS-4.0.0/ajax/ajseqread.h EMBOSS-4.0.0-patched/ajax/ajseqread.h
--- EMBOSS-4.0.0/ajax/ajseqread.h	2006-06-02 12:11:20.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajseqread.h	2006-08-25 09:45:04.000000000 -0400
@@ -75,7 +75,7 @@
 AjBool       ajSeqParseFasta(const AjPStr str, AjPStr* id, AjPStr* acc,
 			     AjPStr* sv, AjPStr* desc);
 AjBool       ajSeqParseNcbi(const AjPStr str, AjPStr* id, AjPStr* acc,
-			    AjPStr* sv, AjPStr* gi, AjPStr* desc);
+			    AjPStr* sv, AjPStr* gi, AjPStr* db, AjPStr* desc);
 void         ajSeqQueryClear (AjPSeqQuery thys);
 void         ajSeqQueryDel (AjPSeqQuery *pthis);
 AjBool       ajSeqQueryIs (const AjPSeqQuery qry);
diff -Naur EMBOSS-4.0.0/ajax/ajseqwrite.c EMBOSS-4.0.0-patched/ajax/ajseqwrite.c
--- EMBOSS-4.0.0/ajax/ajseqwrite.c	2006-07-12 11:39:21.000000000 -0400
+++ EMBOSS-4.0.0-patched/ajax/ajseqwrite.c	2006-08-25 09:45:04.000000000 -0400
@@ -145,6 +145,7 @@
 static void       seqDeclone(AjPSeqout outseq);
 static AjBool     seqFileReopen(AjPSeqout outseq);
 static void       seqFormatDel(SeqPSeqFormat* pformat);
+static AjBool     seqNcbiKnowndb(const AjPStr dbname);
 static AjBool     seqoutUfoLocal(const AjPSeqout thys);
 static AjBool     seqoutUsaProcess(AjPSeqout thys);
 static void       seqsetClone(AjPSeqout outseq, const AjPSeqset seq, ajint i);
@@ -836,6 +837,31 @@
 }
 
 
+/* @funcstatic seqNcbiKnowndb *************************************************
+**
+** Tests whether a database name is valid for use in NCBI ids.
+**
+** @param [r] dbname [const AjPStr] Database name
+** @return [AjBoo] True if found
+** @@
+******************************************************************************/
+
+static AjBool seqNcbiKnowndb(const AjPStr dbname)
+{
+    static char* ncbidbs[] = {
+	"gb", "emb", "dbj",		/* big three, listed by NCBI for nr */
+	"sp", "ref", "pir", "prf",	/* others listed by NCBI for nr */
+	"tpd", "tpe", "tpg",		/* third party annotation */
+	NULL
+    };
+    ajint i;
+
+    for (i=0;ncbidbs[i];i++) {
+	if(ajStrMatchC(dbname, ncbidbs[i]))
+	    return ajTrue;
+    }
+    return ajFalse;
+}
 
 
 /* @funcstatic seqWriteNcbi ***************************************************
@@ -855,25 +881,51 @@
     AjPStr seq = NULL;
     ajint linelen     = 60;
     ajint iend;
-
-    if(ajStrGetLen(outseq->Gi))
-	ajFmtPrintF(outseq->File, ">gi|%S|gnl|", outseq->Gi);
-    else
-	ajFmtPrintF(outseq->File, ">gnl|");
+    AjPStr version = NULL;
+    AjPStr dbname = NULL;
+    static ajint blordnum=0;
 
     if(ajStrGetLen(outseq->Setdb))
-	ajFmtPrintF(outseq->File, "%S|", outseq->Setdb);
+	ajStrAssignS(&dbname, outseq->Setdb);
     else if(ajStrGetLen(outseq->Db))
-	ajFmtPrintF(outseq->File, "%S|", outseq->Db);
+	ajStrAssignS(&dbname, outseq->Db);
     else
-	ajFmtPrintF(outseq->File, "unk|");
+	ajStrAssignC(&dbname, "unk");
 
-    ajFmtPrintF(outseq->File, "%S", outseq->Name);
 
     if(ajStrGetLen(outseq->Sv))
-	ajFmtPrintF(outseq->File, " (%S)", outseq->Sv);
+	ajStrAssignS(&version, outseq->Sv);
     else if(ajStrGetLen(outseq->Acc))
-	ajFmtPrintF(outseq->File, " (%S)", outseq->Acc);
+	ajStrAssignS(&version, outseq->Acc);
+    else
+	ajStrAssignC(&version, "");
+
+    if(ajStrGetLen(outseq->Gi) &&
+       !ajStrGetLen(outseq->Db) &&
+       ajStrMatchCaseS(outseq->Gi, outseq->Name))
+    {
+	    ajFmtPrintF(outseq->File, ">gi|%S", outseq->Gi);
+    }
+    else {
+	if(ajStrGetLen(outseq->Gi))
+	    ajFmtPrintF(outseq->File, ">gi|%S|", outseq->Gi);
+	else
+	    ajFmtPrintF(outseq->File, ">");
+
+	if(seqNcbiKnowndb(dbname))
+	    ajFmtPrintF(outseq->File, "%S|%S|", dbname, version);
+	else if(ajStrMatchCaseC(dbname, "lcl"))
+	    ajFmtPrintF(outseq->File, "%S|", dbname);
+	else if(ajStrMatchCaseC(dbname, "BL_ORD_ID"))
+	    ajFmtPrintF(outseq->File, "gnl|%S|%d ", dbname, blordnum++);
+	else
+	    ajFmtPrintF(outseq->File, "gnl|%S|", dbname);
+
+	ajFmtPrintF(outseq->File, "%S", outseq->Name);
+    }
+
+    if(ajStrGetLen(version))
+	ajFmtPrintF(outseq->File, " (%S)", version);
 
     if(ajStrGetLen(outseq->Desc))
 	ajFmtPrintF(outseq->File, " %S", outseq->Desc);
@@ -889,6 +941,8 @@
     }
 
     ajStrDel(&seq);
+    ajStrDel(&dbname);
+    ajStrDel(&version);
 
     return;
 }
diff -Naur EMBOSS-4.0.0/configure EMBOSS-4.0.0-patched/configure
--- EMBOSS-4.0.0/configure	2006-07-13 13:14:18.000000000 -0400
+++ EMBOSS-4.0.0-patched/configure	2006-08-17 08:36:20.000000000 -0400
@@ -3493,19 +3493,22 @@
 CFLAGS="$CFLAGS -O2"
 fi
 
+
+
+else
+
 if test "`uname -a | grep Darwin`"; then
   if test "`uname -a | grep i386`"; then
     CFLAGS="$CFLAGS -O1"
   else
     CFLAGS="$CFLAGS -O2"
   fi
-fi
-
-
 else
 CFLAGS="$CFLAGS -O2"
 fi
 
+fi
+
 
 
 
@@ -4135,7 +4138,7 @@
   ;;
 *-*-irix6*)
   # Find out which ABI we are using.
-  echo '#line 4138 "configure"' > conftest.$ac_ext
+  echo '#line 4141 "configure"' > conftest.$ac_ext
   if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
@@ -5500,7 +5503,7 @@
 
 
 # Provide some information about the compiler.
-echo "$as_me:5503:" \
+echo "$as_me:5506:" \
      "checking for Fortran 77 compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
 { (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
@@ -6563,11 +6566,11 @@
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:6566: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:6569: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:6570: \$? = $ac_status" >&5
+   echo "$as_me:6573: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
@@ -6831,11 +6834,11 @@
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:6834: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:6837: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:6838: \$? = $ac_status" >&5
+   echo "$as_me:6841: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
@@ -6935,11 +6938,11 @@
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:6938: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:6941: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:6942: \$? = $ac_status" >&5
+   echo "$as_me:6945: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
@@ -8404,7 +8407,7 @@
   libsuff=
   case "$host_cpu" in
   x86_64*|s390x*|powerpc64*)
-    echo '#line 8407 "configure"' > conftest.$ac_ext
+    echo '#line 8410 "configure"' > conftest.$ac_ext
     if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
@@ -9301,7 +9304,7 @@
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 9304 "configure"
+#line 9307 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -9401,7 +9404,7 @@
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 9404 "configure"
+#line 9407 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -11741,11 +11744,11 @@
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:11744: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:11747: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:11748: \$? = $ac_status" >&5
+   echo "$as_me:11751: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
@@ -11845,11 +11848,11 @@
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:11848: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:11851: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:11852: \$? = $ac_status" >&5
+   echo "$as_me:11855: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
@@ -12381,7 +12384,7 @@
   libsuff=
   case "$host_cpu" in
   x86_64*|s390x*|powerpc64*)
-    echo '#line 12384 "configure"' > conftest.$ac_ext
+    echo '#line 12387 "configure"' > conftest.$ac_ext
     if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
@@ -13436,11 +13439,11 @@
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:13439: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:13442: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:13443: \$? = $ac_status" >&5
+   echo "$as_me:13446: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
@@ -13540,11 +13543,11 @@
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:13543: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:13546: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:13547: \$? = $ac_status" >&5
+   echo "$as_me:13550: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
@@ -14989,7 +14992,7 @@
   libsuff=
   case "$host_cpu" in
   x86_64*|s390x*|powerpc64*)
-    echo '#line 14992 "configure"' > conftest.$ac_ext
+    echo '#line 14995 "configure"' > conftest.$ac_ext
     if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
@@ -15764,11 +15767,11 @@
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:15767: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:15770: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:15771: \$? = $ac_status" >&5
+   echo "$as_me:15774: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
@@ -16032,11 +16035,11 @@
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:16035: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:16038: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:16039: \$? = $ac_status" >&5
+   echo "$as_me:16042: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
@@ -16136,11 +16139,11 @@
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:16139: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:16142: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:16143: \$? = $ac_status" >&5
+   echo "$as_me:16146: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
@@ -17605,7 +17608,7 @@
   libsuff=
   case "$host_cpu" in
   x86_64*|s390x*|powerpc64*)
-    echo '#line 17608 "configure"' > conftest.$ac_ext
+    echo '#line 17611 "configure"' > conftest.$ac_ext
     if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
@@ -22644,7 +22647,11 @@
 if test "${with_x}" != "no" ; then
 
   CXXFLAGS="$CXXFLAGS $X_CFLAGS"
+if test "`uname`" != "IRIX64" && test "`uname`" != "IRIX" ; then
   XLIB="$X_LIBS -lX11 $X_EXTRA_LIBS"
+else
+  XLIB="-lX11 $X_EXTRA_LIBS"
+fi
 
 
 fi
diff -Naur EMBOSS-4.0.0/emboss/acd/dbifasta.acd EMBOSS-4.0.0-patched/emboss/acd/dbifasta.acd
--- EMBOSS-4.0.0/emboss/acd/dbifasta.acd	2006-07-12 11:48:45.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/acd/dbifasta.acd	2006-08-25 09:45:04.000000000 -0400
@@ -23,7 +23,7 @@
   list: idformat [
     standard: "y"
     information: "ID line format"
-    values: "simple+ >ID; idacc+ >ID ACC; gcgid+ >db:ID; gcgidacc+
+    values: "simple+ >ID; idacc+ >ID ACC; or >ID (ACC) gcgid+ >db:ID; gcgidacc+
              >db:ID ACC; dbid+ >db ID; ncbi+ | formats;"
     maximum: "1"
     minimum: "1"
diff -Naur EMBOSS-4.0.0/emboss/acd/dbxfasta.acd EMBOSS-4.0.0-patched/emboss/acd/dbxfasta.acd
--- EMBOSS-4.0.0/emboss/acd/dbxfasta.acd	2006-07-12 11:48:45.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/acd/dbxfasta.acd	2006-08-25 09:45:04.000000000 -0400
@@ -33,7 +33,7 @@
   list: idformat [
     standard: "y"
     information: "ID line format"
-    values: "simple+ >ID; idacc+ >ID ACC; gcgid+ >db:ID; gcgidacc+
+    values: "simple+ >ID; idacc+ >ID ACC or >ID (ACC); gcgid+ >db:ID; gcgidacc+
              >db:ID ACC; dbid+ >db ID; ncbi+ | formats;"
     maximum: "1"
     minimum: "1"
diff -Naur EMBOSS-4.0.0/emboss/dbiblast.c EMBOSS-4.0.0-patched/emboss/dbiblast.c
--- EMBOSS-4.0.0/emboss/dbiblast.c	2006-05-31 05:30:33.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/dbiblast.c	2006-08-25 09:45:04.000000000 -0400
@@ -92,6 +92,7 @@
 static AjPStr tmpac  = NULL;
 static AjPStr tmpsv  = NULL;
 static AjPStr tmpgi  = NULL;
+static AjPStr tmpdb  = NULL;
 
 static EmbPEntry dbiblastEntry = NULL;
 static AjPList* fdl   = NULL;
@@ -663,6 +664,7 @@
     ajStrDel(&tmpdes);
     ajStrDel(&tmpfd);
     ajStrDel(&tmpgi);
+    ajStrDel(&tmpdb);
     ajStrDel(&tmpac);
     ajStrDel(&tmpsv);
     ajRegFree(&wrdexp);
@@ -1166,10 +1168,11 @@
     ajStrAssignC(&tmpac,"");
     ajStrAssignC(&tmpsv,"");
     ajStrAssignC(&tmpgi,"");
+    ajStrAssignC(&tmpdb,"");
 
     ajFmtPrintS(&t,">%S",line);
 
-    if(!ajSeqParseNcbi(t,id,&tmpac,&tmpsv,&tmpgi,&tmpdes))
+    if(!ajSeqParseNcbi(t,id,&tmpac,&tmpsv,&tmpgi,&tmpdb,&tmpdes))
 	return ajFalse;
 
     if(ajStrGetLen(tmpac))
diff -Naur EMBOSS-4.0.0/emboss/dbifasta.c EMBOSS-4.0.0-patched/emboss/dbifasta.c
--- EMBOSS-4.0.0/emboss/dbifasta.c	2006-02-22 10:01:53.000000000 -0500
+++ EMBOSS-4.0.0-patched/emboss/dbifasta.c	2006-08-25 09:45:04.000000000 -0400
@@ -24,7 +24,7 @@
 **
 ** EMBOSS/Staden/EMBLCD indexing
 **
-** This version reads a flat file database, in fsata format,
+** This version reads a flat file database, in fasta format,
 ** and writes entryname and field (e.g. accession) index files.
 **
 ** It needs to know the format in order to
@@ -444,7 +444,7 @@
     else if(ajStrMatchC(idformat,"idacc"))
     {
 	*type = FASTATYPE_IDACC;
-	exp   = ajRegCompC("^>([.A-Za-z0-9_-]+)+[ \t]+([A-Za-z0-9_-]+)");
+	exp   = ajRegCompC("^>([.A-Za-z0-9_-]+)+[ \t]+\\(?([A-Za-z0-9_-]+)\\)?");
     }
     else if(ajStrMatchC(idformat,"accid"))
     {
@@ -517,6 +517,7 @@
     static AjPStr tmpac  = NULL;
     static AjPStr tmpsv  = NULL;
     static AjPStr tmpgi  = NULL;
+    static AjPStr tmpdb  = NULL;
     static AjPStr tmpdes = NULL;
     static AjPStr tmpfd  = NULL;
     static AjPStr rline  = NULL;
@@ -579,6 +580,7 @@
 
     ajStrAssignC(&tmpsv, "");
     ajStrAssignC(&tmpgi, "");
+    ajStrAssignC(&tmpdb, "");
     ajStrAssignC(&tmpdes, "");
     ajStrAssignC(&tmpac, "");
     ajStrAssignC(id, "");
@@ -601,7 +603,7 @@
 	ajRegPost(exp, &tmpdes);
 	break;
     case FASTATYPE_NCBI:
-	if(!ajSeqParseNcbi(rline,id,&tmpac,&tmpsv,&tmpgi,&tmpdes))
+	if(!ajSeqParseNcbi(rline,id,&tmpac,&tmpsv,&tmpgi,&tmpdb,&tmpdes))
 	{
 	    ajStrDelStatic(&tmpac);
 	    return ajFalse;
@@ -712,6 +714,7 @@
     ajStrDelStatic(&tmpac);
     ajStrDelStatic(&tmpsv);
     ajStrDelStatic(&tmpgi);
+    ajStrDelStatic(&tmpdb);
     ajStrDelStatic(&tmpdes);
 
     ipos = ajFileTell(libr);
diff -Naur EMBOSS-4.0.0/emboss/dbxfasta.c EMBOSS-4.0.0-patched/emboss/dbxfasta.c
--- EMBOSS-4.0.0/emboss/dbxfasta.c	2006-05-02 12:44:16.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/dbxfasta.c	2006-08-25 09:45:04.000000000 -0400
@@ -274,7 +274,7 @@
     else if(ajStrMatchC(idformat,"idacc"))
     {
 	*type = FASTATYPE_IDACC;
-	exp   = ajRegCompC("^>([.A-Za-z0-9_-]+)+[ \t]+([A-Za-z0-9_-]+)");
+	exp   = ajRegCompC("^>([.A-Za-z0-9_-]+)+[ \t]+\\(?([A-Za-z0-9_-]+)\\)?");
     }
     else if(ajStrMatchC(idformat,"accid"))
     {
@@ -336,6 +336,7 @@
     static AjPStr ac  = NULL;
     static AjPStr sv  = NULL;
     static AjPStr gi  = NULL;
+    static AjPStr db  = NULL;
     static AjPStr de  = NULL;
 
     static AjPStr tmpfd  = NULL;
@@ -362,6 +363,7 @@
     
     ajStrAssignC(&sv, "");
     ajStrAssignC(&gi, "");
+    ajStrAssignC(&db, "");
     ajStrAssignC(&de, "");
     ajStrAssignC(&ac, "");
     ajStrAssignC(&entry->id, "");
@@ -384,7 +386,7 @@
 	ajRegPost(typeexp, &de);
 	break;
     case FASTATYPE_NCBI:
-	if(!ajSeqParseNcbi(line,&entry->id,&ac,&sv,&gi,
+	if(!ajSeqParseNcbi(line,&entry->id,&ac,&sv,&gi,&db,
 			   &de))
 	    return ajFalse;
 	break;
@@ -445,6 +447,7 @@
     ajStrDelStatic(&ac);
     ajStrDelStatic(&sv);
     ajStrDelStatic(&gi);
+    ajStrDelStatic(&db);
     ajStrDelStatic(&de);
 
     return ajTrue;
diff -Naur EMBOSS-4.0.0/emboss/dreg.c EMBOSS-4.0.0-patched/emboss/dreg.c
--- EMBOSS-4.0.0/emboss/dreg.c	2006-07-12 11:42:58.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/dreg.c	2006-08-09 07:41:51.000000000 -0400
@@ -48,6 +48,7 @@
     ajint ioff;
     ajint ipos;
     ajint ilen;
+    ajint adj;
 
     embInit("dreg", argc, argv);
 
@@ -60,6 +61,16 @@
 
     while(ajSeqallNext(seqall, &seq))
     {
+	if(ajSeqIsReversed(seq))
+	    adj = ajSeqGetLen(seq) - ajSeqGetOffend(seq);
+	else
+	    adj = ajSeqGetOffset(seq);
+	ajDebug("begin:%d end:%d len:%d offset:%d offend:%d "
+		"rev:%B nuc:%B adj:%d",
+	       ajSeqGetBegin(seq), ajSeqGetEnd(seq), ajSeqGetLen(seq),
+	       ajSeqGetOffset(seq), ajSeqGetOffend(seq),
+	       ajSeqIsReversed(seq), ajSeqIsNuc(seq), adj);
+
 	ipos  = 1;
 	ajStrAssignS(&str, ajSeqGetSeqS(seq));
 	ajStrFmtUpper(&str);
@@ -69,6 +80,7 @@
 	feat = ajFeattableNewDna(ajSeqGetNameS(seq));
 	while(ajPatlistRegexGetNext(plist,&pat))
 	{
+
 	    patexp = ajPatternRegexGetCompiled(pat);
 	    while(ajStrGetLen(str) && ajRegExec(patexp, str))
 	    {
@@ -81,8 +93,15 @@
 		    ajRegPost(patexp, &tmpstr);
 		    ajStrAssignS(&str, tmpstr);
 		    ipos += ioff;
-		    sf = ajFeatNewII (feat,ipos,ipos+ilen-1);
-		    ajFmtPrintS (&tmpstr,"*pat %S", ajPatternRegexGetName(pat));
+		    if(ajSeqIsReversed(seq)) {
+			sf = ajFeatNewIIRev (feat, adj - ipos + ilen-1,
+					     adj - ipos);
+		    }
+		    else {
+			sf = ajFeatNewII (feat,ipos,ipos+ilen-1);
+		    }
+		    ajFmtPrintS (&tmpstr,"*pat %S",
+				 ajPatternRegexGetName(pat));
 		    ajFeatTagAdd (sf,NULL,tmpstr);
 		    ipos += ilen;
 		}
@@ -93,7 +112,9 @@
 		}
 	    }
 	}
-        (void) ajReportWrite (report,feat,seq);
+	if(ajFeattableSize(feat))
+	    (void) ajReportWrite (report,feat,seq);
+
         ajFeattableDel(&feat);
     }
 
diff -Naur EMBOSS-4.0.0/emboss/fuzznuc.c EMBOSS-4.0.0-patched/emboss/fuzznuc.c
--- EMBOSS-4.0.0/emboss/fuzznuc.c	2006-07-03 11:05:02.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/fuzznuc.c	2006-08-25 09:45:04.000000000 -0400
@@ -35,13 +35,14 @@
 
 int main(int argc, char **argv)
 {
-    AjPSeqall seqall;
-    AjPSeq seq;
+    AjPSeqall seqall = NULL;
+    AjPSeq seq = NULL;
     AjPFeattable tab = NULL;
     AjPReport report = NULL;
     AjPStr tmpstr = NULL;
 
     AjBool sc;
+    AjBool writeok = ajTrue;
 
     AjPPatlistSeq plist = NULL;
 
@@ -56,13 +57,15 @@
     ajFmtPrintAppS(&tmpstr, "\nComplement: %B\n", sc);
     ajReportSetHeader(report, tmpstr);
 
-    while(ajSeqallNext(seqall,&seq))
+    writeok=ajTrue;
+    while (writeok && ajSeqallNext(seqall,&seq))
     {
 	tab = ajFeattableNewDna(ajSeqGetNameS(seq));
         embPatlistSeqSearch(tab,seq,plist,ajFalse);
         if (sc)
             embPatlistSeqSearch (tab,seq,plist,ajTrue);
-        ajReportWrite(report,tab,seq);
+        if(ajFeattableSize(tab))
+	    writeok = ajReportWrite(report,tab,seq);
         ajFeattableDel(&tab);
     }
 
diff -Naur EMBOSS-4.0.0/emboss/fuzzpro.c EMBOSS-4.0.0-patched/emboss/fuzzpro.c
--- EMBOSS-4.0.0/emboss/fuzzpro.c	2006-07-03 11:05:02.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/fuzzpro.c	2006-08-25 09:45:04.000000000 -0400
@@ -32,13 +32,14 @@
 
 int main(int argc, char **argv)
 {
-    AjPSeqall seqall;
-    AjPSeq seq;
+    AjPSeqall seqall = NULL;
+    AjPSeq seq = NULL;
     AjPFeattable tab = NULL;
     AjPReport report = NULL;
     AjPStr tmpstr = NULL;
-
+ 
     AjPPatlistSeq plist = NULL;
+    AjBool writeok = ajTrue;
 
     embInit("fuzzpro", argc, argv);
 
@@ -49,15 +50,16 @@
     ajPatlistSeqDoc(plist, &tmpstr);
     ajReportSetHeader(report, tmpstr);
 
-    while(ajSeqallNext(seqall,&seq))
+    writeok=ajTrue;
+    while(writeok && ajSeqallNext(seqall,&seq))
     {
 	tab = ajFeattableNewProt(ajSeqGetNameS(seq));
         embPatlistSeqSearch(tab,seq,plist,ajFalse);
-        ajReportWrite(report,tab,seq);
+	if(ajFeattableSize(tab))
+	    writeok = ajReportWrite(report,tab,seq);
         ajFeattableDel(&tab);
     }
 
-
     ajPatlistSeqDel(&plist);
 
     ajStrDel(&tmpstr);
diff -Naur EMBOSS-4.0.0/emboss/fuzztran.c EMBOSS-4.0.0-patched/emboss/fuzztran.c
--- EMBOSS-4.0.0/emboss/fuzztran.c	2006-07-12 11:42:31.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/fuzztran.c	2006-08-25 09:45:04.000000000 -0400
@@ -38,8 +38,8 @@
 
 int main(int argc, char **argv)
 {
-    AjPSeqall seqall;
-    AjPSeq seq;
+    AjPSeqall seqall = NULL;
+    AjPSeq seq = NULL;
     AjPReport report = NULL;
     AjPFeattable tab = NULL;
     AjPFeattable seqtab = NULL;
@@ -59,6 +59,7 @@
     ajint end;
 
     AjPStr tmpstr = NULL;
+    AjBool writeok = ajTrue;
 
     embInit("fuzztran", argc, argv);
 
@@ -77,7 +78,8 @@
 
     trantable = ajTrnNewI(table);
 
-    while(ajSeqallNext(seqall,&seq))
+    writeok=ajTrue;
+    while(writeok && ajSeqallNext(seqall,&seq))
     {
 	begin = ajSeqallBegin(seqall);
 	end   = ajSeqallEnd(seqall);
@@ -156,7 +158,8 @@
 	    ajSeqDel(&pseq);
 	}
 
-	ajReportWrite(report, seqtab, seq);
+	if(ajFeattableSize(seqtab))
+	    writeok = ajReportWrite(report, seqtab, seq);
 	ajStrDel(&text);
     }
 
diff -Naur EMBOSS-4.0.0/emboss/jembossctl.c EMBOSS-4.0.0-patched/emboss/jembossctl.c
--- EMBOSS-4.0.0/emboss/jembossctl.c	2006-07-07 15:12:15.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/jembossctl.c	2006-08-26 19:55:56.000000000 -0400
@@ -115,9 +115,9 @@
 #define _XOPEN_SOURCE
 #endif
 
-#if !defined(__ppc__) && !defined(__FreeBSD__)
-#include <crypt.h>
-#endif
+//#if !defined(__ppc__) && !defined(__FreeBSD__)
+//#include <crypt.h>
+//#endif
 
 #ifdef N_SHADOW
 #include <shadow.h>
diff -Naur EMBOSS-4.0.0/emboss/merger.c EMBOSS-4.0.0-patched/emboss/merger.c
--- EMBOSS-4.0.0/emboss/merger.c	2006-05-19 07:20:13.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/merger.c	2006-08-14 12:20:09.000000000 -0400
@@ -79,8 +79,8 @@
 
     float gapopen;
     float gapextend;
-    ajint maxarr = 1000;
-    ajint len;				/* arbitrary. realloc'd if needed */
+    ajulong maxarr = 1000;
+    ajulong len;		  /* arbitrary. realloc'd if needed */
 
     float score;
     ajint begina;
@@ -121,6 +121,10 @@
 
     lena = ajSeqGetLen(a);
     lenb = ajSeqGetLen(b);
+
+    if(lenb > (ULONG_MAX/(ajulong)(lena+1)))
+	ajFatal("Sequences too big. Try 'supermatcher'");
+
     len  = lena*lenb;
 
     if(len>maxarr)
diff -Naur EMBOSS-4.0.0/emboss/needle.c EMBOSS-4.0.0-patched/emboss/needle.c
--- EMBOSS-4.0.0/emboss/needle.c	2006-05-19 07:20:13.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/needle.c	2006-08-14 12:20:09.000000000 -0400
@@ -58,8 +58,8 @@
 
     float gapopen;
     float gapextend;
-    ajint maxarr = 1000; 	/* arbitrary. realloc'd if needed */
-    ajint len;			
+    ajulong maxarr = 1000; 	/* arbitrary. realloc'd if needed */
+    ajulong len;			
 
     float score;
     ajint begina;
@@ -106,6 +106,10 @@
     {
 	ajSeqTrim(b);
 	lenb = ajSeqGetLen(b);
+
+	if(lenb > (ULONG_MAX/(ajulong)(lena+1)))
+	   ajFatal("Sequences too big. Try 'stretcher' or 'supermatcher'");
+
 	len = lena*lenb;
 
 	if(len < 0)
diff -Naur EMBOSS-4.0.0/emboss/prophet.c EMBOSS-4.0.0-patched/emboss/prophet.c
--- EMBOSS-4.0.0/emboss/prophet.c	2006-07-07 15:12:15.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/prophet.c	2006-08-14 12:20:09.000000000 -0400
@@ -93,8 +93,8 @@
 
     const char *p;
 
-    ajint maxarr = 1000;
-    ajint alen;
+    ajulong maxarr = 1000;
+    ajulong alen;
     float *path;
     ajint *compass;
 
@@ -154,6 +154,9 @@
 	ajStrAssignSubC(&substr,ajStrGetPtr(strand),begin-1,end-1);
 	len = ajStrGetLen(substr);
 
+	if(len > (ULONG_MAX/(ajulong)(mlen+1)))
+	    ajFatal("Sequences too big. Try 'supermatcher'");
+
 	alen = len*mlen;
 	if(alen>maxarr)
 	{
diff -Naur EMBOSS-4.0.0/emboss/restrict.c EMBOSS-4.0.0-patched/emboss/restrict.c
--- EMBOSS-4.0.0/emboss/restrict.c	2006-07-01 04:58:02.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/restrict.c	2006-08-25 09:45:04.000000000 -0400
@@ -543,13 +543,18 @@
 	    continue;
 
 	if(m->forward)
+	{
 	    cend = m->start + ajStrGetLen(m->pat) - 1;
+	    gf = ajFeatNewII (TabRpt,
+			   m->start, cend);
+	}
 	else
+	{
 	    cend = m->start - ajStrGetLen(m->pat) + 1;
-	
-
-	gf = ajFeatNewII (TabRpt,
+	    gf = ajFeatNewIIRev(TabRpt,
 			   m->start, cend);
+	}
+
 	ajFmtPrintS(&tmpStr, "*enzyme %S", m->cod);
 	ajFeatTagAdd(gf,  NULL, tmpStr);
 	ajFmtPrintS(&tmpStr, "*site %S", m->pat);
diff -Naur EMBOSS-4.0.0/emboss/water.c EMBOSS-4.0.0-patched/emboss/water.c
--- EMBOSS-4.0.0/emboss/water.c	2006-05-19 07:20:14.000000000 -0400
+++ EMBOSS-4.0.0-patched/emboss/water.c	2006-08-14 12:20:09.000000000 -0400
@@ -62,8 +62,8 @@
     float gapopen;
     float gapextend;
 
-    ajint maxarr = 1000;
-    ajint len;
+    ajulong maxarr = 1000;
+    ajulong len;
 
     float score;
     ajint begina;
@@ -114,6 +114,9 @@
 	ajSeqTrim(b);
 	lenb = ajSeqGetLen(b);
 
+	if(lenb > (ULONG_MAX/(ajulong)(lena+1)))
+	   ajFatal("Sequences too big. Try 'matcher' or 'supermatcher'");
+
 	len = lena*lenb;
 
 	if(len < 0)
diff -Naur EMBOSS-4.0.0/nucleus/embpatlist.c EMBOSS-4.0.0-patched/nucleus/embpatlist.c
--- EMBOSS-4.0.0/nucleus/embpatlist.c	2006-07-07 15:08:53.000000000 -0400
+++ EMBOSS-4.0.0-patched/nucleus/embpatlist.c	2006-08-09 07:41:51.000000000 -0400
@@ -122,11 +122,14 @@
     AjPStr seqstr    = NULL;
     AjPStr tmp       = ajStrNew();
     AjPRegexp patexp = ajPatternRegexGetCompiled(pat);
+    ajint adj;
+
+    adj = ajSeqGetEnd(seq);
 
     if (reverse)
     {
         revseq = ajSeqNewS (seq);
-        ajSeqReverseDo(revseq);
+        ajSeqReverseForce(revseq);
         ajStrAssignEmptyS(&seqstr, ajSeqStr(revseq));
     }
     else
@@ -145,7 +148,8 @@
 	    ajStrAssignS(&seqstr, tmp);
 	    pos += off;
             if (reverse)
-                sf = ajFeatNewIIRev (ftable,pos,pos+len-1);
+                sf = ajFeatNewIIRev (ftable, adj - pos - len + 2,
+				     adj - pos + 1);
             else
 	        sf = ajFeatNewII (ftable,pos,pos+len-1);
 	    pos += len;
@@ -171,7 +175,7 @@
 ** @param [r] seq [const AjPSeq] Sequence to search
 ** @param [r] pat [const AjPPatternSeq] Pattern to search with
 ** @param [r] reverse [AjBool] Search reverese sequence as well
-** @return [void]
+** @return [void]  
 ** @@
 ******************************************************************************/
 void embPatternSeqSearch (AjPFeattable ftable, const AjPSeq seq,
@@ -188,13 +192,16 @@
     AjPStr seqstr  = ajStrNew();
     AjPStr seqname = ajStrNew();
     AjPStr tmp     = ajStrNew();
+    ajint adj;
+
+    adj = ajSeqGetEnd(seq);
 
     ajStrAssignC(&seqname,ajSeqName(seq));
     pattern = ajPatternSeqGetCompiled(pat);
     if (reverse)
     {
         revseq = ajSeqNewS (seq);
-        ajSeqReverseDo(revseq);
+        ajSeqReverseForce(revseq);
         ajStrAssignS(&seqstr, ajSeqStr(revseq));
     }
     else
@@ -207,12 +214,15 @@
                        ajPatternSeqGetMismatch(pat),&hits,&tidy);
 
     ajDebug ("embPatternSeqSearch: found %d hits\n",hits);
-    ajListReverse(list);
+    if(!reverse)
+	ajListReverse(list);
+
     for(i=0;i<hits;++i)
     {
         ajListPop(list,(void **)&m);
         if (reverse)
-            sf = ajFeatNewIIRev(ftable, m->start, m->start + m->len - 1);
+            sf = ajFeatNewIIRev(ftable, adj - m->start - m->len + 2,
+				adj - m->start + 1);
         else
             sf = ajFeatNewII(ftable, m->start, m->start + m->len - 1);
 
