Package: fpc
Version: 2.4.0
Revision: 3
Architecture: powerpc, i386, x86_64
Depends: fpc-config
Recommends: fpc-doc

CustomMirror: <<
eur-AT: ftp://gd.tuwien.ac.at/languages/pascal/fpc/
eur-BE: ftp://ftp.freepascal.org/pub/fpc/
eur-HU: ftp://ftp.hu.freepascal.org/pub/fpc/
eur-IL: http://mirror.mirimar.net/freepascal/
eur-NL: ftp://freepascal.stack.nl/mirrors/fpc/
eur-NO: ftp://ftp.no.freepascal.org/pub/fpc/
eur-RU: ftp://ftp.chg.ru/pub/lang/pascal/fpc/
Primary: ftp://ftp.freepascal.org/pub/fpc/
<<
Source: mirror:custom:/dist/%v/source/fpcbuild-%v.tar.gz
Source-MD5: af49e9a8bb632f361395add30ece8934

Source2: mirror:custom:dist/%v/bootstrap/fpc-%v.universal-darwin.bootstrap.tar.bz2
Source2-MD5: b024c3dbb43bc65aaa6d9e5d5948dbfe

SourceDirectory: fpcbuild-%v/fpcsrc

BuildDepends: fink (>= 0.24.12)
# Patch the endian problem with MOFiles in packages/fcl-base/src/gettext.pp
PatchFile: %n.patch
PatchFile-MD5: f01af3524aa65f6b2eb4eb1712a54901

CompileScript: <<
#!/bin/sh -ev

# compile the compiler
  if [ "%m" = "powerpc" ]; then archtype="-ppc" ; else archtype="-%m" ; fi
  make all PP="arch $archtype %b/../../ppcuniversal"

# compile the ide
  if [ "%m" = "powerpc" ]; then ppcarch="ppcppc" ; fi
  if [ "%m" = "i386"    ]; then ppcarch="ppc386" ; fi
  if [ "%m" = "x86_64"  ]; then ppcarch="ppcx64" ; fi
  make ide PP=%b/compiler/$ppcarch

# compile the the compiler utility msgdif
  cd compiler/utils
  %b/compiler/$ppcarch -Fu%b/rtl/units/%m-darwin msgdif.pp

<<

InfoTest: <<
  TestScript: <<
#!/bin/sh -ev
  if [ "%m" = "powerpc" ]; then ppcarch="ppcppc" ; fi
  if [ "%m" = "i386"    ]; then ppcarch="ppc386" ; fi
  if [ "%m" = "x86_64"  ]; then ppcarch="ppcx64" ; fi
  mkdir -p       freepascal-tests
  cp -R rtl      freepascal-tests
  cp -R tests    freepascal-tests
  cp -R packages freepascal-tests
  chmod -R 777   .
  cd             freepascal-tests/tests

# Executing the following does not work because of permission problems.
# If you really want to run the tests uncomment the following line and execute
# "fink --test rebuild fpc"
# Make sure there is no other version of fpc installed. 
# Depending on your path settings you may get errors about the system unit being wrong,
# The tests will take quite some time! You have been warned.

# make full TEST_FPC=%b/compiler/$ppcarch FPC=%b/compiler/$ppcarch OPT=-Fu%b/rtl/units/%m-darwin/ FPCMAKE=%b/utils/fpcm/fpcmake

<<
<<

InstallScript: <<
#!/bin/sh -ev
  if [ "%m" = "powerpc" ]; then ppcarch="ppcppc" ; fi
  if [ "%m" = "i386"    ]; then ppcarch="ppc386" ; fi
  if [ "%m" = "x86_64"  ]; then ppcarch="ppcx64" ; fi
  make install           INSTALL_PREFIX=%i       PP=%b/compiler/$ppcarch FPCMAKE=%b/utils/fpcm/fpcmake
  ln -sf ../lib/fpc/%v/$ppcarch %i/bin/$ppcarch
  make ide_install       INSTALL_PREFIX=%i       PP=%b/compiler/$ppcarch FPCMAKE=%b/utils/fpcm/fpcmake
  make -C ../install/man INSTALL_PREFIX=%i/share
  make -C ../install/doc INSTALL_PREFIX=%i/share PP=%b/compiler/$ppcarch

  install compiler/utils/msgdif %i/bin
<<

RuntimeVars: <<
FPCDIR: %p
PPC_CONFIG_PATH: %p/etc/
<<

License: GPL/LGPL

Description: Free Pascal (aka FPK Pascal) compiler

DescDetail: <<
Free Pascal (aka FPK Pascal) is a 32 and 64 bit professional Pascal
compiler. Supported processors: Intel x86, Amd64/x86 64, PowerPC, 
Sparc, ARM.
Supported operating systems: Linux, FreeBSD, Mac OS X/Darwin, 
Mac OS classic, DOS, Win32, OS/2, Netware (libc and classic) and MorphOS.

The language syntax has excellent compatibility with TP 7.0 as well as 
with most versions of Delphi (classes, rtti, exceptions, ansistrings,
widestrings, interfaces). A Mac Pascal compatibility mode is also provided
to assist users of previous Pascal compilers for the Mac. 
Furthermore, Free Pascal supports function overloading, operator 
overloading, global properties and other modern features.

http://wiki.freepascal.org/User_Changes_2.4.0 also lists changes in fpc 2.4.0.
<<

DescUsage: <<
 This Pascal compiler produces PowerPC and x86 executables, which run 
 natively on PowerPC and x86 Macs. PowerPC executables also runs in 
 Rosetta emulation on x86 Macs. 
 Use lipo to combine PowerPC and x86 binaries to universal binaries.
 get help with: fpc -h
 compile and link a Pascal file with: 

   fpc FILENAME

 For setting up the Free Pascal IDE see: 
    http://www.freepascal.org/wiki/index.php/Textmode_IDE
 For using Free Pascal with Xcode see:
    http://www.freepascal.org/xcode.html

 After uncommenting a line in fpc.info "fink --test rebuild fpc" executes 
 the test suite of the compiler.
 This takes quite some time, in particular on slow machines.
 Expect a small number of failed tests.

 For more documentation about Free Pascal in HTML and pdf, install fpc-doc
<<

DescPort: <<
 Still to do: universal binaries and 
 extra packages with dependent C libraries (gtk ...) .
<<

Homepage: http://www.freepascal.org
Maintainer: Karl-Michael Schindler <karl-michael.schindler@web.de>
