Package: fpc-config
Version: 2.4.0
Revision: 1
Architecture: powerpc, i386, x86_64
Conflicts: fpc (<= 2.0.4)
Replaces:  fpc (<= 2.0.4)
Recommends: fpc

Source: http://www.gnu.org/licenses/gpl.txt
Source-MD5: d32239bcb673463ab874e80d47fae504
Source2: http://www.gnu.org/licenses/lgpl.txt
Source2-MD5: 6a6a8e020838b23406c81b19c1d46df6

NoSourceDirectory: true

CompileScript: <<
#!/bin/sh -ev

# The version number of darwin (8 for 10.4, 9 for 10.5, ...) 
# is needed for the directories of the gcc libraries
DARWINVERSION=`uname -r|cut -f1 -d.`

# create the default fpc.cfg file
cat >%b/fpc.cfg <<EOFCFG
#
# Example fpc.cfg for Free Pascal Compiler
#

# ----------------------
# Defines (preprocessor)
# ----------------------

#
# nested #IFNDEF, #IFDEF, #ENDIF, #ELSE, #DEFINE, #UNDEF are allowed
#
# -d is the same as #DEFINE
# -u is the same as #UNDEF
#

#
# Some examples (for switches see below, and the -? helppages)
#
# Try compiling with the -dRELEASE or -dDEBUG on the commandline
#

# For a release compile with optimizes and strip debuginfo
#IFDEF RELEASE
  -O1
  -Xs
  #WRITE Compiling Release Version
#ENDIF

# For a debug version compile with debuginfo and all codegeneration checks on
#IFDEF DEBUG
  -g
  -Crtoi
  #WRITE Compiling Debug Version
#ENDIF

# set binutils prefix
#DEFINE NEEDCROSSBINUTILS

#ifdef darwin
#undef NEEDCROSSBINUTILS
#endif

#IFDEF FPC_CROSSCOMPILING
#IFDEF NEEDCROSSBINUTILS
  -XP\$FPCTARGET-
#ENDIF NEEDCROSSBINUTILS
#ENDIF FPC_CROSSCOMPILING

# ----------------
# Parsing switches
# ----------------

# Pascal language mode
#      -Mfpc      free pascal dialect (default)
#      -Mobjfpc   switch some Delphi 2 extensions on
#      -Mdelphi   tries to be Delphi compatible
#      -Mtp       tries to be TP/BP 7.0 compatible
#      -Mgpc      tries to be gpc compatible
#      -Mmacpas   tries to be compatible to the macintosh pascal dialects
#
# Turn on Object Pascal extensions by default
#-Mobjfpc

# Assembler reader mode
#      -Rdefault  use default assembler
#      -Ratt      read AT&T style assembler
#      -Rintel    read Intel style assembler
#
# All assembler blocks are AT&T styled by default
#-Ratt

# Semantic checking
#      -S2        same as -Mobjfpc
#      -Sc        supports operators like C (*=,+=,/= and -=)
#      -Sa        include assertion code.
#      -Sd        same as -Mdelphi
#      -Se<x>     error options. <x> is a combination of the following:
#         <n> : compiler stops after the <n> errors (default is 1)
#         w : compiler stops also after warnings
#         n : compiler stops also after notes
#         h : compiler stops also after hints
#      -Sg        allow LABEL and GOTO
#      -Sh        Use ansistrings
#      -Si        support C++ styled INLINE
#      -Sk        load fpcylix unit
#      -SI<x>     set interface style to <x>
#         -SIcom     COM compatible interface (default)
#         -SIcorba   CORBA compatible interface
#      -Sm        support macros like C (global)
#      -So        same as -Mtp
#      -Sp        same as -Mgpc
#      -Ss        constructor name must be init (destructor must be done)
#      -St        allow static keyword in objects
#      -Sx        enable exception keywords (default in Delphi/ObjFPC modes)
#
# Allow goto, inline, C-operators, C-vars
-Sgic

# ---------------
# Code generation
# ---------------

# Uncomment the next line if you always want static/dynamic units by default
# (can be overruled with -CD, -CS at the commandline)
#-CS
#-CD

# Set the default heapsize to 8Mb
#-Ch8000000

# Set default codegeneration checks (iocheck, overflow, range, stack)
#-Ci
#-Co
#-Cr
#-Ct

# Optimizer switches
# -Os        generate smaller code
# -O1        level 1 optimizations (quick optimizations, debuggable)
# -O2        level 2 optimizations (-O1 + optimizations which make debugging more difficult)
# -O3        level 3 optimizations (-O2 + optimizations which also may make the program slower rather than faster)
# -Op<x>     set target cpu for optimizing, see fpc -i for possible values
#
# See "fpc -i" also for more fine-grained control over which optimizations
# to perform

# -----------------------
# Set Filenames and Paths
# -----------------------

# Slashes are also allowed under dos

# path to the messagefile, not necessary anymore but can be used to override
# the default language
#-Fr%p/lib/fpc/\$fpcversion/msg/errore.msg
#-Fr%p/lib/fpc/\$fpcversion/msg/errorn.msg

# searchpath for includefiles
#-Fi/pp/inc;/pp/rtl/inc

# searchpath for units and other system dependent things
-Fu%p/lib/fpc/%v/units/\$FPCTARGET/*
#-Fu~/fpc/rtl/units/

# searchpath for libraries
#ifdef cpux86_64
-Fl/usr/lib/gcc/i686-apple-darwin$DARWINVERSION/4.2.1/x86_64
-Fl/usr/lib/gcc/i686-apple-darwin$DARWINVERSION/4.0.1/x86_64
#endif
#ifdef cpupowerpc
-Fl/usr/lib/gcc/powerpc-apple-darwin$DARWINVERSION/4.2.1
-Fl/usr/lib/gcc/powerpc-apple-darwin$DARWINVERSION/4.0.1
#endif
#ifdef cpupowerpc64
-Fl/usr/lib/gcc/powerpc-apple-darwin$DARWINVERSION/4.2.1/ppc64
-Fl/usr/lib/gcc/powerpc-apple-darwin$DARWINVERSION/4.0.1/ppc64
#endif
#ifdef cpui386
-Fl/usr/lib/gcc/i686-apple-darwin$DARWINVERSION/4.2.1
-Fl/usr/lib/gcc/i686-apple-darwin$DARWINVERSION/4.0.1
#endif

#-Fl/opt/lib
#-Fl/pp/lib
#-Fl/lib

-Fl/usr/lib

-Fl/usr/X11/lib
-Fl/usr/X11R6/lib

-Fl%p/lib

# -------------
# Linking
# -------------

# generate always debugging information for GDB (slows down the compiling
# process)
#      -gc        generate checks for pointers
#      -gd        use dbx
#      -gg        use gsym
#      -gh        use heap trace unit (for memory leak debugging)
#      -gl        use line info unit to show more info for backtraces
#      -gv        generates programs tracable with valgrind
#      -gw        generate dwarf debugging info
#
# Enable debuginfo and use the line info unit by default
#-gl

# always pass an option to the linker
#-k-s

# Always strip debuginfo from the executable
#-Xs

# -------------
# Miscellaneous
# -------------

# Write always a nice FPC logo ;)
-l

# Verbosity
#      e : Show errors (default)       d : Show debug info
#      w : Show warnings               u : Show unit info
#      n : Show notes                  t : Show tried/used files
#      h : Show hints                  c : Show conditionals
#      i : Show general info           d : Show debug info
#      l : Show linenumbers            r : Rhide/GCC compatibility mode
#      a : Show everything             x : Executable info (Win32 only)
#      b : Write file names messages with full path
#      v : write fpcdebug.txt with     p : Write tree.log with parse tree
#          lots of debugging info
#
# Display Info, Warnings and Notes
-viwn
# If you don't want so much verbosity use
#-vw

#
# That's all folks
#
EOFCFG
<<

InstallScript: <<
#!/bin/sh -ev
  mkdir %i/etc
  install -c -m 644 %b/fpc.cfg %i/etc/
<<

ConfFiles: %p/etc/fpc.cfg

DocFiles: gpl.txt lgpl.txt

License: GPL/LGPL

Description: Free Pascal compiler configuration

DescDetail: <<
This package sets up the Free Pascal compiler configuration file 
(%p/etc/fpc.cfg)
<<

DescUsage: <<
Only used by Free Pascal compilers and crosscompilers.
Remove this file through "fink purge fpc-config".
<<

DescPort: <<
 -Fu%p/lib/fpc/%v/units/\$FPCTARGET/*
 is important that units of different targets are found.
 The "\" is important otherwise the shell tries to replace it 
 with the content of the variable FPCTARGET which does not exist.
<<

Homepage: http://www.freepascal.org
Maintainer: Karl-Michael Schindler <karl-michael.schindler@web.de>
