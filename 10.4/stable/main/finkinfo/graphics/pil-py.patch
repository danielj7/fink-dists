--- Imaging/setup.py.orig	2006-09-24 06:20:39.000000000 -0600
+++ Imaging/setup.py	2006-09-24 06:21:30.000000000 -0600
@@ -119,11 +119,11 @@
 
         if sys.platform == "darwin":
             # attempt to make sure we pick freetype2 over other versions
-            add_directory(include_dirs, "/sw/include/freetype2")
-            add_directory(include_dirs, "/sw/lib/freetype2/include")
+            add_directory(include_dirs, "@PREFIX@/include/freetype2")
+            add_directory(include_dirs, "@PREFIX@/lib/freetype2/include")
             # fink installation directories
-            add_directory(library_dirs, "/sw/lib")
-            add_directory(include_dirs, "/sw/include")
+            add_directory(library_dirs, "@PREFIX@/lib")
+            add_directory(include_dirs, "@PREFIX@/include")
 
         # FIXME: check /opt/stuff directories here?
 
@@ -177,11 +177,11 @@
         #
         # add standard directories
 
-        add_directory(library_dirs, "/usr/local/lib")
-        add_directory(include_dirs, "/usr/local/include")
+        #add_directory(library_dirs, "/usr/local/lib")
+        #add_directory(include_dirs, "/usr/local/include")
 
-        add_directory(library_dirs, "/usr/lib")
-        add_directory(include_dirs, "/usr/include")
+        #add_directory(library_dirs, "/usr/lib")
+        #add_directory(include_dirs, "/usr/include")
 
         #
         # insert new dirs *before* default libs, to avoid conflicts
@@ -286,30 +286,30 @@
                 "_imagingtiff", ["_imagingtiff.c"], libraries=["tiff"]
                 ))
 
-        if sys.platform == "darwin":
-            # locate Tcl/Tk frameworks
-            frameworks = []
-            framework_roots = [
-                "/Library/Frameworks",
-                "/System/Library/Frameworks"
-                ]
-            for root in framework_roots:
-                if (os.path.exists(os.path.join(root, "Tcl.framework")) and
-                    os.path.exists(os.path.join(root, "Tk.framework"))):
-                    print "--- using frameworks at", root
-                    frameworks = ["-framework", "Tcl", "-framework", "Tk"]
-                    dir = os.path.join(root, "Tcl.framework", "Headers")
-                    add_directory(self.compiler.include_dirs, dir, 0)
-                    dir = os.path.join(root, "Tk.framework", "Headers")
-                    add_directory(self.compiler.include_dirs, dir, 1)
-                    break
-            if frameworks:
-                exts.append(Extension(
-                    "_imagingtk", ["_imagingtk.c", "Tk/tkImaging.c"],
-                    extra_compile_args=frameworks, extra_link_args=frameworks
-                    ))
-                feature.tcl = feature.tk = 1 # mark as present
-        elif feature.tcl and feature.tk:
+        #if sys.platform == "darwin":
+        #    # locate Tcl/Tk frameworks
+        #    frameworks = []
+        #    framework_roots = [
+        #        "/Library/Frameworks",
+        #        "/System/Library/Frameworks"
+        #        ]
+        #    for root in framework_roots:
+        #        if (os.path.exists(os.path.join(root, "Tcl.framework")) and
+        #            os.path.exists(os.path.join(root, "Tk.framework"))):
+        #            print "--- using frameworks at", root
+        #            frameworks = ["-framework", "Tcl", "-framework", "Tk"]
+        #            dir = os.path.join(root, "Tcl.framework", "Headers")
+        #            add_directory(self.compiler.include_dirs, dir, 0)
+        #            dir = os.path.join(root, "Tk.framework", "Headers")
+        #            add_directory(self.compiler.include_dirs, dir, 1)
+        #            break
+        #    if frameworks:
+        #        exts.append(Extension(
+        #            "_imagingtk", ["_imagingtk.c", "Tk/tkImaging.c"],
+        #            extra_compile_args=frameworks, extra_link_args=frameworks
+        #            ))
+        #        feature.tcl = feature.tk = 1 # mark as present
+        if feature.tcl and feature.tk:
             exts.append(Extension(
                 "_imagingtk", ["_imagingtk.c", "Tk/tkImaging.c"],
                 libraries=[feature.tcl, feature.tk]
