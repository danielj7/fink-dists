diff -uNr compiler-rt-3.7.0.src.orig/CMakeLists.txt compiler-rt-3.7.0.src/CMakeLists.txt
--- compiler-rt-3.7.0.src.orig/CMakeLists.txt	2015-07-03 09:43:58.000000000 -0400
+++ compiler-rt-3.7.0.src/CMakeLists.txt	2015-07-03 18:25:04.000000000 -0400
@@ -302,7 +302,7 @@
   else()
     set(SANITIZER_MIN_OSX_VERSION 10.9)
     if(IOSSIM_SDK_DIR)
-      list(APPEND SANITIZER_COMMON_SUPPORTED_OS iossim)
+  #    list(APPEND SANITIZER_COMMON_SUPPORTED_OS iossim)
     endif()
   endif()
   if(SANITIZER_MIN_OSX_VERSION VERSION_LESS "10.7")
diff -uNr compiler-rt-3.7.0.src.orig/lib/link-asm-libclang_rt.sh compiler-rt-3.7.0.src/lib/link-asm-libclang_rt.sh
--- compiler-rt-3.7.0.src.orig/lib/link-asm-libclang_rt.sh	1969-12-31 19:00:00.000000000 -0500
+++ compiler-rt-3.7.0.src/lib/link-asm-libclang_rt.sh	2015-07-03 17:28:30.000000000 -0400
@@ -0,0 +1,27 @@
+#!/bin/sh
+# Utility script for linking assembled objects into libclang_rt
+# rationale: cmake build fails to include .S files
+# usage: define the following variables and source this script, call function
+
+# variables needed by the following function
+# CC= compiler that will invoke assembler
+# arch={ppc,i386,...}
+# builddir=.../projects/compiler-rt/lib (relative to where function is called)
+# crtsrcdir=.../compiler-rt.git (absolute path)
+# objdir=CMakeFiles/clang_rt.$arch.dir/$arch (relative to builddir)
+# libcrt=$libdir/libclang_rt.$arch.a
+
+assemble_clang_rt() {
+pushd $builddir
+mkdir -p $objdir
+for f in $crtsrcdir/lib/builtins/$arch/*.S
+do      
+        b=`basename $f`
+	echo "Assembling $arch/$b."
+        $CC -arch $arch -c $f -o $objdir/$b.o
+done
+echo "Updating static library $libcrt."
+ar cru $libcrt $objdir/*.S.o
+popd
+}
+
