diff -ruN cdirip-0.6.2/2dos cdirip-0.6.2.new/2dos
--- cdirip-0.6.2/2dos	1969-12-31 19:00:00.000000000 -0500
+++ cdirip-0.6.2.new/2dos	2002-12-14 23:22:09.000000000 -0500
@@ -0,0 +1 @@
+find -X . -type f \! -name "*.o" -print | xargs perl -p -i -e 's/\n/\r\n/;'
diff -ruN cdirip-0.6.2/2unix cdirip-0.6.2.new/2unix
--- cdirip-0.6.2/2unix	1969-12-31 19:00:00.000000000 -0500
+++ cdirip-0.6.2.new/2unix	2002-12-14 23:22:09.000000000 -0500
@@ -0,0 +1 @@
+find . -type f \! -name "*.o" -print | xargs perl -p -i -e 's/\r\n/\n/;'
diff -ruN cdirip-0.6.2/Makefile.linux cdirip-0.6.2.new/Makefile.linux
--- cdirip-0.6.2/Makefile.linux	2002-12-14 23:24:18.000000000 -0500
+++ cdirip-0.6.2.new/Makefile.linux	2002-12-14 23:22:09.000000000 -0500
@@ -1,6 +1,6 @@
 #####################################
 #                                   #
-#  Makefile for CDIrip
+#  Makefile for CDIrip              #
 #  Generated by Bloodshed Dev-C++   #
 #                                   #
 #####################################
@@ -9,14 +9,14 @@
 # Compiler
 CC=gcc
 # Parameters given to the compiler
-CFLAGS=-s -O1  -I/usr/include -I/include    
+CFLAGS=-Os -I/usr/include -I/include    
 # Output filename (*.exe)
 OUTPUT=cdirip
 
 # Source files
-SRCS=cdirip.c buffer.c cdi.c common.c 
+SRCS=cdirip.c buffer.c cdi.c common.c audio.c
 # Output object files (*.o)
-OBJS=cdirip.o buffer.o cdi.o common.o
+OBJS=cdirip.o buffer.o cdi.o common.o audio.o
 
 # Standard targets
 
@@ -31,7 +31,6 @@
 	./$(OUTPUT)
 
 clean:
-	del *.o
+	rm -f *.o
 
 mrproper: clean
-
diff -ruN cdirip-0.6.2/cdirip.c cdirip-0.6.2.new/cdirip.c
--- cdirip-0.6.2/cdirip.c	2002-12-14 23:24:18.000000000 -0500
+++ cdirip-0.6.2.new/cdirip.c	2002-12-14 23:22:09.000000000 -0500
@@ -14,14 +14,15 @@
 #include "audio.h"
 
 // Linux add-ons by Pedro Melo
+// Code tweaks and more docs by Chris Zubrzycki
 
 #ifndef _WIN32
 #define MAX_PATH PATH_MAX
-#endif
+#endif /*_WIN32*/
 
 #ifdef __BORLANDC__
 #define strcasecmp stricmp
-#endif
+#endif /*__BORLANDC__*/
 
 // Global variables
 
@@ -59,7 +60,7 @@
 opts.convert = ISO_FORMAT;  // Linux only!
 #else
 opts.convert = DEFAULT_FORMAT;
-#endif
+#endif /*_WIN32*/
 
 if (argc >= 2)
    {
@@ -69,7 +70,7 @@
      if (argv[i][0] == '/' || argv[i][0] == '-')
 #else
      if (argv[i][0] == '-')    // Linux absolute paths start with '/'
-#endif
+#endif /*_WIN32*/
       {
       if (!strcasecmp(argv[i]+1,"iso"    )) opts.convert   = ISO_FORMAT;
       if (!strcasecmp(argv[i]+1,"bin"    )) opts.convert   = BIN_FORMAT;
@@ -105,9 +106,30 @@
       ExitProcess(0);
       }
 #else
-   printf("Error: Bad syntax\n\nUsage: cdirip image.cdi [dest_path] [options]\n");  // Linux only
+   printf("Error: Bad syntax\n\nUsage: cdirip image.cdi [dest_path] [options]\n\n");  // Linux only
+   printf("Options are as follows:\n\n");
+   printf("\t-cdredord:      creates cdrecord compatabile ISO and WAV tracks (same as -cutall -iso)\n");
+   printf("\t-winoncd:       creates winoncd compatabile ISO and RAW tracks (same as -cutall -iso -raw)\n");
+   printf("\t-fireburner:    creates fireburner BIN/CUE files (same as -cutall -bin)\n\n");
+   printf("Data Options\n");
+   printf("\t-iso:           creates ISO data tracks, with a 2048 tracksize\n");
+   printf("\t-bin:           creates bin/cue files, defaults to wav audio [default]\n");
+   printf("\t-mac:           creates Toast compatabile ISO files, with a 2056 tracksize\n");
+   printf("Audio Options\n");
+   printf("\t-raw:           copies audio in RAW format (headerless files to be used for cd writers)\n");
+   printf("\t-cda:           copies audio in CDA format (MSB by default)\n");
+   printf("\t-wav:           copies audio in WAV format [default]\n");
+   printf("\t-aiff:          copies audio in AIFF format (MSB by default)\n");
+   printf("\t-cut:           cuts the length of the first track by 2 sectors?\n");
+   printf("\t-cutall:        cuts the length of all tracks by 2 sectors?\n");
+   printf("\t-full:          don't cut?\n");
+   printf("\t-swap:          swaps the byte order\n");
+   printf("\t-speed:         shows the speed (Windows/DOS only)\n");
+   printf("\t-pregap:        preserves the pregap\n");
+   printf("\t-info:          quiet mode?\n");
+
    exit(EXIT_FAILURE);
-#endif
+#endif /*_WIN32*/
    }
 else
    strcpy(filename, argv[1]);
@@ -173,7 +195,7 @@
       printf("Destination path: '%s'\n", destpath);
       if (chdir(destpath) != 0) error_exit(ERR_PATH, destpath);
       }
-#endif
+#endif /*_WIN32*/
    }
 
 // Sets proper audio format
@@ -424,7 +446,7 @@
 
 #ifdef _WIN32
 LARGE_INTEGER Frequency, old_count;
-#endif
+#endif /*_WIN32*/
 
 struct buffer_s read_buffer;
 struct buffer_s write_buffer;
@@ -435,7 +457,7 @@
      QueryPerformanceFrequency(&Frequency);
      QueryPerformanceCounter(&old_count);
      }
-#endif
+#endif /*_WIN32*/
 
      fseek(fsource, track->position, SEEK_SET);
 
@@ -542,7 +564,7 @@
         {
 #ifndef DEBUG_CDI
               if (!(i%128)) show_counter (i, track_length, image->length, ftell(fsource));
-#endif
+#endif /*DEBUG_CDI*/
               BufRead (buffer, track->sector_size, &read_buffer, image->length);
 
               if (track->mode == 0 && opts->swap)
@@ -567,7 +589,7 @@
 
 #ifdef _WIN32
               if (opts->showspeed && !((i+1)%SHOW_INTERVAL)) show_speed (track->sector_size, Frequency, &old_count);
-#endif
+#endif /*_WIN32*/
         }
 
      printf("\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"
@@ -626,7 +648,7 @@
         *old_count = PerformanceCount;
 }
 
-#endif
+#endif /*_WIN32*/
 
 
 //////////////////////////////////////////////////////////////////////////////
@@ -720,7 +742,7 @@
 
 #ifdef __BORLANDC__
      ofn.lStructSize = OPENFILENAME_SIZE_VERSION_400;
-#else
+#else /*__BORLANDC__*/
      ofn.lStructSize = sizeof(ofn);
 #endif
      ofn.hwndOwner = hWnd;
@@ -743,7 +765,7 @@
      return 0;
 }
 
-#endif
+#endif /*_WIN32*/
 
 
 //////////////////////////////////////////////////////////////////////////////
@@ -795,5 +817,4 @@
 
 }
 
-#endif
-
+#endif /*_WIN32*/
diff -ruN cdirip-0.6.2/cdirip.h cdirip-0.6.2.new/cdirip.h
--- cdirip-0.6.2/cdirip.h	2002-12-14 23:24:18.000000000 -0500
+++ cdirip-0.6.2.new/cdirip.h	2002-12-14 23:22:09.000000000 -0500
@@ -54,7 +54,7 @@
 int askfilename(char *string);
 int askpath(char *sz_buf);
 void show_speed (unsigned long sector_size, LARGE_INTEGER Frequency, LARGE_INTEGER *old_count);
-#endif
+#endif /*_WIN32*/
 
 
 // Strings
@@ -77,8 +77,6 @@
 static char STR_TAUDIO_AIFF_FILENAME [ ] = "taudio%02d.aiff";
 static char STR_TDATA_ISO_FILENAME   [ ] = "tdata%02d.iso";
 static char STR_TDATA_BIN_FILENAME   [ ] = "tdata%02d.bin";
-#endif
+#endif /*_WIN32*/
 
-
-
-#endif
+#endif /* __CDIRIP_H__*/
diff -ruN cdirip-0.6.2/common.c cdirip-0.6.2.new/common.c
--- cdirip-0.6.2/common.c	2002-12-14 23:24:18.000000000 -0500
+++ cdirip-0.6.2.new/common.c	2002-12-14 23:22:09.000000000 -0500
@@ -21,7 +21,7 @@
 #else
      for (i = 0; i < length; i++)
          if (!fread(&(tmp[i]), 1, 1, fsource)) return 0; // error
-#endif
+#endif /*BIG_ENDIN*/
 
 return 1; // success
 }
@@ -39,7 +39,7 @@
 #else
      for (i = length; i > 0; i--)
          if (!fread(&(tmp[i-1]), 1, 1, fsource)) return 0; // error
-#endif
+#endif /*BIG_ENDIN*/
 
 return 1; // success
 }
@@ -57,7 +57,7 @@
 #else
      for (i = 0; i < length; i++)
          if (!fwrite(&(tmp[i]), 1, 1, fdest)) return 0; // error
-#endif
+#endif /*BIG_ENDIN*/
 
 return 1; // success
 }
@@ -75,7 +75,7 @@
 #else
      for (i = length; i > 0; i--)
          if (!fwrite(&(tmp[i-1]), 1, 1, fdest)) return 0; // error
-#endif
+#endif /*BIG_ENDIN*/
 
 return 1; // success
 }
@@ -88,7 +88,7 @@
 
 #ifdef _WIN32
 HWND hWnd = NULL;
-#endif
+#endif /*_WIN32*/
 
     if (errcode != ERR_GENERIC)
        printf("\n%s: %s\n", string, strerror(errno));  // string is used as Filename
@@ -96,16 +96,16 @@
     switch(errcode)
           {
           case ERR_OPENIMAGE:
-                   strcpy(errmessage, "File not found\n\nYou may have typed a wrong name or path to source CDI image");
+                   strcpy(errmessage, "File not found\n\nYou may have typed a wrong name or path to source CDI image\n");
                    break;
           case ERR_SAVETRACK:
-                   strcpy(errmessage, "Could not save track");
+                   strcpy(errmessage, "Could not save track\n");
                    break;
           case ERR_READIMAGE:
-                   strcpy(errmessage, "Error reading image");
+                   strcpy(errmessage, "Error reading image\n");
                    break;
           case ERR_PATH:
-                   strcpy(errmessage, "Could not find destination path");
+                   strcpy(errmessage, "Could not find destination path\n");
                    break;
           case ERR_GENERIC:
           default: strcpy(errmessage, string);          // string is used as Error message
@@ -117,6 +117,6 @@
 #else
     printf(errmessage);
     exit(EXIT_FAILURE);
-#endif
+#endif /*_WIN32*/
 
 }
diff -ruN cdirip-0.6.2/common.h cdirip-0.6.2.new/common.h
--- cdirip-0.6.2/common.h	2002-12-14 23:24:18.000000000 -0500
+++ cdirip-0.6.2.new/common.h	2002-12-14 23:22:09.000000000 -0500
@@ -16,7 +16,6 @@
 // #define DEBUG_CDI
 
 
-
 /* Basic structures */
 
 typedef struct image_s
@@ -57,4 +56,4 @@
 
 void error_exit(long errcode, char *string);
 
-#endif
+#endif /*__COMMON_H__*/
