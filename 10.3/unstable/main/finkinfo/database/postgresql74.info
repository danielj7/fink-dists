Package: postgresql74
Version: 7.4.3
Revision: 21
GCC: 3.3
CustomMirror: <<
  asi-JP: ftp://ftp.jp.postgresql.org
  asi-JP: ftp://ftp6.jp.postgresql.org/postgresql
  asi-KR: ftp://ftp.kr.postgresql.org/mirror/database/postgresql
  asi-TW: ftp://ftp.tw.postgresql.org/pub/postgresql
  asi-TW: ftp://ftp3.tw.postgresql.org/pub/postgresql
  asi-TW: ftp://ftp5.tw.postgresql.org/pub/Unix/Database/PostgreSQL
  aus-AU: ftp://ftp.au.postgresql.org/pub/postgresql
  eur-AT: ftp://ftp.at.postgresql.org/db/www.postgresql.org/pub
  eur-BE: ftp://ftp.be.postgresql.org/postgresql
  eur-CH: ftp://ftp2.ch.postgresql.org/mirror/postgresql
  eur-CZ: ftp://ftp2.cz.postgresql.org/pub/postgresql
  eur-DE: ftp://ftp2.de.postgresql.org/pub/comp/os/unix/database/postgresql
  eur-DE: ftp://ftp3.de.postgresql.org/pub/Mirrors/ftp.postgresql.org
  eur-DE: ftp://ftp4.de.postgresql.org/pub/postgresql
  eur-DK: ftp://ftp.dk.postgresql.org/mirrors/postgresql
  eur-DK: ftp://ftp2.dk.postgresql.org/pub/PostgreSQL
  eur-EE: ftp://ftp.ee.postgresql.org/mirrors/postgresql
  eur-ES: ftp://ftp5.es.postgresql.org/mirror/postgresql
  eur-FR: ftp://ftp.fr.postgresql.org
  eur-FR: ftp://ftp2.fr.postgresql.org/postgresql
  eur-IE: ftp://ftp.ie.postgresql.org/mirrors/ftp.postgresql.org/pub
  eur-IE: ftp://ftp2.ie.postgresql.org/mirrors/ftp.postgresql.org
  eur-IS: ftp://ftp2.is.postgresql.org/pub/postgresql
  eur-IT: ftp://ftp2.it.postgresql.org/mirrors/postgres
  eur-IT: ftp://ftp3.it.postgresql.org/postgresql
  eur-NL: ftp://ftp.nl.postgresql.org:21/pub/mirror/postgresql
  eur-NL: ftp://ftp2.nl.postgresql.org/mirror/postgresql
  eur-NL: ftp://ftp4.nl.postgresql.org/postgresql.zeelandnet.nl
  eur-NO: ftp://ftp.no.postgresql.org/pub/databases/postgresql
  eur-PL: ftp://ftp7.pl.postgresql.org/pub/mirror/ftp.postgresql.org
  eur-RO: ftp://ftp6.ro.postgresql.org/pub/mirrors/ftp.postgresql.org
  eur-RU: ftp://ftp3.ru.postgresql.org/pub/mirror/postgresql/pub
  eur-SE: ftp://ftp.se.postgresql.org/pub/database/relational/postgresql
  eur-TR: ftp://ftp.tr.postgresql.org/pub/SQL/postgresql
  nam-CA: ftp://ftp3.ca.postgresql.org/pub
  nam-US: ftp://ftp10.us.postgresql.org/pub/postgresql
  nam-US: ftp://ftp15.us.postgresql.org
  nam-US: ftp://ftp5.us.postgresql.org/pub/PostgreSQL
  nam-US: ftp://ftp8.us.postgresql.org/pub/pgsql
  nam-US: ftp://ftp9.us.postgresql.org/pub/mirrors/postgresql
  sam-BR: ftp://ftp.br.postgresql.org/pub/PostgreSQL
  sam-CR: ftp://ftp2.cr.postgresql.org/pub/Unix/postgres
<<
Source: mirror:custom:source/v%v/postgresql-%v.tar.bz2
Source-MD5: 204d8ab0c51d9691da2bd986ddbdc477
Source2: mirror:custom:odbc/versions/src/psqlodbc-07.03.0100.tar.gz
Source2-MD5: 8967ea8ca49397f97d016e4db8a047a7
Source3: ftp://gborg.postgresql.org/pub/libpqpp/stable/libpq++-4.0.tar.gz
Source3-MD5: da71cb79ef45cef55f4bc97a33a0857d
Source4: ftp://gborg.postgresql.org/pub/libpqxx/stable/libpqxx-1.5.1.tar.gz
Source4-MD5: 3c0f2b5a89ece20e7a84808c594dd7aa
Source5: ftp://gborg.postgresql.org/pub/libpqxx/stable/libpqxx-2.2.3.tar.gz
Source5-MD5: 02d34b97dc77c51ef8c54eea6965fc91
Source6: ftp://gborg.postgresql.org/pub/pgeasy/stable/libpgeasy-3.0.4.tar.gz
Source6-MD5: 5aaf078d069c8878588cd2bc7c3a5bc5
BuildDepends: readline, autoconf2.5
Conflicts: postgresql-ssl, postgresql (<< %v-%r), postgresql73 (<< 7.3.4-14), postgresql73-ssl (<< 7.3.4-14)
Replaces: postgresql (<< %v-%r), postgresql-shlibs, postgresql-ssl-shlibs, postgresql-ssl, postgresql-python (<< 7.3), postgresql-ssl-python (<< 7.3), postgresql-perl (<< 7.3), postgresql-ssl-perl (<< 7.3), %N, %N-ssl, postgresql73 (<< 7.3.4-14), postgresql73-ssl (<< 7.3.4-14)
Depends: readline-shlibs (>= 4.3-5), passwd (>= 20030906-1), daemonic (>= 20010902-1), postgresql74-shlibs (>= %v-%r)
Description: PostgreSQL open-source database
PatchScript: sed -e 's|@BUILDDIR@|%b|g' -e 's|@INSTPREFIX@|%p|g' < %a/%n.patch | patch -p1
NoSetMAKEFLAGS: true
SetMAKEFLAGS: -j1
ConfigureParams: --prefix=%p --docdir=%p/share/doc --mandir=%p/share/man --enable-multibyte --enable-recode --with-CXX --without-perl --without-python --without-openssl --with-libraries=%p/lib --with-includes=%p/include --without-tcl --without-tk --without-java --enable-odbc --with-pam --with-rendezvous --enable-syslog
CompileScript: <<
#!/bin/sh -xe

  export CPPFLAGS="-I%p/include/gnugetopt -I%i/include/postgresql -I%i/include -I%p/include -DHAVE_OPTRESET"
  export LDFLAGS="-L%i/lib -L%p/lib"
  export SHELL="/bin/sh -xe"

  # postgresql
  autoconf && \
  perl -pi -e 's,hardcode_direct=yes,hardcode_direct=no,g' configure && \
  ./configure %c && \
  make includedir=%p/include/postgresql includedir_internal=%p/include/postgresql/internal includedir_server=%p/include/postgresql && \
  make install install-all-headers includedir=%p/include/postgresql includedir_internal=%p/include/postgresql/internal includedir_server=%p/include/postgresql DESTDIR=%d INSTALLSITEMAN3DIR=%i/share/man/man3 || exit 1

  export PATH="%i/bin:$PATH"
  export DYLD_LIBRARY_PATH="%i/lib:$DYLD_LIBRARY_PATH"
  export CPPFLAGS="-I%i/include/postgresql -I%i/include $CPPFLAGS"
  export LDFLAGS="-L%i/lib $LDFLAGS"

  # libpq++
  pushd ../libpq++-4.0 && \
  sed 's|@INSTPREFIX@|%p|g' %a/libpqpp-4.0.patch | patch -p1 && \
  make DESTDIR=%d || exit 2
  popd

  pushd ../libpqxx-2.2.3 && \
  sed 's|@INSTPREFIX@|%i|g' %a/libpqxx.patch | patch -p1 && \
  perl -pi -e 's,hardcode_direct=yes,hardcode_direct=no,g' configure && \
  ./configure --prefix=%p --mandir=%p/share/man --enable-shared && \
  make CC="g++" CPP="g++ -E" includedir=%p/include/postgresql/pqxx-2 || exit 3
  cat <<END >libpqxx.pc
prefix=/%p
exec_prefix=\${prefix}
libdir=\${exec_prefix}/lib
includedir=\${prefix}/include

Name: libpqxx
Description: a C++ API to the PostgreSQL database management system.
Version: 2.2.3
Libs: -L\${libdir} -lpqxx-2
Cflags: -I\${exec_prefix}/include/postgresql -I\${exec_prefix}/include/pqxx-2
END
  perl -pi -e 's,%d,,g' pqxx-config
  perl -pi -e 's,-lpqxx,-lpqxx-2,g' pqxx-config
  perl -pi -e 's,-I%p/include/postgresql,-I%p/include/postgresql -I%p/include/pqxx-2,g' pqxx-config
  popd

  # libpqxx
  pushd ../libpqxx-1.5.1 && \
  sed 's|@INSTPREFIX@|%i|g' %a/libpqxx.patch | patch -p1 && \
  perl -pi -e 's,hardcode_direct=yes,hardcode_direct=no,g' configure && \
  ./configure --prefix=%p --mandir=%p/share/man --with-postgres-include=%i/include/postgresql --with-postgres-lib=%i/lib --enable-shared && \
  make CC="g++" CPP="g++ -E" includedir=%p/include/postgresql/pqxx || exit 4
  popd

  #sed 's|@INSTPREFIX@|%p|g' %a/libpgeasy-3.0.4.patch | patch -p1 && \
  # pgeasy
  pushd ../libpgeasy-3.0.4 && \
  perl -pi -e 's,hardcode_direct=yes,hardcode_direct=no,g' configure && \
  ./configure --prefix=%p --mandir=%p/share/man --with-postgres-include=%i/include/postgresql --with-postgres-lib=%i/lib --enable-shared && \
  make DESTDIR=%d || exit 5
  popd

  # odbc
  pushd ../psqlodbc-07.03.0100 && \
  perl -pi -e 's,hardcode_direct=yes,hardcode_direct=no,g' configure && \
  ./configure --enable-pthreads --prefix=%p --with-pic --enable-shared && \
  make || exit 6
  popd

<<
InstallScript: <<
#!/bin/sh -xe

  export SHELL="/bin/sh -xe"

  # postgresql
  make install install-all-headers includedir=%p/include/postgresql includedir_internal=%p/include/postgresql/internal includedir_server=%p/include/postgresql DESTDIR=%d INSTALLSITEMAN3DIR=%i/share/man/man3 || exit 10

  find %i/share -ls > /tmp/sharefiles-postgresql.txt
  mv %i/share/doc/postgresql-7.4 %i/share/doc/%N >/dev/null 2>&1

  # libpq++
  pushd ../libpq++-4.0
  make install DESTDIR=%d || exit 11
  popd

  find %i/share -ls > /tmp/sharefiles-libpqpp.txt

  # libpqxx
  pushd ../libpqxx-2.2.3
  make install DESTDIR=%d includedir=%p/include/postgresql/pqxx-2 || exit 12
  mv %i/bin/pqxx-config %i/bin/pqxx-config2
  mv %i/lib/libpqxx.a %i/lib/libpqxx-2.a
  mv %i/lib/libpqxx.la %i/lib/libpqxx-2.la
  popd

  find %i/share -ls > /tmp/sharefiles-libpqxx2.txt

  pushd ../libpqxx-1.5.1
  make install DESTDIR=%d includedir=%p/include/postgresql/pqxx || exit 13
  popd

  find %i/share -ls > /tmp/sharefiles-libpqxx1.txt

  # pgeasy
  pushd ../libpgeasy-3.0.4
  make install DESTDIR=%d || exit 14
  popd

  find %i/share -ls > /tmp/sharefiles-libpgeasy.txt

  # odbc
  pushd ../psqlodbc-07.03.0100
  make install DESTDIR=%d libdir=%p/lib/postgresql-7.4 || exit 15
  popd

  find %i/share -ls > /tmp/sharefiles-psqlodbc.txt

  mv %i/share/psqlodbc/* %i/share/doc/%N/
  rm -rf %i/share/psqlodbc

  ranlib %i/lib/*.a

  install -d -m 755 %i/share/doc/%N
  cp -R contrib %i/share/doc/%N/contrib

  install -d -m 755 %i/bin
  install -c -m 755 pgsql.sh %i/bin/

  install -d -m 755 %i/var/postgresql-7.4
  echo "be sure to back up this database before any upgrades!" >> %i/var/postgresql-7.4/README

  for file in `ls -1 %i/bin/`; do
    mv "%i/bin/${file}" "%i/bin/${file}-7.4"
    echo "${file}" >> %i/var/postgresql-7.4/binary.list
  done

  for file in `ls -1 %i/share/man/man1/`; do
    mv "%i/share/man/man1/${file}" "%i/share/man/man1/${file}-7.4"
    echo "${file}" >> %i/var/postgresql-7.4/man1.list
  done

  for file in `ls -1 %i/share/man/man7/`; do
    mv "%i/share/man/man7/${file}" "%i/share/man/man7/${file}-7.4"
    echo "${file}" >> %i/var/postgresql-7.4/man7.list
  done

  rm -rf %i/lib/libpq.3.dylib

  cat <<END > %i/var/postgresql-7.4/remove-alternatives.sh
#!/bin/sh

for arg in "\$@"; do
	case \$arg in
		-h|--h|--he|--hel|--help)
			echo "usage: \$0 [-h]"
			echo ""
			echo "  -h, --help          this help"
			echo ""
			exit 0;
			;;
		*)
			echo "\$0: unknown argument '\$arg'"
			exit 1;
			;;
	esac
done

#echo update-alternatives --remove "libpq.3.dylib" "%p/lib/libpq.3.1.dylib"
     update-alternatives --remove "libpq.3.dylib" "%p/lib/libpq.3.1.dylib"

for tuple in %p/bin:binary.list %p/share/man/man1:man1.list %p/share/man/man7:man7.list; do
	TUPLE_PATH=\`echo \$tuple | cut -d: -f1\`
	TUPLE_FILE=\`echo \$tuple | cut -d: -f2\`

	for file in \`cat %p/var/postgresql-7.4/\${TUPLE_FILE}\`; do
#		echo update-alternatives --remove "\${file}" "\${TUPLE_PATH}/\${file}-7.4"
		     update-alternatives --remove "\${file}" "\${TUPLE_PATH}/\${file}-7.4"
	done
done

END

  cat <<END > %i/var/postgresql-7.4/update-alternatives.sh
#!/bin/sh

FORCE=0

for arg in "\$@"; do
	case \$arg in
		-h|--h|--he|--hel|--help)
			echo "usage: \$0 [-h] [-f]"
			echo ""
			echo "  -h, --help          this help"
#			echo "  -f, --force         force this version of PostgreSQL, even if there is a newer one"
			echo ""
			exit 0;
			;;
#		-f|--f|--fo|--for|--forc|--force)
#			FORCE=1
#			;;
		*)
			echo "\$0: unknown argument '\$arg'"
			exit 1;
			;;
	esac
done

if [ -e "%p/lib/libpq.3.1.dylib" ]; then
#	echo update-alternatives --install "%p/lib/libpq.4.dylib" "libpq.3.dylib" "%p/lib/libpq.3.1.dylib" 74
	     update-alternatives --install "%p/lib/libpq.3.dylib" "libpq.3.dylib" "%p/lib/libpq.3.1.dylib" 74
else
	echo "WARNING: %p/lib/libpq.3.1.dylib does not exist"
fi

for tuple in %p/bin:binary.list %p/share/man/man1:man1.list %p/share/man/man7:man7.list; do
	TUPLE_PATH=\`echo \$tuple | cut -d: -f1\`
	TUPLE_FILE=\`echo \$tuple | cut -d: -f2\`

	for file in \`cat %p/var/postgresql-7.4/\${TUPLE_FILE}\`; do
		if [ -e "\${TUPLE_PATH}/\${file}-7.4" ]; then
			for mandir in man1 man7; do
				if [ -e "%p/share/man/\${mandir}/\${file}.1-7.4" ]; then
#					echo update-alternatives --install "\${TUPLE_PATH}/\${file}" "\${file}" "\${TUPLE_PATH}/\${file}-7.4" 74 --slave "%p/share/man/\${mandir}/\${file}.1" "\${file}.1" "%p/share/man/\${mandir}/\${file}.1-7.4"
					     update-alternatives --install "\${TUPLE_PATH}/\${file}" "\${file}" "\${TUPLE_PATH}/\${file}-7.4" 74 --slave "%p/share/man/\${mandir}/\${file}.1" "\${file}.1" "%p/share/man/\${mandir}/\${file}.1-7.4"
				elif [ -e "%p/share/man/\${mandir}/\${file}.7-7.4" ]; then
#					echo update-alternatives --install "\${TUPLE_PATH}/\${file}" "\${file}" "\${TUPLE_PATH}/\${file}-7.4" 74 --slave "%p/share/man/\${mandir}/\${file}.7" "\${file}.7" "%p/share/man/\${mandir}/\${file}.7-7.4"
					     update-alternatives --install "\${TUPLE_PATH}/\${file}" "\${file}" "\${TUPLE_PATH}/\${file}-7.4" 74 --slave "%p/share/man/\${mandir}/\${file}.7" "\${file}.7" "%p/share/man/\${mandir}/\${file}.7-7.4"
				else
#					echo update-alternatives --install "\${TUPLE_PATH}/\${file}" "\${file}" "\${TUPLE_PATH}/\${file}-7.4" 74
					     update-alternatives --install "\${TUPLE_PATH}/\${file}" "\${file}" "\${TUPLE_PATH}/\${file}-7.4" 74
				fi
			done
		else
			echo "WARNING: \${TUPLE_PATH}/\${file}-7.4 does not exist"
		fi
	done
done

END

	chmod 755 %i/var/postgresql-7.4/*.sh
<<
SplitOff: <<
  Description: PostgreSQL development headers and libraries
  Package: %N-dev
  Depends: %N (>= %v-%r)
  Conflicts: %N-ssl-dev, postgresql73-dev, postgresql73-ssl-dev
  Replaces: postgresql (<< %v-%r), %N-ssl-dev, postgresql73-dev, postgresql73-ssl-dev
  BuildDependsOnly: true
  Files: <<
    bin/pg_config*
    bin/pqxx-config*
    include
    lib/*.a
    lib/pkgconfig
    lib/libecpg.dylib
    lib/libpgeasy.dylib
    lib/libpq.dylib
    lib/libpq++.dylib
    lib/libpqxx.dylib lib/*.la
  <<
  PostInstScript: [ -x %p/var/postgresql-7.4/update-alternatives.sh ] && %p/var/postgresql-7.4/update-alternatives.sh
  PreRmScript: [ -x %p/var/postgresql-7.4/remove-alternatives.sh ] && %p/var/postgresql-7.4/remove-alternatives.sh 
<<
SplitOff2: <<
  Description: PostgreSQL shared libraries
  Package: %N-shlibs
  Conflicts: %N-ssl-shlibs
  Depends: libgnugetopt-shlibs
  Replaces: postgresql (<< %v-%r), postgresql-shlibs, postgresql-ssl-shlibs, %N-ssl-shlibs, postgresql73-shlibs (<< 7.3.4-14), postgresql73-ssl-shlibs (<< 7.3.4-14)
  Files: lib/*.dylib
  PostInstScript: [ -x %p/var/postgresql-7.4/update-alternatives.sh ] && %p/var/postgresql-7.4/update-alternatives.sh
  PreRmScript: [ -x %p/var/postgresql-7.4/remove-alternatives.sh ] && %p/var/postgresql-7.4/remove-alternatives.sh
<<
SplitOff3: <<
  Description: Upgrade package for PostgreSQL
  Package: postgresql
  Depends: %N (>= %v-%r)
  DocFiles: COPYRIGHT HISTORY INSTALL README
<<

DaemonicFile: <<
  <service>
  <description>PostgreSQL database server</description>
  <message> PostgreSQL database server</message>
  
  <daemon name="%N">
  <executable background="no">/usr/bin/sudo</executable>
  <parameters>-u postgres %p/bin/pgsql.sh-7.4 start</parameters>
  </daemon>
  
  </service>
<<
PreInstScript: <<
rm -rf /tmp/postgresql-status
die () {
  echo "failed" > /tmp/postgresql-status
  echo "failed"
  echo ""
  echo "*** bailing because an error ocurred:"
  echo ""
  echo "$*"
  exit 1
}

# dump the database for upgrade
if [ "$1" = "upgrade" ] && [ -d "%p/var/postgresql-7.4/data" ]; then
  echo -e "- creating %p/var/tmp if necessary: \c"
  mkdir -p '%p/var/tmp' || die "couldn't create temp directory %p/var/tmp"
  chmod 1777 '%p/var/tmp'
  echo "ok"

  if test `ls -ln %p/var/ | awk '{ print $3 }' | grep -c '^252$'` -ge 1; then
    echo -e "- starting postgresql (just to be sure): \c"
    sudo -u postgres %p/bin/pg_ctl start -D %p/var/postgresql-7.4/data >/dev/null 2>&1 || true
    echo "ok"

    echo -e "- creating postgres user in database (if needed): \c"
    %p/bin/createuser -U postgres -a -d -e -i 2 postgres >/dev/null 2>&1 || true
    echo "ok"

    chown -R postgres %p/var/postgresql-7.4 %p/var/log/postgresql-7.4
  fi

  OLDMAJOR=`cat '%p/var/postgresql-7.4/data/PG_VERSION' 2>/dev/null | cut -d. -f1`
  OLDMINOR=`cat '%p/var/postgresql-7.4/data/PG_VERSION' 2>/dev/null | cut -d. -f2`
  OLDVERSION="${OLDMAJOR}.${OLDMINOR}"
  CURMAJOR=`echo %v | cut -d. -f1`
  CURMINOR=`echo %v | cut -d. -f2`
  CURVERSION="${OLDMAJOR}.${OLDMINOR}"
  if [ "$OLDVERSION" != "$CURVERSION" ]; then
    cat <<END
It appears you already have an initialized database.

PostgreSQL changes their on-disk format between major releases
and we will need to perform a dump and restore of your database
to upgrade.  Backups of your old database will be in the
%p/var/tmp directory.  In the interest of being ultra-paranoid
both a database dump, and a tarball of your postgresql
directory will be in there.

YOU WILL NEED TO RE-CREATE YOUR DATABASE USING THE DUMP UPON
UPGRADE OF THIS PACKAGE!

If you have important data in the database, be sure that you
also have access to the old (${OLDMAJOR}.${OLDMINOR}.x) postgresql deb files in
case you need to revert.

END
    read -p 'Should I continue? [Y/n] ' -s -n 1 PG_CONTINUE
    if [ "$PG_CONTINUE" = "y" ] || [ "$PG_CONTINUE" = "Y" ] || [ "$PG_CONTINUE" = "" ]; then
      PG_CONTINUE="Y"
    else
      PG_CONTINUE="N"
    fi
    echo "$PG_CONTINUE"
    echo ""

    if [ "$PG_CONTINUE" = "N" ]; then
      echo "*** BAILING OUT ***"
      echo ""
      echo "manual" > "%p/var/tmp/pg_upgradetype"
      exit 0
    fi

    echo "automatic" > "%p/var/tmp/pg_upgradetype"

    echo -e "- starting postgresql (just to be sure): \c"
    sudo -u postgres %p/bin/pg_ctl start -D %p/var/postgresql-7.4/data >/dev/null 2>&1 || true
    echo "ok"

    echo -e "- vacuuming tables (to be sure logs have been played out): \c"
    %p/bin/vacuumdb -U postgres -a >/dev/null 2>&1 || die "vacuumdb failed!"
    echo -e "ok"

    echo -e "- dumping the database for upgrade: \c"
    sudo -u postgres %p/bin/pg_dumpall -c -d > "%p/var/tmp/pgdb-${OLDVERSION}.pgsql" 2>&1 || die "couldn't dump database"
    echo "pgdb-${OLDVERSION}.pgsql"

    echo -e "- stopping postgresql: \c"
    sudo -u postgres %p/bin/pg_ctl stop -D %p/var/postgresql-7.4/data >/dev/null 2>&1 || true
    echo "ok"

    echo -e "- backing up the %p/var/postgresql-7.4 directory: \c"
    pushd "%p/var" >/dev/null 2>&1
    sudo -u postgres tar -czf "%p/var/tmp/pgdb-${OLDVERSION}.tar.gz" postgresql >/dev/null 2>&1 || die "couldn't tar up postgresql directory"
    popd >/dev/null 2>&1
    echo "pgdb-${OLDVERSION}.tar.gz"

    echo ""
  fi
fi
<<
  
PostInstScript: <<
INSTALL_PHASE="$1"

[ -x %p/var/postgresql-7.4/update-alternatives.sh ] && %p/var/postgresql-7.4/update-alternatives.sh

# remove the old "pgsql" entries from netinfo; the username was switched to
# "postgres" but the old ones hang around because of the way niload works
niutil -destroy . /users/pgsql  >/dev/null 2>&1 || true
niutil -destroy . /groups/pgsql >/dev/null 2>&1 || true

die () {
  echo "failed"
  echo ""
  echo "*** bailing because an error ocurred:"
  echo ""
  echo "$*"
  exit 1
}

pg_createdb () {
  # initdb quietly creates a bad database with the wrong locale otherwise :P
  export LANG=C

  echo -e "- making postgresql directories: \c"
  mkdir -p %p/var/postgresql-7.4/data %p/var/log/postgresql-7.4
  chown -R postgres %p/var/postgresql-7.4 %p/var/log/postgresql-7.4
  chmod 755 %p/var/postgresql-7.4
  echo "ok"

  echo -e "- initializing database in %p/var/postgresql-7.4/data: \c"
  sudo -u postgres %p/bin/initdb -D %p/var/postgresql-7.4/data >/dev/null 2>&1 || die "couldn't initialize database"
  echo "ok"
}

if [ -d %p/var/postgresql-7.4/data ]; then
  chown -R postgres %p/var/postgresql-7.4 %p/var/log/postgresql-7.4
  OLDMAJOR=`cat '%p/var/postgresql-7.4/data/PG_VERSION' 2>/dev/null | cut -d. -f1`
  OLDMINOR=`cat '%p/var/postgresql-7.4/data/PG_VERSION' 2>/dev/null | cut -d. -f2`
  OLDVERSION="${OLDMAJOR}.${OLDMINOR}"
  CURMAJOR=`echo %v | cut -d. -f1`
  CURMINOR=`echo %v | cut -d. -f2`
  CURVERSION="${OLDMAJOR}.${OLDMINOR}"
  if [ "$OLDVERSION" = "7.2" ]; then
    cat <<END

Warning: you have a database that was created with PostgreSQL ${OLDMAJOR}.${OLDMINOR}
Database dumps from versions prior to ${CURMAJOR}.${CURMINOR} can be missing some 
dependency information on certain types of constraints.

It is recommended that when you have completed this postgresql
install, you install the dbd-pg-pm or dbd-pg-pm-ssl package and then
run the script in %p/share/doc/%N/contrib/adddepend/ on each
of your databases.
END
  fi
else
  pg_createdb
fi

# update daemonic init script if necessary
daemonic install %N

<<
PreRmScript: <<

[ -x %p/var/postgresql-7.4/remove-alternatives.sh ] && %p/var/postgresql-7.4/remove-alternatives.sh

# clean up
daemonic remove postgresql >/dev/null 2>&1 || true
daemonic remove %N-ssl     >/dev/null 2>&1 || true
if [ $1 != "upgrade" ]; then
  daemonic remove %N
fi
<<
DocFiles: COPYRIGHT HISTORY INSTALL README
DescUsage: <<
The package runs initdb on installation as the user 'postgres'.

You can start the PostgreSQL server manually using 'postmaster' as
postgres (since postgres has a shell of /dev/null by default, you must
run it as sudo -u postgres postmaster) or you can run
'daemonic enable postgresql' as root to create a StartupItem for it.

Also note that installation of this package is interactive, because
upgrades can make irrevocable changes to your database.
<<
DescPackaging: <<
IMPORTANT: The location of the data files has changed from early
revisions of this package. If you're upgrading from an earlier
revision, note that this one expects the data files to be installed
at <prefix>/var/postgresql-7.4/data.

When run from the startup script, logs output to 
<prefix>/var/postgresql-7.4/pgsql.log
<<
DescPort: <<
Rearranged a lot of the PostgreSQL build to be more "correct" on
Darwin, including making proper dylibs (instead of bundles, which
ended up creating static binaries).

Also had to write a bunch of pre/post-install logic for dumping
databases from 7.2.x (or, in theory, older) schemas.
<<
License: BSD
Maintainer: Benjamin Reed <ranger@befunk.com>
Homepage: http://www.postgresql.org/
