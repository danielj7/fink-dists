Package: nspr.0d-shlibs
Version: 4.8.4
Revision: 5
Source: http://ftp.mozilla.org/pub/mozilla.org/nspr/releases/v%v/src/nspr-%v.tar.gz
Source-MD5: a85bdbe1eb646aa32c785a37d8e3a2f5
SourceDirectory: nspr-%v/mozilla/nsprpub
Source2: mirror:debian:pool/main/n/nspr/nspr_4.8.4-1.debian.tar.gz
Source2-MD5: 883c40375f5e5f880a4f656c3933b596
PatchFile: %n.patch
PatchFile-MD5: 0725bc07a0ed64badb1d0a88ca3d8985
PatchScript: <<
#!/bin/sh -ev
	patch -p3 < %{PatchFile}

	for file in \
		30_pkgconfig.patch \
		99_configure.patch \
	; do
		echo "applying $file"
		patch -p3 < ../../../debian/patches/$file
	done

	echo "NSS is available under the Mozilla Public License Version 1.1/GPL 2.0/LGPL 2.1." > LICENSE
<<
NoSetCPPFLAGS: true
NoSetLDFLAGS: true
ConfigureParams: --disable-debug --disable-dependency-tracking --enable-macos-target=10.4 --libdir=%p/lib/nspr
CompileScript: <<
#!/bin/sh -ev
	if grep -q 64 %p/var/lib/fink/path-prefix-10.6/compiler_wrapper
		then export USE_64=1; enable64="--enable-64bit"
		else enable64="--disable-64bit"
	fi
	./configure %c $enable64
	make
<<
InstallScript: <<
#!/bin/sh -ev
	make -j1 install DESTDIR=%d

	# counteract side-effect of burying the libs
	mv %i/lib/nspr/pkgconfig %i/lib

	# 'make install' doesn't create main link-time lib symlinks
	SO_VERSION=0d
	for file in libnspr4 libplc4 libplds4; do
		ln -sf "$file.${SO_VERSION}.dylib" "%i/lib/nspr/$file.dylib"
	done
<<
DocFiles: LICENSE
Shlibs: <<
	%p/lib/nspr/libnspr4.0d.dylib 1.0.0 %n (>= 4.8-1)
	%p/lib/nspr/libplc4.0d.dylib 1.0.0 %n (>= 4.8-1)
	%p/lib/nspr/libplds4.0d.dylib 1.0.0 %n (>= 4.8-1)
<<
SplitOff: <<
	Package: nspr.0d
	Depends: %N (= %v-%r)
	Conflicts: <<
		nspr,
		nspr.0d,
		nspr.0e
	<<
	Replaces: <<
		nspr,
		nspr.0d,
		nspr.0e
	<<
	BuildDependsOnly: true
	Files: <<
		bin
		include
		lib/pkgconfig
		lib/nspr/libnspr4.{a,dylib}
		lib/nspr/libplc4.{a,dylib}
		lib/nspr/libplds4.{a,dylib}
		share/aclocal
	<<
	DocFiles: LICENSE
<<
Description: Netscape Portable Runtime
DescDetail: <<
Netscape Portable Runtime (NSPR) provides a platform-neutral
API for system level and libc like functions.  The API is
used in the Mozilla client, many of Netscape/AOL/iPlanet's
and other software offerings.
<<
DescPackaging: <<
	dmacks overhauled 4.6.7-1 -> 4.8-1 all the following:

	Upstream does not update compatibility_version when added new
	public symbols! Maybe that's why debian hacked soname in
	recent versions? We'll do that too: rename nspr -> nspr.0d

	Bury library files so don't accidentally find them (many pkgs
	seem to need BuildConflicts:nspr)

	macos-target for consistency among all fink-supported
	platforms (cleaner to use %c than patch configure fallbacks).

	do not use SDKs...don't need portability or fat.

	#Grab debian's patch for soname handling. Seems like they have
	#lots of platforms covered and portably handle linker symlinks.
	^-- uses libFOO.so.X.Y.Z (postfix libversion naming) and doesn't
	    actually do anything when used under fink (dunno why) so just
	    use their "SO_VERSION=0d" and manually hack it instead of
	    fiddling with their patch

	Steal debian's nspr.pc patch (other fink packages may look for
	nspr via pkg-config)

	autoreconf generates syntax-error'd configure, so make sure to
	patch configure, not just configure.in

	make sure we get build-dir lib instead of usin local -L path.
	But no external deps, so scrap -I and -L for %p altogether
	instead of tracing and fixing makefile-variable spaghetti.

	Don't leak internal-emulation poll() symbol into public of
	libnspr ABI. It's not part of public API nor used by other
	libs in nspr suite, and linker gets annoyed and confused when
	other things link against libnspr because libSystem already
	has that symbol.
<<
License: OSI-Approved
Maintainer: Daniel Macks <dmacks@netspace.org>
Homepage: http://www.mozilla.org/projects/nspr/
