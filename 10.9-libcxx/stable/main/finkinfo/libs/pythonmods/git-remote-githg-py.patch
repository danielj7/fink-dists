diff --git a/git-remote-hg b/git-remote-hg
index 2d5b564..c10b37b 100755
--- a/git-remote-hg
+++ b/git-remote-hg
@@ -809,8 +809,12 @@ def parse_commit(parser):
         is_exec = of['mode'] == 'x'
         is_link = of['mode'] == 'l'
         rename = of.get('rename', None)
-        return context.memfilectx(f, of['data'],
-                is_link, is_exec, rename)
+        if check_version(3, 1):
+            return context.memfilectx(repo, f, of['data'],
+                    is_link, is_exec, rename)
+        else:
+            return context.memfilectx(f, of['data'],
+                    is_link, is_exec, rename)
 
     repo = parser.repo
 
@@ -913,7 +917,10 @@ def write_tag(repo, tag, node, msg, author):
         except error.ManifestLookupError:
             data = ""
         content = data + "%s %s\n" % (node, tag)
-        return context.memfilectx(f, content, False, False, None)
+        if check_version(3, 1):
+            return context.memfilectx(repo, f, content, False, False, None)
+        else:
+            return context.memfilectx(f, content, False, False, None)
 
     p1 = tip.hex()
     p2 = '0' * 40
diff --git a/git-remote-hg b/git-remote-hg
index c10b37b..0d903e3 100755
--- a/git-remote-hg
+++ b/git-remote-hg
@@ -430,7 +430,12 @@ def get_repo(url, alias):
             peer = hg.peer(repo.ui, {}, url)
         except:
             die('Repository error')
-        repo.pull(peer, heads=None, force=True)
+
+        if check_version(3, 2):
+            from mercurial import exchange
+            exchange.pull(repo, peer, heads=None, force=True)
+        else:
+            repo.pull(peer, heads=None, force=True)
 
         updatebookmarks(repo, peer)
 
@@ -803,7 +808,11 @@ def parse_commit(parser):
     def getfilectx(repo, memctx, f):
         of = files[f]
         if 'deleted' in of:
-            raise IOError
+            # the file is not available anymore - was deleted
+            if check_version(3, 2):
+                return None
+            else:
+                raise IOError
         if 'ctx' in of:
             return of['ctx']
         is_exec = of['mode'] == 'x'
@@ -1036,7 +1045,9 @@ def push_unsafe(repo, remote, parsed_refs, p_revs):
     if not checkheads(repo, remote, p_revs):
         return None
 
-    if check_version(3, 0):
+    if check_version(3, 2):
+        cg = changegroup.getchangegroup(repo, 'push', heads=list(p_revs), common=common)
+    elif check_version(3, 0):
         cg = changegroup.getbundle(repo, 'push', heads=list(p_revs), common=common)
     else:
         cg = repo.getbundle('push', heads=list(p_revs), common=common)
