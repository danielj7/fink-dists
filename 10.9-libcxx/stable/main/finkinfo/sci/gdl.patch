diff -Nurd gdl-0.9.7-orig/CMakeModules/FindGrib.cmake gdl-0.9.7/CMakeModules/FindGrib.cmake
--- gdl-0.9.7-orig/CMakeModules/FindGrib.cmake	2017-01-21 09:17:12.000000000 +0100
+++ gdl-0.9.7/CMakeModules/FindGrib.cmake	2017-10-05 21:22:52.000000000 +0200
@@ -9,7 +9,7 @@
 #
 
 
-find_library(GRIB_LIBRARIES NAMES grib_api)
+find_library(GRIB_LIBRARIES NAMES grib_api eccodes PATH ${GRIBDIR})
 find_path(GRIB_INCLUDE_DIR NAMES grib_api.h)
 include(FindPackageHandleStandardArgs)
 # since there's no grib_api.pc let's check if this installation of grib required jasper and jpeg
diff -Nurd gdl-0.9.7-orig/CMakeModules/FindLibproj4.cmake gdl-0.9.7/CMakeModules/FindLibproj4.cmake
--- gdl-0.9.7-orig/CMakeModules/FindLibproj4.cmake	2017-01-21 09:17:12.000000000 +0100
+++ gdl-0.9.7/CMakeModules/FindLibproj4.cmake	2017-01-21 09:17:12.000000000 +0100
@@ -7,11 +7,11 @@
 #  the Free Software Foundation; either version 2 of the License, or
 #  (at your option) any later version.
 #
-# for use of version from:
-# http://home.comcast.net/~gevenden56/proj/
+# for use of version from: 
+# http://trac.osgeo.org/proj/
 
-find_library(LIBPROJ4_LIBRARIES NAMES proj4)
-find_path(LIBPROJ4_INCLUDE_DIR NAMES lib_proj.h)
+find_library(LIBPROJ4_LIBRARIES NAMES proj)
+find_path(LIBPROJ4_INCLUDE_DIR NAMES proj_api.h)
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(LIBPROJ4 DEFAULT_MSG LIBPROJ4_LIBRARIES LIBPROJ4_INCLUDE_DIR)
 
diff -Nurd gdl-0.9.7-orig/src/gdlgstream.hpp gdl-0.9.7/src/gdlgstream.hpp
--- gdl-0.9.7-orig/src/gdlgstream.hpp	2017-01-21 09:17:12.000000000 +0100
+++ gdl-0.9.7/src/gdlgstream.hpp	2017-10-05 21:41:46.000000000 +0200
@@ -871,16 +871,16 @@
 
   //GD: enables overloading scmap0,1... to accelerate plots for X11 and possibly others
   // Set color map 0 colors by 8 bit RGB values
-  virtual void SetColorMap0( const PLINT *r, const PLINT *g, const PLINT *b, PLINT ncol0 ) {
+  virtual void SetColorMap0( PLINT *r, PLINT *g, PLINT *b, PLINT ncol0 ) {
    plstream::scmap0( r, g, b, ncol0);
   }
   // Set color map 1 colors by 8 bit RGB values
-  virtual void SetColorMap1( const PLINT *r, const PLINT *g, const PLINT *b, PLINT ncol1 ) {
+  virtual void SetColorMap1( PLINT *r, PLINT *g, PLINT *b, PLINT ncol1 ) {
    plstream::scmap1( r, g, b, ncol1);
   }
   // Set color map 1 colors using a piece-wise linear relationship between
   // intensity [0,1] (cmap 1 index) and position in HLS or RGB color space.
-  virtual void SetColorMap1l( bool itype, PLINT npts, const PLFLT *intensity, const PLFLT *coord1, const PLFLT *coord2, const PLFLT *coord3, const bool *rev = NULL ) {
+  virtual void SetColorMap1l( bool itype, PLINT npts, PLFLT *intensity, PLFLT *coord1, PLFLT *coord2, PLFLT *coord3, bool *rev = NULL ) {
    plstream::scmap1l(itype,npts,intensity,coord1,coord2,coord3,rev);
   }
   // Set number of colors in cmap 1
