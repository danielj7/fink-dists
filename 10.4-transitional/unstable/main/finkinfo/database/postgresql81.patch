--- postgresql-8.1beta4/pgsql.sh	1969-12-31 19:00:00.000000000 -0500
+++ postgresql-8.1beta4-new/pgsql.sh	2005-10-25 13:51:31.000000000 -0400
@@ -0,0 +1,65 @@
+#!/bin/sh
+
+die () {
+	echo "failed"
+	echo ""
+	echo "*** bailing because an error ocurred:"
+	echo ""
+	echo "$*"
+	exit 1
+}
+
+PREFIX="@INSTPREFIX@"
+DATADIR="${PREFIX}/var/postgresql-8.1/data"
+LOGFILE="${PREFIX}/var/postgresql-8.1/pgsql.log"
+
+export LANG=C
+unset LC_ALL
+
+SHMMAX=`sysctl kern.sysv.shmmax | cut -d' ' -f2-`
+SHMMNI=`sysctl kern.sysv.shmmni | cut -d' ' -f2-`
+SHMALL=`sysctl kern.sysv.shmall | cut -d' ' -f2-`
+
+if [ "$SHMMAX" -lt "8388608" ] || [ "$SHMMNI" -lt "64" ] || [ "$SHMALL" -lt "32768" ]; then
+	echo "ERROR: You must set your shared memory resources higher for PostgreSQL to function."
+	if [ -f /etc/sysctl.conf ]; then
+		echo "       You already have an /etc/sysctl.conf so I'm assuming you know what you're"
+		echo "       doing.  Please update your shared memory settings to something higher and"
+		echo "       give it another shot."
+	else
+		echo "       I am creating a default configuration in /etc/sysctl.conf that should let"
+		echo "       you start PostgreSQL, but it's probably best if you tune it yourself when"
+		echo "       I'm done.  You will have to reboot before it will take effect."
+		cat <<END >/etc/sysctl.conf
+kern.sysv.shmmax=8388608
+kern.sysv.shmmin=1
+kern.sysv.shmmni=64
+kern.sysv.shmseg=8
+kern.sysv.shmall=32768
+END
+	fi
+#	exit 1
+fi
+
+if [ ! -d "$DATADIR" ]; then
+	echo -e "- making postgresql directories: \c"
+	sudo mkdir -p "$DATADIR"
+	sudo chown -R postgres "$DATADIR/.."
+	echo "ok"
+
+	echo -e "- initializing database in $DATADIR: \c"
+	sudo -u postgres ${PREFIX}/bin/initdb-8.1 -D "$DATADIR" >/tmp/pgsql-init-8.1.log 2>&1 || die "couldn't initialize database"
+	echo "ok"
+fi
+
+case "$1" in
+	start)
+		unset LC_ALL; LANG=C sudo -u postgres "${PREFIX}/bin/pg_ctl-8.1" start -D "$DATADIR" -l "$LOGFILE"
+		;;
+	restart)
+		unset LC_ALL; LANG=C sudo -u postgres "${PREFIX}/bin/pg_ctl-8.1" restart -D "$DATADIR" -m fast
+		;;
+	stop)
+		unset LC_ALL; LANG=C sudo -u postgres "${PREFIX}/bin/pg_ctl-8.1" stop -D "$DATADIR" -m fast
+		;;
+esac
--- postgresql-8.1beta4/src/Makefile.global.in	2005-09-27 13:39:32.000000000 -0400
+++ postgresql-8.1beta4-new/src/Makefile.global.in	2005-10-25 13:54:01.000000000 -0400
@@ -73,14 +73,14 @@
 datadir := @datadir@
 ifeq "$(findstring pgsql, $(datadir))" ""
 ifeq "$(findstring postgres, $(datadir))" ""
-override datadir := $(datadir)/postgresql
+override datadir := $(datadir)/postgresql-8.1
 endif
 endif
 
 sysconfdir := @sysconfdir@
 ifeq "$(findstring pgsql, $(sysconfdir))" ""
 ifeq "$(findstring postgres, $(sysconfdir))" ""
-override sysconfdir := $(sysconfdir)/postgresql
+override sysconfdir := $(sysconfdir)/postgresql-8.1
 endif
 endif
 
@@ -89,7 +89,7 @@
 pkglibdir = $(libdir)
 ifeq "$(findstring pgsql, $(pkglibdir))" ""
 ifeq "$(findstring postgres, $(pkglibdir))" ""
-override pkglibdir := $(pkglibdir)/postgresql
+override pkglibdir := $(pkglibdir)/postgresql-8.1
 endif
 endif
 
@@ -109,7 +109,7 @@
 ifneq (,$(docdir))
 ifeq "$(findstring pgsql, $(docdir))" ""
 ifeq "$(findstring postgres, $(docdir))" ""
-override docdir := $(docdir)/postgresql
+override docdir := $(docdir)/postgresql-8.1
 endif
 endif
 endif
--- postgresql-8.1beta4/src/Makefile.shlib	2005-08-07 23:35:13.000000000 -0400
+++ postgresql-8.1beta4-new/src/Makefile.shlib	2005-10-25 13:51:31.000000000 -0400
@@ -104,11 +104,11 @@
   ifeq ($(DLTYPE), library)
     # linkable library
     DLSUFFIX		:= .dylib
-    LINK.shared		= $(COMPILER) -dynamiclib -install_name $(libdir)/lib$(NAME).$(SO_MAJOR_VERSION)$(DLSUFFIX) $(version_link) -multiply_defined suppress
+    LINK.shared		= $(CXX) $(CFLAGS) -dynamiclib -install_name $(libdir)/lib$(NAME).$(SO_MAJOR_VERSION)$(DLSUFFIX) $(version_link) -multiply_defined suppress
   else
     # loadable module (default case)
     DLSUFFIX		:= .so
-    LINK.shared		= $(COMPILER) -bundle
+    LINK.shared		= $(CXX) $(CFLAGS) -bundle
   endif
   shlib			= lib$(NAME).$(SO_MAJOR_VERSION).$(SO_MINOR_VERSION)$(DLSUFFIX)
   shlib_major		= lib$(NAME).$(SO_MAJOR_VERSION)$(DLSUFFIX)
--- postgresql-8.1beta4/src/backend/main/main.c	2005-10-14 22:49:18.000000000 -0400
+++ postgresql-8.1beta4-new/src/backend/main/main.c	2005-10-25 13:58:31.000000000 -0400
@@ -54,6 +54,7 @@
 	struct passwd *pw;
 #endif
 	char	   *pw_name_persist;
+	char	   *progname;
 
 	/*
 	 * Place platform-specific startup hacks here.	This is the right place to
@@ -250,7 +251,7 @@
 	 * possibly first argument) we were called with. The lack of consistency
 	 * here is historical.
 	 */
-	if (strcmp(get_progname(argv[0]), "postmaster") == 0)
+	if (strlen(get_progname(argv[0])) >= 10 && strncmp(get_progname(argv[0]), "postmaster", 10) == 0)
 	{
 		/* Called as "postmaster" */
 		exit(PostmasterMain(argc, argv));
--- postgresql-8.1beta4/src/backend/utils/fmgr/dfmgr.c	2005-10-14 22:49:32.000000000 -0400
+++ postgresql-8.1beta4-new/src/backend/utils/fmgr/dfmgr.c	2005-10-25 13:51:31.000000000 -0400
@@ -305,6 +305,26 @@
 		pfree(full);
 	}
 
+	new = palloc(strlen(name) + strlen(".so") + 1);
+	strcpy(new, name);
+	strcat(new, ".so");
+
+	if (!have_slash)
+	{
+		full = find_in_dynamic_libpath(new);
+		pfree(new);
+		if (full)
+			return full;
+	}
+	else
+	{
+		full = substitute_libpath_macro(new);
+		pfree(new);
+		if (file_exists(full))
+			return full;
+		pfree(full);
+	}
+
 	new = palloc(strlen(name) + strlen(DLSUFFIX) + 1);
 	strcpy(new, name);
 	strcat(new, DLSUFFIX);
--- postgresql-8.1beta4/src/backend/utils/misc/postgresql.conf.sample	2005-10-08 15:32:58.000000000 -0400
+++ postgresql-8.1beta4-new/src/backend/utils/misc/postgresql.conf.sample	2005-10-25 13:59:12.000000000 -0400
@@ -63,7 +63,7 @@
 # - Security & Authentication -
 
 #authentication_timeout = 60		# 1-600, in seconds
-#ssl = off
+ssl = off
 #password_encryption = on
 #db_user_namespace = off
 
--- postgresql-8.1beta4/src/bin/initdb/initdb.c	2005-10-14 22:49:37.000000000 -0400
+++ postgresql-8.1beta4-new/src/bin/initdb/initdb.c	2005-10-25 14:00:11.000000000 -0400
@@ -117,7 +117,7 @@
 
 /* defaults */
 static int	n_connections = 10;
-static int	n_buffers = 50;
+static int	n_buffers = 20;
 
 /*
  * Warning messages for authentication methods
@@ -2402,7 +2402,7 @@
 	sprintf(pgdenv, "PGDATA=%s", pg_data);
 	putenv(pgdenv);
 
-	if ((ret = find_other_exec(argv[0], "postgres", PG_VERSIONSTR,
+	if ((ret = find_other_exec(argv[0], "postgres-8.1", PG_VERSIONSTR,
 							   backend_exec)) < 0)
 	{
 		char		full_path[MAXPGPATH];
@@ -2412,14 +2412,14 @@
 
 		if (ret == -1)
 			fprintf(stderr,
-					_("The program \"postgres\" is needed by %s "
+					_("The program \"postgres-8.1\" is needed by %s "
 					  "but was not found in the\n"
 					  "same directory as \"%s\".\n"
 					  "Check your installation.\n"),
 					progname, full_path);
 		else
 			fprintf(stderr,
-					_("The program \"postgres\" was found by \"%s\"\n"
+					_("The program \"postgres-8.1\" was found by \"%s\"\n"
 					  "but was not the same version as %s.\n"
 					  "Check your installation.\n"),
 					full_path, progname);
@@ -2706,9 +2706,9 @@
 	get_parent_directory(bin_dir);
 
 	printf(_("\nSuccess. You can now start the database server using:\n\n"
-			 "    %s%s%spostmaster%s -D %s%s%s\n"
+			 "    %s%s%spostmaster-8.1%s -D %s%s%s\n"
 			 "or\n"
-			 "    %s%s%spg_ctl%s -D %s%s%s -l logfile start\n\n"),
+			 "    %s%s%spg_ctl-8.1%s -D %s%s%s -l logfile start\n\n"),
 	   QUOTE_PATH, bin_dir, (strlen(bin_dir) > 0) ? DIR_SEP : "", QUOTE_PATH,
 		   QUOTE_PATH, pg_data_native, QUOTE_PATH,
 	   QUOTE_PATH, bin_dir, (strlen(bin_dir) > 0) ? DIR_SEP : "", QUOTE_PATH,
--- postgresql-8.1beta4/src/bin/pg_ctl/pg_ctl.c	2005-10-14 22:49:38.000000000 -0400
+++ postgresql-8.1beta4-new/src/bin/pg_ctl/pg_ctl.c	2005-10-25 13:51:32.000000000 -0400
@@ -540,7 +540,7 @@
 
 		postmaster_path = pg_malloc(MAXPGPATH);
 
-		if ((ret = find_other_exec(argv0, "postmaster", PM_VERSIONSTR,
+		if ((ret = find_other_exec(argv0, "postmaster-8.1", PM_VERSIONSTR,
 								   postmaster_path)) < 0)
 		{
 			char		full_path[MAXPGPATH];
@@ -549,13 +549,13 @@
 				StrNCpy(full_path, progname, MAXPGPATH);
 
 			if (ret == -1)
-				write_stderr(_("The program \"postmaster\" is needed by %s "
+				write_stderr(_("The program \"postmaster-8.1\" is needed by %s "
 							   "but was not found in the\n"
 							   "same directory as \"%s\".\n"
 							   "Check your installation.\n"),
 							 progname, full_path);
 			else
-				write_stderr(_("The program \"postmaster\" was found by \"%s\"\n"
+				write_stderr(_("The program \"postmaster-8.1\" was found by \"%s\"\n"
 							   "but was not the same version as %s.\n"
 							   "Check your installation.\n"),
 							 full_path, progname);
@@ -896,7 +896,7 @@
 	}
 	else
 	{
-		ret = find_other_exec(argv0, "postmaster", PM_VERSIONSTR, cmdLine);
+		ret = find_other_exec(argv0, "postmaster-8.1", PM_VERSIONSTR, cmdLine);
 		if (ret != 0)
 		{
 			write_stderr(_("%s: could not find postmaster program executable\n"), progname);
--- postgresql-8.1beta4/src/interfaces/ecpg/compatlib/Makefile	2005-03-14 12:27:49.000000000 -0500
+++ postgresql-8.1beta4-new/src/interfaces/ecpg/compatlib/Makefile	2005-10-25 13:51:32.000000000 -0400
@@ -20,6 +20,7 @@
 override CPPFLAGS := -I$(top_srcdir)/src/interfaces/ecpg/include -I$(libpq_srcdir) \
 	-I$(top_srcdir)/src/include/utils $(CPPFLAGS)
 override CFLAGS += $(PTHREAD_CFLAGS)
+override LDFLAGS := -L../ecpglib -L../pgtypeslib -L../../libpq $(LDFLAGS)
 SHLIB_LINK = -L../ecpglib -lecpg -L../pgtypeslib -lpgtypes $(libpq) \
 	$(filter -lintl -lssl -lcrypto -lkrb5 -lcrypt -lm, $(LIBS)) $(PTHREAD_LIBS)
 
--- postgresql-8.1beta4/src/interfaces/ecpg/ecpglib/Makefile	2005-03-14 12:27:50.000000000 -0500
+++ postgresql-8.1beta4-new/src/interfaces/ecpg/ecpglib/Makefile	2005-10-25 13:51:32.000000000 -0400
@@ -19,6 +19,7 @@
 
 override CPPFLAGS := -DFRONTEND -I$(top_srcdir)/src/interfaces/ecpg/include \
 	-I$(libpq_srcdir) -I$(top_builddir)/src/port $(CPPFLAGS)
+override LDFLAGS := -L../ecpglib -L../pgtypeslib -L../../libpq $(LDFLAGS)
 override CFLAGS += $(PTHREAD_CFLAGS)
 
 # Need to recomple any libpgport object files
--- postgresql-8.1beta4/src/makefiles/Makefile.darwin	2004-12-16 22:52:48.000000000 -0500
+++ postgresql-8.1beta4-new/src/makefiles/Makefile.darwin	2005-10-25 13:51:32.000000000 -0400
@@ -13,6 +13,6 @@
 # Rule for building shared libs (currently used only for regression test
 # shlib ... should go away, since this is not really enough knowledge)
 %.so: %.o
-	$(CC) -bundle -o $@ $< $(BE_DLLLIBS)
+	$(CXX) -bundle -undefined dynamic_lookup -o $@ $< $(BE_DLLLIBS)
 
 sqlmansect = 7
##
## Partial enabling of the testsuite to work with the patched initdb
## that looks for postgres-8.1.
##
--- postgresql-8.1.0.orig/src/test/regress/pg_regress.sh	2005-11-01 07:09:11.000000000 -0800
+++ postgresql-8.1.0/src/test/regress/pg_regress.sh	2005-11-14 11:33:29.000000000 -0800
@@ -397,6 +397,9 @@
         mkdir -p "$LOGDIR" || { (exit 2); exit; }
     fi
     $GMAKE -C "$top_builddir" DESTDIR="$temp_install/install" install with_perl=no with_python=no >"$LOGDIR/install.log" 2>&1
+    pushd "$temp_install/install/@INSTPREFIX@/bin/"
+    ln -s postgres postgres-8.1
+    popd
 
     if [ $? -ne 0 ]
     then
##
## This patch is the 05-check-rlimits-nofile.patch patch from Debian's
## Postgresql 8.1.0-1 package.
##

--- postgresql-snapshot-old/src/backend/storage/file/fd.c	2005-08-08 05:11:49.000000000 +0200
+++ postgresql-snapshot/src/backend/storage/file/fd.c	2005-08-22 19:21:42.000000000 +0200
@@ -51,6 +51,7 @@
 #include "storage/fd.h"
 #include "storage/ipc.h"
 
+#include <sys/resource.h>
 
 /*
  * We must leave some file descriptors free for system(), the dynamic loader,
@@ -343,15 +344,21 @@
 	int			used = 0;
 	int			highestfd = 0;
 	int			j;
+ 	struct rlimit	    rlim;
 
 	size = 1024;
 	fd = (int *) palloc(size * sizeof(int));
+ 	getrlimit(RLIMIT_NOFILE, &rlim);
 
 	/* dup until failure or probe limit reached */
 	for (;;)
 	{
 		int			thisfd;
 
+                /* Don't go beyond RLIMIT_NOFILE */
+ 		if (highestfd >= rlim.rlim_cur - 1)
+ 		    break;
+
 		thisfd = dup(0);
 		if (thisfd < 0)
 		{

##
## This patch is the 50-contrib-oracle-enable.patch patch from Debian's
## Postgresql 8.1.0-1 package.
##

--- postgresql-snapshot-old/contrib/Makefile	2005-07-29 21:38:21.000000000 +0200
+++ postgresql-snapshot/contrib/Makefile	2005-08-22 19:47:50.000000000 +0200
@@ -20,6 +20,7 @@
 		lo		\
 		ltree		\
 		oid2name	\
+		oracle		\
 		pg_buffercache	\
 		pg_trgm		\
 		pgbench		\
@@ -37,7 +38,6 @@
 #		adddepend	\ (does not have a makefile)
 #		mSQL-interface	\ (requires msql installed)
 #		mac		\ (does not have a makefile)
-#		oracle		\ (does not have a makefile)
 #		start-scripts	\ (does not have a makefile)
 #		xml2		\ (non-standard makefile)
 
--- postgresql-snapshot-old/contrib/oracle/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ postgresql-snapshot/contrib/oracle/Makefile	2005-08-22 19:47:11.000000000 +0200
@@ -0,0 +1,11 @@
+# oracle conversion Perl scripts
+
+subdir = contrib/oracle
+top_builddir = ../..
+include $(top_builddir)/src/Makefile.global
+
+MODULES =
+SCRIPTS = Ora2Pg.pm ora2pg.pl
+DOCS = README.ora2pg
+
+include $(top_srcdir)/contrib/contrib-global.mk
--- postgresql-snapshot-old/contrib/oracle/ora2pg.pl	2003-01-07 23:17:14.000000000 +0100
+++ postgresql-snapshot/contrib/oracle/ora2pg.pl	2005-08-22 19:47:11.000000000 +0200
@@ -17,6 +17,10 @@
 
 use strict;
 
+# allow to put Ora2Pg.pm in the same directory as this script
+use File::Basename;
+use lib dirname($0);
+
 use Ora2Pg;
 
 # Initialyze the database connection

##
## This patch is the 51-contrib-xml2-enable.patch patch from Debian's
## Postgresql 8.1.0-1 package.
##

--- postgresql-8.1.3-old/contrib/Makefile	2005-08-15 23:07:03.000000000 +0200
+++ postgresql-8.1.3/contrib/Makefile	2005-08-15 23:07:51.000000000 +0200
@@ -41,7 +41,8 @@
 		tsearch		\
 		tsearch2	\
 		userlock	\
-		vacuumlo
+		vacuumlo	\
+		xml2
 
 # Missing:
 #		adddepend	\ (does not have a makefile)

