diff -Nurd -x'*~' vte-0.16.13.orig/src/ring.c vte-0.16.13/src/ring.c
--- vte-0.16.13.orig/src/ring.c	2007-11-23 20:24:40.000000000 -0500
+++ vte-0.16.13/src/ring.c	2008-06-05 02:04:26.000000000 -0400
@@ -43,7 +43,7 @@
 /**
  * _vte_ring_new:
  * @max_elements: the maximum size the new ring will be allowed to reach
- * @free: a #VteRingFreeFunc
+ * @free_func: a #VteRingFreeFunc
  * @data: user data for @free
  *
  * Allocates a new ring capable of holding up to @max_elements elements at a
@@ -53,23 +53,23 @@
  * Returns: a new ring
  */
 VteRing *
-_vte_ring_new(glong max_elements, VteRingFreeFunc free, gpointer data)
+_vte_ring_new(glong max_elements, VteRingFreeFunc free_func, gpointer data)
 {
 	VteRing *ret = g_slice_new0(VteRing);
 	ret->user_data = data;
 	ret->cached_item = -1;
 	ret->max = MAX(max_elements, 2);
 	ret->array = g_malloc0(sizeof(gpointer) * ret->max);
-	ret->free = free;
+	ret->free = free_func;
 	return ret;
 }
 
 VteRing *
 _vte_ring_new_with_delta(glong max_elements, glong delta,
-			 VteRingFreeFunc free, gpointer data)
+			 VteRingFreeFunc free_func, gpointer data)
 {
 	VteRing *ret;
-	ret = _vte_ring_new(max_elements, free, data);
+	ret = _vte_ring_new(max_elements, free_func, data);
 	ret->delta = delta;
 	return ret;
 }
@@ -244,7 +244,7 @@
  *
  */
 gpointer
-_vte_ring_remove(VteRing * ring, long position, gboolean free)
+_vte_ring_remove(VteRing * ring, long position, gboolean free_element)
 {
 	long i;
 	gpointer old_data;
@@ -261,7 +261,7 @@
 	i = position % ring->max;
 	/* Remove the data at this position. */
 	old_data = ring->array[i];
-	if (free && old_data && ring->free) {
+	if (free_element && old_data && ring->free) {
 		_vte_debug_print(VTE_DEBUG_RING,
 				"Freeing item at position %ld.\n", position);
 		ring->free(old_data, ring->user_data);
diff -Nurd -x'*~' vte-0.16.13.orig/src/ring.h vte-0.16.13/src/ring.h
--- vte-0.16.13.orig/src/ring.h	2007-02-26 16:05:13.000000000 -0500
+++ vte-0.16.13/src/ring.h	2008-06-05 02:01:52.000000000 -0400
@@ -67,10 +67,10 @@
 	(__cast) _vte_ring_at(__ring, __position)
 
 VteRing *_vte_ring_new(glong max_elements,
-		      VteRingFreeFunc free,
+		      VteRingFreeFunc free_func,
 		      gpointer data);
 VteRing *_vte_ring_new_with_delta(glong max_elements, glong delta,
-				  VteRingFreeFunc free, gpointer data);
+				  VteRingFreeFunc free_func, gpointer data);
 gpointer _vte_ring_insert(VteRing *ring, glong position, gpointer data);
 gpointer _vte_ring_insert_preserve(VteRing *ring, glong position, gpointer data);
 gpointer _vte_ring_remove(VteRing *ring, glong position, gboolean free_element);
diff -Nurd -x'*~' vte-0.16.13.orig/src/vtefc.c vte-0.16.13/src/vtefc.c
--- vte-0.16.13.orig/src/vtefc.c	2007-11-23 20:24:40.000000000 -0500
+++ vte-0.16.13/src/vtefc.c	2008-06-05 02:01:09.000000000 -0400
@@ -400,12 +400,14 @@
 			FcPatternDestroy(tmp);
 			g_ptr_array_add(pattern_array, save);
 #if defined(HAVE_FCSTRFREE) && defined(HAVE_FCNAMEUNPARSE)
+#ifndef __APPLE__
 			_VTE_DEBUG_IF(VTE_DEBUG_MISC) {
 				FcChar8 *name = FcNameUnparse (save);
 				g_printerr("Added '%s' to fontset\n", name);
 				FcStrFree (name);
 			}
 #endif
+#endif
 		}
 		FcFontSetDestroy(fontset);
 		ret = TRUE;
@@ -422,12 +424,14 @@
 			FcPatternDestroy(tmp);
 			g_ptr_array_add(pattern_array, save);
 #if defined(HAVE_FCSTRFREE) && defined(HAVE_FCNAMEUNPARSE)
+#ifndef __APPLE__
 			_VTE_DEBUG_IF(VTE_DEBUG_MISC) {
 				FcChar8 *name = FcNameUnparse (save);
 				g_printerr("Added '%s' to fontset\n", name);
 				FcStrFree (name);
 			}
 #endif
+#endif
 			ret = TRUE;
 		} else {
 			ret = FALSE;
