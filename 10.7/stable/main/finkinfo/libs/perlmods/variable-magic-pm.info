Info3: <<
Package: variable-magic-pm%type_pkg[perl]
Version: 0.52
Revision: 1
Description: Associate user-defined magic to variables
Type: perl(5.12.3 5.12.4)
License: Artistic
Maintainer: Benjamin Reed <variable-magic-pm@fink.raccoonfink.com>

Depends: <<
	fink (>= 0.29.7-1),
	perl%type_pkg[perl]-core
<<
BuildDepends: <<
	fink (>= 0.29.7-1),
	perl%type_pkg[perl]-core
<<

Source: mirror:cpan:modules/by-module/Variable/Variable-Magic-%v.tar.gz
Source-MD5: 3c3cb6b8adc20616f1e71af145ee73c1
PatchFile: %{ni}.patch
PatchFile-MD5: 9b123b63b740563c954f44bcb6c580d4

UseMaxBuildJobs: true

InfoTest: <<
	TestDepends: <<
		capture-tiny-pm%type_pkg[perl]
	<<
<<

UpdatePOD: true
InstallScript: <<
%{default_script}
mv %i/share/man %i/lib/perl5/%type_raw[perl]
<<
DocFiles: Changes README

Homepage: http://search.cpan.org/dist/Variable-Magic
DescDetail: <<
Magic is Perl way of enhancing objects.  This mechanism let the user
add extra data to any variable and hook syntaxical operations (such
as access, assignation or destruction) that can be applied to it.
With this module, you can add your own magic to any variable without
the pain of the C API.

Magic differs from tieing and overloading in several ways :

* Magic isn't copied on assignation (as for blessed references), you
  attach it to variables, not values.
* It doesn't replace the original semantics, magic callbacks trigger
  before the original action take place, and can't prevent it to
  happen.
* It's mostly invisible at the Perl level, magical and non-magical
  variables cannot be distinguished with ref, reftype or another
  trick.
* It's notably faster, since perl's way of handling magic is lighter
  by nature, and there's no need for any method resolution.
<<
<<

