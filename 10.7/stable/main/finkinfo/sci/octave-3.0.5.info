Info2: <<
Package: octave%type_pkg[-lapack]
Type: -lapack (-atlas -ref .), oct(3.0.5), gcc (4.7)
Version: 3.0.5
Revision: 3020
Maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>

Source: mirror:gnu:%{Ni}/%{Ni}-%v.tar.bz2
Source-MD5: bfba44eeda8fa6e29c2bbcd2604c34eb

BuildDepends: <<
	fftw3 (>= 3.1.1-7),
	gcc%type_pkg[gcc]-compiler,
	glpk-dev, 
	hdf5.7-oldapi,
	libcurl4, 
	libncurses5,  
	libpcre1,  
 	qhull5-dev,	
 	readline6, 
 	sed,
	suitesparse, 
	fink (>= 0.32.0-1), 
	fink-package-precedence, 
	flag-sort,
	(%type_raw[-lapack] = -atlas) atlas (>=3.9.11-13),
	(%type_raw[-lapack] = -ref) lapack341
<<
Depends: %{Ni}%type_pkg[oct]%type_pkg[-lapack] (=%v-%r)
BuildConflicts: coot-dev, broken-gcc, lammpi-dev, fort77, 4ti2-dev
Suggests: %{Ni}%type_pkg[oct]-docs
Provides: <<
								octave-interpreter,
(%type_raw[-lapack] = -atlas) 	octave-interpreter-ptatlas,
(%type_raw[-lapack] = .) 		octave-interpreter-accelerate,
(%type_raw[-lapack] = -ref) 	octave-interpreter-ref
<<
Conflicts: <<
	%{Ni}, 
	%{Ni}-atlas,
	%{Ni}-x11, 
	%{Ni}-atlas-x11,
	%{Ni}-ref, 
	%{Ni}-ref-x11,
	%{Ni}3.0.2 ( << 3.0.2-5), 
	%{Ni}3.0.2-atlas ( << 3.0.2-5) 
	<<
Replaces: <<
	%{Ni}, 
	%{Ni}-atlas,
	%{Ni}-x11, 
	%{Ni}-atlas-x11,
	%{Ni}-ref, 
	%{Ni}-ref-x11,
	%{Ni}3.0.2 ( << 3.0.2-5), 
	%{Ni}3.0.2-atlas ( << 3.0.2-5) 
<<

GCC: 4.0

PatchFile: %{ni}-glpk.patch
PatchFile-MD5: a4861a0803cfbbbb8892019cd5f217d2
PatchFile2: %{ni}-manpages.patch
PatchFile2-MD5: 647cff8601e837e8b8e46d15867b14f0
PatchFile3: %{ni}.patch
PatchFile3-MD5: 675cf038c246ec6f138684551fab2cbb
PatchScript: <<
	#!/bin/sh -ev
	#fix for use of glpk private internals
	patch -p1 < %{PatchFile}
	#fix for long-deprecated curl header
	perl -pi -e 's,curl/types,curl/curl,' src/DLD-FUNCTIONS/urlwrite.cc

	# create versioned manpages
	cp doc/interpreter/%{Ni}.1 doc/interpreter/%{Ni}-%v.1
	cp doc/interpreter/%{Ni}-bug.1 doc/interpreter/%{Ni}-bug-%v.1
	cp doc/interpreter/%{Ni}-config.1 doc/interpreter/%{Ni}-config-%v.1
	cp doc/interpreter/mkoctfile.1 doc/interpreter/mkoctfile-%v.1
	# fix executable names in versioned manpages
	sed -e 's/@OCTVERSION@/%v/g' %{PatchFile2} | patch -p1 

	#Fink-specific structural changes
	sed -e 's/@OCTVERSION@/%v/g' -e 's|@FINKPREFIX@|%p|g' %{PatchFile3} | patch -p1 
	# Put in the Fink tree.
	sed -i.orig -e 's|@FINKPREFIX@|%p|g'   %{Ni}-forge* %{Ni}rc doc/interpreter/*.1 mkoctfile*in
 	# Put OS-version-invariant links to compilers into oct-conf.h, which in 
 	# turn gets harcoded into the Octave interpreter's 'octave_config_info' 
 	# function, which is then used by some of the octave-forge packages at 
 	# configure time.  Also do this for mkoctfile.in.
 	sed -i.orig -e "s|%%OCTAVE_CONF_CC%%|\"oct-cc\"|" \
 				-e "s|%%OCTAVE_CONF_CXXCPP%%|\"oct-cxx -E\"|" \
 				-e "s|%%OCTAVE_CONF_CXX%%|\"oct-cxx\"|" \
 				-e "s|%%OCTAVE_CONF_DL_LD%%|\"oct-cxx\"|" \
 				-e "s|%%OCTAVE_CONF_LD_CXX%%|\"oct-cxx\"|" \
 				-e "s|%%OCTAVE_CONF_SH_LD%%|\"oct-cxx\"|" \
 					src/oct-conf.h.in mkoctfile*in	
    # Add the BLAS C library for the -atlas variant.
    if [ "%type_pkg[-lapack]" = "-atlas" ]
    	then sed -i.bak -e 's|%%OCTAVE_CONF_BLAS_LIBS%%|"-llapack -lf77blas -lcblas -latlas"|' \
    							src/oct-conf.h.in mkoctfile.in
    fi
<<

SetCC: flag-sort -r gcc
SetCXX: flag-sort -r g++
SetCPPFLAGS: -I%p/opt/hdf5v1.6/include
SetLDFLAGS: -Wl,-dead_strip_dylibs -L%p/opt/hdf5v1.6/lib
ConfigureParams: <<
	F77=%p/bin/gfortran-fsf-%type_raw[gcc] --host=%m-apple-darwin --build=%m-apple-darwin \
	--infodir='${prefix}/share/info' --mandir='${prefix}/share/man' --libexecdir='${prefix}/lib' \
	--enable-shared --enable-dl --disable-static --without-mpi --with-hdf5 --with-fftw
<<
CompileScript: <<
 #!/bin/sh -ev
 export CFLAGS='-O3'
 export CXXFLAGS='-O3'
 export FFLAGS='-O3'
 case "%type_raw[-lapack]" in
 	".") 
		a='--with-lapack=-Wl,-framework,Accelerate --with-blas=-Wl,-framework,Accelerate'
		export FFLAGS='-O3 -ff2c' ;;
 	"-atlas")
 		a='--with-lapack=-lptlapack --with-blas=-lptf77blas'
    	export FFLAGS='-O3' ;;
 	"-ref")
 		export LDFLAGS="-L%p/lib/lapack/3.4.1 "$LDFLAGS
 		a='--with-lapack=-lreflapack --with-blas=-lrefblas'
   		export FFLAGS='-O3' ;;
 esac
 FLIBDIR="%p/lib/gcc%type_raw[gcc]/lib"
 ./configure FLIBS="-L${FLIBDIR} -lgfortran" %c $a
 make octave-bug 
 make octave-config 
 make mkoctfile
 make libcruft 
 make liboctave
 make run-octave
 make -j1 src
 make -j1 scripts
 make -j1 doc
 fink-package-precedence --depfile-ext='\.d$' --prohibit-bdep=%{Ni},%{Ni}-atlas,%{Ni}%type_raw[oct]-dev,%{Ni}%type_raw[oct]-atlas-dev,%{Ni}305-dev,%{Ni}305-atlas-dev,saclib-gcc46,saclib src
<<

InfoTest: <<
	TestScript: <<
		make check || exit 2	
	<<
<<

InstallScript: <<
 #!/bin/sh -ev
 make install DESTDIR=%d
 # Install versioned manpages
 cp doc/interpreter/*-%v.1 %i/share/man/man1
 # Install Fink-specific octaverc which points at our oct-versioned
 # package directory.
 cp %{Ni}rc %i/share/%{Ni}/%v/m/startup
 mkdir -p %i/var/%{Ni}/%v/

 # install examples
 mkdir -p %i/share/%{Ni}/%v/doc/examples
 cp -R examples %i/share/%{Ni}/%v/doc/examples
   # remove TeX stuff which may have been generated:
 rm %i/share/%{Ni}/ls-R %i/lib/%{Ni}/ls-R
 # remove autogenerated freedesktop.org desktop file
 rm -f %i/share/applications/www.%{Ni}.org-%{Ni}.desktop
 mkdir -p %i/share/%{Ni}/%v/scripts
 # install the octave-forge helper scripts
 cp %{Ni}-forge* %i/share/%{Ni}/%v/scripts
 chmod a+x %i/share/%{Ni}/%v/scripts/*
 # octave-bug needs to use the octave compiler wrappers, too, since
 # some octave-forge packages use it for configuration.
 sed -i.bak -e "s|flag-sort -r gcc|oct-cc|g" \
 			-e "s|flag-sort -r g++|oct-cxx|g" \
 			%i/bin/%{Ni}-bug-%v 
 # for the -atlas variant, add -lcblas to BLAS_LIBS in octave-bug:
 if [ "%type_pkg[-lapack]" = "-atlas" ]
 	then perl -pi -e 's/(BLAS_LIBS.*)\"/\1 -lcblas\"/' %i/bin/%{ni}-bug-%v
 fi
 # move compiler wrapper over
 cp %b/oct-compiler.in %i/share/%{Ni}/%v/scripts

 # clear out hardcoded Fink sed.
 pushd %i/bin 
 for file in mkoctfile-%v %{Ni}-bug-%v %{Ni}-config-%v 
 do 
 	perl -pi -e 's|%p/bin/sed|/usr/bin/env sed|g' $file
 done
 # generate Fink-gcc enabled mkoctfile
 cp mkoctfile-%type_raw[oct] mkoctfile-%type_raw[oct]-gcc%type_raw[gcc]
 perl -pi -e \
 's,oct\-cc,%p/bin/gcc-fsf-%type_raw[gcc],g; \
  s,oct\-cxx,%p/bin/g++-fsf-%type_raw[gcc],g' \
    mkoctfile-%type_raw[oct]-gcc%type_raw[gcc] 
 # create convenience symlink
 ln -s mkoctfile-%type_raw[oct]-gcc%type_raw[gcc] mkoctfile-gcc%type_raw[gcc] 
<<

InfoDocs: %{Ni}.info
DocFiles: BUGS COPYING ChangeLog* NEWS* PROJECTS README ROADMAP SENDING-PATCHES THANKS

SplitOff: <<
	Package: octave%type_pkg[oct]%type_pkg[-lapack]-shlibs
	Conflicts: << 
		%{Ni}%type_pkg[oct]-shlibs,
		%{Ni}%type_pkg[oct]-atlas-shlibs,
		%{Ni}%type_pkg[oct]-ref-shlibs,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5),
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		%{Ni}%type_pkg[oct]-shlibs,
		%{Ni}%type_pkg[oct]-atlas-shlibs,
		%{Ni}%type_pkg[oct]-ref-shlibs,
		%{Ni} (<< 3.0.5-5),	
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5),
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<	
	Depends:  <<
		fftw3-shlibs, 
		gcc%type_pkg[gcc]-shlibs, 
		hdf5.7-oldapi-shlibs, 
		readline6-shlibs, 	
		(%type_raw[-lapack] = -atlas) atlas-shlibs (>= 3.9.11-3),
		(%type_raw[-lapack] = -ref) lapack341-shlibs
	<<
	Provides: <<
		liboctave%type_pkg[oct]-gcc%type_pkg[gcc],
		liboctave%type_pkg[oct],
		(%type_raw[-lapack] = -atlas) liboctave%type_pkg[oct]-ptatlas,
		(%type_raw[-lapack] = -ref) liboctave%type_pkg[oct]-ref,
		(%type_raw[-lapack] = .) liboctave%type_pkg[oct]-accelerate
	<<
	Files: <<
		lib/%{Ni}-%v
	<<
	Shlibs: <<
		%p/lib/%{Ni}-%v/libcruft.dylib 0.0.0 %n (>=3.0.5-5)
		%p/lib/%{Ni}-%v/lib%{Ni}.dylib 0.0.0 %n (>=3.0.5-5)
		%p/lib/%{Ni}-%v/liboctinterp.dylib 0.0.0 %n (>=3.0.5-5)
	<<
	DescUsage: <<
	This package contains shared libraries which are used by the Octave
	interpreter itself, as well as for packages that build against Octave, 
	such as the various octave-forge packages.
    Any package that either links to the libraries in %{Ni}%type_pkg[-lapack]-shlibs or 
	installs an extension should Depend on %{Ni}%type_pkg[oct]%type_pkg[-lapack]-shlibs and BuildDepend
	on %{Ni}%type_pkg[oct]%type_pkg[-lapack]-dev.  In addition, it will need to BuildDepend on
	hdf5.7-oldapi and fftw3.  
	<<
	DocFiles: BUGS ChangeLog README ROADMAP SENDING-PATCHES COPYING
<<
SplitOff2: <<
	Package: octave%type_pkg[oct]%type_pkg[-lapack]-dev
	Depends: octave%type_pkg[oct]%type_pkg[-lapack]-shlibs (=%v-%r), gcc%type_pkg[gcc]-compiler, (%type_raw[-lapack] = atlas) atlas (>= 3.8.1-1)
	Conflicts: << 
		%{Ni}305-dev, 
		%{Ni}305-atlas-dev,
		%{Ni}305-ref-dev,  
		%{Ni}324-dev, 
		%{Ni}324-atlas-dev,
		%{Ni}324-ref-dev,
		%{Ni}324-x11-dev,
		%{Ni}324-atlas-x11-dev,
		%{Ni}324-ref-x11-dev,
		%{Ni}343-dev, 
		%{Ni}343-atlas-dev,
		%{Ni}343-ref-dev,
		%{Ni}343-x11-dev,
		%{Ni}343-atlas-x11-dev,
		%{Ni}343-ref-x11-dev,
		%{Ni}360-dev, 
		%{Ni}360-atlas-dev,
		%{Ni}360-ref-dev,
		%{Ni}360-x11-dev,
		%{Ni}360-atlas-x11-dev,
		%{Ni}360-ref-x11-dev,
		%{Ni}361-dev, 
		%{Ni}361-atlas-dev,
		%{Ni}361-ref-dev,
		%{Ni}361-x11-dev,
		%{Ni}361-atlas-x11-dev,
		%{Ni}361-ref-x11-dev,		
		%{Ni}362-dev,
		%{Ni}362-x11-dev,
		%{Ni}362-atlas-dev,
		%{Ni}362-atlas-x11-dev,
		%{Ni}362-ref-dev,
		%{Ni}362-ref-x11-dev,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5),
		mkoctfile%type_pkg[oct]-gcc46, 
		mkoctfile%type_pkg[oct]-gcc46-atlas
	<<
	Replaces: <<
		%{Ni}305-dev, 
		%{Ni}305-atlas-dev,
		%{Ni}305-ref-dev,  
		%{Ni}324-dev, 
		%{Ni}324-atlas-dev,
		%{Ni}324-ref-dev,
		%{Ni}324-x11-dev,
		%{Ni}324-atlas-x11-dev,
		%{Ni}324-ref-x11-dev,
		%{Ni}343-dev, 
		%{Ni}343-atlas-dev,
		%{Ni}343-ref-dev,
		%{Ni}343-x11-dev,
		%{Ni}343-atlas-x11-dev,
		%{Ni}343-ref-x11-dev,
		%{Ni}360-dev, 
		%{Ni}360-atlas-dev,
		%{Ni}360-ref-dev,
		%{Ni}360-x11-dev,
		%{Ni}360-atlas-x11-dev,
		%{Ni}360-ref-x11-dev,
		%{Ni}361-dev, 
		%{Ni}361-atlas-dev,
		%{Ni}361-ref-dev,
		%{Ni}361-x11-dev,
		%{Ni}361-atlas-x11-dev,
		%{Ni}361-ref-x11-dev,		
		%{Ni}362-dev,
		%{Ni}362-x11-dev,
		%{Ni}362-atlas-dev,
		%{Ni}362-atlas-x11-dev,
		%{Ni}362-ref-dev,
		%{Ni}362-ref-x11-dev,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5),
		mkoctfile%type_pkg[oct]-gcc46,
		mkoctfile%type_pkg[oct]-gcc46-atlas
	<<
	Provides: <<
		liboctave%type_pkg[oct]-gcc%type_pkg[gcc]-dev,
		liboctave%type_pkg[oct]-dev,
		(%type_raw[-lapack] = -atlas) liboctave%type_pkg[oct]-ptatlas-dev,
		(%type_raw[-lapack] = .) liboctave%type_pkg[oct]-accelerate-dev,
		(%type_raw[-lapack] = -ref) liboctave%type_pkg[oct]-ref-dev,
		(%type_raw[-lapack] = .) liboctave%type_pkg[oct]-accelerate-dev
	<<
	
	BuildDependsOnly: true
	
	Files: <<
		include/%{Ni}-%v
		bin/mkoctfile*
		bin/octave-config*
		share/man/man1/mkoctfile*.1
		share/man/man1/octave-config*.1
		share/%{Ni}/%v/scripts/oct-compiler.in
	<<
	DescUsage: <<
	This package contains files needed to build against Octave, including
	headers and the mkoctfile executable.  It also contains symlinks to Fink's
	compiler wrappers, which are set up at install time to be appropriate to
	the current machine setup.
	To use mkoctfile to build dynamically loadable modules, you will need 	
	to install the hdf5.7-oldapi and fftw3 packages.
 	%n cannot Depend on them since they are BuildDependsOnly.
	<<
	DescPackaging:  <<
	We make up an extra mkoctfile which uses a Fink gcc for packages that need
	stuff which isn't included in Xcode.
	<<
	DocFiles: BUGS ChangeLog README ROADMAP SENDING-PATCHES COPYING
	PostInstScript: <<
		cd %p/bin
		osversion=`uname -r | cut -d. -f1`
		case $osversion in
		 1[12]) perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-clang/cc,' \
							%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cc
				perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-clang/c++,' \
							%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cxx
				chmod a+x oct-cc oct-cxx ;;
			10) perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-10.6/cc,' \
							%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cc
				perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-10.6/c++,' \
							%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cxx
				chmod a+x oct-cc oct-cxx ;;
			9)  if [ "%m" = "x86_64" ]
					# use 10.6 compiler wrappers on 10.5/x86_64	
				then 
					perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-10.6/cc,' \
								%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cc
					perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-10.6/c++,' \
								%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cxx
					chmod a+x oct-cc oct-cxx
			 	else
			 		# default cc compilers on powerpc and i386 build with proper arch.
					ln -s /usr/bin/gcc oct-cc
					perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-g++-4.0/c++,' \
								%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cxx 
					chmod a+x oct-cxx
				fi ;;
			# fangism--feel free to update this
			*)  printf "You will need to generate your own %p/bin/oct-cc and %p/bin/oct-cxx symlinks.\n" ;;
		esac
	<<
	PreRmScript: <<
		if [ -e %p/bin/oct-cc ]
			then rm %p/bin/oct-cc
			else printf "%p/bin/oct-cc is not present.\n" 
		fi
		if [ -e %p/bin/oct-cxx ]
			then rm %p/bin/oct-cxx
			else printf "%p/bin/oct-cxx is not present.\n"
		fi
	<<
<<

Splitoff3: <<
	Package: octave%type_pkg[oct]%type_pkg[-lapack]
	Depends: <<
	%{Ni}%type_pkg[oct]%type_pkg[-lapack]-shlibs (=%v-%r),
	glpk-shlibs, gnuplot (>=4.2.0) | gnuplot-nox | gnuplot-nogtk,  
	fftw3-shlibs (>= 3.1.1-7), qhull5-shlibs,
	ncurses, aquaterm, libcurl4-shlibs, 
	libpcre1-shlibs,
	(%type_raw[-lapack] = -atlas) atlas-shlibs (>= 3.8.1-1)
	<<
	Conflicts: << 
		(%type_raw[-lapack] = atlas) %{Ni}%type_pkg[oct], 
		(%type_raw[-lapack] != atlas) %{Ni}%type_pkg[oct]-atlas, 
		(%type_raw[-lapack] = atlas) %{Ni} (<< 3.0.5-5), 
		(%type_raw[-lapack] != atlas) %{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), %{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		(%type_raw[-lapack] = atlas) %{Ni}%type_pkg[oct]-dev, 
		(%type_raw[-lapack] != atlas) %{Ni}%type_pkg[oct]-atlas-dev, 
		%{Ni} (<< 3.0.5-5), %{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), %{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Provides: <<
									octave%type_pkg[oct]-interpreter,
	(%type_raw[-lapack] = -atlas) 	octave%type_pkg[oct]-interpreter-ptatlas,
	(%type_raw[-lapack] = -ref) 	octave%type_pkg[oct]-interpreter-ref,
	(%type_raw[-lapack] = .) 	octave%type_pkg[oct]-interpreter-accelerate
	<<
	
	Files: <<
		share/%{Ni}/%v
		lib/%{Ni}/%v
		bin/%{Ni}-%v
		bin/%{Ni}-bug-%v
		var/%{Ni}/%v
		share/man/man1/%{Ni}-%v.1
		share/man/man1/%{Ni}-bug-%v.1
	<<
	RuntimeVars: <<
 		GNUTERM: aqua
		<<
	DescUsage: <<
	The %{Ni}%type_pkg[oct]%type_pkg[-lapack] package contains versioned
	executables, in particular the "%{Ni}-%type_raw[oct]" executable,
	as well as all of the core functionality of the Octave interpreter.  
	Note that the GNU info file, which provides the core documentation, 
	is installed as part of the "%{Ni}%type_pkg[oct]%type_pkg[-lapack]" package.
    
	By default the plotting output (via gnuplot) is directed to AquaTerm. 
	This can be overidden in your startup scripts, e.g.
 
 		export GNUTERM=x11
 
	in bash
 
	or
 
		setenv GNUTERM x11
 
	in tcsh.
 
	Note:  Fink's Octave implementation modifies one of the startup files,
	%p/share/%{Ni}/%v/m/startup/octaverc,
	to initialize octave sessions to know about Fink's octave-versioned 
	install location for octave-forge packages.  If you use the '--norc' 
	or '-f' flags in your Octave script, these packages won't be visible.  
	You'll need to run the following command in your script:
 
		pkg global_list %p/var/octave/%v/octave_packages
<<
	DocFiles: BUGS ChangeLog README ROADMAP SENDING-PATCHES COPYING
<<

Description: MATLAB-like language for computations
DescDetail: <<
The %{Ni}%type_pkg[-lapack] package contains unversioned executables and an 
unversioned directory tree.  

Octave provides a convenient command line interface for solving linear and 
nonlinear problems numerically, and for performing other numerical 
experiments using a language that is mostly compatible with Matlab.
It may also be used as a batch-oriented language.

Octave has extensive tools for solving common numerical linear algebra
problems, finding the roots of nonlinear equations, integrating ordinary
functions, manipulating polynomials, and integrating ordinary differential
and differential-algebraic equations. It is easily extensible and 
customizable via user-defined functions written in Octave's own language, 
or using dynamically loaded modules written in C++, C, Fortran, 
or other languages.
<<
DescUsage: << 
By default the plotting output (via gnuplot) is directed to AquaTerm. 
This can be overidden in your startup scripts, e.g.
 
	export GNUTERM=x11
 
in bash
 
or
 
	setenv GNUTERM x11
 
in tcsh.
 
Note:  Fink's Octave implementation modifies one of the startup files,
%p/share/%{Ni}/%v/m/startup/octaverc,
to initialize octave sessions to know about Fink's octave-versioned 
install location for octave-forge packages.  If you use the '--norc' or '-f'
flags in your Octave script, these packages won't be visible.  You'll need to
run the following command in your script:
 
 	pkg global_list %p/var/octave/%v/octave_packages
 
<<
DescPort: <<
Thanks to Per Persson for most (if not all) of the work on the macos X port.

As of revision 125|225:  the non-atlas variant is built with -ff2c in the FFLAGS, 
because this appears to be necessary when using the Accelerate framework.
<<
DescPackaging:  <<
Set the GNUTERM environment variable to AquaTerm because autodetection
of DISPLAY seems to cause options to be fed to our gnuplot that it doesn't 
understand.
AquaTerm seems to be a sensible default, particularly since gnuplot-nox is also a 
legal dependency.

Not sane (and now not even compilable) to use private code
from glpk. Import the functions needed so can still use it
even when glpk stops exporting its internals. See:
	http://octave.1599824.n4.nabble.com/GLPK-interface-was-Re-Multithreaded-Atlas-td1654632.html
 
Remove a desktop file that gets generated only for users with GNOME/KDE installed.

As of 3.0.5-5, we have split the package up into runtime, development, and library packages,
to make upgrades easier for us and for users.
	
As of 3.0.5-5:  generate common octave-forge bash and octave scripts, 
based on the ones by Johnathan Stickel in the original octave-forge-foo 
packages, in _this_ package, so that any required changes can be made in 
a common location rather than spread out over many packages.
Unfortunately, Octave's 'pkg' tool doesn't seem to know how to deal with 
variables, and the individual octave-forge  packages have to make copies
of the octave scripts during their build process and edit them to use the
package's name.

As of revision 325:  

Patch oct-conf.h, mkoctfile, and octave-bug not to put "flag-sort -r" in the 
name of the compiler used, and to use the full path of Fink's compiler wrappers.
Also, we add the BLAS C library to BLAS_LIBS in the -atlas variant.  This makes
sure that anything that builds against Octave has the proper information when 
installed manually as well as via Fink, and is critical for 10.6/i386 (and 10.5
/x86_64) users.  Unfortunately, this requires a rebuild on OS upgrades, because
the information in oct-conf.h gets hardcoded into the Octave interpreter 
executable, and some octave-forge packages get information from that.

As of revision 326:

Get rid of the ugly construction previously used for setting the BLAS and 
LAPACK libraries.

Now includes an additional mkoctfile which uses Fink's gcc46 compilers instead
of Xcode's.

As of revision 701:

Actually _install_ the manpages for the versioned executables.

As of revision 3002:

Don't use METIS, because of its license.

As of revision 3004:

Due to issues with qhull6, use qhull5 instead.
Clean up octave-forge build scripts.

As of revision 3005:

Our specifications of FLIBS, LAPACK_LIBS, and BLAS_LIBS weren't quite right
(the latter two are OK in the non-atlas variant); fix so that newer upstream
octave-forge packages that use these will work without patching for this.

Patch oct-conf.h and mkoctfile to use octave-specific compiler executables.  
These go in the -dev package, and are either wrappers around Fink's compiler
wrappers or symlinks to the Xcode compilers, as appropriate for the OS version.
They are resolved in the PostInstScript so that they set themselves 
appropriately for the OS version where Octave is installed, rather than where
it is built, thereby avoiding the necessity to rebuild Octave when updating
the OS.
This allows unification of the 10.5 and 10.6 package descriptions and syncing
revisions with 10.7.

These two fixes, which applied in all of our Octave packages, constitute 
"liboctave-v2".

As of revision 3013: 
Switch to using gcc47.  Since octave-forge packages for octave < 3.6.0
link to whatever gcc4N Octave is using, and also since some other packages
actually use gcc-4.N, add "liboctave-gcc47-dev" and "liboctave-gcc47" 
Provides, to make sure that things stay in sync; the latter isn't used yet.

As of revision 3015:
Build against the parallel-threaded libraries from atlas-3.9.76+ in the
-atlas variant.  To ensure that Octave-forge packages get updated 
accordingly we've replaced "atlas" in the Provides with "ptatlas".
We also replace "veclib" with "accelerate".

As of Revision 3016:
Move the RuntimeVars setup to the versioned executable package.

As of Revision 3018: Some additional RuntimeDepends were needed for full 
functionality.  Add reference LAPACK variant.

As of Revision 3020:
Just noticed that a function wasn't building due to use of a now-nonexistent
libcurl header.  Patch to use the current standard.
<<
Homepage: http://www.gnu.org/software/octave//
License: GPL3
<<
