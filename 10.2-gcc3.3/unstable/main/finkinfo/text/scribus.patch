diff -aur scribus-1.1.1/scribus/art_kmisc.c scribus-1.1.1.corr/scribus/art_kmisc.c
--- scribus-1.1.1/scribus/art_kmisc.c	Sat Aug 23 20:42:03 2003
+++ scribus-1.1.1.corr/scribus/art_kmisc.c	Sat Oct  4 22:45:30 2003
@@ -417,9 +417,15 @@
 				src_x = floor (src_pt.x);
 				src_y = floor (src_pt.y);
 				src_p = src + (src_y * src_rowstride) + src_x * 4;
+#if X_BYTE_ORDER == X_BIG_ENDIAN
+                                dst_p[0] = dst_p[0] + (((src_p[1] - dst_p[0]) * src_p[0] + 0x80) >> 8);
+                                dst_p[1] = dst_p[1] + (((src_p[2] - dst_p[1]) * src_p[0] + 0x80) >> 8);
+                                dst_p[2] = dst_p[2] + (((src_p[3] - dst_p[2]) * src_p[0] + 0x80) >> 8);
+#else
 				dst_p[0] = dst_p[0] + (((src_p[2] - dst_p[0]) * src_p[3] + 0x80) >> 8);
 				dst_p[1] = dst_p[1] + (((src_p[1] - dst_p[1]) * src_p[3] + 0x80) >> 8);
 				dst_p[2] = dst_p[2] + (((src_p[0] - dst_p[2]) * src_p[3] + 0x80) >> 8);
+#endif
 				dst_p += 4;
 			}
 			dst_linestart += dst_rowstride;
diff -aur scribus-1.1.1/scribus/scpainter.cpp scribus-1.1.1.corr/scribus/scpainter.cpp
--- scribus-1.1.1/scribus/scpainter.cpp	Wed Sep 10 22:51:08 2003
+++ scribus-1.1.1.corr/scribus/scpainter.cpp	Sat Oct  4 22:41:01 2003
@@ -450,7 +450,11 @@
 		{
 		color = m_fill;
 		af = qRound( 255 * fill_trans );
+ #if X_BYTE_ORDER == X_BIG_ENDIAN
+		fillColor = ( color.red() << 24 ) | ( color.green() << 16 ) | ( color.blue() << 8 );
+ #else
 		fillColor = ( 0 << 24 ) | ( color.blue() << 16 ) | ( color.green() << 8 ) | color.red();
+ #endif
 		ArtSvpWriter *swr;
 		ArtSVP *temp;
 		temp = art_svp_from_vpath( vec );
@@ -469,7 +473,11 @@
 		ArtPathStrokeJoinType joinStyle = ART_PATH_STROKE_JOIN_MITER;
 		color = m_stroke;
 		as = qRound( 255 * stroke_trans );
+#if X_BYTE_ORDER == X_BIG_ENDIAN
+                strokeColor = ( color.red() << 24 ) | ( color.green() << 16 ) | ( color.blue() << 8 );
+#else
 		strokeColor = ( 0 << 24 ) | ( color.blue() << 16 ) | ( color.green() << 8 ) | color.red();
+#endif
 		double ratio = m_zoomFactor;//sqrt(pow(affine[0], 2) + pow(affine[3], 2)) / sqrt(2);
 		if( m_array.count() > 0 )
 			{
