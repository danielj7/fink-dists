Package: seamonkey
Version: 1.0.6
Revision: 1
Source-MD5: 16e1c6bab1e3832b22863933b5b032e7
Source: mirror:custom:mozilla.org/%N/releases/%v/%N-%v.source.tar.bz2
CustomMirror: <<
  Primary: http://ftp.mozilla.org/pub/
  nam-US: ftp://ftp.tux.org/pub/net/mozilla/
  eur-DE: ftp://ftp.fh-wolfenbuettel.de/pub/www/mozilla/
  asi-JP: http://www.t.ring.gr.jp/pub/net/www/mozilla/
<<
SourceDirectory: mozilla
Depends: %N-shlibs (>= %v-%r), libgnomeui2
BuildDepends: atk1, cairo, gconf2-dev, glib2-dev, glitz, gnome-vfs2-unified-dev, gtk+2-dev, libbonobo2-dev, libgettext3-dev, libgnome2-dev, libgnomeui2-dev, libiconv-dev, libidl2, libjpeg, libpng3, orbit2-dev, pango1-xft2-dev, xft2-dev, x11-dev, pkgconfig
GCC: 4.0
NoSetLDFLAGS: true
SetLIBRARY_PATH: %p/lib
NoSetCPPFLAGS: true
SetCPPFLAGS: -I%p/include/cairo
PatchScript: <<
 #!/bin/sh -ev
 sed 's|@PREFIX@|%p|g' <%a/%n.patch | patch -p1
 perl -pi.bak -e 's,\@executable_path,%p/lib/%N,' security/coreconf/Darwin.mk
 perl -pi.bak -e 's/(AC_DEFUN\()([^[,]+)(,)/\1\[\2]\3/' {{build,directory/c-sdk/config}/autoconf,nsprpub/config}/nspr.m4
### The next appears needed eg when building yelp...
 perl -pi.bak -e 's,lxpcom,$& -lxpcom_core,' build/unix/mozilla-{config,xpcom.pc}.in
#### MISSING INCLUDES
 perl -pi.bak -e 's,NSSP,P,; s,nss,,' security/nss/lib/pki1/oiddata.h
## The following is "for safety" : to avoid "implicit declaration" warnings :
 perl -pi.bak -e 's,\(XP_OS2\) \&\& \!defined\(DARWIN\)$,\(XP_OS2\),' directory/c-sdk/ldap/libraries/liblber/lber-int.h
 sed -i.bak -e '/sqliteInt\.h/a \
#include "os.h"' db/sqlite3/src/experimental.c
#### MISC
## configure fails to detect libresolv (hence the 'env' before ./configure),
## and even if it would detect it, it forgets to add -lresolv to LIBS  (Still true with seamonkey ??)
## We put it as far as possible in the link line _ and just for the link that needs it, in order not to get
## libresolv in the LOAD_COMMANDS everywhere :
 perl -pi.bak -e 's,^MODULE\s,OS_LIBS += -lresolv\n$&,' netwerk/build/Makefile.in
####
### Finally, ad-hoc correction of some install_names :
 perl -pi -e "s;rules.mk;$&\nEXTRA_DSO_LDOPTS := \\\$\(subst install_name \\\$\(mozappdir\)/,install_name \\\$\(mozappdir\)/ipc/modules/,\\\$\(EXTRA_DSO_LDOPTS\)\);" ipc/ipcd/{extensions/{lock/src,transmngr},test}/module/Makefile.in
 perl -pi -e "s;rules.mk;$&\nEXTRA_DSO_LDOPTS := \\\$\(subst install_name \\\$\(mozappdir\)/,install_name \\\$\(mozappdir\)/plugins/,\\\$\(EXTRA_DSO_LDOPTS\)\);" modules/plugin/samples/{default/unix,unixprinting}/Makefile.in
### New with 1.0.1 :
# 1) till this version, the zapping of '-DXP_MACCOSX' in the patch file (this goes back to the first versions of mozilla!)
# ensured that no frameworks were needed on the link line... What is going on ?
  perl -pi.bak -e 's,endif \# WINNT,$&\nEXTRA_DSO_LDOPTS += -F/System/Library/Frameworks -framework CoreFoundation,' xpcom/build/Makefile.in
# 2) Non-portable use of sed (not even useable with GNU sed !)
  perl -pi.bak -e 's,sed \-E,/usr/bin/$&,' xpcom/typelib/xpidl/Makefile.in
## To fix EXC_BAD_INSTRUCTION on macintel (XP_MACOSX is zapped in the patch file):
  perl -pi.bak -e 's,XP_MACOSX,__APPLE__,' xpcom/reflect/xptcall/src/md/unix/xptc{stubs_unixish_x86.cpp,_platforms_unixish_x86.h}
## linking nspr with g++ when using --enable-cplus
  perl -pi -e 's,cplus$,$&\n\tMKSHLIB = \$(CCC) \$(DSO_LDOPTS) -o \$@,' nsprpub/pr/src/Makefile.in
## Uncomment to check builddeps:
#  perl -pi -e 's,CPPFLAGS%%,CPPFLAGS -H%%,' configure
<<
##########
#  --enable-default-toolkit=cairo-gtk2 not useable (also w/o --enable-system-cairo) :
# "nsCairoRenderingContext.cpp:99: error: 'cairo_set_target_surface_DEPRECATED_BY_cairo_create' was not declared in this scope"
# : files in src refer (not always!) to a deprecated version of cairo...
# https://bugzilla.mozilla.org/show_bug.cgi?id=334250
## can't enable static : "configure: error: Only one of --enable-shared or --enable-static must be specified."
ConfigureParams: --enable-xft --disable-freetype2 --enable-calendar --enable-optimize="-O3" --disable-debug --enable-application=suite --enable-macos-target=10.4 --enable-default-toolkit=gtk2 --with-pthreads --with-default-mozilla-five-home=%p/lib/%N --mandir=%p/share/man --enable-strip --enable-extensions=all --enable-image-decoders=all --enable-ldap-experimental --enable-necko-protocols=all --enable-ctl --enable-xinerama --with-system-mng --with-system-jpeg --with-system-png --with-system-zlib --enable-postscript --enable-ipv6 --enable-tests --with-x --enable-xprint --enable-canvas --with-qtdir=%p --enable-pango --enable-update-packaging --enable-storage --enable-profilesharing --enable-svg --enable-system-cairo --enable-svg-renderer=cairo --enable-cplus
# no -fstrict-aliasing in '--enable-optimize', else "dereferencing type-punned pointer will break strict-aliasing rules" warnings
# dropped "--enable-xpctools" . Add --enable-javaxpcom (needs xulrunner ?)
# Also "--enable-boehm" leads to trouble...; probably not important (for a 'production' pkg): according to
# http://www.hpl.hp.com/personal/Hans_Boehm/gc/ , it is only used as a leak detector.
CompileScript: <<
#!/bin/sh -ev
export CPATH=%p/include
env ac_cv_func_res_ninit=yes MOZ_ENABLE_COREXFONTS=1 ./configure %c
## next is needed for extensions/java/xpcom/nsJavaInterfaces.cpp, when using "--enable-javaxpcom"
# not sufficient : trouble at link time then (for same symbols) _ make should be run in toolkit/xre
# (cf above comment "--enable-javaxpcom (needs xulrunner ?)")
#ln -s ../../../../toolkit/xre/nsXULAppAPI.h extensions/java/xpcom/src
make -w
<<
InstallScript: <<
#!/bin/sh -ev

make install DESTDIR=%d

# The following gets installed twice. To hedge our bets, put a symlink in one of the 2 places :
if test -f %i/lib/%N/ipc/modules/libtestmodule.dylib
   then if test -f %i/lib/%N/libtestmodule.dylib
           then rm -f %i/lib/%N/libtestmodule.dylib ; ln -s ipc/modules/libtestmodule.dylib %i/lib/%N
        fi
fi

# Install NSS headers.
/bin/cp -R -L dist/public/nss %i/include/%N/nss

# These files are redundant.
# comment out to see..
#for f in %i/lib/%N/chrome/*.jar; do
#  rm -rf ${f/.jar/}
#done

# These files are created dynamically.
#rm -rf %i/lib/%N/chrome/overlayinfo
rm -f %i/lib/%N/chrome/*.rdf
#rm -f %i/lib/%N/component.reg
rm -f %i/lib/%N/components/*.dat

# Multi user setting.
touch %i/lib/%N/chrome/user-skins.rdf
touch %i/lib/%N/chrome/user-locales.rdf

# Empty installed-chrome.txt.
mkdir -p %i/var/lib/%N/chrome.d
mv %i/lib/%N/chrome/installed-chrome.txt %i/var/lib/%N/chrome.d
touch %i/lib/%N/chrome/installed-chrome.txt

# Install fink specific files.
install -d -m 755 %i/bin %i/sbin %i/var/lib/%N/chrome.d
# keep for the moment the file, but under the name moz
# in order not to conflict with mozilla, to compare with the original %i/bin/%N
install -c -m 755 fink/mozilla %i/bin/moz
install -c -m 755 fink/update-%N-chrome %i/sbin
install -c -m 644 fink/chrome.d/* %i/var/lib/%N/chrome.d/

# Move config file into %p/etc.
install -d -m 755 %i/etc/%N
install -c -m 644 fink/prefs.js %i/etc/%N
ln -sf %p/etc/%N/prefs.js %i/lib/%N/defaults/pref/fink.js

# Install gnome .desktop files.
install -d -m 755 %i/share/applications
install -c -m 644 fink/applications/* %i/share/applications/

install -d -m 755 %i/share/pixmaps
install -c -m 644 dist/bin/chrome/icons/default/main-window.xpm %i/share/pixmaps/%N.xpm
install -c -m 644 dist/bin/chrome/icons/default/addressbookWindow.xpm %i/share/pixmaps/%N-addressbook.xpm
install -c -m 644 dist/bin/chrome/icons/default/chatzilla-window.xpm %i/share/pixmaps/%N-chatzilla.xpm
install -c -m 644 dist/bin/chrome/icons/default/editorWindow.xpm %i/share/pixmaps/%N-editor.xpm
install -c -m 644 dist/bin/chrome/icons/default/msgcomposeWindow.xpm %i/share/pixmaps/%N-mail-composer.xpm
install -c -m 644 dist/bin/chrome/icons/default/messengerWindow.xpm %i/share/pixmaps/%N-mailnews.xpm
install -c -m 644 dist/bin/chrome/icons/default/calendar-window.xpm %i/share/pixmaps/%N-calendar.xpm
### And all others remain in ???
# ls -l %p/bld/mozilla-1.7.11-5/mozilla/dist/bin/chrome/icons/default
# total 140

# Install a symlink to the docfiles
mkdir -p %i/share/doc; ln -s %N-shlibs %i/share/doc/%n
<<
ConfFiles: %p/etc/%N/prefs.js
PostInstScript: <<
# Those 2 empty files are not installed by dpkg
    touch %p/lib/%N/chrome/user-skins.rdf
    touch %p/lib/%N/chrome/user-locales.rdf

    if [ configure = "$1" ]; then
        update-%N-chrome
    fi
<<
PostRmScript: <<
  case "$1" in
    purge)
      rm -rf %p/lib/%N/chrome/overlayinfo
      rm -f %p/lib/%N/chrome/*.rdf
      rm -f %p/lib/%N/component.reg
      rm -f %p/lib/%N/components/*.dat
      ;;
  esac
<<

SplitOff: <<
  Package: %N-shlibs
  Depends: cairo-shlibs, gnome-vfs2-unified-shlibs, gtk+2-shlibs
  DocFiles: LEGAL LICENSE
  Description: Seamonkey - shared libraries
# Many "dylib"'s under lib/%N are in fact bundles, hence don't belong here.
# Further the exact sets, both dylibs and of bundles, vary with %c _ and from %v to %v,
# so we don't want to hardcode them.
#  InstallScript: <<
#    #!/bin/sh -ev
#    mkdir -p %i/lib/%N/plugins
#    for dir in lib/%N lib/%N/plugins
#	do
#	   cd %I/$dir
#	   for f in `ls -1 *.dylib|xargs file|grep dynamically|cut -f1 -d:`
#		do mv $f %i/$dir
#	   done
#	   cd -
#	done
#    mv %I/lib/%N/ipc %i/lib/%N
#  <<
## but I see currently no reasonable way to list the bundles that can be linked from shlibs _ and those
## should probably for sanity be added here. Have some evidence that many of them in fact can...
## So, for the moment, put all of them here too...
## And let us add, for files, the subdirs  lib/%N/chrome, lib/%N/greprefs and lib/%N/res _ trusting Hanspeter on this...
  Files: lib/%N/lib*.dylib lib/%N/chrome lib/%N/components lib/%N/greprefs lib/%N/ipc lib/%N/plugins lib/%N/res
# The following depends strongly on %c. Adjust at the last minute.
# Here all shared libs are listed. One could probably consider those in plugins and ipc as meant to be internal, and omit them.
  Shlibs: <<
    %p/lib/%N/libDebugRobot.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libgfxpsshar.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libgkgfx.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libgtkembedmoz.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libgtkxtbin.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libjsj.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libldap50.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libmozjs.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libmozpango-dvngx.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libmozpango-thaix.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libmozpango.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libmsgbaseutil.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libnpsimple.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libnspr4.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libnss3.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libplc4.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libplds4.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libprldap50.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libsmime3.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libsoftokn3.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libssl3.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libxlibrgb.dylib 1.0.0 %n (>= 1.0.6-1)
    %p/lib/%N/libxpcom.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libxpcom_compat.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libxpcom_core.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/libxpistub.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/plugins/libnullplugin.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/plugins/libunixprintplugin.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/ipc/modules/liblockmodule.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/ipc/modules/libtransmgr.dylib 1.0.0 %n (>= 1.0-1)
    %p/lib/%N/ipc/modules/libtestmodule.dylib 1.0.0 %n (>= 1.0-1)
  <<
#    %p/lib/%N/libxlibrgb.dylib 1.0.0 %n (>= 1.7.11-1)  seems to disappear and reappear ..
<<
SplitOff2: <<
  Package: %N-dev
  Depends: %N-shlibs (= %v-%r), pkgconfig
# The following is for %p/share/aclocal/nspr.m4 (the only common file);
# since the different nspr.m4 are identical, (and hardly or not used within fink),
# a Conflicts is not required _ and would at the moment be excessive prudence just for hypothetical cases.
#  Conflicts: mozilla-dev, firefox-dev, firefox1.5-dev
  Replaces: mozilla-dev, firefox-dev, firefox1.5-dev
  BuildDependsOnly: true
  Description: Seamonkey - development headers and libraries
  InstallScript: mkdir -p %i/share/doc; ln -s %N-shlibs %i/share/doc/%n
  Files: bin/%N-config include lib/pkgconfig  share/aclocal share/idl
<<
Description: WWW, chat, mail, news, calendar, a-book, etc
DescDetail: <<
%N is an open-source web browser, designed for standards
compliance, performance and portability.
<<
DescPort: <<
The whole shlibs stuff is gratuitous: anyway the src doesn' version shared libs for darwin...
Have no time now to patch that (it is not a single place to fix...)

Adding (in patch) %p/lib/%N/components to DYLD_LIBRARY_PATH _ else links with qt3's libeditor...
(then added also plugins and ipc/modules, by analogy).
And then %p/lib, to make sure eg libcrypto comes from %p and not from /usr.
And then /usr/X11R6/lib between the latter 2, to make sure libfreetype.6.dylib comes from there..

Added in the patch -x flag to the regxpcom command in update-%N-chrome, to get correct PostInstScripts. 
(and use there same DYLD_LIBRARY_PATH as in %p/bin/%N).

A bunch of warnings still to look at:
warning: invalid access to non-static data member '...' of NULL object
<<
DescPackaging: <<
 After original packaging and porting of mozilla by msek
 Simpler _ even for user _ to have just %N, %N-dev and %N-shlibs
<<
License: OSI-Approved
Maintainer: The Gnome Core Team <fink-gnome-core@lists.sourceforge.net>
Homepage: http://www.mozilla.org/projects/seamonkey
