--- contrib/uiuc/plugins/molfile_plugin/src/jsplugin.c.orig	2015-03-25 10:31:53.000000000 -0400
+++ contrib/uiuc/plugins/molfile_plugin/src/jsplugin.c	2015-03-25 10:33:33.000000000 -0400
@@ -400,8 +400,6 @@
   /* skip bulk solvent, useful for faster loading of very large */
   /* structures                                                 */
   if (getenv("VMDJSMAXATOMIDX") != NULL) {
-    fio_size_t bszmask;
-
     int maxatomidx = atoi(getenv("VMDJSMAXATOMIDX"));
     if (maxatomidx < 0)
       maxatomidx = 0;
--- contrib/uiuc/plugins/molfile_plugin/src/moldenplugin.c.orig	2015-03-25 10:35:19.000000000 -0400
+++ contrib/uiuc/plugins/molfile_plugin/src/moldenplugin.c	2015-03-25 10:36:07.000000000 -0400
@@ -825,7 +825,6 @@
       for (j=0; j<numprims; j++) {
         int nr;
         double expon=0.f, coeff1, coeff2=0.f;
-	char s_expon[128], s_coeff1[128], s_coeff2[128];
 	if (!fgets(buffer,1024,data->file)) return FALSE;
 
 	/* MOLDEN writes the basis set coefficients using Fortran style notation 
--- modules/cealign/src/tnt/tnt_matrix.h.orig	2015-03-25 10:37:26.000000000 -0400
+++ modules/cealign/src/tnt/tnt_matrix.h	2015-03-25 10:38:08.000000000 -0400
@@ -546,7 +546,7 @@
 #endif
 
     Subscript M = A.num_rows();
-    Subscript N = A.num_cols();
+    // Subscript N = A.num_cols();
     Subscript K = B.num_cols();
 
     Matrix<T> tmp(M,K);
--- contrib/uiuc/plugins/molfile_plugin/src/edmplugin.cpp.orig	2015-03-25 10:40:14.000000000 -0400
+++ contrib/uiuc/plugins/molfile_plugin/src/edmplugin.cpp	2015-03-25 10:43:03.000000000 -0400
@@ -204,7 +204,7 @@
                          float *colorblock) {
   edm_t *edm = (edm_t *)v;
   float * cell = datablock;
-  int z, l, sentinel, convcnt;
+  int z, sentinel, convcnt;
   char readbuf[16];
  
   int xsize = edm->vol[0].xsize;
@@ -217,7 +217,6 @@
   if ((nlines * 6) < nperslice) {
     nlines++;
   }
-  int leftover = (nperslice - (nlines - 1) * 6);
 
   for (z=0; z<zsize; z++) {
     int c;
@@ -236,6 +235,8 @@
     }
     eatline(edm->fd);                // go on to next line
 #else
+    int l;
+    int leftover = (nperslice - (nlines - 1) * 6);
     for (l=1; l<nlines; l++) {
       for (c=0; c<6; c++) {
         fgets(readbuf, 13, edm->fd); // read in 12 chars (fgets reads N-1)
--- contrib/uiuc/plugins/molfile_plugin/src/maeffplugin.cpp.orig	2015-03-25 10:50:15.000000000 -0400
+++ contrib/uiuc/plugins/molfile_plugin/src/maeffplugin.cpp	2015-03-25 10:50:58.000000000 -0400
@@ -1880,7 +1880,9 @@
 
     // assign ct for each particle, and count ct atoms and pseudos
     std::vector<int> atom_ct(h->nparticles);
+#if defined(DESRES_CTNUMBER)
     int last_ctnumber = -1;
+#endif
     int ct = 1;
     for (int i=0; i<h->nparticles; i++) {
       const molfile_atom_t &a = atoms[i];
--- contrib/uiuc/plugins/molfile_plugin/src/spiderplugin.cpp.orig	2015-03-25 10:52:14.000000000 -0400
+++ contrib/uiuc/plugins/molfile_plugin/src/spiderplugin.cpp	2015-03-25 10:52:47.000000000 -0400
@@ -274,7 +274,7 @@
                          float *colorblock) {
   spider_t *vol = (spider_t *)v;
   FILE *fd = vol->fd;
-  int x, y, z, xsize, ysize, zsize, xysize, total;
+  int xsize, ysize, zsize, xysize, total;
 
   xsize = vol->vol[0].xsize;
   ysize = vol->vol[0].ysize;
--- contrib/uiuc/plugins/molfile_plugin/src/mdfplugin.cpp.orig	2015-03-25 10:54:02.000000000 -0400
+++ contrib/uiuc/plugins/molfile_plugin/src/mdfplugin.cpp	2015-03-25 10:54:23.000000000 -0400
@@ -132,7 +132,6 @@
   char bond_records[LINESIZE];
   int bonds = 0;
   char *tmp;
-  int retval;
   
   // no bonds or parse error
   if ( get_mdf_bonds(bond_records, line) < 1) {
--- contrib/uiuc/plugins/molfile_plugin/src/mmcif.cpp.orig	2015-03-25 10:55:50.000000000 -0400
+++ contrib/uiuc/plugins/molfile_plugin/src/mmcif.cpp	2015-03-25 10:56:47.000000000 -0400
@@ -82,7 +82,6 @@
 }
 
 static int read_mmcif_timestep(void *mydata, int natoms, molfile_timestep_t *ts) {
-  mmcifdata *data = (mmcifdata *)mydata;
 
   // XXX not finished yet 
   return MOLFILE_ERROR;
--- layer0/ShaderMgr.cpp.orig	2015-05-09 19:24:05.000000000 -0400
+++ layer0/ShaderMgr.cpp	2015-05-09 19:24:57.000000000 -0400
@@ -732,7 +732,7 @@
   int major, minor;
   char buf[50];
   CShaderPrg *defaultShader = NULL, *volumeShader = NULL, *sphereShader = NULL, *defaultScreenShader = NULL,
-    *cylinderShader = NULL, *spheredirectShader = NULL, *labelShader = NULL, *labelScreenShader = NULL, *indicatorShader = NULL,
+    *cylinderShader = NULL, *labelShader = NULL, *labelScreenShader = NULL, *indicatorShader = NULL,
     *bgShader = NULL, *screenShader = NULL, *rampShader = NULL;
   int ok = 0;
   GLenum err; 
--- layer2/ObjectMolecule.cpp.orig	2015-05-09 19:22:04.000000000 -0400
+++ layer2/ObjectMolecule.cpp	2015-05-09 19:22:36.000000000 -0400
@@ -8531,7 +8531,6 @@
   int ok = true;
   int auto_show = RepGetAutoShowMask(G);
   WordType nameTmp;
-  OVreturn_word ovresult;
 
   p = buffer;
   nAtom = 0;

