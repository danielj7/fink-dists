diff -Naur EMBOSS-6.0.1/ajax/ajacd.c EMBOSS-6.0.1-patched/ajax/ajacd.c
--- EMBOSS-6.0.1/ajax/ajacd.c	2008-07-14 10:47:38.000000000 -0400
+++ EMBOSS-6.0.1-patched/ajax/ajacd.c	2009-04-07 06:44:12.000000000 -0400
@@ -8256,8 +8256,16 @@
 	    acdReplyInit(thys, ajStrGetPtr(gdev), &acdReplyDef);
 	else
 #ifndef WIN32
+#ifndef X_DISPLAY_MISSING /* X11 is available */
 	    acdReplyInit(thys, "x11", &acdReplyDef);
 #else
+#ifdef PLD_png          /* if png/gd/zlib libraries available for png driver */
+	    acdReplyInit(thys, "png", &acdReplyDef);
+#else
+	    acdReplyInit(thys, "ps", &acdReplyDef);
+#endif
+#endif
+#else
 	    acdReplyInit(thys, "win3", &acdReplyDef);
 #endif
     }
@@ -8426,8 +8434,16 @@
 	    acdReplyInit(thys, ajStrGetPtr(gdev), &acdReplyDef);
 	else
 #ifndef WIN32
+#ifndef X_DISPLAY_MISSING /* X11 is available */
 	    acdReplyInit(thys, "x11", &acdReplyDef);
 #else
+#ifdef PLD_png          /* if png/gd/zlib libraries available for png driver */
+	    acdReplyInit(thys, "png", &acdReplyDef);
+#else
+	    acdReplyInit(thys, "ps", &acdReplyDef);
+#endif
+#endif
+#else
 	    acdReplyInit(thys, "win3", &acdReplyDef);
 #endif
     }
@@ -11433,11 +11449,6 @@
     
     if(ajSeqIsNuc(val))
     {
-	if(seqin->Rev)
-	{
-	    okrev = ajTrue;
-	}
-
 	for(itry=acdPromptTry; itry && !okrev; itry--)
 	{
 	    ajStrAssignC(&acdReplyPrompt, "N");
@@ -11631,7 +11642,7 @@
 	okend = acdQualToSeqend(thys, "send", 0,
 				&seqin->End, &acdTmpStr);
 	okrev = acdQualToBool(thys, "sreverse", ajFalse,
-			      &seqin->Rev, &acdTmpStr);
+			      &sreverse, &acdTmpStr);
 
 	if(snuc)
 	    ajSeqinSetNuc(seqin);
@@ -11723,12 +11734,6 @@
 
     if(ajSeqIsNuc(seq))
     {
-	if(seqin->Rev)
-	{
-	    okrev = ajTrue;
-	    val->Rev = seq->Rev = seqin->Rev;
-	}
-
 	for(itry=acdPromptTry; itry && !okrev; itry--)
 	{
 	    ajStrAssignC(&acdReplyPrompt, "N");
@@ -11753,7 +11758,7 @@
 	}
     }
 
-    /* no need to reverse - it should happen in ajSeqallNext */
+
 
     acdLog("sbegin: %d, send: %d, sreverse: %B\n",
 	   sbegin, send, sreverse);
@@ -11906,7 +11911,7 @@
 	okend = acdQualToSeqend(thys, "send", 0,
 				&seqin->End, &acdTmpStr);
 	okrev = acdQualToBool(thys, "sreverse", ajFalse,
-			      &seqin->Rev, &acdTmpStr);
+			      &sreverse, &acdTmpStr);
 	
 	if(snuc)
 	    ajSeqinSetNuc(seqin);
@@ -12003,13 +12008,6 @@
 
     if(ajSeqsetIsNuc(val[0]))
     {
-	if(seqin->Rev)
-	{
-	    okrev = ajTrue;
-	    for(iset=0;iset<nsets;iset++)
-		val[iset]->Rev = seqin->Rev;
-	}
-
 	for(itry=acdPromptTry; itry && !okrev; itry--)
 	{
 	    ajStrAssignC(&acdReplyPrompt, "N");
@@ -12788,7 +12786,7 @@
 	okend = acdQualToSeqend(thys, "send", 0,
 				&seqin->End, &acdTmpStr);
 	okrev = acdQualToBool(thys, "sreverse", ajFalse,
-			      &seqin->Rev, &acdTmpStr);
+			      &sreverse, &acdTmpStr);
 	
 	if(snuc)
 	    ajSeqinSetNuc(seqin);
@@ -12876,12 +12874,6 @@
 
     if(ajSeqsetGetSize(val) && ajSeqsetIsNuc(val))
     {
-	if(seqin->Rev)
-	{
-	    okrev = ajTrue;
-	    val->Rev = seqin->Rev;
-	}
-
 	for(itry=acdPromptTry; itry && !okrev; itry--)
 	{
 	    ajStrAssignC(&acdReplyPrompt, "N");
@@ -15461,19 +15453,26 @@
 
 static void acdHelpExpectGraph(const AcdPAcd thys, AjBool table, AjPStr* str)
 {
-    if(!thys) return;
-
 #ifndef WIN32
-    if(table)
-	ajStrAppendC(str, "<i>EMBOSS_GRAPHICS</i> value, or x11");
-    else
-	ajStrAppendC(str, "$EMBOSS_GRAPHICS value, or x11");
+#ifndef X_DISPLAY_MISSING /* X11 is available */
+    const char* defdev = "x11";
+#else
+#ifdef PLD_png          /* if png/gd/zlib libraries available for png driver */
+    const char* defdev = "png";
+#else
+    const char* defdev = "ps";
+#endif
+#endif
 #else
+    const char* defdev = "win3";
+#endif
+
+    if(!thys) return;
+
     if(table)
-	ajStrAppendC(str, "<i>EMBOSS_GRAPHICS</i> value, or win3");
+	ajFmtPrintAppS(str, "<i>EMBOSS_GRAPHICS</i> value, or %s"), defdev;
     else
-	ajStrAppendC(str, "$EMBOSS_GRAPHICS value, or win3");
-#endif
+	ajFmtPrintAppS(str, "$EMBOSS_GRAPHICS value, or %s", defdev);
     return;
 }
 
@@ -19171,7 +19170,7 @@
 	    acdLog("number: %d jparam: %d acd->PNum: %d acdNParam: %d\n",
 		   number, jparam, acd->PNum, acdNParam);
 	    
-	    if(!number && !jparam && acd->PNum)
+	    if(!ajStrGetLen(master) && !number && !jparam && acd->PNum)
 	    {
 		for(itestparam = acd->PNum+1; itestparam <= acdNParam;
 		    itestparam++)
diff -Naur EMBOSS-6.0.1/ajax/ajseq.c EMBOSS-6.0.1-patched/ajax/ajseq.c
--- EMBOSS-6.0.1/ajax/ajseq.c	2008-07-14 10:54:44.000000000 -0400
+++ EMBOSS-6.0.1-patched/ajax/ajseq.c	2009-04-07 06:44:12.000000000 -0400
@@ -287,6 +287,7 @@
     pthis->Sv   = ajStrNew();
     pthis->Gi   = ajStrNew();
     pthis->Tax  = ajStrNew();
+    pthis->Organelle = ajStrNew();
     pthis->Type = ajStrNew();
     pthis->Db   = ajStrNew();
     pthis->Full = ajStrNew();
@@ -317,6 +318,9 @@
     pthis->Acclist = ajListstrNew();
     pthis->Keylist = ajListstrNew();
     pthis->Taxlist = ajListstrNew();
+    pthis->Cmtlist = ajListstrNew();
+    pthis->Xreflist = ajListstrNew();
+    pthis->Reflist = ajListstrNew();
 
     return pthis;
 }
@@ -344,6 +348,7 @@
     pthis->Sv   = ajStrNew();
     pthis->Gi   = ajStrNew();
     pthis->Tax  = ajStrNew();
+    pthis->Organelle = ajStrNew();
     pthis->Type = ajStrNew();
     pthis->Db   = ajStrNew();
     pthis->Full = ajStrNew();
@@ -374,6 +379,9 @@
     pthis->Acclist = ajListstrNew();
     pthis->Keylist = ajListstrNew();
     pthis->Taxlist = ajListstrNew();
+    pthis->Cmtlist = ajListstrNew();
+    pthis->Xreflist = ajListstrNew();
+    pthis->Reflist = ajListstrNew();
 
     return pthis;
 }
@@ -435,6 +443,7 @@
     pthis->Sv   = ajStrNew();
     pthis->Gi   = ajStrNew();
     pthis->Tax  = ajStrNew();
+    pthis->Organelle = ajStrNew();
     pthis->Type = ajStrNew();
     pthis->Db   = ajStrNew();
     pthis->Full = ajStrNew();
@@ -473,6 +482,9 @@
     pthis->Acclist = ajListstrNew();
     pthis->Keylist = ajListstrNew();
     pthis->Taxlist = ajListstrNew();
+    pthis->Cmtlist = ajListstrNew();
+    pthis->Xreflist = ajListstrNew();
+    pthis->Reflist = ajListstrNew();
 
     ajDebug("ajSeqNewRangeC rev:%B offset:%d/%d offend:%d/%d\n",
 	    rev, offset, pthis->Offset, offend, pthis->Offend);
@@ -552,6 +564,7 @@
     pthis->Sv   = ajStrNew();
     pthis->Gi   = ajStrNew();
     pthis->Tax  = ajStrNew();
+    pthis->Organelle = ajStrNew();
     pthis->Type = ajStrNew();
     pthis->Db   = ajStrNew();
     pthis->Full = ajStrNew();
@@ -623,6 +636,7 @@
     ajStrAssignS(&pthis->Sv, seq->Sv);
     ajStrAssignS(&pthis->Gi, seq->Gi);
     ajStrAssignS(&pthis->Tax, seq->Tax);
+    ajStrAssignS(&pthis->Organelle, seq->Organelle);
     ajStrAssignS(&pthis->Type, seq->Type);
 
     pthis->EType  = seq->EType;
@@ -662,6 +676,13 @@
 
     pthis->Taxlist = ajListstrNewList(seq->Taxlist);
 
+    pthis->Cmtlist = ajListstrNewList(seq->Cmtlist);
+
+    pthis->Xreflist = ajListstrNewList(seq->Xreflist);
+
+    pthis->Reflist = ajListstrNew();
+    ajSeqreflistClone(seq->Reflist, pthis->Reflist);
+
     ajStrAssignS(&pthis->Seq, seq->Seq);
     if (seq->Fttable)
 	pthis->Fttable = ajFeattableCopy(seq->Fttable);
@@ -730,6 +751,7 @@
     ajStrDel(&seq->Sv);
     ajStrDel(&seq->Gi);
     ajStrDel(&seq->Tax);
+    ajStrDel(&seq->Organelle);
     ajStrDel(&seq->Type);
     ajStrDel(&seq->Molecule);
     ajStrDel(&seq->Class);
@@ -1591,6 +1613,7 @@
     ajStrSetClear(&seq->Sv);
     ajStrSetClear(&seq->Gi);
     ajStrSetClear(&seq->Tax);
+    ajStrSetClear(&seq->Organelle);
     ajStrSetClear(&seq->Type);
     ajStrSetClear(&seq->Molecule);
     ajStrSetClear(&seq->Class);
@@ -5364,7 +5387,10 @@
 	seq->Begin = -(iend);
 
     for(i=0; i < seq->Size; i++)
+    {
+        seq->Seq[i]->Rev = ajTrue;
 	ajSeqReverseDo(seq->Seq[i]);
+    }
 
     ajDebug("  set result len: %d Begin: %d End: %d\n",
 	    ajSeqsetGetLen(seq), seq->Begin, seq->End);
diff -Naur EMBOSS-6.0.1/ajax/ajseqread.c EMBOSS-6.0.1-patched/ajax/ajseqread.c
--- EMBOSS-6.0.1/ajax/ajseqread.c	2008-07-14 10:52:48.000000000 -0400
+++ EMBOSS-6.0.1-patched/ajax/ajseqread.c	2009-04-07 06:44:13.000000000 -0400
@@ -1617,7 +1617,7 @@
     ajDebug("ready to start reading format '%S' '%S' %d..%d\n",
 	    seqin->Formatstr, seq->Formatstr, seqin->Begin, seqin->End);
 
-    while(ajSeqRead(seq, seqin))
+    while(!seqin->multidone && ajSeqRead(seq, seqin))
     {
 	if (seqin->List)
 	    ajSeqinClearPos(seqin);
diff -Naur EMBOSS-6.0.1/ajax/ajseqwrite.c EMBOSS-6.0.1-patched/ajax/ajseqwrite.c
--- EMBOSS-6.0.1/ajax/ajseqwrite.c	2008-07-14 10:58:07.000000000 -0400
+++ EMBOSS-6.0.1-patched/ajax/ajseqwrite.c	2009-02-16 10:58:39.000000000 -0500
@@ -451,6 +451,7 @@
     pthis->Sv    = ajStrNew();
     pthis->Gi    = ajStrNew();
     pthis->Tax   = ajStrNew();
+    pthis->Organelle = ajStrNew();
     pthis->Desc  = ajStrNew();
     pthis->Type  = ajStrNew();
     pthis->EType = 0;
@@ -3743,7 +3744,7 @@
 	ajFmtPrintF(outseq->File, "DE   %S\n", outseq->Desc);
     
     if(ajStrGetLen(outseq->Tax))
-	ajFmtPrintF(outseq->File, "OS   %S\n", outseq->Tax);
+	ajFmtPrintF(outseq->File, "OS   %S.\n", outseq->Tax);
     
     if(ajListGetLength(outseq->Taxlist) > 1)
     {
@@ -6175,6 +6176,7 @@
 static void seqDeclone(AjPSeqout outseq)
 {
     AjPStr ptr = NULL;
+    AjPSeqRef  tmpref  = NULL;
 
     ajStrSetClear(&outseq->Db);
     ajStrSetClear(&outseq->Setdb);
@@ -6200,6 +6202,15 @@
     while(ajListstrPop(outseq->Taxlist,&ptr))
 	ajStrDel(&ptr);
 
+    while(ajListstrPop(outseq->Cmtlist,&ptr))
+	ajStrDel(&ptr);
+
+    while(ajListstrPop(outseq->Xreflist,&ptr))
+	ajStrDel(&ptr);
+
+    while(ajListPop(outseq->Reflist,(void **)&tmpref))
+	ajSeqrefDel(&tmpref);
+
     ajStrSetClear(&outseq->Seq);
     AJFREE(outseq->Accuracy);
 
diff -Naur EMBOSS-6.0.1/emboss/acd/edialign.acd EMBOSS-6.0.1-patched/emboss/acd/edialign.acd
--- EMBOSS-6.0.1/emboss/acd/edialign.acd	2008-04-04 11:54:03.000000000 -0400
+++ EMBOSS-6.0.1-patched/emboss/acd/edialign.acd	2009-02-04 08:14:00.000000000 -0500
@@ -26,7 +26,7 @@
     information: "Nucleic acid sequence alignment mode"
     help: "Nucleic acid sequence alignment mode (simple, translated or
            mixed)"
-    values: "n : simple ; nt : translation ; ma : mixed alignments"
+    values: "n: simple; nt: translation; ma: mixed alignments"
     default: "n"
   ]
 
@@ -50,7 +50,7 @@
     information: "Clustering method to construct sequence tree"
     help: "Clustering method to construct sequence tree (UPGMA,
            minimum linkage or maximum linkage)"
-    values: "UPGMA : UPGMA ; max : maximum linkage ; min : minimum
+    values: "UPGMA: UPGMA; max: maximum linkage; min: minimum
              linkage"
     default: "UPGMA"
   ]
@@ -124,6 +124,7 @@
   seqoutall: outseq [
     parameter: "Y"
     type: "gapany"
+    aligned: "Y"
   ]
 
 endsection: output
diff -Naur EMBOSS-6.0.1/emboss/jaspscan.c EMBOSS-6.0.1-patched/emboss/jaspscan.c
--- EMBOSS-6.0.1/emboss/jaspscan.c	2008-06-26 04:39:09.000000000 -0400
+++ EMBOSS-6.0.1-patched/emboss/jaspscan.c	2008-08-27 03:32:24.000000000 -0400
@@ -293,7 +293,7 @@
 
 	    jaspscan_scan(substr,begin,mfname, cp, thresh, both, hits);
 
-	    ajStrDel(&mfname);
+            ajListPushAppend(flist, (void **)mfname);
 	}
 
 	jaspscan_ReportHits(TabRpt,mattab,hits);
@@ -303,6 +303,10 @@
     }
 
 
+    while(ajListPop(flist,(void **)&mfname))
+        ajStrDel(&mfname);
+
+    
     ajStrDel(&dir);
     ajStrDel(&menu);
     ajStrDel(&excl);
diff -Naur EMBOSS-6.0.1/emboss/needle.c EMBOSS-6.0.1-patched/emboss/needle.c
--- EMBOSS-6.0.1/emboss/needle.c	2008-06-10 08:48:04.000000000 -0400
+++ EMBOSS-6.0.1-patched/emboss/needle.c	2009-04-07 06:44:13.000000000 -0400
@@ -151,7 +151,7 @@
 	{
 	  embAlignCalcSimilarity(m,n,sub,cvt,lena,lenb,&id,&sim,&idx,
 				 &simx);
-	  ajFmtPrintAppS(&tmpstr,"Longest_Identity = %5.2f%%\n",
+	  ajFmtPrintS(&tmpstr,"Longest_Identity = %5.2f%%\n",
 			 id);
 	  ajFmtPrintAppS(&tmpstr,"Longest_Similarity = %5.2f%%\n",
 			 sim);
diff -Naur EMBOSS-6.0.1/emboss/vectorstrip.c EMBOSS-6.0.1-patched/emboss/vectorstrip.c
--- EMBOSS-6.0.1/emboss/vectorstrip.c	2008-06-26 04:39:09.000000000 -0400
+++ EMBOSS-6.0.1-patched/emboss/vectorstrip.c	2008-12-15 05:23:57.000000000 -0500
@@ -174,7 +174,7 @@
     vectorlist = ajListNew();
 
     /* data from command line or file? */
-    if(vec == AJTRUE)
+    if(vec && vectorfile)
 	vectorstrip_read_vector_data(vectorfile, vectorlist);
     else
     {
diff -Naur EMBOSS-6.0.1/emboss/water.c EMBOSS-6.0.1-patched/emboss/water.c
--- EMBOSS-6.0.1/emboss/water.c	2008-06-26 04:39:09.000000000 -0400
+++ EMBOSS-6.0.1-patched/emboss/water.c	2009-04-07 06:44:14.000000000 -0400
@@ -159,7 +159,7 @@
 	{
 	    embAlignCalcSimilarity(m,n,sub,cvt,lena,lenb,&id,&sim,&idx,
 				   &simx);
-	    ajFmtPrintAppS(&tmpstr,"Longest_Identity = %5.2f%%\n",
+	    ajFmtPrintS(&tmpstr,"Longest_Identity = %5.2f%%\n",
 			   id);
 	    ajFmtPrintAppS(&tmpstr,"Longest_Similarity = %5.2f%%\n",
 			   sim);
diff -Naur EMBOSS-6.0.1/nucleus/embaln.c EMBOSS-6.0.1-patched/nucleus/embaln.c
--- EMBOSS-6.0.1/nucleus/embaln.c	2008-07-15 10:41:05.000000000 -0400
+++ EMBOSS-6.0.1-patched/nucleus/embaln.c	2009-03-24 07:45:28.000000000 -0400
@@ -69,11 +69,11 @@
     ajint i;
     ajint j;
 
-    float match;
-    float mscore;
-    float fnew;
-    float *maxa;
-    float maxb;
+    double match;
+    double mscore;
+    double fnew;
+    double *maxa;
+    double maxb;
 
     static AjPStr outstr = NULL;
     char compasschar;
@@ -84,7 +84,7 @@
 
     /* Create stores for the maximum values in a row or column */
 
-    maxa = AJALLOC(lena*sizeof(float));
+    maxa = AJALLOC(lena*sizeof(double));
 
 
     /* First initialise the first column and row */
@@ -249,14 +249,14 @@
     ajint i;
     ajint j;
 
-    float match;
-    float mscore;
-    float result;
-    float fnew;
-    float *maxa;
+    double match;
+    double mscore;
+    double result;
+    double fnew;
+    double *maxa;
 
     static AjPStr outstr = NULL;
-    float bx;
+    double bx;
     char compasschar;
 
     ajDebug("embAlignPathCalcSW\n");
@@ -265,7 +265,7 @@
 
     /* Create stores for the maximum values in a row or column */
 
-    maxa = AJALLOC(lena*sizeof(float));
+    maxa = AJALLOC(lena*sizeof(double));
 
 
     /* First initialise the first column and row */
@@ -426,10 +426,10 @@
     ajint i;
     ajint j;
     ajint k;
-    float pmax;
-    float score;
-    float gapcnt;
-    float bimble;
+    ajint gapcnt;
+    double pmax;
+    double score;
+    double bimble;
 
     ajint ix;
     ajint iy;
@@ -439,13 +439,13 @@
     const char *p;
     const char *q;
 
-    float ic;
-    float errbounds;
+    ajint ic;
+    double errbounds;
 
     ajDebug("embAlignWalkSWMatrix\n");
 
-    errbounds = gapextend;
-    errbounds = (float) 0.01;
+    /* errbounds = gapextend; */
+    errbounds = (double) 0.01;
 
     /* Get maximum path score and save position */
     pmax = -FLT_MAX;
@@ -480,7 +480,7 @@
 	else if(compass[ypos*lenb+xpos]==1) /* Left, gap(s) in vertical */
 	{
 	    score  = path[ypos*lenb+xpos];
-	    gapcnt = 0.;
+	    gapcnt = 0;
 	    ix     = xpos-1;
 	    while(1)
 	    {
@@ -504,7 +504,7 @@
 	else if(compass[ypos*lenb+xpos]==2) /* Down, gap(s) in horizontal */
 	{
 	    score  = path[ypos*lenb+xpos];
-	    gapcnt = 0.;
+	    gapcnt = 0;
 	    iy = ypos-1;
 
 	    while(1)
@@ -575,10 +575,10 @@
 {
     ajint i;
     ajint j;
-    float pmax;
-    float score;
-    float gapcnt;
-    float bimble;
+    ajint gapcnt;
+    double pmax;
+    double score;
+    double bimble;
 
     ajint ix;
     ajint iy;
@@ -588,16 +588,16 @@
     const char *p;
     const char *q;
 
-    float ic;
-    float errbounds;
+    ajint ic;
+    double errbounds;
 
     ajDebug("embAlignWalkNWMatrix\n");
 
-    errbounds=gapextend;
-    errbounds = (float) 0.01;
+    /*errbounds=gapextend;*/
+    errbounds = (double) 0.01;
 
     /* Get maximum path axis score and save position */
-    pmax = (float) (-1*INT_MAX);
+    pmax = (double) (-1*INT_MAX);
     for(i=0;i<lenb;++i)
 	if(path[(lena-1)*lenb+i]>=pmax)
 	{
@@ -631,7 +631,7 @@
 	else if(compass[ypos*lenb+xpos]==1) /* Left, gap(s) in vertical */
 	{
 	    score  = path[ypos*lenb+xpos];
-	    gapcnt = 0.;
+	    gapcnt = 0;
 	    ix     = xpos-1;
 	    while(1)
 	    {
@@ -652,7 +652,7 @@
 	else if(compass[ypos*lenb+xpos]==2) /* Down, gap(s) in horizontal */
 	{
 	    score  = path[ypos*lenb+xpos];
-	    gapcnt = 0.;
+	    gapcnt = 0;
 	    iy = ypos-1;
 
 	    while(1)
@@ -1271,11 +1271,11 @@
     ajint k;
     ajint ip;                   /* position in path matrix */
 
-    float match;
-    float mscore;
-    float fnew;
-    float maxa;
-    float *maxb;
+    double match;
+    double mscore;
+    double fnew;
+    double maxa;
+    double *maxb;
 
     ajint jlena;
     ajint jlenb;
@@ -1288,7 +1288,7 @@
     ajint xmax;                 /* last x position for this row */
     ajint ymax;
 
-    float max;
+    double max;
     static AjPStr outstr = NULL;
 
     char compasschar;
@@ -1347,7 +1347,7 @@
 
     /* Create stores for the maximum values in a row or column */
 
-    maxb = AJALLOC(lenb*sizeof(float));
+    maxb = AJALLOC(lenb*sizeof(double));
 
     /* First initialise the first column and row */
     for(i=0;i<lena;++i)
@@ -1379,7 +1379,7 @@
 	maxb[j] = path[j]-(gapopen);
 
     for(j=rightwidth;j<lenb;++j)
-	maxb[j] = (float) -999.9;
+	maxb[j] = (double) -999.9;
 
     /* ajDebug("2   %d %d\n",lena,lenb);*/
 
@@ -1540,10 +1540,10 @@
     ajint j;
     ajint k;
     ajint ip;                   /* position in path matrix */
-    float pmax;
-    float score;
-    float gapcnt;
-    float bimble;
+    ajint gapcnt;
+    double pmax;
+    double score;
+    double bimble;
 
     ajint ix;
     ajint iy;
@@ -1554,8 +1554,8 @@
     const char *p;
     const char *q;
 
-    float ic;
-    float errbounds;
+    ajint ic;
+    double errbounds;
 
     ajint width;
     ajint leftwidth;
@@ -1567,7 +1567,7 @@
 
     ajDebug("embAlignWalkSWMatrixFast\n");
 
-    errbounds = (float) 0.01;
+    errbounds = (double) 0.01;
     width = pathwidth;
 
     if(lena < width)
@@ -1633,7 +1633,7 @@
 	else if(compass[ip]==1) /* Left, horizontal gap(s): step through xpos */
 	{
 	    score  = path[ip];
-	    gapcnt = 0.;
+	    gapcnt = 0;
 	    ix     = xpos-1;
 	    while(1)
 	    {
@@ -1661,7 +1661,7 @@
 	else if(compass[ip]==2) /* Down, vertical gap(s): step through ypos */
 	{
 	    score  = path[ip];
-	    gapcnt = 0.;
+	    gapcnt = 0;
 	    iy = ypos-1;
 
 	    while(1)
@@ -1735,16 +1735,16 @@
 
     static AjPStr outstr = NULL;
 
-    float fmscore;
-    float mscore;
-    float fnew;
-    float maxp;
-    float *maxs;
+    double fmscore;
+    double mscore;
+    double fnew;
+    double maxp;
+    double *maxs;
 
     ret = -FLT_MAX;
     ajDebug("embAlignProfilePathCalc\n");
 
-    maxs = AJALLOC(seqlen*sizeof(float));
+    maxs = AJALLOC(seqlen*sizeof(double));
 
     /* First initialise the first column and row */
     for(column=0;column<seqlen;++column)
@@ -1889,11 +1889,11 @@
 			       ajint *start1, ajint *start2)
 {
     ajint i;
-    float pathmax;
-    float score;
-
     ajint gapcnt;
-    float bimble;
+    double pathmax;
+    double score;
+
+    double bimble;
 
     ajint ix;
     ajint iy;
@@ -1909,14 +1909,14 @@
     const char *p;
     const char *q;
 
-    float errbounds;
+    double errbounds;
 
     ajDebug("embAlignWalkProfileMatrix\n");
 
-    errbounds = (float) 0.01;
+    errbounds = (double) 0.01;
 
     /* Get maximum path score and save position */
-    pathmax = -(float) INT_MAX;
+    pathmax = -(double) INT_MAX;
     for(row=0;row<proflen;++row)
 	for(column=0;column<seqlen;++column)
 	    if(path[row*seqlen+column] > pathmax)
diff -Naur EMBOSS-6.0.1/nucleus/embprop.c EMBOSS-6.0.1-patched/nucleus/embprop.c
--- EMBOSS-6.0.1/nucleus/embprop.c	2008-07-14 18:13:33.000000000 -0400
+++ EMBOSS-6.0.1-patched/nucleus/embprop.c	2008-08-27 03:32:32.000000000 -0400
@@ -880,6 +880,7 @@
 
     if(allpartials)
     {
+        lim = defcnt;
 	for(i=0;i<lim;++i)
 	    for(j=i+1;j<lim;++j)
 	    {
