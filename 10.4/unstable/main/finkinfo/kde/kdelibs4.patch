diff -Nurd kdelibs-4.2.1/cmake/modules/FindKDE4Internal.cmake kdelibs-4.2.1-new/cmake/modules/FindKDE4Internal.cmake
--- kdelibs-4.2.1/cmake/modules/FindKDE4Internal.cmake	2009-02-26 09:18:26.000000000 -0500
+++ kdelibs-4.2.1-new/cmake/modules/FindKDE4Internal.cmake	2009-03-09 14:53:54.000000000 -0400
@@ -360,7 +360,7 @@
 if (_kdeBootStrapping)
    set(KDE4_INCLUDE_DIR ${kdelibs_SOURCE_DIR})
    set(KDE4_KDECORE_LIBS ${QT_QTCORE_LIBRARY} kdecore)
-   set(KDE4_KDEUI_LIBS ${KDE4_KDECORE_LIBS} kdeui)
+   set(KDE4_KDEUI_LIBS ${KDE4_KDECORE_LIBS} ${QT_QTGUI_LIBRARY} kdeui)
    set(KDE4_KIO_LIBS ${KDE4_KDEUI_LIBS} kio)
    set(KDE4_KPARTS_LIBS ${KDE4_KIO_LIBS} kparts)
    if (UNIX)
diff -Nurd kdelibs-4.2.1/cmake/modules/KDE4Macros.cmake kdelibs-4.2.1-new/cmake/modules/KDE4Macros.cmake
--- kdelibs-4.2.1/cmake/modules/KDE4Macros.cmake	2009-01-06 12:27:37.000000000 -0500
+++ kdelibs-4.2.1-new/cmake/modules/KDE4Macros.cmake	2009-03-09 14:53:28.000000000 -0400
@@ -1059,7 +1059,7 @@
             message(STATUS "Unable to find the png2ico or windres utilities - application will not have an application icon!")
         endif(PNG2ICO_EXECUTABLE AND WINDRES_EXECUTABLE)
     endif(WIN32)
-    if (APPLE)
+    if (Q_WS_MAC)
         # first convert image to a tiff using the Mac OS X "sips" utility,
         # then use tiff2icns to convert to an icon
         find_program(SIPS_EXECUTABLE NAMES sips)
@@ -1104,7 +1104,7 @@
         else(SIPS_EXECUTABLE AND TIFF2ICNS_EXECUTABLE)
             message(STATUS "Unable to find the sips and tiff2icns utilities - application will not have an application icon!")
         endif(SIPS_EXECUTABLE AND TIFF2ICNS_EXECUTABLE)
-    endif(APPLE)    
+    endif(Q_WS_MAC)
 endmacro (KDE4_ADD_APP_ICON)
 
 
diff -Nurd kdelibs-4.2.1/doc/api/Doxyfile.local kdelibs-4.2.1-new/doc/api/Doxyfile.local
--- kdelibs-4.2.1/doc/api/Doxyfile.local	2008-10-30 10:18:53.000000000 -0400
+++ kdelibs-4.2.1-new/doc/api/Doxyfile.local	2009-03-09 14:53:29.000000000 -0400
@@ -173,6 +173,7 @@
         Q_WS_MAC="" \
 	Q_OS_UNIX="" \
         Q_OS_WIN="" \
+        Q_OS_DARWIN="" \
         Q_OS_MACX="" \
 \
 	Q_SLOTS="slots" \
diff -Nurd kdelibs-4.2.1/kde3support/kdecore/k3processcontroller.cpp kdelibs-4.2.1-new/kde3support/kdecore/k3processcontroller.cpp
--- kdelibs-4.2.1/kde3support/kdecore/k3processcontroller.cpp	2008-05-21 07:06:17.000000000 -0400
+++ kdelibs-4.2.1-new/kde3support/kdecore/k3processcontroller.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -114,7 +114,7 @@
 
 K3ProcessController::~K3ProcessController()
 {
-#ifndef Q_OS_MAC
+#if !defined(Q_OS_DARWIN) && !defined(Q_OS_MAC)
 /* not sure why, but this is causing lockups */
   close( d->fd[0] );
   close( d->fd[1] );
diff -Nurd kdelibs-4.2.1/kdecore/config/kconfig.cpp kdelibs-4.2.1-new/kdecore/config/kconfig.cpp
--- kdelibs-4.2.1/kdecore/config/kconfig.cpp	2008-10-22 19:05:09.000000000 -0400
+++ kdelibs-4.2.1-new/kdecore/config/kconfig.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -71,7 +71,7 @@
 #ifdef Q_WS_WIN
         QFile::decodeName( qgetenv("WINDIR") + "/kde4rc" );
 #else
-        QLatin1String("/etc/kde4rc");
+        QLatin1String("@KDEPREFIX@/etc/kde4rc");
 #endif
     KEntryMap tmp;
     // first entry is always /etc/kderc or empty if cannot read
diff -Nurd kdelibs-4.2.1/kdecore/kernel/kkernel_mac.cpp kdelibs-4.2.1-new/kdecore/kernel/kkernel_mac.cpp
--- kdelibs-4.2.1/kdecore/kernel/kkernel_mac.cpp	2009-01-06 12:27:48.000000000 -0500
+++ kdelibs-4.2.1-new/kdecore/kernel/kkernel_mac.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -21,7 +21,7 @@
 
 #include <config.h>
 
-#ifdef Q_OS_MACX
+#if (defined (Q_OS_DARWIN) || defined (Q_OS_MAC))
 
 #include <unistd.h>
 #include <string.h>
@@ -161,22 +161,27 @@
 	}
 
 	if (!externalProc.isEmpty()) {
-                QProcess qp;
-                qp.setTextModeEnabled(true);
+		QProcess qp;
+		qp.setTextModeEnabled(true);
+
+		qp.start(externalProc, QStringList() << "load" << "@KDEPREFIX@/lib/mac/share/dbus/launchd/org.finkproject.dbus-session.plist");
+		if (!qp.waitForFinished(timeout)) {
+			kDebug() << "error running" << externalProc << qp.errorString();
+		}
 
 		qp.start(externalProc, QStringList() << "getenv" << "DBUS_LAUNCHD_SESSION_BUS_SOCKET");
-                if (!qp.waitForFinished(timeout)) {
-                    kDebug() << "error running" << externalProc << qp.errorString();
-                    return;
-                }
-                if (qp.exitCode() != 0) {
-                    kDebug() << externalProc << "unsuccessful:" << qp.readAllStandardError();
-                    return;
-                }
+		if (!qp.waitForFinished(timeout)) {
+			kDebug() << "error running" << externalProc << qp.errorString();
+			return;
+		}
+		if (qp.exitCode() != 0) {
+			kDebug() << externalProc << "unsuccessful:" << qp.readAllStandardError();
+			return;
+		}
 
-                QString line = qp.readLine().trimmed(); // read the first line
-                if (mac_set_dbus_address(line))
-                    dbus_initialized = true; // hooray
+		QString line = qp.readLine().trimmed(); // read the first line
+		if (mac_set_dbus_address(line))
+			dbus_initialized = true; // hooray
 	}
 
 	if (dbus_initialized == false) {
@@ -185,6 +190,7 @@
 
 }
 
+
 QString mac_app_filename() {
 	static QString appFileName;
 	if (appFileName.isEmpty()) {
diff -Nurd kdelibs-4.2.1/kdecore/kernel/kkernel_mac.h kdelibs-4.2.1-new/kdecore/kernel/kkernel_mac.h
--- kdelibs-4.2.1/kdecore/kernel/kkernel_mac.h	2009-01-01 11:28:04.000000000 -0500
+++ kdelibs-4.2.1-new/kdecore/kernel/kkernel_mac.h	2009-03-09 14:53:29.000000000 -0400
@@ -21,7 +21,7 @@
 
 #include <QtCore/qglobal.h> // defines Q_OS_MACX
 
-#ifdef Q_OS_MACX
+#if (defined (Q_OS_DARWIN) || defined (Q_OS_MAC))
 
 #include <kdecore_export.h>
 #include <QtCore/QString>
@@ -50,5 +50,5 @@
   */
 KDECORE_EXPORT QString mac_app_filename();
 
-#endif  // Q_OS_MACX
+#endif  // MAC
 #endif  // KKERNEL_MAC_H
diff -Nurd kdelibs-4.2.1/kdecore/tests/kconfigtest.cpp kdelibs-4.2.1-new/kdecore/tests/kconfigtest.cpp
--- kdelibs-4.2.1/kdecore/tests/kconfigtest.cpp	2008-11-12 11:38:25.000000000 -0500
+++ kdelibs-4.2.1-new/kdecore/tests/kconfigtest.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -416,7 +416,7 @@
   QCOMPARE(group.readPathEntry("homePath2", QString()), QString("file://") + HOMEPATH );
   QVERIFY(group.hasKey("URL"));
   QCOMPARE(group.readEntry("URL", QString()), QString("file://") + HOMEPATH );
-#if !defined(Q_OS_WIN32) && !defined(Q_OS_MAC)
+#if !defined(Q_OS_WIN32) && !defined(Q_OS_DARWIN) && !defined(Q_OS_MAC)
   // I don't know if this will work on windows
   // This test hangs on OS X
   QVERIFY(group.hasKey("hostname"));
diff -Nurd kdelibs-4.2.1/kdeui/kernel/kapplication.cpp kdelibs-4.2.1-new/kdeui/kernel/kapplication.cpp
--- kdelibs-4.2.1/kdeui/kernel/kapplication.cpp	2008-12-21 15:21:06.000000000 -0500
+++ kdelibs-4.2.1-new/kdeui/kernel/kapplication.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -101,6 +101,9 @@
 #include <Carbon/Carbon.h>
 #include <QImage>
 #include <ksystemtrayicon.h>
+#endif
+
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
 #include <kkernel_mac.h>
 #endif
 
@@ -472,7 +475,7 @@
      ::exit(127);
   }
 
-#ifdef Q_WS_MAC
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
   mac_initialize_dbus();
 #endif
 
diff -Nurd kdelibs-4.2.1/kdeui/kernel/kuniqueapplication.cpp kdelibs-4.2.1-new/kdeui/kernel/kuniqueapplication.cpp
--- kdelibs-4.2.1/kdeui/kernel/kuniqueapplication.cpp	2008-09-03 07:25:15.000000000 -0400
+++ kdelibs-4.2.1-new/kdeui/kernel/kuniqueapplication.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -65,7 +65,7 @@
 #  endif
 #endif
 
-#ifdef Q_WS_MAC
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
 #include <kkernel_mac.h>
 #endif
 
@@ -141,7 +141,7 @@
         appName.prepend(s);
      }
 
-#ifdef Q_WS_MAC
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
   mac_initialize_dbus();
 #endif
 
@@ -182,8 +182,8 @@
      // We'll call newInstance in the constructor. Do nothing here.
      return true;
 
-#ifdef Q_WS_MACX
-  } else {
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
+} else {
     mac_fork_and_reexec_self();
 #endif
 
diff -Nurd kdelibs-4.2.1/kdeui/util/kcrash.cpp kdelibs-4.2.1-new/kdeui/util/kcrash.cpp
--- kdelibs-4.2.1/kdeui/util/kcrash.cpp	2008-07-03 01:06:28.000000000 -0400
+++ kdelibs-4.2.1-new/kdeui/util/kcrash.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -478,6 +478,8 @@
       *screen = '\0';
    while((i = strchr(result, ':')))
      *i = '_';
+   while((i = strchr(result, '/')))
+     *i = '_';
    return result;
 }
 
diff -Nurd kdelibs-4.2.1/kimgio/CMakeLists.txt kdelibs-4.2.1-new/kimgio/CMakeLists.txt
--- kdelibs-4.2.1/kimgio/CMakeLists.txt	2008-05-21 07:07:47.000000000 -0400
+++ kdelibs-4.2.1-new/kimgio/CMakeLists.txt	2009-03-09 14:53:29.000000000 -0400
@@ -96,7 +96,7 @@
     add_definitions(${OPENEXR_DEFINITIONS})
     set(kimg_exr_LIB_SRCS exr.cpp)
     kde4_add_plugin(kimg_exr ${kimg_exr_LIB_SRCS})
-    target_link_libraries(kimg_exr ${KDE4_KDECORE_LIBS} ${QT_QTGUI_LIBRARY} ${OPENEXR_LIBRARIES} )
+    target_link_libraries(kimg_exr ${KDE4_KDECORE_LIBS} ${QT_QTGUI_LIBRARY} ${OPENEXR_LIBRARIES} z )
 
 install(TARGETS kimg_exr  DESTINATION ${PLUGIN_INSTALL_DIR}/plugins/imageformats/ )
 install( FILES exr.desktop DESTINATION  ${SERVICES_INSTALL_DIR}/qimageioplugins/ )
diff -Nurd kdelibs-4.2.1/kinit/kinit.cpp kdelibs-4.2.1-new/kinit/kinit.cpp
--- kdelibs-4.2.1/kinit/kinit.cpp	2009-02-26 09:18:34.000000000 -0500
+++ kdelibs-4.2.1-new/kinit/kinit.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -68,7 +68,7 @@
 #endif
 #endif
 
-#ifdef Q_WS_MACX
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
 #include <kkernel_mac.h>
 #endif
 
@@ -566,7 +566,7 @@
        QByteArray procTitle;
        d.argv = (char **) malloc(sizeof(char *) * (argc+1));
        d.argv[0] = (char *) _name;
-#ifdef Q_WS_MAC
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
        QString argvexe = s_instance->dirs()->findExe(QString::fromLatin1(d.argv[0]));
        if (!argvexe.isEmpty()) {
           QByteArray cstr = argvexe.toLocal8Bit();
@@ -643,7 +643,7 @@
 
         QByteArray executable = execpath.data();
 #ifdef Q_WS_MAC
-        QString bundlepath = s_instance->dirs()->findExe( execpath.data() );
+        QString bundlepath = s_instance->dirs()->findExe(QString::fromLatin1(execpath.data()));
         if (!bundlepath.isEmpty())
            executable = QFile::encodeName(bundlepath);
 #endif
@@ -1560,6 +1560,7 @@
 #endif
 
    display.replace(':','_');
+   display.replace('/','_');
    // WARNING, if you change the socket name, adjust kwrapper too
    const QString socketFileName = QString::fromLatin1("kdeinit4_%1").arg(QLatin1String(display));
    QByteArray socketName = QFile::encodeName(KStandardDirs::locateLocal("socket", socketFileName, *s_instance));
@@ -1739,12 +1740,10 @@
          launch_klauncher = 0;
       if (strcmp(safe_argv[i], "--no-kded") == 0)
          launch_kded = 0;
-#ifdef Q_WS_MACX
       // make it nofork to match KUniqueApplication, technically command-line incompatible
       if (strcmp(safe_argv[i], "--nofork") == 0)
-#else
+         do_fork = false;
       if (strcmp(safe_argv[i], "--no-fork") == 0)
-#endif
          do_fork = false;
       if (strcmp(safe_argv[i], "--suicide") == 0)
          d.suicide = true;
@@ -1760,7 +1759,7 @@
       {
         printf("Usage: kdeinit4 [options]\n");
      // printf("    --no-dcop         Do not start dcopserver\n");
-#ifdef Q_WS_MACX
+#if (defined Q_OS_DARWIN || defined_Q_OS_MAC)
         printf("    --nofork          Do not fork\n");
 #else
         printf("    --no-fork         Do not fork\n");
@@ -1777,7 +1776,7 @@
    cleanup_fds();
 
    if (do_fork) {
-#ifdef Q_WS_MACX
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
       mac_fork_and_reexec_self();
 #else
       pipe(d.initpipe);
diff -Nurd kdelibs-4.2.1/kinit/klauncher.cpp kdelibs-4.2.1-new/kinit/klauncher.cpp
--- kdelibs-4.2.1/kinit/klauncher.cpp	2009-02-26 09:18:34.000000000 -0500
+++ kdelibs-4.2.1-new/kinit/klauncher.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -965,6 +965,7 @@
 #endif
    request->envs = envs;
    request->cwd = workdir;
+#ifdef Q_WS_X11
    if (!app.endsWith(QLatin1String("kbuildsycoca4"))) { // avoid stupid loop
        // Find service, if any - strip path if needed
        const QString desktopName = app.mid(app.lastIndexOf(QLatin1Char('/')) + 1);
@@ -975,6 +976,7 @@
        else // no .desktop file, no startup info
            cancel_service_startup_info(request, request->startup_id, envs);
    }
+#endif
    msg.setDelayedReply(true);
    request->transaction = msg;
    queueRequest(request);
diff -Nurd kdelibs-4.2.1/kinit/wrapper.c kdelibs-4.2.1-new/kinit/wrapper.c
--- kdelibs-4.2.1/kinit/wrapper.c	2008-12-21 15:21:01.000000000 -0500
+++ kdelibs-4.2.1-new/kinit/wrapper.c	2009-03-09 14:53:29.000000000 -0400
@@ -77,6 +77,8 @@
       *screen = '\0';
    while((i = strchr(result, ':')))
      *i = '_';
+   while((i = strchr(result, '/')))
+     *i = '_';
    return result;
 }
 
diff -Nurd kdelibs-4.2.1/kio/kfile/kfsprocess.cpp kdelibs-4.2.1-new/kio/kfile/kfsprocess.cpp
--- kdelibs-4.2.1/kio/kfile/kfsprocess.cpp	2008-05-21 07:08:03.000000000 -0400
+++ kdelibs-4.2.1-new/kio/kfile/kfsprocess.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -83,7 +83,7 @@
 
 KfsProcessController::~KfsProcessController()
 {
-#ifndef Q_OS_MAC
+#if (!defined (Q_OS_DARWIN) && !defined (Q_OS_MAC))
 /* not sure why, but this is causing lockups */
   close( m_fd[0] );
   close( m_fd[1] );
diff -Nurd kdelibs-4.2.1/kpty/kptydevice.cpp kdelibs-4.2.1-new/kpty/kptydevice.cpp
--- kdelibs-4.2.1/kpty/kptydevice.cpp	2008-12-04 03:36:01.000000000 -0500
+++ kdelibs-4.2.1-new/kpty/kptydevice.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -42,7 +42,7 @@
 # include <sys/time.h>
 #endif
 
-#if defined(Q_OS_FREEBSD) || defined(Q_OS_MAC)
+#if defined(Q_OS_FREEBSD) || defined(Q_OS_DARWIN) || defined(Q_OS_MAC)
   // "the other end's output queue size" - kinda braindead, huh?
 # define PTY_BYTES_AVAILABLE TIOCOUTQ
 #elif defined(TIOCINQ)
diff -Nurd kdelibs-4.2.1/kross/qts/CMakeLists.txt kdelibs-4.2.1-new/kross/qts/CMakeLists.txt
--- kdelibs-4.2.1/kross/qts/CMakeLists.txt	2008-11-12 11:38:16.000000000 -0500
+++ kdelibs-4.2.1-new/kross/qts/CMakeLists.txt	2009-03-09 14:53:29.000000000 -0400
@@ -6,7 +6,7 @@
 target_link_libraries(krossqtsplugin ${QT_QTUITOOLS_LIBRARY} ${KDE4_KDECORE_LIBS} ${KDE4_KDEUI_LIBS} krosscore ${QT_QTSCRIPT_LIBRARY})
 set_target_properties(krossqtsplugin PROPERTIES VERSION ${GENERIC_LIB_VERSION} SOVERSION ${GENERIC_LIB_SOVERSION})
 
-install(TARGETS krossqtsplugin DESTINATION ${PLUGIN_INSTALL_DIR}/plugins/script)
+install(TARGETS krossqtsplugin EXPORT kdelibsLibraryTargets ${INSTALL_TARGETS_DEFAULT_ARGS})
 
 ########### next target ###############
 
diff -Nurd kdelibs-4.2.1/solid/solid/CMakeLists.txt kdelibs-4.2.1-new/solid/solid/CMakeLists.txt
--- kdelibs-4.2.1/solid/solid/CMakeLists.txt	2008-11-19 05:20:13.000000000 -0500
+++ kdelibs-4.2.1-new/solid/solid/CMakeLists.txt	2009-03-09 14:53:29.000000000 -0400
@@ -102,7 +102,7 @@
    backends/fakehw/fakevolume.cpp
 )
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32)
    message(STATUS "-- Building Solid HAL backend." )
    set(solid_LIB_SRCS ${solid_LIB_SRCS}
 
@@ -129,7 +129,7 @@
    backends/hal/halvolume.cpp
    
    )
-endif(NOT WIN32 AND NOT APPLE)
+endif(NOT WIN32)
 
 # TODO: mingw
 if(MSVC)
diff -Nurd kdelibs-4.2.1/solid/solid/managerbase.cpp kdelibs-4.2.1-new/solid/solid/managerbase.cpp
--- kdelibs-4.2.1/solid/solid/managerbase.cpp	2008-05-29 07:20:07.000000000 -0400
+++ kdelibs-4.2.1-new/solid/solid/managerbase.cpp	2009-03-09 14:53:29.000000000 -0400
@@ -23,7 +23,8 @@
 
 #include "backends/fakehw/fakemanager.h"
 
-#if defined (Q_OS_MAC)
+#if (defined (Q_OS_MAC) || defined(Q_OS_DARWIN))
+#include "backends/hal/halmanager.h"
 #elif defined (Q_OS_UNIX)
 #include "backends/hal/halmanager.h"
 #elif defined (_MSC_VER) // TODO: mingw
@@ -47,7 +48,8 @@
     if (!solidFakeXml.isEmpty()) {
         m_backend = new Solid::Backends::Fake::FakeManager(0, solidFakeXml);
     } else {
-        #if defined (Q_OS_MAC)
+        #if (defined (Q_OS_MAC) || defined (Q_OS_DARWIN))
+            m_backend = new Solid::Backends::Hal::HalManager(0);
         #elif defined (Q_OS_UNIX)
             m_backend = new Solid::Backends::Hal::HalManager(0);
         #elif defined (_MSC_VER) // TODO: mingw
