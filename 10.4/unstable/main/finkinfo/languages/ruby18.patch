## Basic build system fixes
--- configure.in        (revision 12175)
+++ configure.in        (working copy)
@@ -150,4 +150,9 @@ fi
 AC_PROG_CC
 AC_PROG_GCC_TRADITIONAL
+if test "$GCC" = yes; then
+    linker_flag=-Wl,
+else
+    linker_flag=
+fi

 RUBY_PROG_GNU_LD
@@ -1392,12 +1397,8 @@ if test "$enable_shared" = 'yes'; then
 fi
 if test "$enable_rpath" = yes; then
-    if test "$GCC" = yes; then
-       LIBRUBYARG_SHARED='-Wl,-R -Wl,$(libdir) -L$(libdir) -L. '"$LIBRUBYARG_SHARED"
-    else
-       LIBRUBYARG_SHARED='-R $(libdir) -L$(libdir) -L. '"$LIBRUBYARG_SHARED"
-    fi
+    LIBRUBYARG_SHARED="${linker_flag}-R ${linker_flag}\$(libdir) -L. -L\$(libdir) $LIBRUBYARG_SHARED"
 fi

-XLDFLAGS="$XLDFLAGS -L."
+LDFLAGS="-L. $LDFLAGS"
 AC_SUBST(ARCHFILE)

--- lib/mkmf.rb (revision 12191)
+++ lib/mkmf.rb (working copy)
@@ -292,5 +292,10 @@ end
 def libpathflag(libpath=$DEFLIBPATH|$LIBPATH)
  libpath.map{|x|
-    (x == "$(topdir)" ? LIBPATHFLAG : LIBPATHFLAG+RPATHFLAG) % x.quote
+    case x
+    when "$(topdir)", /\A\./
+      LIBPATHFLAG
+    else
+      LIBPATHFLAG+RPATHFLAG
+    end % x.quote
  }.join
 end
@@ -1443,4 +1449,5 @@ def init_mkmf(config = CONFIG)
  $LIBRUBYARG_SHARED = config['LIBRUBYARG_SHARED']
  $DEFLIBPATH = $extmk ? ["$(topdir)"] : CROSS_COMPILING ? [] : ["$(libdir)"]
+  $DEFLIBPATH.unshift(".")
  $LIBPATH = []
  $INSTALLFILES = nil
@@ -1535,6 +1541,6 @@ LINK_SO = config_string('LINK_SO') ||
    "ld $(DLDFLAGS) -r -o $@ $(OBJS)\n"
  else
-    "$(LDSHARED) $(DLDFLAGS) $(LIBPATH) #{OUTFLAG}$@ " \
-    "$(OBJS) $(LOCAL_LIBS) $(LIBS)"
+    "$(LDSHARED) #{OUTFLAG}$@ $(OBJS) " \
+    "$(LIBPATH) $(DLDFLAGS) $(LOCAL_LIBS) $(LIBS)"
  end
 LIBPATHFLAG = config_string('LIBPATHFLAG') || ' -L"%s"'

## make miniruby not load already installed extensions
--- ruby.c	2007-02-13 00:01:19.000000000 +0100
+++ ruby.c	2007-04-25 14:53:32.000000000 +0200
@@ -235,6 +235,7 @@
 void
 ruby_init_loadpath()
 {
+    char *argvptr;
 #if defined LOAD_RELATIVE
     char libpath[FILENAME_MAX+1];
     char *p;
@@ -287,6 +288,10 @@
 	ruby_incpush(getenv("RUBYLIB"));
     }
 
+
+    argvptr = strrchr(origargv[0], '/');
+    if(!argvptr) argvptr = origargv[0];
+    if(!strstr(argvptr, "miniruby")) {
 #ifdef RUBY_SEARCH_PATH
     ruby_incpush(RUBY_RELATIVE(RUBY_SEARCH_PATH));
 #endif
@@ -307,6 +312,7 @@
     if (rb_safe_level() == 0) {
 	ruby_incpush(".");
     }
+    }
 }
 
 struct req_list {

--- configure.in~       2007-04-25 15:31:14.000000000 +0200
+++ configure.in        2007-04-25 15:58:49.000000000 +0200
@@ -1277,7 +1277,7 @@
   PREP=fake.rb
   RUNRUBY='$(MINIRUBY) -I`cd $(srcdir)/lib; pwd`'
 else
-  MINIRUBY='./miniruby$(EXEEXT)'
+  MINIRUBY='./miniruby$(EXEEXT) -I.'
   PREP='miniruby$(EXEEXT)'
   RUNRUBY='$(MINIRUBY) $(srcdir)/runruby.rb --extout=$(EXTOUT) --'
 fi


## tune module and libruby link options
--- configure.in	2007-04-18 12:49:43.000000000 +0200
+++ configure.in	2007-04-19 14:23:04.000000000 +0200
@@ -1052,7 +1052,7 @@
 	rhapsody*)	: ${LDSHARED='cc -dynamic -bundle -undefined suppress'}
 			: ${LDFLAGS=""}
 			rb_cv_dlopen=yes ;;
-	darwin*)	: ${LDSHARED='cc -dynamic -bundle -undefined suppress -flat_namespace'}
+	darwin*)	: ${LDSHARED='cc -dynamic -bundle -Wl,-undefined,dynamic_lookup -Wl,-multiply_defined,suppress'}
 			: ${LDFLAGS=""}
 			: ${LIBPATHENV=DYLD_LIBRARY_PATH}
 			rb_cv_dlopen=yes ;;
@@ -1302,7 +1302,7 @@
     ;;
 esac
 
-RUBY_SO_NAME='$(RUBY_INSTALL_NAME)'
+RUBY_SO_NAME=ruby
 LIBRUBY_LDSHARED=$LDSHARED
 LIBRUBY_DLDFLAGS=$DLDFLAGS
 LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR).$(MINOR).$(TEENY)'
@@ -1384,9 +1384,9 @@
 	;;
     darwin*)
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(MAJOR).$(MINOR).$(TEENY).dylib'
-	LIBRUBY_LDSHARED='cc -dynamiclib -undefined suppress -flat_namespace'
-	LIBRUBY_DLDFLAGS='-install_name $(libdir)/lib$(RUBY_SO_NAME).dylib -current_version $(MAJOR).$(MINOR).$(TEENY) -compatibility_version $(MAJOR).$(MINOR)'
-	LIBRUBY_ALIASES='lib$(RUBY_SO_NAME).$(MAJOR).$(MINOR).dylib lib$(RUBY_SO_NAME).dylib'
+	LIBRUBY_LDSHARED='cc -dynamiclib'
+	LIBRUBY_DLDFLAGS='-install_name $(libdir)/lib$(RUBY_SO_NAME).$(MAJOR).$(MINOR).dylib -current_version $(MAJOR).$(MINOR).$(TEENY) -compatibility_version $(MAJOR).$(MINOR)'
+	LIBRUBY_ALIASES='lib$(RUBY_SO_NAME).$(MAJOR).$(MINOR).dylib lib$(RUBY_SO_NAME).dylib libruby.2.dylib'
 	;;
     interix*)
 	LIBRUBYARG_SHARED='-L${libdir} -L. -l$(RUBY_SO_NAME)'
## tune architecture (and binary extension directory name)
--- config.guess	2007-04-19 14:41:42.000000000 +0200
+++ config.guess	2007-04-19 14:39:55.000000000 +0200
@@ -1200,7 +1200,7 @@
 	    *86) UNAME_PROCESSOR=i686 ;;
 	    powerpc) UNAME_PROCESSOR=powerpc ;;
 	esac
-	echo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}
+	echo ${UNAME_PROCESSOR}-apple-darwin
 	exit 0 ;;
     *:procnto*:*:* | *:QNX:[0123456789]*:*)
 	UNAME_PROCESSOR=`uname -p`

## more miscellaneous tweaks
diff -uNr ruby-1.8.4/lib/delegate.rb ruby-1.8.4-new/lib/delegate.rb
--- lib/delegate.rb  2005-09-28 10:23:24.000000000 -0400
+++ lib/delegate.rb      2006-08-05 18:21:28.000000000 -0400
@@ -290,7 +290,7 @@
   }
   for method in methods
     begin
-      klass.module_eval <<-EOS
+      klass.module_eval <<-EOS, __FILE__, __LINE__+1
         def #{method}(*args, &block)
          begin
            @_dc_obj.__send__(:#{method}, *args, &block)
