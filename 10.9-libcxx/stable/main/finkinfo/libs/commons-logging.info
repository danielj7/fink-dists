Package: commons-logging
Version: 1.2
Revision: 1
Description: Jakarta Commons - Logging
Type: java(1.6)
License: BSD
Maintainer: Benjamin Reed <commons-logging@fink.raccoonfink.com>

Depends: <<
	log4j (>= 1.2-1),
	system-java (>= 1.6-1)
<<
BuildDepends: <<
	ant-base (>= 1.8.1-1),
	jakarta-servletapi,
	log4j (>= 1.2-1),
	fink (>= 0.29.7-1),
	fink-mirrors (>= 0.22.1.1-1),
	system-java-dev (>= 1.6-1)
<<

Source: http://archive.apache.org/dist/commons/logging/source/%n-%v-src.tar.gz
Source-MD5: ce977548f1cbf46918e93cd38ac35163
Source2: https://archive.apache.org/dist/avalon/framework/jars/avalon-framework-4.2.0.jar
Source2-MD5: 0b0afbcc6ffdc4cd22a77396cd7562d1
Source3: https://archive.apache.org/dist/avalon/logkit/jars/logkit-1.2.jar
Source3-MD5: 33d67e651e524bd9120ba9c749a34a0b
PatchFile: %n.patch
PatchFile-MD5: 0b1e3fcf54d49486a9e47d32b94da4ee
SourceDirectory: %n-%v-src

UseMaxBuildJobs: true
CompileScript: <<
	#!/bin/sh -ev
	
	export CLASSPATH=`pwd`/../avalon-framework-4.2.0.jar:`pwd`/../logkit-1.2.jar:"$CLASSPATH"
	ant compile -Dlog4j12.jar=%p/share/java/log4j/log4j.jar \
	-Djunit.jar=%p/share/java/junit/junit.jar \
	-Dlogkit.jar=`pwd`/../logkit-1.2.jar \
	-Davalon-framework.jar=`pwd`/../avalon-framework-4.2.0.jar \
	-Dservletapi.jar=%p/share/java/jakarta-servletapi/servlet.jar \
	-Dcore.jar.name=%n.jar \
	-Dapi.jar.name=%n-api.jar \
	-Dadapters.jar.name=%n-adapters.jar \
	-Dsource.version=1.4 \
	-Dtarget.version=1.6
	javadoc -sourcepath src/main/java -d api `find src/main/java -name \*.java`
<<

InstallScript: <<
	mkdir -p %i/share/doc/%N
	mv api %i/share/doc/%N/
<<
JarFiles: target/*.jar
DocFiles: *.html *.txt

Homepage: http://jakarta.apache.org/commons/logging.html
DescDetail: <<
There is a great need for debugging and logging information inside of
Commons components such as HTTPClient and DBCP.  However, there are
many logging APIs out there and it is difficult to choose among them.

The Logging package is an ultra-thin bridge between different logging
libraries.  Commons components may use the Logging API to remove
compile-time and run-time dependencies on any particular logging
package, and contributors may write Log implementations for the
library of their choice.
<<

