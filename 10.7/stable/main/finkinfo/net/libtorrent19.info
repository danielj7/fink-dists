Package: libtorrent19
Version: 0.13.4
Revision: 1
License: GPL
HomePage: http://libtorrent.rakshasa.no
Description: Bittorrent library
Maintainer: David Fang <fangism@users.sourceforge.net>

Depends: %n-shlibs (=%v-%r)
BuildDepends: fink (>= 0.24.12), libsigc++2, system-openssl-dev, pkgconfig (>= 0.9-1)
BuildConflicts: openssl097-dev, openssl098-dev
Conflicts: libtorrent, libtorrent11, libtorrent12, libtorrent15
Replaces: libtorrent, libtorrent11, libtorrent12, libtorrent15

Source: http://libtorrent.rakshasa.no/downloads/libtorrent-%v.tar.gz
Source-MD5: e82f380a9d4b55b379e0e73339c73895

PatchFile: %n.patch
PatchFile-MD5: 58f6bca1e89d9021ac748efd5906a54d
# PatchFile-MD5: a16759ddc52896ec013537f761346560

#PKG_CONFIG_PATH: %p/lib/system-openssl/lib/pkgconfig
BuildDependsOnly: true

GCC: 4.0

# SetCPPFLAGS: -I%p/lib/system-openssl/include
# SetLDFLAGS: -L%p/lib/system-openssl/lib

ConfigureParams: <<
	--enable-ipv6 \
	--with-kqueue \
	OPENSSL_CFLAGS=-L%p/lib/system-openssl/include \
	OPENSSL_LIBS="-L%p/lib/system-openssl/lib -lcrypto"
<<

CompileScript:<<
PKG_CONFIG_PATH=%p/lib/system-openssl/lib/pkgconfig ./configure %c
make
<<

# tests currently fail linking
InfoTest: <<
	TestConfigureParams: LIBS=-lz
	TestDepends: cppunit1.12.1, xcode (>= 4.3)
	# xcode 4.1 fails to compile tests like torrent/object_static_map_test.cc
	TestScript: make -k check || exit 2
<<
InstallScript: 

DocFiles: <<
AUTHORS
COPYING
ChangeLog
NEWS
README
<<

SplitOff: << 
  Package: %N-shlibs
  Depends: libsigc++2-shlibs
  Files: lib/libtorrent.18.dylib
  Shlibs: %p/lib/libtorrent.18.dylib 19.0.0 %n (>= 0.13.4-1)

  DocFiles: <<
    AUTHORS
    COPYING
    ChangeLog
    NEWS
    README
  <<
<<

DescPackaging: <<
pkgconfig does not find the system openssl

Library version info and name change inconsistently between major versions.

Former maintainer: Michal Suchanek <hramrach@centrum.cz>
<<
DescPort: <<
fangism:
Some C++ related patching was necessary to get the source to compile against
g++-4.0, even though upstream requires g++-4.2 or higher.
Also, some POSIX APIs that were expected for atomic operations were 
mapped to darwin8 equivalents.  
Additional patching needed to C-cast (ewww...) address-of-unsigned to 
pointer-to-signed because of differences in the atomicity API.  
<<
