Package: mdds
Version: 0.5.4
Revision: 1
Description: Multi-dim. data structure and indexing algo
License: BSD
Maintainer: David Fang <fangism@users.sourceforge.net>
Homepage: http://code.google.com/p/multidimalgorithm/
Source: http://multidimalgorithm.googlecode.com/files/%n_%v.tar.bz2
Source-MD5: d33e6871e05709963d7feb48f9620900
BuildDependsOnly: true
BuildDepends: coreutils
PatchScript: <<
	#!/bin/sh -ev
	# test suite needs to be able to find boost for hash container
	# need coreutils:ginstall
	sed -i.orig -e '/^CPPFLAGS=/s|$| -I%p/include|g' \
		-e '/^[ \t]install/s|install|g&|' Makefile.in
	# g++-4.0.1 access bug/defect workaround
	darwin_vers=`uname -r | cut -d. -f1`
	if test $darwin_vers = 8
	then sed -i.orig -e '/struct node_printer/,/class search_result_base/s|private|public|' include/mdds/segment_tree.hpp
	fi
<<
SetCPPFLAGS: -I%p/include
InfoTest: <<
TestDepends: boost1.46.1.cmake
TestConfigureParams: --with-hash-container=boost
TestScript: make -k check || exit 2
<<
InstallScript: make DESTDIR=%d install
DescDetail: <<
Segment tree is a balanced-binary-tree based data structure efficient for 
detecting all intervals (or segments) that contain a given point. 
The segments may overlap with each other. The end points of stored segments 
are not inclusive, that is, when an interval spans from 2 to 6, an arbitrary 
point x within that interval can take a value of 2 <= x < 6, but not the 
exact value of 6 itself.

Flat segment tree is a variant of segment tree that is designed to store 
a collection of non-overlapping segments. This structure is efficient when 
you need to store values associated with 1 dimensional segments that never 
overlap with each other. Like segment tree, stored segments' end points 
are non-inclusive.

Rectangle set stores 2-dimensional rectangles and provides an efficient way 
to query all rectangles that contain a given point in 2-dimensional space. 
It internally uses nested segment tree. Each rectangle is defined by two 
2-dimensional points: the top-left and bottom-right points, and the 
bottom-right point is non-inclusive. For instance, if a rectangle ranges 
from (x=2, y=2) to (x=10, y=20), then a 2-dimension point A (x,y) is said 
to be inside that rectangle only when 2 <= x < 10 and 2 <= y < 20.

Point quad tree stores 2-dimensional points and provides an efficient way 
to query all points within specified rectangular region.

Mixed type matrix data structure stores elements of four different types: 
numeric, string, boolean and empty. It can also store additional flags 
associated with each element. It supports two different storage types 
(filled and sparse) and two different default element types (numeric zero 
and empty). 

License: MIT
<<
DescPackaging: <<
This library contains only headers, no binaries.  
<<
