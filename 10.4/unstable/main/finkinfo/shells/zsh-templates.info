Package: zsh-templates
Version: 1.0.5
Revision: 1
Source:  http://xanana.ucsc.edu/~wgscott/mystuff/%n-%v.tgz
Source-MD5: aa5e66f6cc1d2c4466cad36d76175382 
Depends: macosx, zsh (>= 4.2.1-13) | zsh-multibyte 
License: GPL
Maintainer: W. G. Scott <wgscott@users.sourceforge.net>
Description: Template files for zsh customization 
PatchScript: <<
#!/bin/zsh -efx
perl -pi.bak -e 's|ALT_SWPREFIX|%p|g' etc/zshenv
rm -f etc/*.bak
<<
CompileScript:<<
<<
InstallScript:<<
#!/bin/zsh -efx
mkdir -p %i/share/zsh/templates/Library/init/zsh
mkdir -p %i/share/zsh/templates/Applications     
#mkdir -p %i/share/zsh/templates/Library/LaunchAgents
mkdir -p %i/share/zsh/templates/etc
mkdir -p %i/etc/zsh
#
# This isn't needed in the fink version, and interferes:
# rm -f Library/init/zsh/environment.xtal
cp -rf Library/init/zsh/* %i/share/zsh/templates/Library/init/zsh/.
#perl -pi.bak -e 's|/Library/init|%p/share/zsh/templates/Library/init|g' Library/LaunchAgents/*
#rm -f Library/LaunchAgents/*.bak
#cp -rf Library/LaunchAgents/* %i/share/zsh/templates/Library/LaunchAgents/.
cp -rf Applications/* %i/share/zsh/templates/Applications/.
cp etc/zsh* %i/share/zsh/templates/etc/.
# 
# I'm not sure how to handle this, but this avoids clobbering
# files that the user may have installed manually.
if [[ -f %p/etc/zsh/zshenv ]];then
    mv -f %p/etc/zsh/zshenv %p/etc/zsh/zshenv.old_$$
fi
if [[ -f %p/etc/zsh/zshrc ]];then
    mv -f %p/etc/zsh/zshrc %p/etc/zsh/zshrc.old_$$
fi
#
ln -s %p/share/zsh/templates/etc/zshenv %i/etc/zsh/zshenv
ln -s %p/share/zsh/templates/etc/zshrc %i/etc/zsh/zshrc
#
# This is causing some reported problems, so eliminate this for now:
# mkdir -p  %i/etc/profile.d
#
# cat >|  %i/etc/profile.d/%n.sh  << eof-1
#
# if [[ -n \$ZSH_NAME ]];then
#     if [[ -z \$(/bin/launchctl list | grep zsh.fink.completion ) ]];then
#         /bin/launchctl load %p/share/zsh/templates/Library/LaunchAgents/zsh.fink.completion.plist
#     fi
#     if [[ -z \$(/bin/launchctl list | grep zsh.open.completion ) ]];then
#         /bin/launchctl load %p/share/zsh/templates/Library/LaunchAgents/zsh.open.completion.plist
#     fi
# fi 
#
# 
# eof-1
#
# echo "# This file is an empty place-holder. "  >|  %i/etc/profile.d/%n.csh
#
# chmod a+x %i/etc/profile.d/%n.*sh
<<
PostInstScript: <<
chmod a+x %p/share/zsh/templates/Library/init/zsh/local-functions/darwin/whatsnew
echo ""
echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo "Please issue \"fink describe zsh-templates\","
echo "or \"man zsh-templates\" for more details."
echo "Please issue %p/share/zsh/templates/Library/init/zsh/local-functions/darwin/whatsnew"
echo "to find out what is new in this version."
echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
echo ""
sleep 5
<<
DescDetail: << 
A wiki for zsh-templates has now been created, describing
what is in the package in detail.  It can be visited at the
following URL: http://tinyurl.com/y3r4kp 

These files  work "out of the box" but the template files
can be modified as follows. (The /sw/etc/zsh/zshenv and
/sw/etc/zsh/zshrc should not have to be modified.  If you
have to modify these, please report this as a bug.)

1 Issue sudo mkdir -p /Library/init

2 Issue sudo cp -R /sw/share/zsh/templates/Library/init/zsh /Library/init/.
Those files will supercede the ones just copied, so edit those to make
your desired changes, not the ones under /sw.
Anything that appears in /Users/\$USER/Library/init/zsh 
will be read IN ADDITION TO the other files.

3 To change the prompt theme, issue the command "switch_prompt"

4 To use with /bin/zsh, copy or link the file
/sw/share/zsh/templates/etc/zshenv to /etc/zshenv and
likewise with /sw/share/zsh/templates/etc/zshrc to
/etc/zshrc.  These two files are both required and have been
designed in such a way that they should not require editing.

5 The faster-loading "open" completion function is now enabled
by default on 10.4, and you should not have to do anything other
than start a zsh shell. On 10.3 it requires an up-to-date
locate database to find the various Applications.  

6 You can customize the behavior of X11 by issuing 
"customize_x11" or "customize_x11_gui". Several
somewhat "hidden" features of X11.app can be enabled or disabled.

7 The commands "user_setup" and "host_setup" can be invoked
to fine-tune username and hostname completions for ssh, scp,
switch_user, and so on.

8 The command "gdirs" provides a gui interface to the directory
stack.  You can use an applescript-type interface instead of
a Pashua-type interface by creating a file ~/.zshenv and putting
into it the following line:
export GUIDIRS_PASHUA='no'

9 A brief description of the functions and completions
provided can be had by typing "help_template_functions"
optionally with the function name.  Only a subset are
autoloaded by default.  Load others individually by
uncommenting "autoload -U foo" lines or setting the appropriate
vairables indicated in the file functions.local.

Modifications and enhancements of zsh distributed templates 
were written by Gary Kerbaugh, W. G. Scott, Wataru Kagawa 
and several others. Completion functions _open, _fink, 
_hdiutils, _defaults and their dependencies were written by
Motoi Washida and will be included by default in future versions
of zsh. Some of these (_open, _fink) have been modified to work 
faster.



More details are available here:   http://tinyurl.com/y3r4kp
<<
HomePage: http://tinyurl.com/y3r4kp
