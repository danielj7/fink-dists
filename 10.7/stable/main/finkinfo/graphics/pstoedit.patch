--- pstoedit-3.62-orig/config/pstoedit.pc.in	2006-01-02 17:26:20.000000000 +0100
+++ pstoedit-3.62/config/pstoedit.pc.in	2013-06-20 20:33:24.000000000 +0200
@@ -4,7 +4,7 @@
 includedir=@includedir@
 
 Name: pstoedit
-Description: converts Postscript(TM) and PDF files to other vector graphic formats
+Description: converts PostScript(TM) and PDF files to other vector graphic formats
 Version: @VERSION@.0
 Requires: 
 Libs: -L@libdir@ -lpstoedit @LIBPNG_LDFLAGS@ @CXX_STD_LIB@ @CXX_RUNTIME_LIB@ @LIBLD_LDFLAGS@
--- pstoedit-3.62-orig/contrib/cairo/readme.txt	2009-03-22 19:30:36.000000000 +0100
+++ pstoedit-3.62/contrib/cairo/readme.txt	2013-06-22 21:54:52.000000000 +0200
@@ -1,4 +1,4 @@
-THis directory contains an example EPS file along with a sample C program and makefile.
+This directory contains an example EPS file along with a sample C program and makefile.
 These are related to the cairo backend of pstoedit. 
 After building pstoedit, you can do
 
@@ -9,4 +9,4 @@
 to X11 as well as to a PDF file.
 
 
-Dan McMahill
\ No newline at end of file
+Dan McMahill
--- pstoedit-3.62-orig/doc/readme.txt	2013-04-28 19:58:43.000000000 +0200
+++ pstoedit-3.62/doc/readme.txt	2013-06-23 23:12:17.000000000 +0200
@@ -1,7 +1,7 @@
 PSTOEDIT 
 Copyright (C) 1993 - 2013 Wolfgang Glunz, wglunz35_AT_pstoedit.net
 
-pstoedit converts Postscript(TM) and PDF files to other vector graphic
+pstoedit converts PostScript(TM) and PDF files to other vector graphic
 formats so that they can be edited graphically. See pstoedit.htm or
 index.htm for more details on which formats are supported by pstoedit.
 
@@ -69,14 +69,14 @@
 
 pstoedit and the -dSAFER option of Ghostscript:
 -----------------------------------------------
-GhostScript provides an option -dSAFER that disables all file access
+Ghostscript provides an option -dSAFER that disables all file access
 functions of PostScript. Some administrators even install a wrapper
-like to following instead of ghostscript directly
+like to following instead of gs directly
 #!/bin/sh
 gs.real -dSAFER $*
 
 So when a user uses gs he/she actually runs this script. However,
-pstoedit needs to have access to files for it's operation. So
+pstoedit needs to have access to files for its operation. So
 it is not possible to use this wrapper for gs in combination with pstoedit.
 You would get an error message like "Error: /invalidfileaccess in (w)".
 
@@ -89,8 +89,8 @@
 pstoedit.real -include /??????/local/safer.ps $*
 
 A template for safer.ps can be found in the misc subdirectory.
-This way pstoedit can open all the file it needs (the input file and an
-output file). After that then -- via the included file -- all files
+This way pstoedit can open all the files it needs (the input file and an
+output file). After that then -- via the included file -- all file
 operations are disabled and the input file is processed. Any file operation
 that is executed be the user's PostScript file is disabled this way.
 
@@ -98,15 +98,15 @@
 Using pstoedit:
 ---------------
 Before you can use pstoedit you must have a working installation
-of GhostScript (either GNU or Aladdin).
+of Ghostscript (either GNU or Aladdin).
 
-The rest is descibed in the manual page in /pstoedit.htm.
+The rest is described in the manual page in /pstoedit.htm.
 
 pstoedit works reasonable with PostScript files containing
 	* line drawings
 	* text with standard fonts 
 
-Try to run it on golfer.ps or tiger.ps that comes with ghostscript, e.g., 
+Try to run it on golfer.ps or tiger.ps that comes with Ghostscript, e.g., 
 pstoedit -f <your format> <local path where GhostScript is installed>/examples/tiger.ps tiger.<suffix>
 
 Some features that are no supported by every backend of pstoedit:
@@ -117,7 +117,7 @@
 
 Special note about the Java backend:
 ------------------------------------
-The java backends generate a java source file that needs other files
+The Java backends generate a Java source file that needs other files
 in order to be compiled and usable. See the files contrib/java/java1/readme_java.txt 
 and contrib/java/java2/readme_java2.htm for more details.
 
--- pstoedit-3.62-orig/doc/index.htm	2012-08-28 21:39:38.000000000 +0200
+++ pstoedit-3.62/doc/index.htm	2013-06-23 23:21:47.000000000 +0200
@@ -121,14 +121,14 @@
 <ul>
     <li>(Frame)Maker Intermediate Format (MIF)</li>
     <li>CGM Format (both binary and textual) </li>
-    <li>SVG - scalable vector format. One candidate of the W3C
-        for a web standard for vector drawings. See <a
+    <li>SVG - Scalable Vector Graphics format. One candidate of
+        the W3C for a web standard for vector drawings. See <a
         href="http://www.w3.org/Graphics/SVG">http://www.w3.org/Graphics/SVG</a>/
         for more details.</li>
     <li>Better Enhanced Windows Meta Files (EMF) (supports curves
-        and compound pathes and does more accurate text
-        formatting) (Windows only)</li>
-    <li>RTF (MS Word) (Windows only)</li>
+        and compound paths and does more accurate text
+        formatting) (MS Windows only)</li>
+    <li>RTF (MS Word) (MS Windows only)</li>
 </ul>
 
 <p>Implementing support for other formats should be very easy.
@@ -138,9 +138,9 @@
 This framework can be used independently from the PostScript
 frontend from any other program. The framework provides a uniform
 interface to all different backends. You need a C++ compiler to
-compile and GhostScript to run pstoedit. pstoedit should run on
-all Un*x like systems (including cygwin) and has also been ported to OS/2, Windows 9x/NT/2K/XP/Vista,
-and RiscOS. </p>
+compile and Ghostscript to run pstoedit. pstoedit should run on
+all Un*x like systems (including Cygwin) and has also been ported to
+OS/2, MS Windows 9x/NT/2K/XP/Vista, and RiscOS. </p>
 
 <p>Since version 3.00 it is possible to add new drivers without
 even recompiling the core program. pstoedit can load additional
@@ -152,9 +152,9 @@
 
 <ul>
     <li>Source tarball:
-    <a href="https://sourceforge.net/projects/pstoedit/files/pstoedit/3.61/pstoedit-3.61.tar.gz/download">pstoedit-3.61.tar.gz</a> </li>
-    <li> <a href="https://sourceforge.net/projects/pstoedit/files/pstoedit/3.61/pstoeditsetup_win32.exe/download">binary for Windows 32 bit</a> </li>
-    <li> <a href="https://sourceforge.net/projects/pstoedit/files/pstoedit/3.61/pstoeditsetup_x64.exe/download">binary for Windows 64 bit</a> </li>
+    <a href="https://sourceforge.net/projects/pstoedit/files/pstoedit/3.62/pstoedit-3.62.tar.gz/download">pstoedit-3.62.tar.gz</a> </li>
+    <li> <a href="https://sourceforge.net/projects/pstoedit/files/pstoedit/3.62/pstoeditsetup_win32.exe/download">binary for Windows 32 bit</a> </li>
+    <li> <a href="https://sourceforge.net/projects/pstoedit/files/pstoedit/3.62/pstoeditsetup_x64.exe/download">binary for Windows 64 bit</a> </li>
     <li><a href="../plugins/index.htm">additional plugins</a></li>
     <li><a href="../importps/index.htm">a version of pstoedit that can be
         used as graphic import filter for MS-Office, Paint Shop Pro, or Photoline</a></li>
@@ -187,7 +187,7 @@
 <h1><a name="Related Links">Related Links</a></h1>
 
 <p>Some links more or less related to pstoedit can be found
-<a href="related.htm">here</a>.</p>
+<a href="http://www.helga-glunz.homepage.t-online.de/pstoedit/related.htm">here</a>.</p>
 
 <hr>
 
--- pstoedit-3.62-orig/contrib/cairo/cairo-example.mk	2009-02-07 04:59:10.000000000 +0100
+++ pstoedit-3.62/contrib/cairo/cairo-example.mk	2013-06-23 23:41:54.000000000 +0200
@@ -21,22 +21,35 @@
 # demonstrates the use of the cairo driver for pstoedit.
 
 
-CFLAGS=	-Wall  `pkg-config --cflags cairo cairo-pdf cairo-xlib pangocairo`
-LDFLAGS=`pkg-config --libs cairo cairo-pdf cairo-xlib pangocairo`
+CFLAGS=	-Wall -H `pkg-config --cflags cairo cairo-pdf cairo-xlib pangocairo`
+LDFLAGS=`pkg-config --libs cairo cairo-pdf cairo-xlib pangocairo` -Wl,-t
 
-default: cairo-example
+default: cairo-example cairo-example-pango
 
 cairo-example : sample.o cairo-example.o
 	$(CC) -o $@  $(CFLAGS) $(CPPFLAGS) cairo-example.o sample.o $(LDFLAGS)
 
+cairo-example-pango : sample-pango.o cairo-example-pango.o
+	$(CC) -o $@  $(CFLAGS) $(CPPFLAGS) cairo-example-pango.o sample-pango.o $(LDFLAGS)
+
 
 cairo-example.o : cairo-example.c
 	$(CC) -c $(CFLAGS) $(CPPFLAGS) cairo-example.c
 
+cairo-example-pango.o : cairo-example.c
+	$(CC) -c $(CFLAGS) $(CPPFLAGS) cairo-example.c -o $@
+
+
 sample.o: sample.c
 	$(CC) -c $(CFLAGS) $(CPPFLAGS) sample.c
 
+sample-pango.o: sample-pango.c
+	$(CC) -c $(CFLAGS) $(CPPFLAGS) sample-pango.c
+
 
-sample.c : sample.eps pstoedit libp2edrvstd.la
-	./pstoedit  -f "cairo: -header sample.h" sample.eps sample.c
+sample.c : sample.eps ../../src/pstoedit ../../src/libp2edrvstd.la
+	../../src/pstoedit  -f "cairo: -header sample.h" sample.eps sample.c
+
+sample-pango.c : sample.eps ../../src/pstoedit ../../src/libp2edrvstd.la
+	../../src/pstoedit  -f "cairo: -pango -header sample.h" sample.eps sample-pango.c
 
--- pstoedit-3.62-orig/contrib/cairo/sample.eps	2009-02-07 04:48:00.000000000 +0100
+++ pstoedit-3.62/contrib/cairo/sample.eps	2013-06-25 10:33:48.000000000 +0200
@@ -392,7 +392,7 @@
       GS
             0 SG
             /Times-Roman FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees) SH
+            (Times Font, 0 Degrees) SH
       GR
    GR
 
@@ -405,7 +405,7 @@
       GS
             0 SG
             /Times-Bold FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees,Bold) SH
+            (Times Font, 0 Degrees, Bold) SH
       GR
    GR
 
@@ -418,7 +418,7 @@
       GS
             0 SG
             /Times-BoldItalic FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees,BoldItalic) SH
+            (Times Font, 0 Degrees, BoldItalic) SH
       GR
    GR
 
@@ -470,13 +470,13 @@
         GS
         0
             /Times-Roman FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees) TGSW 
+            (Times Font, 0 Degrees) TGSW 
         AD
         GR
       2 DI NE 0 RM
             0 SG
             /Times-Roman FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees) SH
+            (Times Font, 0 Degrees) SH
       GR
    GR
 
@@ -490,13 +490,13 @@
         GS
         0
             /Times-Bold FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees,Bold) TGSW 
+            (Times Font, 0 Degrees, Bold) TGSW 
         AD
         GR
       2 DI NE 0 RM
             0 SG
             /Times-Bold FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees,Bold) SH
+            (Times Font, 0 Degrees, Bold) SH
       GR
    GR
 
@@ -510,13 +510,13 @@
         GS
         0
             /Times-BoldItalic FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees,BoldItalic) TGSW 
+            (Times Font, 0 Degrees, BoldItalic) TGSW 
         AD
         GR
       2 DI NE 0 RM
             0 SG
             /Times-BoldItalic FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees,BoldItalic) SH
+            (Times Font, 0 Degrees, BoldItalic) SH
       GR
    GR
 
@@ -575,13 +575,13 @@
         GS
         0
             /Times-Roman FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees) TGSW 
+            (Times Font, 0 Degrees) TGSW 
         AD
         GR
       NE 0 RM
             0 SG
             /Times-Roman FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees) SH
+            (Times Font, 0 Degrees) SH
       GR
    GR
 
@@ -595,13 +595,13 @@
         GS
         0
             /Times-Bold FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees,Bold) TGSW 
+            (Times Font, 0 Degrees, Bold) TGSW 
         AD
         GR
       NE 0 RM
             0 SG
             /Times-Bold FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees,Bold) SH
+            (Times Font, 0 Degrees, Bold) SH
       GR
    GR
 
@@ -615,13 +615,13 @@
         GS
         0
             /Times-BoldItalic FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees,BoldItalic) TGSW 
+            (Times Font, 0 Degrees, BoldItalic) TGSW 
         AD
         GR
       NE 0 RM
             0 SG
             /Times-BoldItalic FF [14 0 0 -14 0 0] MS
-            (Time Font, 0 Degrees,BoldItalic) SH
+            (Times Font, 0 Degrees, BoldItalic) SH
       GR
    GR
 
--- pstoedit-3.62-orig/doc/pstoedit.tex	2012-08-28 12:47:35.000000000 +0200
+++ pstoedit-3.62/doc/pstoedit.tex	2013-06-25 12:32:33.000000000 +0200
@@ -16,13 +16,15 @@
 
 \setVersionWord{Version}  %%% that's the default, no need to set it.
 \setVersion{3.62}
-\setDate{April 2013}    
+\setDate{April 2013}
 
 \setlength{\emergencystretch}{1.5em}
 
 \usepackage{url}
 \let\URL\url \let\Email\url \let\File\url
 
+\hyphenation{Ghost-script}
+
 \begin{document}
 
 \begin{Name}{1}{pstoedit}{Dr. Wolfgang Glunz}{Conversion Tools}{PSTOEDIT}
@@ -35,100 +37,100 @@
 
 \subsection{From the command shell}
 
-\Prog{pstoedit} \oOpt{-v -help} 
-\\  
+\Prog{pstoedit} \oOpt{-v -help}
+\\
 
-\Prog{pstoedit} 
-\oOptArg{-include}{~name of a PostScript file to be included} 
-\oOptArg{-df}{~font name} 
-\oOpt{-nomaptoisolatin1} 
-\oOpt{-dis} 
-\oOptArg{-pngimage}{~filename - for debugging purpose mainly. Write result of processing also to a PNG file.} 
-\oOpt{-q} 
-\oOpt{-nq} 
-\oOpt{-nc} 
-\oOpt{-nsp} 
-\oOpt{-mergelines} 
-\oOpt{-filledrecttostroke} 
-\oOpt{-mergetext} 
-\oOpt{-dt} 
-\oOpt{-adt} 
-\oOpt{-ndt} 
-\oOpt{-dgbm} 
-\oOpt{-correctdefinefont} 
-\oOpt{-pti} 
-\oOpt{-pta} 
-\oOptArg{-xscale}{~number} 
-\oOptArg{-yscale}{~number} 
-\oOptArg{-xshift}{~number} 
-\oOptArg{-yshift}{~number} 
-\oOpt{-centered} 
-\oOptArg{-minlinewidth}{~number} 
-\oOptArg{-pagenumberformat}{~page number format specification} 
-\oOpt{-split} 
-\oOpt{-v} 
-\oOpt{-usebbfrominput} 
-\oOpt{-ssp} 
-\oOptArg{-uchar}{~character} 
-\oOpt{-nb} 
-\oOptArg{-page}{~page number} 
-\oOptArg{-flat}{~flatness factor} 
-\oOpt{-sclip} 
-\oOpt{-ups} 
-\oOpt{-rgb} 
-\oOpt{-useagl} 
-\oOpt{-noclip} 
-\oOpt{-t2fontsast1} 
-\oOpt{-keep} 
-\oOpt{-debugfonthandling} 
-\oOpt{-gstest} 
-\oOpt{-nfr} 
-\oOpt{-glyphs} 
-\oOpt{-useoldnormalization} 
-\oOptArg{-rotate}{~angle (0-360)} 
-\oOptArg{-fontmap}{~name of font map file for pstoedit} 
-\oOptArg{-pagesize}{~page format} 
-\oOpt{-help} 
-\oOptArg{-gs}{~path to the ghostscript executable/DLL } 
-\oOpt{-bo} 
-\oOptArg{-psarg}{~argument string} 
-\oOptArg{-pslanguagelevel}{~PostScript Language Level to be used 1,2, or 3} 
-\OptArg{-f}{~"format\Lbr:options\Rbr"} 
-\oOptArg{-gsregbase}{~GhostScript base registry path} 
-[ inputfile [outputfile] ] 
+\Prog{pstoedit}
+\oOptArg{-include}{~name of a PostScript file to be included}
+\oOptArg{-df}{~font name}
+\oOpt{-nomaptoisolatin1}
+\oOpt{-dis}
+\oOptArg{-pngimage}{~filename - for debugging purpose mainly. Write result of processing also to a PNG file.}
+\oOpt{-q}
+\oOpt{-nq}
+\oOpt{-nc}
+\oOpt{-nsp}
+\oOpt{-mergelines}
+\oOpt{-filledrecttostroke}
+\oOpt{-mergetext}
+\oOpt{-dt}
+\oOpt{-adt}
+\oOpt{-ndt}
+\oOpt{-dgbm}
+\oOpt{-correctdefinefont}
+\oOpt{-pti}
+\oOpt{-pta}
+\oOptArg{-xscale}{~number}
+\oOptArg{-yscale}{~number}
+\oOptArg{-xshift}{~number}
+\oOptArg{-yshift}{~number}
+\oOpt{-centered}
+\oOptArg{-minlinewidth}{~number}
+\oOptArg{-pagenumberformat}{~page number format specification}
+\oOpt{-split}
+\oOpt{-v}
+\oOpt{-usebbfrominput}
+\oOpt{-ssp}
+\oOptArg{-uchar}{~character}
+\oOpt{-nb}
+\oOptArg{-page}{~page number}
+\oOptArg{-flat}{~flatness factor}
+\oOpt{-sclip}
+\oOpt{-ups}
+\oOpt{-rgb}
+\oOpt{-useagl}
+\oOpt{-noclip}
+\oOpt{-t2fontsast1}
+\oOpt{-keep}
+\oOpt{-debugfonthandling}
+\oOpt{-gstest}
+\oOpt{-nfr}
+\oOpt{-glyphs}
+\oOpt{-useoldnormalization}
+\oOptArg{-rotate}{~angle (0-360)}
+\oOptArg{-fontmap}{~name of font map file for pstoedit}
+\oOptArg{-pagesize}{~page format}
+\oOpt{-help}
+\oOptArg{-gs}{~path to the Ghostscript executable/DLL }
+\oOpt{-bo}
+\oOptArg{-pslanguagelevel}{~PostScript Language Level to be used 1, 2, or 3}
+\oOptArg{-psarg}{~argument string}
+\OptArg{-f}{~"format\Lbr:options\Rbr"}
+\oOptArg{-gsregbase}{~Ghostscript base registry path}
+[ inputfile [outputfile] ]
 
 \subsection{From Gsview}
 
-Pstoedit can be called from within gsview via 
+Pstoedit can be called from within gsview via
 "\textbf{Edit | Convert to vector format}"
 
 \subsection{From programs that support the ALDUS graphic import filter interface}
-  
+
 \Prog{pstoedit} can also be used as PostScript and PDF graphic import filter for several programs including
-MS-Office,  PaintShop-Pro and PhotoLine. See 
-\URL{http://www.pstoedit.net/importps/} for more 
+MS Office,  PaintShop-Pro and PhotoLine. See
+\URL{http://www.pstoedit.net/importps/} for more
 details.
 
- 
+
 \section{Description}
 %%%%%%%%%%%%%%%%%%%%%
 
 \subsection{RELEASE LEVEL}
 
-This manpage documents release \Version\ of \Prog{pstoedit}. 
+This manpage documents release \Version\ of \Prog{pstoedit}.
 
 \subsection{USE}
 
 \Prog{pstoedit} converts PostScript and PDF files to various vector graphic
 formats. The resulting files can be edited or imported into various drawing
-packages. Type 
+packages. Type
+
+     \textbf{pstoedit -help}
 
-     \textbf{pstoedit -help} 
-     
 \noindent to get a list of supported output formats. Pstoedit comes with a
 large set of format drivers integrated in the binary. Additional drivers can be
-installed as plugins and are available via 
-\URL{http://www.pstoedit.net/plugins/}. 
+installed as plugins and are available via
+\URL{http://www.pstoedit.net/plugins/}.
 Just copy the plugins to the same directory where the pstoedit binary is installed or - under Unix like systems only - alternatively into the lib directory parallel to the bin directory where pstoedit is installed.
 
 However, unless you also get a license key for the plugins, the additional
@@ -137,22 +139,22 @@
 
 \subsection{PRINCIPLE OF CONVERSION}
 
-\Prog{pstoedit} works by redefining the some basic painting operators of
+\Prog{pstoedit} works by redefining some basic painting operators of
 PostScript, e.g. \textbf{stroke} or \textbf{show} (bitmaps drawn by the image
 operator are not supported by all output formats.) After
 redefining these operators, the PostScript or PDF file that needs to be
 converted is processed by a PostScript interpreter, e.g., Ghostscript
 (\Cmd{gs}{1}). You normally need to have a PostScript interpreter installed in
 order to use this program. However, you can perform some "back end only" processing
-of files following the conventions of the pstoedit intermediate formate by specifying the \Opt{-bo} option. See "Available formats and their specific options" below. 
+of files following the conventions of the pstoedit intermediate format by specifying the \Opt{-bo} option. See "Available formats and their specific options" below.
 
 The output that is written by the interpreter due to the redefinition of the
 drawing operators is a sort of 'flat' PostScript file that contains only simple
 operations like moveto, lineto, show, etc. You can look at this file using the
-\Opt{-f debug} option. 
+\Opt{-f debug} option.
 
 This output is read by end-processing functions of \Prog{pstoedit} and triggers
-the drawing functions in the selected output format driver sometime called also "backend". 
+the drawing functions in the selected output format driver sometime called also "backend".
 
 \subsection{NOTES}
 
@@ -164,1306 +166,1306 @@
 
 \subsection{General options}
 \begin{description}
-\item[\oOptArg{-include}{~name of a PostScript file to be included}] 
-This options allows to specify an additional PostScript file that will be executed just before the normal input is read. This is helpful for including specific page settings or for disabling potentially unsafe PostScript operators, e.g., file, renamefile, or deletefile. 
+\item[\oOptArg{-include}{~name of a PostScript file to be included}]
+This option allows to specify an additional PostScript file that will be executed just before the normal input is read. This is helpful for including specific page settings or for disabling potentially unsafe PostScript operators, e.g., file, renamefile, or deletefile.
 
 
-\item[\oOptArg{-xscale}{~number}] 
+\item[\oOptArg{-xscale}{~number}]
 scale by a factor in x-direction
 
 
-\item[\oOptArg{-yscale}{~number}] 
+\item[\oOptArg{-yscale}{~number}]
 scale by a factor in y-direction
 
 
-\item[\oOptArg{-xshift}{~number}] 
+\item[\oOptArg{-xshift}{~number}]
 shift image in x-direction
 
 
-\item[\oOptArg{-yshift}{~number}] 
+\item[\oOptArg{-yshift}{~number}]
 shift image in y-direction
 
 
-\item[\oOpt{-centered}] 
+\item[\oOpt{-centered}]
 center image before scaling or shifting
 
 
-\item[\oOptArg{-minlinewidth}{~number}] 
+\item[\oOptArg{-minlinewidth}{~number}]
 minimal line width. All lines thinner than this will be drawn in this line width - especially zero-width lines
 
 
-\item[\oOptArg{-pagenumberformat}{~page number format specification}] 
-format specification for page numbers in file name if -split is used. The specification is used to create the page number using sprintf.The specification shall not include the leading % nor the trailing d. Default is empty string which results in formatting the page number using %d. This results in page numbers like 1, 2, ..., 10. Sometimes you may want to have fixed length with leading 0, so you might want to specify 02 which means 2 digits with leading 0.
+\item[\oOptArg{-pagenumberformat}{~page number format specification}]
+format specification for page numbers in file name if -split is used. The specification is used to create the page number using sprintf. The specification shall not include the leading \% nor the trailing d. Default is empty string which results in formatting the page number using \%d. This results in page numbers like 1, 2, ..., 10. Sometimes you may want to have fixed length with leading 0, so you might want to specify 02 which means 2 digits with leading 0.
 
 
-\item[\oOpt{-split}] 
-Create a new file for each page of the input. For this the output filename must contain a \%d which is replaced with the current page number. This option is automatically switched on for output formats that don't support multiple pages within one file, e.g. fig or gnuplot. 
+\item[\oOpt{-split}]
+Create a new file for each page of the input. For this the output filename must contain a \%d which is replaced with the current page number. This option is automatically switched on for output formats that do not support multiple pages within one file, e.g. fig or gnuplot.
 
 
-\item[\oOpt{-usebbfrominput}] 
-If specified, pstoedit uses the BoundingBox as is (hopefully) found in the input file instead of one that is calculated by its own. 
+\item[\oOpt{-usebbfrominput}]
+If specified, pstoedit uses the BoundingBox as is (hopefully) found in the input file instead of one that is calculated by its own.
 
 
-\item[\oOptArg{-page}{~page number}] 
-Select a single page from a multi page PostScript or PDF file. 
+\item[\oOptArg{-page}{~page number}]
+Select a single page from a multi-page PostScript or PDF file.
 
 
-\item[\oOpt{-rgb}] 
+\item[\oOpt{-rgb}]
 Since version 3.30 pstoedit uses the CMYK colors internally. The -rgb option turns on the old behavior to use RGB values.
 
 
-\item[\oOpt{-useagl}] 
-use Adobe Glyph List instead of the IsoLatin1 table (this is experimental)
+\item[\oOpt{-useagl}]
+use Adobe Glyph List instead of the ISO Latin-1 table (this is experimental)
 
 
-\item[\oOpt{-noclip}] 
-don't use clipping (relevant only if output format supports clipping at all)
+\item[\oOpt{-noclip}]
+do not use clipping (relevant only if output format supports clipping at all)
 
 
-\item[\oOptArg{-rotate}{~angle (0-360)}] 
-Rotage image by angle.
+\item[\oOptArg{-rotate}{~angle (0-360)}]
+Rotate image by angle.
 
 
-\item[\oOptArg{-pagesize}{~page format}] 
-set page size for output medium.  
-This option sets the page size for the output medium. Currently this is just used by the libplot output format driver, but might be used by other  output format drivers in future. The page size is specified in terms of the usual page size names, e.g. letter or a4. 
+\item[\oOptArg{-pagesize}{~page format}]
+set page size for output medium.
+This option sets the page size for the output medium. Currently this is just used by the libplot output format driver, but might be used by other  output format drivers in future. The page size is specified in terms of the usual page size names, e.g. letter or a4.
 
 
-\item[\oOpt{-help}] 
+\item[\oOpt{-help}]
 show the help information
 
 
-\item[\oOptArg{-gs}{~path to the ghostscript executable/DLL }] 
-tells pstoedit which ghostscript executable/DLL to use - overwrites the internal search heuristic
+\item[\oOptArg{-gs}{~path to the Ghostscript executable/DLL }]
+tells pstoedit which Ghostscript executable/DLL to use - overwrites the internal search heuristic
 
 
-\item[\oOpt{-bo}] 
-You can run backend processing only (without the PostScript interpreter frontend) by first running \textbf{pstoedit} \Opt{-f dump} \Arg{infile} \Arg{dumpfile} and then running \textbf{pstoedit} \OptArg{-f}{~format}  \Opt{-bo} \Arg{dumpfile} \Arg{outfile}. 
+\item[\oOpt{-bo}]
+You can run backend processing only (without the PostScript interpreter frontend) by first running \textbf{pstoedit} \Opt{-f dump} \Arg{infile} \Arg{dumpfile} and then running \textbf{pstoedit} \OptArg{-f}{~format}  \Opt{-bo} \Arg{dumpfile} \Arg{outfile}.
 
 
-\item[\oOptArg{-psarg}{~argument string}] 
-The string given with this option is passed directly to Ghostscript when Ghostscript is called to process the PostScript file for \Prog{pstoedit}. For example:      \textbf{-psarg}\textbf{~"}\textbf{-r300x300}\textbf{"}. This causes the resolution to be changed to 300x300 dpi. (With older versions of GhostScript, changing the resolution this way has an effect only if the \Opt{-dis} option is given.)  If you want to pass multiple options to Ghostscript you can use multiple  -psarg options \Opt{-psarg opt1} \Opt{-psarg opt2} \Opt{-psarg opt2}. See the GhostScript manual for other possible options. 
+\item[\oOptArg{-psarg}{~argument string}]
+The string given with this option is passed directly to Ghostscript when Ghostscript is called to process the PostScript file for \Prog{pstoedit}. For example:      \textbf{-psarg}\textbf{~"}\textbf{-r300x300}\textbf{"}. This causes the resolution to be changed to 300x300 dpi. (With older versions of Ghostscript, changing the resolution this way has an effect only if the \Opt{-dis} option is given.)  If you want to pass multiple options to Ghostscript you can use multiple  -psarg options \Opt{-psarg opt1} \Opt{-psarg opt2} \Opt{-psarg opt2}. See the Ghostscript manual for other possible options.
 
 
-\item[\oOptArg{-pslanguagelevel}{~PostScript Language Level to be used 1,2, or 3}] 
-PostScript Language Level to be used 1,2, or 3 You can switch Ghostscript into PostScript Level 1 only mode by  \Opt{-pslanguagelevel 1}. This can be useful for example if the PostScript file to be converted uses some Level 2 specific custom color models that are not supported by pstoedit. However, this requires that the PostScript program checks for the PostScript level supported by the interpreter and "acts" accordingly. The default language level is 3.
+\item[\oOptArg{-pslanguagelevel}{~PostScript Language Level 1, 2, or 3 to be used}]
+PostScript Language Level 1, 2, or 3 to be used. You can switch Ghostscript into PostScript Level 1 only mode by  \Opt{-pslanguagelevel 1}. This can be useful for example if the PostScript file to be converted uses some Level 2 specific custom color models that are not supported by pstoedit. However, this requires that the PostScript program checks for the PostScript level supported by the interpreter and "acts" accordingly. The default language level is 3.
 
 
-\item[\OptArg{-f}{~"format\Lbr:options\Rbr"}] 
+\item[\OptArg{-f}{~"format\Lbr:options\Rbr"}]
 target output format recognized by \Prog{pstoedit}.  Since other format drivers can be loaded dynamically, type  \texttt{pstoedit -help} to get a full list of formats. See  "Available formats and their specific options " below for an explanation of the \oArg{:options} to \Opt{-f} format. If the format option is not given, pstoedit tries to guess the target format  from the suffix of the output filename. However, in a lot of cases, this is not a unique mapping and hence pstoedit demands the \Opt{-f} option.
 
 
-\item[\oOptArg{-gsregbase}{~GhostScript base registry path}] 
-registry path to use as a base path when searching GhostScript interpreter  
-This option provides means to specify a registry key under HKLM/Software where to search for GS interpreter key, version and \verb+GS_DLL / GS_LIB+ values. Example: "-gsregbase MyCompany" means  that HKLM/Software/MyCompany/GPL GhostScript would be searched instead of HKLM/Software/GPL GhostScript. 
+\item[\oOptArg{-gsregbase}{~Ghostscript base registry path}]
+registry path to use as a base path when searching Ghostscript interpreter.
+This option provides means to specify a registry key under HKLM/Software where to search for GS interpreter key, version and \verb+GS_DLL / GS_LIB+ values. Example: "-gsregbase MyCompany" means  that HKLM/Software/MyCompany/GPL Ghostscript would be searched instead of HKLM/Software/GPL Ghostscript.
 
 
 \end{description}
 \subsection{Text and font handling related options}
 \begin{description}
-\item[\oOptArg{-df}{~font name}] 
- Sometimes fonts embedded in a PostScript program do not have a fontname. For example, this happens in PostScript files generated by \Cmd{dvips}{1}. In such a case \Prog{pstoedit} uses a replacement font. The default for this is Courier. Another font can be specified using the \Opt{-df} option. \Opt{-df Helvetica} causes all unnamed fonts to be replaced by Helvetica. 
+\item[\oOptArg{-df}{~font name}]
+ Sometimes fonts embedded in a PostScript program do not have a fontname. For example, this happens in PostScript files generated by \Cmd{dvips}{1}. In such a case \Prog{pstoedit} uses a replacement font. The default for this is Courier. Another font can be specified using the \Opt{-df} option. \Opt{-df Helvetica} causes all unnamed fonts to be replaced by Helvetica.
 
 
-\item[\oOpt{-nomaptoisolatin1}] 
-Normally \Prog{pstoedit} maps all character codes to the ones defined by the ISO-Latin1 encoding. If you specify \Opt{-nomaptoisolatin1} then the encoding from the input PostScript is passed unchanged to the output. This may result in strange text output but on the other hand may be the only way to get some fonts converted appropriately. Try what fits best to your concrete case. 
+\item[\oOpt{-nomaptoisolatin1}]
+Normally \Prog{pstoedit} maps all character codes to the ones defined by the ISO Latin1 encoding. If you specify \Opt{-nomaptoisolatin1} then the encoding from the input PostScript is passed unchanged to the output. This may result in strange text output but on the other hand may be the only way to get some fonts converted appropriately. Try what fits best to your concrete case.
 
 
-\item[\oOptArg{-pngimage}{~filename - for debugging purpose mainly. Write result of processing also to a PNG file.}] 
-for debugging purpose mainly. Write result of processing also to a PNG file
+\item[\oOptArg{-pngimage}{~filename}] - for debugging purpose mainly. Write result of processing also to a PNG file.
 
 
-\item[\oOpt{-dt}] 
-Draw text - Text is drawn as polygons. This might produce a large output file. This option is automatically switched on if the selected output format does not support text, e.g. \Cmd{gnuplot}{1}.
+\item[\oOpt{-dt}]
+draw text. Text is drawn as polygons. This might produce a large output file. This option is automatically switched on if the selected output format does not support text, e.g. \Cmd{gnuplot}{1}.
 
 
-\item[\oOpt{-adt}] 
-Automatic Draw text - This option turns on the \Opt{-dt} option selectively for fonts that seem to be no normal text fonts, e.g. Symbol..
+\item[\oOpt{-adt}]
+automatic draw text. This option turns on the \Opt{-dt} option selectively for fonts that seem to be no normal text fonts, e.g. Symbol.
 
 
-\item[\oOpt{-ndt}] 
-Never Draw text -  fully disable the heuristics used by pstoedit to decide when to "draw" text instead of showing it as text. This may produce incorrect results, but in some cases it might nevertheless be useful. "Use at own risk". 
+\item[\oOpt{-ndt}]
+never draw text. Fully disable the heuristics used by pstoedit to decide when to "draw" text instead of showing it as text. This may produce incorrect results, but in some cases it might nevertheless be useful. "Use at own risk".
 
 
-\item[\oOpt{-dgbm}] 
+\item[\oOpt{-dgbm}]
 experimental - draw also bitmaps generated by fonts/glyphs
 
 
-\item[\oOpt{-correctdefinefont}] 
-Some PostScript files, e.g. such as generated by ChemDraw, use the PostScript definefont operator in way that is incompatible with pstoedit's assumptions. The new font is defined by copying an old font without changing the FontName of the new font. When this option is applied, some "patches" are done after a definefont in order to make it again compatible with pstoedit's assumptions. This option is not enabled per default, since it may break other PostScript file. It is tested only with ChemDraw generated files.
+\item[\oOpt{-correctdefinefont}]
+Some PostScript files, e.g. such as generated by ChemDraw, use the PostScript definefont operator in a way that is incompatible with pstoedit's assumptions. The new font is defined by copying an old font without changing the FontName of the new font. When this option is applied, some "patches" are done after a definefont in order to make it again compatible with pstoedit's assumptions. This option is not enabled by default, since it may break other PostScript files. It is tested only with ChemDraw generated files.
 
 
-\item[\oOpt{-pti}] 
-Precision text - Normally a text string is drawn as it occurs in the input file. However, in some situations, this might produce wrongly positioned characters. This is due to limitiations in most output formats of pstoedit. They cannot represent text with arbitray inter-letter spacing which is easily possible in PDF and PostScript. With \Opt{-pta}, each character of a text string is placed separately. With \Opt{-pti}, this is done only in cases when there is a non zero inter-letter spacing. The downside of "precision text" is a bigger file size and hard to edit text.
+\item[\oOpt{-pti}]
+precision text. Normally a text string is drawn as it occurs in the input file. However, in some situations, this might produce wrongly positioned characters. This is due to limitiations in most output formats of pstoedit. They cannot represent text with arbitray inter-letter spacing which is easily possible in PDF and PostScript. With \Opt{-pta}, each character of a text string is placed separately. With \Opt{-pti}, this is done only in cases when there is a non zero inter-letter spacing. The downside of "precision text" is a bigger file size and hard to edit text.
 
 
-\item[\oOpt{-pta}] 
+\item[\oOpt{-pta}]
 see -pti
 
 
-\item[\oOptArg{-uchar}{~character}] 
-Sometimes pstoedit cannot map a character from the encoding used by the PostScript file to the font encoding of the target format. In this case pstoedit replaces the input character by a special character in order to show all the places that couldn't be mapped correctly. The default for this is a "\#". Using the \Opt{-uchar} option it is possible to specify another character to be used instead. If you want to use a space, use -uchar " ".
+\item[\oOptArg{-uchar}{~character}]
+Sometimes pstoedit cannot map a character from the encoding used by the PostScript file to the font encoding of the target format. In this case pstoedit replaces the input character by a special character in order to show all the places that could not be mapped correctly. The default for this is a "\#". Using the \Opt{-uchar} option it is possible to specify another character to be used instead. If you want to use a space, use -uchar " ".
 
 
-\item[\oOpt{-t2fontsast1}] 
-Handle type 2 fonts same as type 1. Type 2 fonts sometimes occur as embedded fonts within PDF files. In the default mode, text using such fonts is drawn as polygons since pstoedit assumes that such a font is not available on the users machine. If this option is set, pstoedit assumes that the internal encoding follows the same as for a standard font and generates normal text output. This assumption may not be true in all cases. But it is nearly impossible for pstoedit to verify this assumption - it would have to do a sort of OCR.
+\item[\oOpt{-t2fontsast1}]
+Handle Type 2 fonts same as Type 1. Type 2 fonts sometimes occur as embedded fonts within PDF files. In the default mode, text using such fonts is drawn as polygons since pstoedit assumes that such a font is not available on the user's machine. If this option is set, pstoedit assumes that the internal encoding follows the same as for a standard font and generates normal text output. This assumption may not be true in all cases. But it is nearly impossible for pstoedit to verify this assumption - it would have to do a sort of OCR.
 
 
-\item[\oOpt{-nfr}] 
-In normal mode pstoedit replaces bitmap fonts with a font as defined by the \Opt{-df} option. This is done, because most output formats can't handle such fonts. This behavior can be switched off using the \Opt{-nfr} option but then it strongly depends on the application reading the the generated file whether the file is usable and correctly interpreted or not. Any problems are then out of control of pstoedit.
+\item[\oOpt{-nfr}]
+In normal mode pstoedit replaces bitmap fonts with a font as defined by the \Opt{-df} option. This is done, because most output formats cannot handle such fonts. This behavior can be switched off using the \Opt{-nfr} option but then it strongly depends on the application reading the generated file whether the file is usable and correctly interpreted or not. Any problems are then out of control of pstoedit.
 
 
-\item[\oOpt{-glyphs}] 
+\item[\oOpt{-glyphs}]
 pass glyph names to the output format driver. So far no output format driver really uses the glyph names, so this does not have any effect at the moment. It is a preparation for future work.
 
 
-\item[\oOpt{-useoldnormalization}] 
-Just use this option in case the new heuristic introduced in 3.5 doesn't produce correct results - however, this normalization of font encoding will always be a best-effort approach since there is no real general solution to it with reasonable effort
+\item[\oOpt{-useoldnormalization}]
+Just use this option in case the new heuristic introduced in 3.5 does not produce correct results - however, this normalization of font encoding will always be a best-effort approach since there is no real general solution to it with reasonable effort
 
 
-\item[\oOptArg{-fontmap}{~name of font map file for pstoedit}] 
-The font map is a simple text file containing lines in the following format:\\  
- 
+\item[\oOptArg{-fontmap}{~name of font map file for pstoedit}]
+The font map is a simple text file containing lines in the following format:\\
 
-\verb+document_font_name    target_font_name+ \\
-Lines beginning with \verb+%+ are considerd comments \\
- If a font name contains spaces, use the \verb+"font name with spaces"+ notation. 
- 
-If a target\_font\_name starts with /, it is regarded as alias to a former entry. 
-  
-Each font name found in the document is checked against this mapping and if there is a corresponding entry, the new name is used for the output.  
 
-If  the \Opt{-fontmap} option is not specified, \Prog{pstoedit} automatically looks for the file \emph{drivername}.fmp in the installation directory and uses that file as a default fontmap file if available. The installation directory is:  
+\verb+document_font_name    target_font_name+\\
 
-\begin{itemize} 
- 
-\item Windows: The same directory where the \Prog{pstoedit} executable is 
-    located  
- 
-\item Unix: \\ 
-$<$\emph{The directory where the pstoedit executably is located}$>$\verb+/../lib/+ 
- 
-\end{itemize} 
- 
-The mpost.fmp in the misc directory of the pstoedit distibution is a sample map file with mappings from over 5000 PostScript font names to their \TeX equivalents. This is useful because MetaPost is frequently used with \TeX/\LaTeX\ and those programs don't use standard font names. This file and the MetaPost output format driver are provided by Scott Pakin (\Email{scott+ps2ed_AT_pakin.org}).   
-Another example is wemf.fmp to be used under Windows. See the misc directory of the pstoedit source distribution.  
+Lines beginning with \verb+%+ are considerd comments.\\
+For font names with spaces use the \verb+"font name with spaces"+ notation.
+
+If a target\_font\_name starts with /, it is regarded as alias to a former entry.
+
+Each font name found in the document is checked against this mapping and if there is a corresponding entry, the new name is used for the output.
+
+If  the \Opt{-fontmap} option is not specified, \Prog{pstoedit} automatically looks for the file \emph{drivername}.fmp in the installation directory and uses that file as a default fontmap file if available. The installation directory is:
+
+\begin{itemize}
+
+  \item MS Windows: The same directory where the \Prog{pstoedit} executable is located
+
+  \item Unix:\\
+  $<$\emph{The directory where the pstoedit executable is located}$>$\verb+/../lib/+
+
+\end{itemize}
+
+The mpost.fmp in the misc directory of the pstoedit distibution is a sample map file with mappings from over 5000 PostScript font names to their \TeX\ equivalents. This is useful because MetaPost is frequently used with \TeX/\LaTeX\ and those programs do not use standard font names. This file and the MetaPost output format driver are provided by Scott Pakin (\Email{scott+ps2ed_AT_pakin.org}).
+Another example is wemf.fmp to be used under Windows. See the misc directory of the pstoedit source distribution.
 After loading the implicit (based on driver name) or explicit (based on the -fontmap option) font map file, a system specific map file is searched and loaded from the installation directory (unix.fmp or windows.fmp). This file can be used to redirect certain fonts to system specific names using the /AliasName notation described above.
 
 
 \end{description}
 \subsection{Debug options}
 \begin{description}
-\item[\oOpt{-dis}] 
-Open a display during processing by Ghostscript. Some files only work correctly this way. 
+\item[\oOpt{-dis}]
+Open a display during processing by Ghostscript. Some files only work correctly this way.
 
 
-\item[\oOpt{-q}] 
+\item[\oOpt{-q}]
 quiet mode - do not write startup message
 
 
-\item[\oOpt{-nq}] 
-No exit from the PostScript interpreter. Normally Ghostscript exits after processing the pstoedit input-file. For debugging it can be useful to avoid this. If you do, you will have to type quit at the \verb+GS>+ prompt to exit from Ghostscript.   
+\item[\oOpt{-nq}]
+No exit from the PostScript interpreter. Normally Ghostscript exits after processing the pstoedit input file. For debugging it can be useful to avoid this. If you do, you will have to type quit at the \verb+GS>+ prompt to exit from Ghostscript.
 
 
-\item[\oOpt{-v}] 
-Switch on verbose mode. Some additional information is shown during processing. 
+\item[\oOpt{-v}]
+Switch on verbose mode. Some additional information is shown during processing.
 
 
-\item[\oOpt{-nb}] 
-Since version 3.10 \Prog{pstoedit} uses the \texttt{-dDELAYBIND} option when calling GhostScript. Previously the \texttt{-dNOBIND} option was used instead but that sometimes caused problems if a user's PostScript file overloaded standard PostScript operator with totally new semantic, e.g. lt for lineto instead of the standard meaning of "less than". Using \Opt{-nb} the old style can be activated again in case the \texttt{-dDELAYBIND} gives different results as before. In such a case please also contact the author. 
+\item[\oOpt{-nb}]
+Since version 3.10 \Prog{pstoedit} uses the \texttt{-dDELAYBIND} option when calling Ghostscript. Previously the \texttt{-dNOBIND} option was used instead but that sometimes caused problems if a user's PostScript file overloaded standard PostScript operator with totally new semantic, e.g. lt for lineto instead of the standard meaning of "less than". Using \Opt{-nb} the old style can be activated again in case the \texttt{-dDELAYBIND} gives different results as before. In such a case please also contact the author.
 
 
-\item[\oOpt{-ups}] 
+\item[\oOpt{-ups}]
 write text as plain string instead of hex string in intermediate format - normally useful for trouble shooting and debugging only.
 
 
-\item[\oOpt{-keep}] 
+\item[\oOpt{-keep}]
 keep the intermediate files produced by pstoedit - for debug purposes only
 
 
-\item[\oOpt{-debugfonthandling}] 
+\item[\oOpt{-debugfonthandling}]
 writes verbose messages related to internal font processing - for debug purposes only
 
 
-\item[\oOpt{-gstest}] 
-perform a basic test for the interworking with GhostScript
+\item[\oOpt{-gstest}]
+perform a basic test of the interworking with Ghostscript
 
 
 \end{description}
 \subsection{Drawing related options}
 \begin{description}
-\item[\oOpt{-nc}] 
-no curves.  
-Normally pstoedit tries to keep curves from the input and transfers them to the output if the output format supports curves. If the output format does not support curves, then pstoedit replaces curves by a series of lines (see also \Opt{-flat} option). However, in some cases the user might wish to have this behavior also for output formats that originally support curves. This can be forced via the \Opt{-nc} option. 
+\item[\oOpt{-nc}]
+no curves.
+Normally pstoedit tries to keep curves from the input and transfers them to the output if the output format supports curves. If the output format does not support curves, then pstoedit replaces curves by a series of lines (see also \Opt{-flat} option). However, in some cases the user might wish to have this behavior also for output formats that originally support curves. This can be forced via the \Opt{-nc} option.
 
 
-\item[\oOpt{-nsp}] 
-normally subpathes are used if the output format support them. This option turns off subpathes.
+\item[\oOpt{-nsp}]
+normally subpaths are used if the output format supports them. This option turns off subpaths.
 
 
-\item[\oOpt{-mergelines}] 
+\item[\oOpt{-mergelines}]
 Some output formats permit the representation of filled polygons with edges that are in a different color than the fill color. Since PostScript does not support this by the standard drawing primitives directly, drawing programs typically generate two objects (the outline and the filled polygon) into the PostScript output. \Prog{pstoedit} is able to recombine these, if they follow each other directly and you specify \Opt{-mergelines}. However, this merging is not supported by all output formats due to restrictions in the target format.
 
 
-\item[\oOpt{-filledrecttostroke}] 
+\item[\oOpt{-filledrecttostroke}]
 Rectangles filled with a solid color can be converted to a stroked line with a width that corresponds to the width of the rectangle. This is of primary interest for output formats which do not support filled polygons at all. But it is restricted to rectangles only, i.e. it is not supported for general polygons
 
 
-\item[\oOpt{-mergetext}] 
+\item[\oOpt{-mergetext}]
 In order to produce nice looking text output, programs producing PostScript files often split words into smaller pieces which are then placed individually on adjacent positions. However, such split text is hard to edit later on and hence it is sometime better to recombine these pieces again to form a word (or even sequence of words). For this pstoedit implements some heuristics about what text pieces are to be considered parts of a split word. This is based on the geometrical proximity of the different parts and seems to work quite well so far. But there are certainly cases where this simple heuristic fails. So please check the results carefully.
 
 
-\item[\oOpt{-ssp}] 
-simulate sub paths. 
-Several output formats don't support PostScript pathes containing sub pathes, i.e. pathes with intermediate movetos. In the normal case, each subpath is treated as an independent path for such output formats. This can lead to bad looking results. The most common case where this happens is if you use the \Opt{-dt} option and show some text with letters like e, o, or b, i.e. letter that have a "hole". When the \Opt{-ssp} option is set, pstoedit tries to eliminate these problems. However, this option is CPU time intensive! 
+\item[\oOpt{-ssp}]
+simulate subpaths.
+Several output formats do not support PostScript paths containing subpaths, i.e. paths with intermediate movetos. In the normal case, each subpath is treated as an independent path for such output formats. This can lead to bad looking results. The most common case where this happens is if you use the \Opt{-dt} option and show some text with letters like e, o, or b, i.e. letters that have a "hole". When the \Opt{-ssp} option is set, pstoedit tries to eliminate these problems. However, this option is CPU time intensive!
 
 
-\item[\oOptArg{-flat}{~flatness factor}] 
-If the output format does not support curves in the way PostScript does or if the \Opt{-nc} option is specified, all curves are approximated by lines. Using the \Opt{-flat} option one can control this approximation. This parameter is directly converted to a PostScript \textbf{setflat} command. Higher numbers, e.g. 10 give rougher, lower numbers, e.g. 0.1 finer approximations.  
+\item[\oOptArg{-flat}{~flatness factor}]
+If the output format does not support curves in the way PostScript does or if the \Opt{-nc} option is specified, all curves are approximated by lines. Using the \Opt{-flat} option one can control this approximation. This parameter is directly converted to a PostScript \textbf{setflat} command. Higher numbers, e.g. 10 give rougher, lower numbers, e.g. 0.1, give finer approximations.
 
 
-\item[\oOpt{-sclip}] 
-simulate clipping.  
-Most output formats of pstoedit don't have native support for clipping. For that \Prog{pstoedit} offers an option to perform the clipping of the graphics directly without passing the clippath to the output driver. However, this results in curves being replaced by a lot of line segments and thus larger output files. So use this option only if your output looks different from the input due to clipping. In addition, this "simulated clipping" is not exactly the same as defined in PostScript. There might be lines drawn at the double size. Also clipping of text is not supported unless you also use the \Opt{-dt} option.  
+\item[\oOpt{-sclip}]
+simulate clipping.
+Most output formats of pstoedit do not have native support for clipping. For that \Prog{pstoedit} offers an option to perform the clipping of the graphics directly without passing the clippath to the output driver. However, this results in curves being replaced by a lot of line segments and thus larger output files. So use this option only if your output looks different from the input due to clipping. In addition, this "simulated clipping" is not exactly the same as defined in PostScript. There might be lines drawn at double size. Also clipping of text is not supported unless you also use the \Opt{-dt} option.
 
 
 \end{description}
 \subsection{Input and outfile file arguments}
-[ inputfile [outputfile] ] 
+[ inputfile [outputfile] ]
 
 
 If neither an input nor an output file is given as argument, pstoedit works as filter reading from standard input and
-writing to standard output. 
+writing to standard output.
 The special filename "-" can also be used. It represents standard input if it is the first on the command line and standard output if it is the second. So "pstoedit - output.xxx" reads from standard input and writes to output.xxx
 
 
 \section{Available formats and their specific options}
 
-\Prog{pstoedit} allows passing individual options to a output format driver. This is done by
+\Prog{pstoedit} allows passing individual options to an output format driver. This is done by
 appending all options to the format specified after the \Opt{-f} option. The format
 specifier and its options must be separated by a colon (:). If more than one
 option needs to be passed to the output format driver, the whole argument to \Opt{-f} must be
 enclosed within double-quote characters, thus:
 
-\OptArg{-f}{~"format[:option option ...]"} 
+\OptArg{-f}{~"format[:option option ...]"}
 
 To see which options are supported by a specific format, type:
-     \textbf{pstoedit -f format:-help}  
-     \\ 
+     \textbf{pstoedit -f format:-help}
+     \\
 
 The following description of the different formats supported by pstoedit is extracted from the source code of the individual drivers.
 
 \subsubsection{psf - Flattened PostScript (no curves)}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{ps - Simplified PostScript with curves}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{debug - for test purposes}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{dump - for test purposes (same as debug)}
 No driver specific options
-%%// end of options 
-\subsubsection{gs - any device that GhostScript provides - use gs:format, e.g. gs:pdfwrite}
+%%// end of options
+\subsubsection{gs - any device that Ghostscript provides - use gs:format, e.g. gs:pdfwrite}
 No driver specific options
-%%// end of options 
-\subsubsection{ps2ai - Adobe Illustrator via ps2ai.ps of GhostScript}
+%%// end of options
+\subsubsection{ps2ai - Adobe Illustrator via ps2ai.ps of Ghostscript}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{gmfa - ASCII GNU metafile }
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{gmfb - binary GNU metafile }
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{plot - GNU libplot output types, e.g. plot:-plotformat X}
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{plot-cgm - cgm  via GNU libplot}
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{plot-ai - ai   via GNU libplot}
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{plot-svg - svg  via GNU libplot}
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{plot-ps - ps   via GNU libplot}
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{plot-fig - fig  via GNU libplot}
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{plot-pcl - pcl  via GNU libplot}
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{plot-hpgl - hpgl via GNU libplot}
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{plot-tek - tek  via GNU libplot}
 \begin{description}
-\item[\oOptArg{-plotformat}{~string}] 
+\item[\oOptArg{-plotformat}{~string}]
 plotutil format to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{magick - MAGICK driver}
-This driver uses the C++ API of ImageMagick or GraphicsMagick to finally produce different output formats. The output format is determined automatically by Image/GraphicsMagick based on the suffix of the output filename. So an output file test.png will force the creation of an image in PNG format.
+This driver uses the C++ API of ImageMagick or GraphicsMagick to finally produce different output formats. The output format is determined automatically by Image-/GraphicsMagick based on the suffix of the output filename. So an output file test.png will force the creation of an image in PNG format.
 
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{swf - SWF driver: }
 \begin{description}
-\item[\oOpt{-cubic}] 
+\item[\oOpt{-cubic}]
 cubic ???
 
 
-\item[\oOpt{-trace}] 
+\item[\oOpt{-trace}]
 trace ???
 
 
 \end{description}
-%%// end of options 
-\subsubsection{svg - scalable vector graphics}
+%%// end of options
+\subsubsection{svg - Scalable Vector Graphics}
 \begin{description}
-\item[\oOpt{-localdtd}] 
+\item[\oOpt{-localdtd}]
 use local DTD
 
 
-\item[\oOpt{-standalone}] 
+\item[\oOpt{-standalone}]
 create stand-alone type svg
 
 
-\item[\oOpt{-withdtd}] 
+\item[\oOpt{-withdtd}]
 write DTD
 
 
-\item[\oOpt{-withgrouping}] 
+\item[\oOpt{-withgrouping}]
 write also ordinary save/restores as SVG group
 
 
-\item[\oOpt{-nogroupedpath}] 
-do not write a group around pathes
+\item[\oOpt{-nogroupedpath}]
+do not write a group around paths
 
 
-\item[\oOpt{-noviewbox}] 
-don't write a view box
+\item[\oOpt{-noviewbox}]
+do not write a view box
 
 
-\item[\oOpt{-texmode}] 
-TeX Mode
+\item[\oOpt{-texmode}]
+\TeX\, mode
 
 
-\item[\oOpt{-imagetofile}] 
+\item[\oOpt{-imagetofile}]
 write raster images to separate files instead of embedding them
 
 
-\item[\oOpt{-notextrendering}] 
+\item[\oOpt{-notextrendering}]
 do not write textrendering attribute
 
 
-\item[\oOptArg{-border}{~number}] 
+\item[\oOptArg{-border}{~number}]
 additional border to draw around bare bounding box (in percent of width and height)
 
 
-\item[\oOptArg{-title}{~string}] 
+\item[\oOptArg{-title}{~string}]
 text to use as title for the generated document
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{xaml - eXtensible Application Markup Language}
 \begin{description}
-\item[\oOpt{-localdtd}] 
+\item[\oOpt{-localdtd}]
 use local DTD
 
 
-\item[\oOpt{-standalone}] 
+\item[\oOpt{-standalone}]
 create stand-alone type svg
 
 
-\item[\oOpt{-withdtd}] 
+\item[\oOpt{-withdtd}]
 write DTD
 
 
-\item[\oOpt{-withgrouping}] 
+\item[\oOpt{-withgrouping}]
 write also ordinary save/restores as SVG group
 
 
-\item[\oOpt{-nogroupedpath}] 
-do not write a group around pathes
+\item[\oOpt{-nogroupedpath}]
+do not write a group around paths
 
 
-\item[\oOpt{-noviewbox}] 
-don't write a view box
+\item[\oOpt{-noviewbox}]
+do not write a view box
 
 
-\item[\oOpt{-texmode}] 
-TeX Mode
+\item[\oOpt{-texmode}]
+\TeX\, mode
 
 
-\item[\oOpt{-imagetofile}] 
+\item[\oOpt{-imagetofile}]
 write raster images to separate files instead of embedding them
 
 
-\item[\oOpt{-notextrendering}] 
+\item[\oOpt{-notextrendering}]
 do not write textrendering attribute
 
 
-\item[\oOptArg{-border}{~number}] 
+\item[\oOptArg{-border}{~number}]
 additional border to draw around bare bounding box (in percent of width and height)
 
 
-\item[\oOptArg{-title}{~string}] 
+\item[\oOptArg{-title}{~string}]
 text to use as title for the generated document
 
 
 \end{description}
-%%// end of options 
-\subsubsection{cgmb1 - CGM binary Format (V1)}
+%%// end of options
+\subsubsection{cgmb1 - CGM Binary format (V1)}
 No driver specific options
-%%// end of options 
-\subsubsection{cgmb - CGM binary Format (V3)}
+%%// end of options
+\subsubsection{cgmb - CGM Binary format (V3)}
 No driver specific options
-%%// end of options 
-\subsubsection{cgmt - CGM textual Format}
+%%// end of options
+\subsubsection{cgmt - CGM Textual format}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{mif - (Frame)Maker Intermediate Format}
 \begin{description}
-\item[\oOpt{-nopage}] 
+\item[\oOpt{-nopage}]
 do not add a separate Page entry
 
 
 \end{description}
-%%// end of options 
-\subsubsection{rtf - RTF Format}
+%%// end of options
+\subsubsection{rtf - Rich Text Format}
 No driver specific options
-%%// end of options 
-\subsubsection{wemf - Wogls version of EMF }
+%%// end of options
+\subsubsection{wemf - Wogl's version of EMF }
 \begin{description}
-\item[\oOpt{-df}] 
+\item[\oOpt{-df}]
 write info about font processing
 
 
-\item[\oOpt{-dumpfontmap}] 
+\item[\oOpt{-dumpfontmap}]
 write info about font mapping
 
 
-\item[\oOpt{-size:psbbox}] 
-use the bounding box as calculated by the PostScript frontent as size
+\item[\oOpt{-size:psbbox}]
+use the bounding box as calculated by the PostScript frontend as size
 
 
-\item[\oOpt{-size:fullpage}] 
-set the size to the size of a full page
+\item[\oOpt{-size:fullpage}]
+set the size to that of the full page
 
 
-\item[\oOpt{-size:automatic}] 
-let windows calculate the bounding box (default)
+\item[\oOpt{-size:automatic}]
+let MS Windows calculate the bounding box (default)
 
 
-\item[\oOpt{-keepimages}] 
-debug option - keep the embedded bitmaps as external files 
+\item[\oOpt{-keepimages}]
+debug option - keep the embedded bitmaps as external files
 
 
-\item[\oOpt{-useoldpolydraw}] 
-do not use Windows PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files
+\item[\oOpt{-useoldpolydraw}]
+do not use MS Windows' PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files
 
 
-\item[\oOpt{-OO}] 
+\item[\oOpt{-OO}]
 generate OpenOffice compatible EMF file
 
 
 \end{description}
-%%// end of options 
-\subsubsection{wemfc - Wogls version of EMF with experimental clip support}
+%%// end of options
+\subsubsection{wemfc - Wogl's version of EMF with experimental clip support}
 \begin{description}
-\item[\oOpt{-df}] 
+\item[\oOpt{-df}]
 write info about font processing
 
 
-\item[\oOpt{-dumpfontmap}] 
+\item[\oOpt{-dumpfontmap}]
 write info about font mapping
 
 
-\item[\oOpt{-size:psbbox}] 
-use the bounding box as calculated by the PostScript frontent as size
+\item[\oOpt{-size:psbbox}]
+use the bounding box as calculated by the PostScript frontend as size
 
 
-\item[\oOpt{-size:fullpage}] 
-set the size to the size of a full page
+\item[\oOpt{-size:fullpage}]
+set the size to that of the full page
 
 
-\item[\oOpt{-size:automatic}] 
-let windows calculate the bounding box (default)
+\item[\oOpt{-size:automatic}]
+let MS Windows calculate the bounding box (default)
 
 
-\item[\oOpt{-keepimages}] 
-debug option - keep the embedded bitmaps as external files 
+\item[\oOpt{-keepimages}]
+debug option - keep the embedded bitmaps as external files
 
 
-\item[\oOpt{-useoldpolydraw}] 
-do not use Windows PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files
+\item[\oOpt{-useoldpolydraw}]
+do not use MS Windows' PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files
 
 
-\item[\oOpt{-OO}] 
+\item[\oOpt{-OO}]
 generate OpenOffice compatible EMF file
 
 
 \end{description}
-%%// end of options 
-\subsubsection{wemfnss - Wogls version of EMF - no subpathes }
+%%// end of options
+\subsubsection{wemfnss - Wogl's version of EMF - no subpaths}
 \begin{description}
-\item[\oOpt{-df}] 
+\item[\oOpt{-df}]
 write info about font processing
 
 
-\item[\oOpt{-dumpfontmap}] 
+\item[\oOpt{-dumpfontmap}]
 write info about font mapping
 
 
-\item[\oOpt{-size:psbbox}] 
-use the bounding box as calculated by the PostScript frontent as size
+\item[\oOpt{-size:psbbox}]
+use the bounding box as calculated by the PostScript frontend as size
 
 
-\item[\oOpt{-size:fullpage}] 
-set the size to the size of a full page
+\item[\oOpt{-size:fullpage}]
+set the size to that of the full page
 
 
-\item[\oOpt{-size:automatic}] 
-let windows calculate the bounding box (default)
+\item[\oOpt{-size:automatic}]
+let MS Windows calculate the bounding box (default)
 
 
-\item[\oOpt{-keepimages}] 
-debug option - keep the embedded bitmaps as external files 
+\item[\oOpt{-keepimages}]
+debug option - keep the embedded bitmaps as external files
 
 
-\item[\oOpt{-useoldpolydraw}] 
-do not use Windows PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files
+\item[\oOpt{-useoldpolydraw}]
+do not use MS Windows' PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files
 
 
-\item[\oOpt{-OO}] 
+\item[\oOpt{-OO}]
 generate OpenOffice compatible EMF file
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{hpgl - HPGL code}
 \begin{description}
-\item[\oOpt{-penplotter}] 
+\item[\oOpt{-penplotter}]
 plotter is pen plotter (i.e. no support for specific line widths)
 
 
-\item[\oOpt{-pencolorsfromfile}] 
-read pen colors from file drvhpgl.pencolors in pstoedit data directory
+\item[\oOpt{-pencolorsfromfile}]
+read pen colors from file drvhpgl.pencolors in pstoedit's data directory
 
 
-\item[\oOptArg{-pencolors}{~number}] 
-maximum number of pen colors to be used by pstoedit (default 0) - 
+\item[\oOptArg{-pencolors}{~number}]
+maximum number of pen colors to be used by pstoedit (default 0) -
 
 
-\item[\oOptArg{-filltype}{~string}] 
+\item[\oOptArg{-filltype}{~string}]
 select fill type e.g. FT 1
 
 
-\item[\oOpt{-hpgl2}] 
+\item[\oOpt{-hpgl2}]
 Use HPGL/2 instead of HPGL/1
 
 
-\item[\oOpt{-rot90}] 
+\item[\oOpt{-rot90}]
 rotate hpgl by 90 degrees
 
 
-\item[\oOpt{-rot180}] 
+\item[\oOpt{-rot180}]
 rotate hpgl by 180 degrees
 
 
-\item[\oOpt{-rot270}] 
+\item[\oOpt{-rot270}]
 rotate hpgl by 270 degrees
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{pcl - PCL code}
 \begin{description}
-\item[\oOpt{-penplotter}] 
+\item[\oOpt{-penplotter}]
 plotter is pen plotter (i.e. no support for specific line widths)
 
 
-\item[\oOpt{-pencolorsfromfile}] 
-read pen colors from file drvhpgl.pencolors in pstoedit data directory
+\item[\oOpt{-pencolorsfromfile}]
+read pen colors from file drvhpgl.pencolors in pstoedit's data directory
 
 
-\item[\oOptArg{-pencolors}{~number}] 
-maximum number of pen colors to be used by pstoedit (default 0) - 
+\item[\oOptArg{-pencolors}{~number}]
+maximum number of pen colors to be used by pstoedit (default 0) -
 
 
-\item[\oOptArg{-filltype}{~string}] 
+\item[\oOptArg{-filltype}{~string}]
 select fill type e.g. FT 1
 
 
-\item[\oOpt{-hpgl2}] 
+\item[\oOpt{-hpgl2}]
 Use HPGL/2 instead of HPGL/1
 
 
-\item[\oOpt{-rot90}] 
+\item[\oOpt{-rot90}]
 rotate hpgl by 90 degrees
 
 
-\item[\oOpt{-rot180}] 
+\item[\oOpt{-rot180}]
 rotate hpgl by 180 degrees
 
 
-\item[\oOpt{-rot270}] 
+\item[\oOpt{-rot270}]
 rotate hpgl by 270 degrees
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{pic - PIC format for troff et.al.}
 \begin{description}
-\item[\oOpt{-troff}] 
+\item[\oOpt{-troff}]
 troff mode (default is groff)
 
 
-\item[\oOpt{-landscape}] 
+\item[\oOpt{-landscape}]
 landscape output
 
 
-\item[\oOpt{-portrait}] 
+\item[\oOpt{-portrait}]
 portrait output
 
 
-\item[\oOpt{-keepfont}] 
+\item[\oOpt{-keepfont}]
 print unrecognized literally
 
 
-\item[\oOpt{-text}] 
+\item[\oOpt{-text}]
 try not to make pictures from running text
 
 
-\item[\oOpt{-debug}] 
+\item[\oOpt{-debug}]
 enable debug output
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{asy - Asymptote Format}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{cairo - cairo driver}
 generates compilable c code for rendering with cairo
 
 \begin{description}
-\item[\oOpt{-pango}] 
+\item[\oOpt{-pango}]
 use pango for font rendering
 
 
-\item[\oOptArg{-funcname}{~string}] 
+\item[\oOptArg{-funcname}{~string}]
 sets the base name for the generated functions and variables.  e.g. myfig
 
 
-\item[\oOptArg{-header}{~string}] 
+\item[\oOptArg{-header}{~string}]
 sets the output file name for the generated C header file.  e.g. myfig.h
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{cfdg - Context Free Design Grammar}
 Context Free Design Grammar, usable by Context Free Art (http://www.contextfreeart.org/)
 
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{dxf - CAD exchange format}
 \begin{description}
-\item[\oOpt{-polyaslines}] 
+\item[\oOpt{-polyaslines}]
 use LINE instead of POLYLINE in DXF
 
 
-\item[\oOpt{-mm}] 
+\item[\oOpt{-mm}]
 use mm coordinates instead of points in DXF (mm=pt/72*25.4)
 
 
-\item[\oOpt{-ctl}] 
+\item[\oOpt{-ctl}]
 map colors to layers
 
 
-\item[\oOpt{-splineaspolyline}] 
+\item[\oOpt{-splineaspolyline}]
 approximate splines with PolyLines (only for -f dxf\_s)
 
 
-\item[\oOpt{-splineasnurb}] 
+\item[\oOpt{-splineasnurb}]
 experimental (only for -f dxf\_s)
 
 
-\item[\oOpt{-splineasbspline}] 
+\item[\oOpt{-splineasbspline}]
 experimental (only for -f dxf\_s)
 
 
-\item[\oOpt{-splineassinglespline}] 
+\item[\oOpt{-splineassinglespline}]
 experimental (only for -f dxf\_s)
 
 
-\item[\oOpt{-splineasmultispline}] 
+\item[\oOpt{-splineasmultispline}]
 experimental (only for -f dxf\_s)
 
 
-\item[\oOpt{-splineasbezier}] 
+\item[\oOpt{-splineasbezier}]
 use Bezier splines in DXF format (only for -f dxf\_s)
 
 
-\item[\oOptArg{-splineprecision}{~number}] 
+\item[\oOptArg{-splineprecision}{~number}]
 number of samples to take from spline curve when doing approximation with -splineaspolyline or -splineasmultispline - should be $>=$ 2 (default 5)
 
 
-\item[\oOpt{-dumplayernames}] 
+\item[\oOpt{-dumplayernames}]
 dump all layer names found to standard output
 
 
-\item[\oOptArg{-layers}{~string}] 
+\item[\oOptArg{-layers}{~string}]
 layers to be shown (comma separated list of layer names, no space)
 
 
-\item[\oOptArg{-layerfilter}{~string}] 
+\item[\oOptArg{-layerfilter}{~string}]
 layers to be hidden (comma separated list of layer names, no space)
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{dxf\_s - CAD exchange format with splines}
 \begin{description}
-\item[\oOpt{-polyaslines}] 
+\item[\oOpt{-polyaslines}]
 use LINE instead of POLYLINE in DXF
 
 
-\item[\oOpt{-mm}] 
+\item[\oOpt{-mm}]
 use mm coordinates instead of points in DXF (mm=pt/72*25.4)
 
 
-\item[\oOpt{-ctl}] 
+\item[\oOpt{-ctl}]
 map colors to layers
 
 
-\item[\oOpt{-splineaspolyline}] 
+\item[\oOpt{-splineaspolyline}]
 approximate splines with PolyLines (only for -f dxf\_s)
 
 
-\item[\oOpt{-splineasnurb}] 
+\item[\oOpt{-splineasnurb}]
 experimental (only for -f dxf\_s)
 
 
-\item[\oOpt{-splineasbspline}] 
+\item[\oOpt{-splineasbspline}]
 experimental (only for -f dxf\_s)
 
 
-\item[\oOpt{-splineassinglespline}] 
+\item[\oOpt{-splineassinglespline}]
 experimental (only for -f dxf\_s)
 
 
-\item[\oOpt{-splineasmultispline}] 
+\item[\oOpt{-splineasmultispline}]
 experimental (only for -f dxf\_s)
 
 
-\item[\oOpt{-splineasbezier}] 
+\item[\oOpt{-splineasbezier}]
 use Bezier splines in DXF format (only for -f dxf\_s)
 
 
-\item[\oOptArg{-splineprecision}{~number}] 
+\item[\oOptArg{-splineprecision}{~number}]
 number of samples to take from spline curve when doing approximation with -splineaspolyline or -splineasmultispline - should be $>=$ 2 (default 5)
 
 
-\item[\oOpt{-dumplayernames}] 
+\item[\oOpt{-dumplayernames}]
 dump all layer names found to standard output
 
 
-\item[\oOptArg{-layers}{~string}] 
+\item[\oOptArg{-layers}{~string}]
 layers to be shown (comma separated list of layer names, no space)
 
 
-\item[\oOptArg{-layerfilter}{~string}] 
+\item[\oOptArg{-layerfilter}{~string}]
 layers to be hidden (comma separated list of layer names, no space)
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{fig - .fig format for xfig}
-The xfig format driver supports special fontnames, which may be produced by using a fontmap file. The following types of names are supported : \\  
+The xfig format driver supports special fontnames, which may be produced by using a fontmap file. The following types of names are supported : \\
 \begin{verbatim}
-General notation: 
-"Postscript Font Name" ((LaTeX|PostScript|empty)(::special)::)XFigFontName
- 
+General notation:
+"PostScript Font Name" ((LaTeX|PostScript|empty)(::special)::)XFigFontName
+
 Examples:
 
 Helvetica LaTeX::SansSerif
 Courier LaTeX::special::Typewriter
 GillSans "AvantGarde Demi"
-Albertus PostScript::special::"New Century Schoolbook Italic" 
-Symbol ::special::Symbol (same as Postscript::special::Symbol)
+Albertus PostScript::special::"New Century Schoolbook Italic"
+Symbol ::special::Symbol (same as PostScript::special::Symbol)
 \end{verbatim}
-See also the file examplefigmap.fmp in the misc directory of the pstoedit source distribution for an example font map file for xfig. Please note that the Fontname has to be among those supported by xfig. See - \URL{http://www.xfig.org/userman/fig-format.html} for a list of legal font names
+See also the file examplefigmap.fmp in the misc directory of the pstoedit source distribution for an example font map file for xfig. Please note that the fontname has to be among those supported by xfig. See - \URL{http://www.xfig.org/userman/fig-format.html} for a list of legal font names
 
 \begin{description}
-\item[\oOptArg{-startdepth}{~number}] 
+\item[\oOptArg{-startdepth}{~number}]
 Set the initial depth (default 999)
 
 
-\item[\oOpt{-metric}] 
+\item[\oOpt{-metric}]
 Switch to centimeter display (default inches)
 
 
-\item[\oOpt{-usecorrectfontsize}] 
-don't scale fonts for xfig. Use this if you also use this option with xfig
+\item[\oOpt{-usecorrectfontsize}]
+do not scale fonts for xfig. Use this if you also use this option with xfig
 
 
-\item[\oOptArg{-depth}{~number}] 
+\item[\oOptArg{-depth}{~number}]
 Set the page depth in inches (default 11)
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{xfig - .fig format for xfig}
 See fig format for more details.
 
 \begin{description}
-\item[\oOptArg{-startdepth}{~number}] 
+\item[\oOptArg{-startdepth}{~number}]
 Set the initial depth (default 999)
 
 
-\item[\oOpt{-metric}] 
+\item[\oOpt{-metric}]
 Switch to centimeter display (default inches)
 
 
-\item[\oOpt{-usecorrectfontsize}] 
-don't scale fonts for xfig. Use this if you also use this option with xfig
+\item[\oOpt{-usecorrectfontsize}]
+do not scale fonts for xfig. Use this if you also use this option with xfig
 
 
-\item[\oOptArg{-depth}{~number}] 
+\item[\oOptArg{-depth}{~number}]
 Set the page depth in inches (default 11)
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{tfig - .fig format for xfig}
 Test only
 
 \begin{description}
-\item[\oOptArg{-startdepth}{~number}] 
+\item[\oOptArg{-startdepth}{~number}]
 Set the initial depth (default 999)
 
 
-\item[\oOpt{-metric}] 
+\item[\oOpt{-metric}]
 Switch to centimeter display (default inches)
 
 
-\item[\oOpt{-usecorrectfontsize}] 
-don't scale fonts for xfig. Use this if you also use this option with xfig
+\item[\oOpt{-usecorrectfontsize}]
+do not scale fonts for xfig. Use this if you also use this option with xfig
 
 
-\item[\oOptArg{-depth}{~number}] 
+\item[\oOptArg{-depth}{~number}]
 Set the page depth in inches (default 11)
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{gcode - emc2 gcode format}
-See also:  \URL{http://linuxcnc.org/} 
+See also:  \URL{http://linuxcnc.org/}
 
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{gnuplot - gnuplot format}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{gschem - gschem format}
-See also:  \URL{http://www.geda.seul.org/tools/gschem/} 
+See also:  \URL{http://www.geda.seul.org/tools/gschem/}
 
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{idraw - Interviews draw format (EPS)}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{java1 - java 1 applet source code}
 \begin{description}
-\item[\oOptArg{java class name}{~string}] 
+\item[\oOptArg{java class name}{~string}]
 name of java class to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{java2 - java 2 source code}
 \begin{description}
-\item[\oOptArg{java class name}{~string}] 
+\item[\oOptArg{java class name}{~string}]
 name of java class to generate
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{kil - .kil format for Kontour}
 No driver specific options
-%%// end of options 
-\subsubsection{latex2e - LaTeX2e picture format}
+%%// end of options
+\subsubsection{latex2e - \LaTeX2e picture format}
 \begin{description}
-\item[\oOpt{-integers}] 
+\item[\oOpt{-integers}]
 round all coordinates to the nearest integer
 
 
 \end{description}
-%%// end of options 
-\subsubsection{lwo - LightWave 3D Object Format}
+%%// end of options
+\subsubsection{lwo - LightWave 3D object format}
 No driver specific options
-%%// end of options 
-\subsubsection{mma - Mathematica Graphics}
+%%// end of options
+\subsubsection{mma - Mathematica graphics}
 \begin{description}
-\item[\oOpt{-eofillfills}] 
+\item[\oOpt{-eofillfills}]
 Filling is used for eofill (default is not to fill)
 
 
 \end{description}
-%%// end of options 
-\subsubsection{mpost - MetaPost Format}
+%%// end of options
+\subsubsection{mpost - MetaPost format}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{noixml - Nemetschek NOI XML format}
 Nemetschek Object Interface XML format
 
 \begin{description}
-\item[\oOptArg{-r}{~string}] 
+\item[\oOptArg{-r}{~string}]
 Allplan resource file
 
 
-\item[\oOptArg{-bsl}{~number}] 
+\item[\oOptArg{-bsl}{~number}]
 Bezier Split Level (default 3)
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{pcbi - engrave data - insulate/PCB format}
 See \URL{http://home.vr-web.de/\Tilde hans-juergen-jahn/software/devpcb.html} for more details.
 
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{pcb - pcb format}
-See also: \URL{http://pcb.sourceforge.net} and \URL{http://www.penguin.cz/\Tilde utx/pstoedit-pcb/} 
+See also: \URL{http://pcb.sourceforge.net} and \URL{http://www.penguin.cz/\Tilde utx/pstoedit-pcb/}
 
 \begin{description}
-\item[\oOptArg{-grid}{~missing arg name}] 
+\item[\oOptArg{-grid}{~missing arg name}]
 attempt to snap relevant output to grid (mils) and put failed objects to a different layer
 
 
-\item[\oOptArg{-snapdist}{~missing arg name}] 
+\item[\oOptArg{-snapdist}{~missing arg name}]
 grid snap distance ratio (0 < snapdist <= 0.5, default 0.1)
 
 
-\item[\oOptArg{-tshiftx}{~missing arg name}] 
+\item[\oOptArg{-tshiftx}{~missing arg name}]
 additional x shift measured in target units (mils)
 
 
-\item[\oOptArg{-tshifty}{~missing arg name}] 
+\item[\oOptArg{-tshifty}{~missing arg name}]
 additional y shift measured in target units (mils)
 
 
-\item[\oOptArg{-grid}{~missing arg name}] 
+\item[\oOptArg{-grid}{~missing arg name}]
 attempt to snap relevant output to grid (mils) and put failed objects to a different layer
 
 
-\item[\oOpt{-mm}] 
-Switch to metric units (mm)
+\item[\oOpt{-mm}]
+switch to metric units (mm)
 
 
-\item[\oOpt{-stdnames}] 
+\item[\oOpt{-stdnames}]
 use standard layer names instead of descriptive names
 
 
-\item[\oOpt{-forcepoly}] 
+\item[\oOpt{-forcepoly}]
 force all objects to be interpreted as polygons
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{pcbfill - pcb format with fills}
-See also: \URL{http://pcb.sourceforge.net} 
+See also: \URL{http://pcb.sourceforge.net}
 
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{pdf - Adobe's Portable Document Format}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{pptx - PresentationML (PowerPoint) format}
 This is the format used internally by Microsoft PowerPoint.  LibreOffice can also read/write PowerPoint files albeit with some lack of functionality.
 
 \begin{description}
-\item[\oOptArg{-colors}{~string}] 
+\item[\oOptArg{-colors}{~string}]
 "original" to retain original colors (default), "theme" to convert randomly to theme colors, or "theme-lum" also to vary luminance
 
 
-\item[\oOptArg{-fonts}{~string}] 
+\item[\oOptArg{-fonts}{~string}]
 use "windows" fonts (default), "native" fonts, or convert to the "theme" font
 
 
-\item[\oOptArg{-embed}{~string}] 
+\item[\oOptArg{-embed}{~string}]
 embed fonts, specified as a comma-separated list of EOT-format font files
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{rib - RenderMan Interface Bytestream}
 No driver specific options
-%%// end of options 
-\subsubsection{rpl - Real3D Programming Language Format}
+%%// end of options
+\subsubsection{rpl - Real3D Programming Language format}
 No driver specific options
-%%// end of options 
-\subsubsection{sample - sample driver: if you don't want to see this, uncomment the corresponding line in makefile and make again}
+%%// end of options
+\subsubsection{sample - sample driver: if you do not want to see this, uncomment the corresponding line in makefile and make again}
 this is a long description for the sample driver
 
 \begin{description}
-\item[\oOptArg{-sampleoption}{~integer}] 
+\item[\oOptArg{-sampleoption}{~integer}]
 just an example
 
 
 \end{description}
-%%// end of options 
-\subsubsection{sk - Sketch Format}
+%%// end of options
+\subsubsection{sk - Sketch format}
 No driver specific options
-%%// end of options 
+%%// end of options
 \subsubsection{svm - StarView/OpenOffice.org metafile}
 StarView/OpenOffice.org metafile, readable from OpenOffice.org 1.0/StarOffice 6.0 and above.
 
 \begin{description}
-\item[\oOpt{-m}] 
+\item[\oOpt{-m}]
 map to Arial
 
 
-\item[\oOpt{-nf}] 
+\item[\oOpt{-nf}]
 emulate narrow fonts
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{text - text in different forms }
 \begin{description}
-\item[\oOptArg{-height}{~number}] 
+\item[\oOptArg{-height}{~number}]
 page height in terms of characters
 
 
-\item[\oOptArg{-width}{~number}] 
+\item[\oOptArg{-width}{~number}]
 page width in terms of characters
 
 
-\item[\oOpt{-dump}] 
+\item[\oOpt{-dump}]
 dump text pieces
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{tgif - Tgif .obj format}
 \begin{description}
-\item[\oOpt{-ta}] 
+\item[\oOpt{-ta}]
 text as attribute
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 \subsubsection{tk - tk and/or tk applet source code}
 \begin{description}
-\item[\oOpt{-R}] 
+\item[\oOpt{-R}]
 swap HW
 
 
-\item[\oOpt{-I}] 
+\item[\oOpt{-I}]
 no impress
 
 
-\item[\oOptArg{-n}{~string}] 
+\item[\oOptArg{-n}{~string}]
 tagnames
 
 
 \end{description}
-%%// end of options 
-\subsubsection{vtk - VTK driver: if you don't want to see this, uncomment the corresponding line in makefile and make again}
+%%// end of options
+\subsubsection{vtk - VTK driver: if you do not want to see this, uncomment the corresponding line in makefile and make again}
 this is a long description for the VTKe driver
 
 \begin{description}
-\item[\oOptArg{-VTKeoption}{~integer}] 
+\item[\oOptArg{-VTKeoption}{~integer}]
 just an example
 
 
 \end{description}
-%%// end of options 
-\subsubsection{wmf - Windows metafile}
+%%// end of options
+\subsubsection{wmf - MS Windows metafile}
 \begin{description}
-\item[\oOpt{-m}] 
+\item[\oOpt{-m}]
 map to Arial
 
 
-\item[\oOpt{-nf}] 
+\item[\oOpt{-nf}]
 emulate narrow fonts
 
 
-\item[\oOpt{-drawbb}] 
+\item[\oOpt{-drawbb}]
 draw bounding box
 
 
-\item[\oOpt{-p}] 
+\item[\oOpt{-p}]
 prune line ends
 
 
-\item[\oOpt{-nfw}] 
-Newer versions of Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains Text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the -pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the -nfw options provides a sort of compromise between portability and nice to edit but still nice looking text. Again - this option has no meaning when pstoedit is executed under Windows anyway. In that case the output is portable but nevertheless not split and still looks fine.
+\item[\oOpt{-nfw}]
+Newer versions of MS Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under MS Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the -pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the -nfw option provides a sort of compromise between portability and nice to edit but still nice looking text. Again - this option has no meaning when pstoedit is executed under MS Windows anyway. In that case the output is portable but nevertheless not split and still looks fine.
 
 
-\item[\oOpt{-winbb}] 
-let the Windows API calculate the Bounding Box (Windows only)
+\item[\oOpt{-winbb}]
+let the MS Windows API calculate the Bounding Box (Windows only)
 
 
-\item[\oOpt{-OO}] 
+\item[\oOpt{-OO}]
 generate OpenOffice compatible EMF file
 
 
 \end{description}
-%%// end of options 
-\subsubsection{emf - Enhanced Windows metafile}
+%%// end of options
+\subsubsection{emf - Enhanced MS Windows Metafile}
 \begin{description}
-\item[\oOpt{-m}] 
+\item[\oOpt{-m}]
 map to Arial
 
 
-\item[\oOpt{-nf}] 
+\item[\oOpt{-nf}]
 emulate narrow fonts
 
 
-\item[\oOpt{-drawbb}] 
+\item[\oOpt{-drawbb}]
 draw bounding box
 
 
-\item[\oOpt{-p}] 
+\item[\oOpt{-p}]
 prune line ends
 
 
-\item[\oOpt{-nfw}] 
-Newer versions of Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains Text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the -pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the -nfw options provides a sort of compromise between portability and nice to edit but still nice looking text. Again - this option has no meaning when pstoedit is executed under Windows anyway. In that case the output is portable but nevertheless not split and still looks fine.
+\item[\oOpt{-nfw}]
+Newer versions of MS Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under MS Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the -pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the -nfw option provides a sort of compromise between portability and nice to edit but still nice looking text. Again - this option has no meaning when pstoedit is executed under MS Windows anyway. In that case the output is portable but nevertheless not split and still looks fine.
 
 
-\item[\oOpt{-winbb}] 
-let the Windows API calculate the Bounding Box (Windows only)
+\item[\oOpt{-winbb}]
+let the MS Windows API calculate the Bounding Box (Windows only)
 
 
-\item[\oOpt{-OO}] 
+\item[\oOpt{-OO}]
 generate OpenOffice compatible EMF file
 
 
 \end{description}
-%%// end of options 
+%%// end of options
 
 \section{NOTES}
 
 
   \subsection{autotrace}
 
-	pstoedit cooperates with autotrace. Autotrace can now produce a dump file 
-	for further processing by pstoedit using the \Opt{-bo} (backend only) option. 
-	Autotrace is a program written by a group around Martin Weber and can be 
+	pstoedit cooperates with autotrace. Autotrace can now produce a dump file
+	for further processing by pstoedit using the \Opt{-bo} (backend only) option.
+	Autotrace is a program written by a group around Martin Weber and can be
 	found at \URL{http://sourceforge.net/projects/autotrace/}.
 
   \subsection{Ps2ai}
 
     The ps2ai output format driver is not a native pstoedit output format driver. It does not use the
-    pstoedit postcript flattener, instead it uses the PostScript program
-    ps2ai.ps which is installed in the GhostScript distribution directory. It
+    pstoedit PostScript flattener, instead it uses the PostScript program
+    ps2ai.ps which is installed in the Ghostscript distribution directory. It
     is included  to provide the same "look-and-feel" for the conversion to AI.
     The additional benefit is that this conversion is now available also via
-    the "convert-to-vector" menu of Gsview. However, lot's of files don't
+    the "convert-to-vector" menu of Gsview. However, lot's of files do not
     convert nicely or at all using ps2ai.ps. So a native pstoedit driver would
     be much better. Anyone out there to take this? The AI format is usable for
     example by Mayura Draw (\URL{http://www.mayura.com}). Also a driver to the
-    Mayura native format would be nice. 
+    Mayura native format would be nice.
 
     An alternative to the ps2ai based driver is available via the -f plot:ai format if the libplot(ter) is installed.
 
-    You should use a version of GhostScript greater than or equal to 6.00 for using the ps2ai output format driver.
+    You should use a version of Ghostscript greater than or equal to 6.00 for using the ps2ai output format driver.
 
 
   \subsection{MetaPost}
 
     Note that, as far as Scott knows, MetaPost does not support PostScript's
-    eofill. The metapost output format driver just converts eofill to fill, and issues a warning if
+    eofill. The MetaPost output format driver just converts eofill to fill, and issues a warning if
     verbose is set. Fortunately, very few PostScript programs rely on the
     even-odd fill rule, even though many specify it.
 
-    For more on MetaPost see: 
-    
-    \URL{http://cm.bell-labs.com/who/hobby/MetaPost.html}
+    For more on MetaPost see:
 
-  \subsection{Context Free - CFDG} 
+    \URL{http://tug.org/metapost}	%http://cm.bell-labs.com/who/hobby/MetaPost.html}
+
+  \subsection{Context Free - CFDG}
 	The driver for the CFDG format (drvcfdg) defines
 	one shape per page of PostScript, but only the first shape is actually
 	rendered (unless the user edits the generated CFDG code, of course).
-	CFDG doesn't support multi-page output, so this probably a reasonable thing to do.
- 
+	CFDG does not support multi-page output, so this probably is a reasonable thing to do.
+
 	For more on Context Free see:
 	\URL{http://www.contextfreeart.org/}
 
-  \subsection{LaTeX2e} 
+  \subsection{\LaTeX2e}
 
     \begin{itemize}
-   \item LaTeX2e's picture environment is not very powerful.  As a result, many
+   \item \LaTeX2e's picture environment is not very powerful.  As a result, many
      elementary PostScript constructs are ignored -- fills, line
      thicknesses (besides "thick" and "thin"), and dash patterns, to name a
-     few.  Furthermore, complex pictures may overrun TeX's memory capacity.
+     few.  Furthermore, complex pictures may overrun \TeX's{} memory capacity.
+     (The eepic package overcomes many such restrictions.)
 
    \item Some PostScript constructs are not supported directly by "picture",
      but can be handled by external packages.  If a figure uses color, the
-     top-level document will need to do a \verb+"\usepackage{color}"+.  And if a
+     top-level document will need to do a \verb+"\usepackage{color}"+ or \verb+"\usepackage{xcolor}"+.  And if a
      figure contains rotated text, the top-level document will need to do a
      \verb+"\usepackage{rotating}"+.
 
@@ -1476,13 +1478,13 @@
      the nearest integer.  This makes hand-editing the picture a little
      nicer.
 
-   \item Why is this output format driver useful?  One answer is portability; any LaTeX2e
-     system can handle the picture environment, even if it can't handle
-     PostScript graphics.  (pdfLaTeX comes to mind here.)  A second answer
-     is that pictures can be edited easily to contain any arbitrary LaTeX2e
+   \item Why is this output format driver useful?  One answer is portability; any \LaTeX2e
+     system can handle the picture environment, even if it cannot handle
+     PostScript graphics.  (pdf\LaTeX\ comes to mind here.)  A second answer
+     is that pictures can be edited easily to contain any arbitrary \LaTeX2e
      code.  For instance, the text in a figure can be modified to contain
      complex mathematics, non-Latin alphabets, bibliographic citations, or
-     -- the real reason Scott wrote the LaTeX2e output format driver -- hyperlinks to the
+     -- the real reason Scott wrote the \LaTeX2e{} output format driver -- hyperlinks to the
      surrounding document (with help from the hyperref package).
    \end{itemize}
 
@@ -1504,8 +1506,8 @@
 You can check which name of a PostScript interpreter was compiled into
 pstoedit using: \textbf{pstoedit} \Opt{-help -v}.
 
-See the GhostScript manual for descriptions of environment variables used by
-Ghostscript most importantly \verb+GS_FONTPATH+ and \verb+GS_LIB+; other
+See the Ghostscript manual for descriptions of environment variables used by
+Ghostscript, most importantly \verb+GS_FONTPATH+ and \verb+GS_LIB+; other
 environment variables also affect output to display, print, and additional
 filtering and processing. See the related documentation.
 
@@ -1519,10 +1521,10 @@
 \section{TROUBLE SHOOTING}
 
 If you have problems with \Prog{pstoedit} first try whether Ghostscript
-successfully displays your file. If yes, then try 
-\textbf{pstoedit} \Opt{-f ps} \Arg{infile.ps} \Arg{testfile.ps} 
+successfully displays your file. If yes, then try
+\textbf{pstoedit} \Opt{-f ps} \Arg{infile.ps} \Arg{testfile.ps}
 and check whether \Arg{testfile.ps} still displays correctly using
-Ghostscript. If this file doesn't look correctly then there seems to be a
+Ghostscript. If this file does not look correctly then there seems to be a
 problem with \Prog{pstoedit}'s PostScript frontend. If this file looks good
 but the output for a specific format is wrong, the problem is probably in
 the output format driver for the specific format. In either case send bug fixes and
@@ -1542,7 +1544,7 @@
    \item lt - "less-then" to mean "draw a line to"
    \item string - "create a string object" to mean "draw a string"
    \item length - "get the length of e.g. a string" to a "float constant"
-   
+
 \end{itemize}
 
 I've included work-arounds for the ones mentioned above, but some others
@@ -1552,10 +1554,10 @@
 \section{RESTRICTIONS}
 
 \begin{itemize}
-\item Non-standard fonts (e.g. \TeX bitmap fonts) are mapped to a default font which
+\item Non-standard fonts (e.g. \TeX\ bitmap fonts) are mapped to a default font which
 can be changed using the \Opt{-df} option. \Prog{pstoedit} chooses the size of
 the replacement font such that the width of the string in the original font is
-the same as in the replacement font. This is done for each text fragment
+the same as with the replacement font. This is done for each text fragment
 displayed. Special character encoding support is limited in this case. If a
 character cannot be mapped into the target format, pstoedit displays a '\#'
 instead. See also the -uchar option.
@@ -1565,7 +1567,7 @@
 \item Some output format drivers, e.g. the Gnuplot output format driver or the 3D output format driver (rpl, lwo, rib) do not support text.
 
 \item For most output format drivers pstoedit does not support clipping (mainly due to limitations in the target format). You can try to use the
-\Opt{-sclip} option to simulate clipping. However, this doesn't work in all cases
+\Opt{-sclip} option to simulate clipping. However, this does not work in all cases
 as expected.
 
 \item Special note about the Java output format drivers (java1 and java2).
@@ -1573,9 +1575,9 @@
 order to be compiled and usable. These other files are Java classes (one
 applet and support classes) that allow to step through the individual pages
 of a converted PostScript document. This applet can easily be activated from
-a html-document. See the \File{contrib/java/java1/readme_java1.txt} or 
+a html-document. See the \File{contrib/java/java1/readme_java1.txt} or
 \File{contrib/java/java2/readme_java2.htm} file for more details.
- 
+
 \end{itemize}
 
 \section{FAQs}
@@ -1584,11 +1586,11 @@
 \item Why do letters like O or B get strange if converted to tgif/xfig
 using the \Opt{-dt} option?
 
-This is because most output format drivers don't support composite paths with
-intermediate gaps (moveto's) and second don't support very well the (eo)fill
+This is because most output format drivers do not support composite paths with
+intermediate gaps (moveto's) and second do not support very well the (eo)fill
 operators of PostScript (winding rule). For such objects \Prog{pstoedit} breaks
 them into smaller objects whenever such a gap is found. This results in the
-"hole" beeing filled with black color instead of beeing transparent. Since
+"hole" being filled with black color instead of beeing transparent. Since
 version 3.11 you can try the \Opt{-ssp} option in combination with the xfig
 output format driver.
 
@@ -1596,11 +1598,11 @@
 \item Why does pstoedit produce ugly results from PostScript files generated
 by dvips?
 
-TeX documents usually use bitmap fonts. Such fonts cannot be used as native
-font in other format. So pstoedit replaces the TeX font with another native
+\TeX\,  documents usually use bitmap fonts. Such fonts cannot be used as native
+font in other format. So pstoedit replaces the \TeX\ font with another native
 font. Of course, the replacement font will in most cases produce another
 look, especially if mathematical symbols are used.
-Try to use PostScript fonts instead of the bitmap fonts when generating a PostScript file from TeX or LaTeX.
+Try to use PostScript fonts instead of the bitmap fonts when generating a PostScript file from \TeX\ or \LaTeX.
 
 
 \end{enumerate}
@@ -1630,7 +1632,7 @@
 
   \item Lar Kaufman revised the increasingly complex
      command syntax diagrams and updated the structure and content of this
-     manpage following release 2.5. 
+     manpage following release 2.5.
 
   \item David B. Rosen \Email{rosen_AT_unr.edu} provided ideas and some PostScript
      code from his ps2aplot program.
@@ -1641,7 +1643,7 @@
   \item Carsten Hammer \Email{chammer_AT_hermes.hrz.uni-bielefeld.de} provided the
      gnuplot output format driver and the initial DXF output format driver.
 
-  \item Christoph Jaeschke provided the OS/2 metafile (MET) output format driver. 
+  \item Christoph Jaeschke provided the OS/2 metafile (MET) output format driver.
   Thomas Hoffmann \Email{thoffman_AT_zappa.sax.de} did some further updates on the OS/2 part.
 
   \item Jens Weber \Email{rz47b7_AT_PostAG.DE} provided the Windows metafile (WMF)
@@ -1665,26 +1667,26 @@
      (\URL{http://www.gmlewis.com/})
 
   \item Piet van Oostrum \Email{piet_AT_cs.ruu.nl} made several bug fixes.
-  
+
   \item Lutz Vieweg \Email{lkv_AT_mania.robin.de} provided several bug fixes and
      suggestions for improvements.
-     
+
   \item Derek B. Noonburg \Email{derekn_AT_vw.ece.cmu.edu} and Rainer Dorsch
      \Email{rd_AT_berlepsch.wohnheim.uni-ulm.de} isolated and resolved a
      Linux-specific core dump problem.
 
   \item Rob Warner \Email{rcw2_AT_ukc.ac.uk} made pstoedit compile under RiscOS.
-  
+
   \item Patrick Gosling \Email{jpmg_AT_eng.cam.ac.uk} made some suggestions
      regarding the usage of pstoedit in Ghostscript's SAFER mode.
 
-  \item Scott Pakin \Email{scott+ps2ed_AT_pakin.org} for the Idraw output format driver and the 
+  \item Scott Pakin \Email{scott+ps2ed_AT_pakin.org} for the Idraw output format driver and the
 	autoconf support.
 
   \item Peter Katzmann \Email{p.katzmann_AT_thiesen.com} for the HPGL output format driver.
-  
+
   \item Chris Cox \Email{ccox_AT_airmail.net} contributed the Tcl/Tk output format driver.
-  
+
   \item Thorsten Behrens \Email{Thorsten_Behrens_AT_public.uni-hamburg.de} and
      Bjoern Petersen for reworking the WMF output format driver.
 
@@ -1692,14 +1694,14 @@
      support for the xfig driver and a JAVA based GUI.
 
   \item Egil Kvaleberg \Email{egil_AT_kvaleberg.no} contributed the pic output format driver.
-  
+
   \item Kai-Uwe Sattler \Email{kus_AT_iti.cs.uni-magdeburg.de} implemented the
      output format driver for Kontour.
 
-  \item Scott Pakin,  \Email{scott+ps2ed_AT_pakin.org}   provided the MetaPost and LaTeX2e and PowerPoint output format driver.
- 
-  \item The PowerPoint driver uses the libzip library - \URL{http://www.nih.at/libzip}. Under Windows, this library is linked into the provided binary statically.  Thanks to the whole libzip team.
-  
+  \item Scott Pakin,  \Email{scott+ps2ed_AT_pakin.org}   provided the MetaPost and \LaTeX2e and MS PowerPoint output format driver.
+
+  \item The MS PowerPoint driver uses the libzip library - \URL{http://www.nih.at/libzip}. Under MS Windows, this library is linked into the provided binary statically.  Thanks to the whole libzip team.
+
   \item Burkhard Plaum \Email{plaum_AT_IPF.Uni-Stuttgart.de} added support for
      complex filled paths for the xfig output format driver.
 
@@ -1710,24 +1712,24 @@
      to LaTeX. This allows to generate the UNIX style and the HTML manual from this
      base format.
 
-  \item Several others sent smaller bug fixed and bug reports. Sorry if I don't
+  \item Several others sent smaller bug fixed and bug reports. Sorry if I do not
      mention them all here.
 
   \item Gisbert W. Selke (\Email{gisbert_AT_tapirsoft.de}) for the Java 2 output format driver.
-     
+
   \item Robert S. Maier (\Email{rsm_AT_math.arizona.edu}) for many improvements on
 	the libplot output format driver and for libplot itself.
-  \item The authors of pstotext (\Email{mcjones_AT_pa.dec.com} and \Email{birrell_AT_pa.dec.com}) 
-	for giving me the permission to use their simple PostScript code for 
+  \item The authors of pstotext (\Email{mcjones_AT_pa.dec.com} and \Email{birrell_AT_pa.dec.com})
+	for giving me the permission to use their simple PostScript code for
 	performing rotation.
-  \item  Daniel Gehriger \Email{gehriger_AT_linkcad.com} for his help concerning the handling of Splines in the DXF format. 
+  \item  Daniel Gehriger \Email{gehriger_AT_linkcad.com} for his help concerning the handling of Splines in the DXF format.
   \item Allen Barnett \Email{libemf_AT_lignumcomputing.com} for his work on the libEMF which allows to create WMF/EMF files under *nix systems.
   \item Dave \Email{dave_AT_opaque.net} for providing the libming which is a multiplatform library for generating SWF files.
   \item Masatake Yamoto for the introduction of autoconf, automake and libtool into pstoedit
   \item Bob Friesenhahn for his help and the building of the Magick++ API to ImageMagick.
   \item But most important: Peter Deutsch \Email{ghost_AT_aladdin.com} and Russell
      Lang \Email{gsview_AT_ghostgum.com.au} for their help and answers regarding
-     GhostScript and gsview.
+     Ghostscript and gsview.
 
 
 \end{itemize}
--- pstoedit-3.62-orig/doc/pstoedit.1	2013-04-28 20:18:06.000000000 +0200
+++ pstoedit-3.62/doc/pstoedit.1	2013-06-27 11:50:33.000000000 +0200
@@ -1,5 +1,5 @@
 '\" t
-.\" Manual page created with latex2man on Sun Apr 28 20:18:05 CEST 2013
+.\" Manual page created with latex2man on Thu Jun 27 11:50:33 CEST 2013
 .\" NOTE: This file is generated, DO NOT EDIT.
 .de Vb
 .ft CW
@@ -24,7 +24,7 @@
 .PP
 pstoedit
 [\fB\-v \-help\fP]
-.br 
+.br
 .PP
 pstoedit
 [\fB\-include\fP\fI name of a PostScript file to be included\fP]
@@ -77,12 +77,12 @@
 [\fB\-fontmap\fP\fI name of font map file for pstoedit\fP]
 [\fB\-pagesize\fP\fI page format\fP]
 [\fB\-help\fP]
-[\fB\-gs\fP\fI path to the ghostscript executable/DLL \fP]
+[\fB\-gs\fP\fI path to the Ghostscript executable/DLL \fP]
 [\fB\-bo\fP]
+[\fB\-pslanguagelevel\fP\fI PostScript Language Level to be used 1, 2, or 3\fP]
 [\fB\-psarg\fP\fI argument string\fP]
-[\fB\-pslanguagelevel\fP\fI PostScript Language Level to be used 1,2, or 3\fP]
 \fB\-f\fP\fI "format[:options]"\fP
-[\fB\-gsregbase\fP\fI GhostScript base registry path\fP]
+[\fB\-gsregbase\fP\fI Ghostscript base registry path\fP]
 [ inputfile [outputfile] ] 
 .PP
 .SS FROM GSVIEW
@@ -94,7 +94,7 @@
 .PP
 pstoedit
 can also be used as PostScript and PDF graphic import filter for several programs including 
-MS\-Office, PaintShop\-Pro and PhotoLine. See 
+MS Office, PaintShop\-Pro and PhotoLine. See 
 \fBhttp://www.pstoedit.net/importps/\fP
 for more 
 details. 
@@ -128,7 +128,7 @@
 .SS PRINCIPLE OF CONVERSION
 .PP
 pstoedit
-works by redefining the some basic painting operators of 
+works by redefining some basic painting operators of 
 PostScript, e.g. \fBstroke\fP
 or \fBshow\fP
 (bitmaps drawn by the image 
@@ -138,7 +138,7 @@
 (\fIgs\fP(1)).
 You normally need to have a PostScript interpreter installed in 
 order to use this program. However, you can perform some "back end only" processing 
-of files following the conventions of the pstoedit intermediate formate by specifying the \fB\-bo\fP
+of files following the conventions of the pstoedit intermediate format by specifying the \fB\-bo\fP
 option. See "Available formats and their specific options" below. 
 .PP
 The output that is written by the interpreter due to the redefinition of the 
@@ -163,7 +163,7 @@
 .SS GENERAL OPTIONS
 .TP
 [\fB\-include\fP\fI name of a PostScript file to be included\fP]
- This options allows to specify an additional PostScript file that will be executed just before the normal input is read. This is helpful for including specific page settings or for disabling potentially unsafe PostScript operators, e.g., file, renamefile, or deletefile. 
+ This option allows to specify an additional PostScript file that will be executed just before the normal input is read. This is helpful for including specific page settings or for disabling potentially unsafe PostScript operators, e.g., file, renamefile, or deletefile. 
 .PP
 .TP
 [\fB\-xscale\fP\fI number\fP]
@@ -191,11 +191,11 @@
 .PP
 .TP
 [\fB\-pagenumberformat\fP\fI page number format specification\fP]
- format specification for page numbers in file name if \-split is used. The specification is used to create the page number using sprintf.The specification shall not include the leading 
+ format specification for page numbers in file name if \-split is used. The specification is used to create the page number using sprintf. The specification shall not include the leading % nor the trailing d. Default is empty string which results in formatting the page number using %d. This results in page numbers like 1, 2, \&.\&.\&., 10. Sometimes you may want to have fixed length with leading 0, so you might want to specify 02 which means 2 digits with leading 0. 
 .PP
 .TP
 [\fB\-split\fP]
- Create a new file for each page of the input. For this the output filename must contain a %d which is replaced with the current page number. This option is automatically switched on for output formats that don\&'t support multiple pages within one file, e.g. fig or gnuplot. 
+ Create a new file for each page of the input. For this the output filename must contain a %d which is replaced with the current page number. This option is automatically switched on for output formats that do not support multiple pages within one file, e.g. fig or gnuplot. 
 .PP
 .TP
 [\fB\-usebbfrominput\fP]
@@ -203,7 +203,7 @@
 .PP
 .TP
 [\fB\-page\fP\fI page number\fP]
- Select a single page from a multi page PostScript or PDF file. 
+ Select a single page from a multi\-page PostScript or PDF file. 
 .PP
 .TP
 [\fB\-rgb\fP]
@@ -211,15 +211,15 @@
 .PP
 .TP
 [\fB\-useagl\fP]
- use Adobe Glyph List instead of the IsoLatin1 table (this is experimental) 
+ use Adobe Glyph List instead of the ISO Latin\-1 table (this is experimental) 
 .PP
 .TP
 [\fB\-noclip\fP]
- don\&'t use clipping (relevant only if output format supports clipping at all) 
+ do not use clipping (relevant only if output format supports clipping at all) 
 .PP
 .TP
 [\fB\-rotate\fP\fI angle (0\-360)\fP]
- Rotage image by angle. 
+ Rotate image by angle. 
 .PP
 .TP
 [\fB\-pagesize\fP\fI page format\fP]
@@ -231,8 +231,8 @@
  show the help information 
 .PP
 .TP
-[\fB\-gs\fP\fI path to the ghostscript executable/DLL \fP]
- tells pstoedit which ghostscript executable/DLL to use \- overwrites the internal search heuristic 
+[\fB\-gs\fP\fI path to the Ghostscript executable/DLL \fP]
+ tells pstoedit which Ghostscript executable/DLL to use \- overwrites the internal search heuristic 
 .PP
 .TP
 [\fB\-bo\fP]
@@ -250,15 +250,15 @@
 [\fB\-psarg\fP\fI argument string\fP]
  The string given with this option is passed directly to Ghostscript when Ghostscript is called to process the PostScript file for pstoedit\&.
 For example: \fB\-psarg\fP\fB "\fP\fB\-r300x300\fP\fB"\fP\&.
-This causes the resolution to be changed to 300x300 dpi. (With older versions of GhostScript, changing the resolution this way has an effect only if the \fB\-dis\fP
+This causes the resolution to be changed to 300x300 dpi. (With older versions of Ghostscript, changing the resolution this way has an effect only if the \fB\-dis\fP
 option is given.) If you want to pass multiple options to Ghostscript you can use multiple \-psarg options \fB\-psarg opt1\fP
 \fB\-psarg opt2\fP
 \fB\-psarg opt2\fP\&.
-See the GhostScript manual for other possible options. 
+See the Ghostscript manual for other possible options. 
 .PP
 .TP
-[\fB\-pslanguagelevel\fP\fI PostScript Language Level to be used 1,2, or 3\fP]
- PostScript Language Level to be used 1,2, or 3 You can switch Ghostscript into PostScript Level 1 only mode by \fB\-pslanguagelevel 1\fP\&.
+[\fB\-pslanguagelevel\fP\fI PostScript Language Level 1, 2, or 3 to be used\fP]
+ PostScript Language Level 1, 2, or 3 to be used. You can switch Ghostscript into PostScript Level 1 only mode by \fB\-pslanguagelevel 1\fP\&.
 This can be useful for example if the PostScript file to be converted uses some Level 2 specific custom color models that are not supported by pstoedit. However, this requires that the PostScript program checks for the PostScript level supported by the interpreter and "acts" accordingly. The default language level is 3. 
 .PP
 .TP
@@ -271,9 +271,9 @@
 option. 
 .PP
 .TP
-[\fB\-gsregbase\fP\fI GhostScript base registry path\fP]
- registry path to use as a base path when searching GhostScript interpreter 
-This option provides means to specify a registry key under HKLM/Software where to search for GS interpreter key, version and GS_DLL / GS_LIB values. Example: "\-gsregbase MyCompany" means that HKLM/Software/MyCompany/GPL GhostScript would be searched instead of HKLM/Software/GPL GhostScript. 
+[\fB\-gsregbase\fP\fI Ghostscript base registry path\fP]
+ registry path to use as a base path when searching Ghostscript interpreter. 
+This option provides means to specify a registry key under HKLM/Software where to search for GS interpreter key, version and GS_DLL / GS_LIB values. Example: "\-gsregbase MyCompany" means that HKLM/Software/MyCompany/GPL Ghostscript would be searched instead of HKLM/Software/GPL Ghostscript. 
 .PP
 .SS TEXT AND FONT HANDLING RELATED OPTIONS
 .TP
@@ -287,25 +287,25 @@
 .TP
 [\fB\-nomaptoisolatin1\fP]
  Normally pstoedit
-maps all character codes to the ones defined by the ISO\-Latin1 encoding. If you specify \fB\-nomaptoisolatin1\fP
+maps all character codes to the ones defined by the ISO Latin1 encoding. If you specify \fB\-nomaptoisolatin1\fP
 then the encoding from the input PostScript is passed unchanged to the output. This may result in strange text output but on the other hand may be the only way to get some fonts converted appropriately. Try what fits best to your concrete case. 
 .PP
 .TP
-[\fB\-pngimage\fP\fI filename \- for debugging purpose mainly. Write result of processing also to a PNG file.\fP]
- for debugging purpose mainly. Write result of processing also to a PNG file 
+[\fB\-pngimage\fP\fI filename\fP]
+ \- for debugging purpose mainly. Write result of processing also to a PNG file. 
 .PP
 .TP
 [\fB\-dt\fP]
- Draw text \- Text is drawn as polygons. This might produce a large output file. This option is automatically switched on if the selected output format does not support text, e.g. \fIgnuplot\fP(1)\&.
+ draw text. Text is drawn as polygons. This might produce a large output file. This option is automatically switched on if the selected output format does not support text, e.g. \fIgnuplot\fP(1)\&.
 .PP
 .TP
 [\fB\-adt\fP]
- Automatic Draw text \- This option turns on the \fB\-dt\fP
-option selectively for fonts that seem to be no normal text fonts, e.g. Symbol.. 
+ automatic draw text. This option turns on the \fB\-dt\fP
+option selectively for fonts that seem to be no normal text fonts, e.g. Symbol. 
 .PP
 .TP
 [\fB\-ndt\fP]
- Never Draw text \- fully disable the heuristics used by pstoedit to decide when to "draw" text instead of showing it as text. This may produce incorrect results, but in some cases it might nevertheless be useful. "Use at own risk". 
+ never draw text. Fully disable the heuristics used by pstoedit to decide when to "draw" text instead of showing it as text. This may produce incorrect results, but in some cases it might nevertheless be useful. "Use at own risk". 
 .PP
 .TP
 [\fB\-dgbm\fP]
@@ -313,11 +313,11 @@
 .PP
 .TP
 [\fB\-correctdefinefont\fP]
- Some PostScript files, e.g. such as generated by ChemDraw, use the PostScript definefont operator in way that is incompatible with pstoedit\&'s assumptions. The new font is defined by copying an old font without changing the FontName of the new font. When this option is applied, some "patches" are done after a definefont in order to make it again compatible with pstoedit\&'s assumptions. This option is not enabled per default, since it may break other PostScript file. It is tested only with ChemDraw generated files. 
+ Some PostScript files, e.g. such as generated by ChemDraw, use the PostScript definefont operator in a way that is incompatible with pstoedit\&'s assumptions. The new font is defined by copying an old font without changing the FontName of the new font. When this option is applied, some "patches" are done after a definefont in order to make it again compatible with pstoedit\&'s assumptions. This option is not enabled by default, since it may break other PostScript files. It is tested only with ChemDraw generated files. 
 .PP
 .TP
 [\fB\-pti\fP]
- Precision text \- Normally a text string is drawn as it occurs in the input file. However, in some situations, this might produce wrongly positioned characters. This is due to limitiations in most output formats of pstoedit. They cannot represent text with arbitray inter\-letter spacing which is easily possible in PDF and PostScript. With \fB\-pta\fP,
+ precision text. Normally a text string is drawn as it occurs in the input file. However, in some situations, this might produce wrongly positioned characters. This is due to limitiations in most output formats of pstoedit. They cannot represent text with arbitray inter\-letter spacing which is easily possible in PDF and PostScript. With \fB\-pta\fP,
 each character of a text string is placed separately. With \fB\-pti\fP,
 this is done only in cases when there is a non zero inter\-letter spacing. The downside of "precision text" is a bigger file size and hard to edit text. 
 .PP
@@ -327,18 +327,18 @@
 .PP
 .TP
 [\fB\-uchar\fP\fI character\fP]
- Sometimes pstoedit cannot map a character from the encoding used by the PostScript file to the font encoding of the target format. In this case pstoedit replaces the input character by a special character in order to show all the places that couldn\&'t be mapped correctly. The default for this is a "#". Using the \fB\-uchar\fP
+ Sometimes pstoedit cannot map a character from the encoding used by the PostScript file to the font encoding of the target format. In this case pstoedit replaces the input character by a special character in order to show all the places that could not be mapped correctly. The default for this is a "#". Using the \fB\-uchar\fP
 option it is possible to specify another character to be used instead. If you want to use a space, use \-uchar " ". 
 .PP
 .TP
 [\fB\-t2fontsast1\fP]
- Handle type 2 fonts same as type 1. Type 2 fonts sometimes occur as embedded fonts within PDF files. In the default mode, text using such fonts is drawn as polygons since pstoedit assumes that such a font is not available on the users machine. If this option is set, pstoedit assumes that the internal encoding follows the same as for a standard font and generates normal text output. This assumption may not be true in all cases. But it is nearly impossible for pstoedit to verify this assumption \- it would have to do a sort of OCR. 
+ Handle Type 2 fonts same as Type 1. Type 2 fonts sometimes occur as embedded fonts within PDF files. In the default mode, text using such fonts is drawn as polygons since pstoedit assumes that such a font is not available on the user\&'s machine. If this option is set, pstoedit assumes that the internal encoding follows the same as for a standard font and generates normal text output. This assumption may not be true in all cases. But it is nearly impossible for pstoedit to verify this assumption \- it would have to do a sort of OCR. 
 .PP
 .TP
 [\fB\-nfr\fP]
  In normal mode pstoedit replaces bitmap fonts with a font as defined by the \fB\-df\fP
-option. This is done, because most output formats can\&'t handle such fonts. This behavior can be switched off using the \fB\-nfr\fP
-option but then it strongly depends on the application reading the the generated file whether the file is usable and correctly interpreted or not. Any problems are then out of control of pstoedit. 
+option. This is done, because most output formats cannot handle such fonts. This behavior can be switched off using the \fB\-nfr\fP
+option but then it strongly depends on the application reading the generated file whether the file is usable and correctly interpreted or not. Any problems are then out of control of pstoedit. 
 .PP
 .TP
 [\fB\-glyphs\fP]
@@ -346,18 +346,19 @@
 .PP
 .TP
 [\fB\-useoldnormalization\fP]
- Just use this option in case the new heuristic introduced in 3.5 doesn\&'t produce correct results \- however, this normalization of font encoding will always be a best\-effort approach since there is no real general solution to it with reasonable effort 
+ Just use this option in case the new heuristic introduced in 3.5 does not produce correct results \- however, this normalization of font encoding will always be a best\-effort approach since there is no real general solution to it with reasonable effort 
 .PP
 .TP
 [\fB\-fontmap\fP\fI name of font map file for pstoedit\fP]
  The font map is a simple text file containing lines in the following format:
-.br 
+.br
 .PP
-document_font_name target_font_name 
-.br 
-Lines beginning with % are considerd comments 
+document_font_name target_font_name
 .br 
-If a font name contains spaces, use the "font name with spaces" notation. 
+.PP
+Lines beginning with % are considerd comments.
+.br
+For font names with spaces use the "font name with spaces" notation. 
 .PP
 If a target_font_name starts with /, it is regarded as alias to a former entry. 
 .PP
@@ -374,23 +375,22 @@
 .RE
 .TP
 .B *
-Windows: The same directory where the pstoedit executable is
-located 
+MS Windows: The same directory where the pstoedit executable is located
 .RS
 .PP
 .RE
 .TP
 .B *
-Unix: 
+Unix:
 .br 
-<\fIThe directory where the pstoedit executably is located\fP>
+<\fIThe directory where the pstoedit executable is located\fP>
 /../lib/ 
 .RS
 .PP
 .RE
 .RE
 .PP
-The mpost.fmp in the misc directory of the pstoedit distibution is a sample map file with mappings from over 5000 PostScript font names to their TeXequivalents. This is useful because MetaPost is frequently used with TeX/LaTeX and those programs don\&'t use standard font names. This file and the MetaPost output format driver are provided by Scott Pakin (\fBscott+ps2ed_AT_pakin.org\fP).
+The mpost.fmp in the misc directory of the pstoedit distibution is a sample map file with mappings from over 5000 PostScript font names to their TeX equivalents. This is useful because MetaPost is frequently used with TeX/LaTeX and those programs do not use standard font names. This file and the MetaPost output format driver are provided by Scott Pakin (\fBscott+ps2ed_AT_pakin.org\fP).
 Another example is wemf.fmp to be used under Windows. See the misc directory of the pstoedit source distribution. 
 After loading the implicit (based on driver name) or explicit (based on the \-fontmap option) font map file, a system specific map file is searched and loaded from the installation directory (unix.fmp or windows.fmp). This file can be used to redirect certain fonts to system specific names using the /AliasName notation described above. 
 .PP
@@ -408,7 +408,7 @@
 .PP
 .TP
 [\fB\-nq\fP]
- No exit from the PostScript interpreter. Normally Ghostscript exits after processing the pstoedit input\-file. For debugging it can be useful to avoid this. If you do, you will have to type quit at the GS> prompt to exit from Ghostscript. 
+ No exit from the PostScript interpreter. Normally Ghostscript exits after processing the pstoedit input file. For debugging it can be useful to avoid this. If you do, you will have to type quit at the GS> prompt to exit from Ghostscript. 
 .PP
 .TP
 [\fB\-v\fP]
@@ -418,7 +418,7 @@
 [\fB\-nb\fP]
  Since version 3.10 pstoedit
 uses the \-dDELAYBIND
-option when calling GhostScript. Previously the \-dNOBIND
+option when calling Ghostscript. Previously the \-dNOBIND
 option was used instead but that sometimes caused problems if a user\&'s PostScript file overloaded standard PostScript operator with totally new semantic, e.g. lt for lineto instead of the standard meaning of "less than". Using \fB\-nb\fP
 the old style can be activated again in case the \-dDELAYBIND
 gives different results as before. In such a case please also contact the author. 
@@ -437,7 +437,7 @@
 .PP
 .TP
 [\fB\-gstest\fP]
- perform a basic test for the interworking with GhostScript 
+ perform a basic test of the interworking with Ghostscript 
 .PP
 .SS DRAWING RELATED OPTIONS
 .TP
@@ -449,7 +449,7 @@
 .PP
 .TP
 [\fB\-nsp\fP]
- normally subpathes are used if the output format support them. This option turns off subpathes. 
+ normally subpaths are used if the output format supports them. This option turns off subpaths. 
 .PP
 .TP
 [\fB\-mergelines\fP]
@@ -467,9 +467,9 @@
 .PP
 .TP
 [\fB\-ssp\fP]
- simulate sub paths. 
-Several output formats don\&'t support PostScript pathes containing sub pathes, i.e. pathes with intermediate movetos. In the normal case, each subpath is treated as an independent path for such output formats. This can lead to bad looking results. The most common case where this happens is if you use the \fB\-dt\fP
-option and show some text with letters like e, o, or b, i.e. letter that have a "hole". When the \fB\-ssp\fP
+ simulate subpaths. 
+Several output formats do not support PostScript paths containing subpaths, i.e. paths with intermediate movetos. In the normal case, each subpath is treated as an independent path for such output formats. This can lead to bad looking results. The most common case where this happens is if you use the \fB\-dt\fP
+option and show some text with letters like e, o, or b, i.e. letters that have a "hole". When the \fB\-ssp\fP
 option is set, pstoedit tries to eliminate these problems. However, this option is CPU time intensive! 
 .PP
 .TP
@@ -477,13 +477,13 @@
  If the output format does not support curves in the way PostScript does or if the \fB\-nc\fP
 option is specified, all curves are approximated by lines. Using the \fB\-flat\fP
 option one can control this approximation. This parameter is directly converted to a PostScript \fBsetflat\fP
-command. Higher numbers, e.g. 10 give rougher, lower numbers, e.g. 0.1 finer approximations. 
+command. Higher numbers, e.g. 10 give rougher, lower numbers, e.g. 0.1, give finer approximations. 
 .PP
 .TP
 [\fB\-sclip\fP]
  simulate clipping. 
-Most output formats of pstoedit don\&'t have native support for clipping. For that pstoedit
-offers an option to perform the clipping of the graphics directly without passing the clippath to the output driver. However, this results in curves being replaced by a lot of line segments and thus larger output files. So use this option only if your output looks different from the input due to clipping. In addition, this "simulated clipping" is not exactly the same as defined in PostScript. There might be lines drawn at the double size. Also clipping of text is not supported unless you also use the \fB\-dt\fP
+Most output formats of pstoedit do not have native support for clipping. For that pstoedit
+offers an option to perform the clipping of the graphics directly without passing the clippath to the output driver. However, this results in curves being replaced by a lot of line segments and thus larger output files. So use this option only if your output looks different from the input due to clipping. In addition, this "simulated clipping" is not exactly the same as defined in PostScript. There might be lines drawn at double size. Also clipping of text is not supported unless you also use the \fB\-dt\fP
 option. 
 .PP
 .SS INPUT AND OUTFILE FILE ARGUMENTS
@@ -497,7 +497,7 @@
 
 .PP
 pstoedit
-allows passing individual options to a output format driver. This is done by 
+allows passing individual options to an output format driver. This is done by 
 appending all options to the format specified after the \fB\-f\fP
 option. The format 
 specifier and its options must be separated by a colon (:). If more than one 
@@ -509,7 +509,7 @@
 .PP
 To see which options are supported by a specific format, type: 
 \fBpstoedit \-f format:\-help\fP
-.br 
+.br
 .PP
 The following description of the different formats supported by pstoedit is extracted from the source code of the individual drivers. 
 .PP
@@ -521,9 +521,9 @@
 No driver specific options 
 .SS dump \- for test purposes (same as debug)
 No driver specific options 
-.SS gs \- any device that GhostScript provides \- use gs:format, e.g. gs:pdfwrite
+.SS gs \- any device that Ghostscript provides \- use gs:format, e.g. gs:pdfwrite
 No driver specific options 
-.SS ps2ai \- Adobe Illustrator via ps2ai.ps of GhostScript
+.SS ps2ai \- Adobe Illustrator via ps2ai.ps of Ghostscript
 No driver specific options 
 .SS gmfa \- ASCII GNU metafile 
 .TP
@@ -581,7 +581,7 @@
  plotutil format to generate 
 .PP
 .SS magick \- MAGICK driver
-This driver uses the C++ API of ImageMagick or GraphicsMagick to finally produce different output formats. The output format is determined automatically by Image/GraphicsMagick based on the suffix of the output filename. So an output file test.png will force the creation of an image in PNG format. 
+This driver uses the C++ API of ImageMagick or GraphicsMagick to finally produce different output formats. The output format is determined automatically by Image\-/GraphicsMagick based on the suffix of the output filename. So an output file test.png will force the creation of an image in PNG format. 
 .PP
 No driver specific options 
 .SS swf \- SWF driver: 
@@ -593,7 +593,7 @@
 [\fB\-trace\fP]
  trace ??? 
 .PP
-.SS svg \- scalable vector graphics
+.SS svg \- Scalable Vector Graphics
 .TP
 [\fB\-localdtd\fP]
  use local DTD 
@@ -612,15 +612,15 @@
 .PP
 .TP
 [\fB\-nogroupedpath\fP]
- do not write a group around pathes 
+ do not write a group around paths 
 .PP
 .TP
 [\fB\-noviewbox\fP]
- don\&'t write a view box 
+ do not write a view box 
 .PP
 .TP
 [\fB\-texmode\fP]
- TeX Mode 
+ TeX mode 
 .PP
 .TP
 [\fB\-imagetofile\fP]
@@ -657,15 +657,15 @@
 .PP
 .TP
 [\fB\-nogroupedpath\fP]
- do not write a group around pathes 
+ do not write a group around paths 
 .PP
 .TP
 [\fB\-noviewbox\fP]
- don\&'t write a view box 
+ do not write a view box 
 .PP
 .TP
 [\fB\-texmode\fP]
- TeX Mode 
+ TeX mode 
 .PP
 .TP
 [\fB\-imagetofile\fP]
@@ -683,20 +683,20 @@
 [\fB\-title\fP\fI string\fP]
  text to use as title for the generated document 
 .PP
-.SS cgmb1 \- CGM binary Format (V1)
+.SS cgmb1 \- CGM Binary format (V1)
 No driver specific options 
-.SS cgmb \- CGM binary Format (V3)
+.SS cgmb \- CGM Binary format (V3)
 No driver specific options 
-.SS cgmt \- CGM textual Format
+.SS cgmt \- CGM Textual format
 No driver specific options 
 .SS mif \- (Frame)Maker Intermediate Format
 .TP
 [\fB\-nopage\fP]
  do not add a separate Page entry 
 .PP
-.SS rtf \- RTF Format
+.SS rtf \- Rich Text Format
 No driver specific options 
-.SS wemf \- Wogls version of EMF 
+.SS wemf \- Wogl\&'s version of EMF 
 .TP
 [\fB\-df\fP]
  write info about font processing 
@@ -707,15 +707,15 @@
 .PP
 .TP
 [\fB\-size:psbbox\fP]
- use the bounding box as calculated by the PostScript frontent as size 
+ use the bounding box as calculated by the PostScript frontend as size 
 .PP
 .TP
 [\fB\-size:fullpage\fP]
- set the size to the size of a full page 
+ set the size to that of the full page 
 .PP
 .TP
 [\fB\-size:automatic\fP]
- let windows calculate the bounding box (default) 
+ let MS Windows calculate the bounding box (default) 
 .PP
 .TP
 [\fB\-keepimages\fP]
@@ -723,13 +723,13 @@
 .PP
 .TP
 [\fB\-useoldpolydraw\fP]
- do not use Windows PolyDraw but an emulation of it \- sometimes needed for certain programs reading the EMF files 
+ do not use MS Windows\&' PolyDraw but an emulation of it \- sometimes needed for certain programs reading the EMF files 
 .PP
 .TP
 [\fB\-OO\fP]
  generate OpenOffice compatible EMF file 
 .PP
-.SS wemfc \- Wogls version of EMF with experimental clip support
+.SS wemfc \- Wogl\&'s version of EMF with experimental clip support
 .TP
 [\fB\-df\fP]
  write info about font processing 
@@ -740,15 +740,15 @@
 .PP
 .TP
 [\fB\-size:psbbox\fP]
- use the bounding box as calculated by the PostScript frontent as size 
+ use the bounding box as calculated by the PostScript frontend as size 
 .PP
 .TP
 [\fB\-size:fullpage\fP]
- set the size to the size of a full page 
+ set the size to that of the full page 
 .PP
 .TP
 [\fB\-size:automatic\fP]
- let windows calculate the bounding box (default) 
+ let MS Windows calculate the bounding box (default) 
 .PP
 .TP
 [\fB\-keepimages\fP]
@@ -756,13 +756,13 @@
 .PP
 .TP
 [\fB\-useoldpolydraw\fP]
- do not use Windows PolyDraw but an emulation of it \- sometimes needed for certain programs reading the EMF files 
+ do not use MS Windows\&' PolyDraw but an emulation of it \- sometimes needed for certain programs reading the EMF files 
 .PP
 .TP
 [\fB\-OO\fP]
  generate OpenOffice compatible EMF file 
 .PP
-.SS wemfnss \- Wogls version of EMF \- no subpathes 
+.SS wemfnss \- Wogl\&'s version of EMF \- no subpaths
 .TP
 [\fB\-df\fP]
  write info about font processing 
@@ -773,15 +773,15 @@
 .PP
 .TP
 [\fB\-size:psbbox\fP]
- use the bounding box as calculated by the PostScript frontent as size 
+ use the bounding box as calculated by the PostScript frontend as size 
 .PP
 .TP
 [\fB\-size:fullpage\fP]
- set the size to the size of a full page 
+ set the size to that of the full page 
 .PP
 .TP
 [\fB\-size:automatic\fP]
- let windows calculate the bounding box (default) 
+ let MS Windows calculate the bounding box (default) 
 .PP
 .TP
 [\fB\-keepimages\fP]
@@ -789,7 +789,7 @@
 .PP
 .TP
 [\fB\-useoldpolydraw\fP]
- do not use Windows PolyDraw but an emulation of it \- sometimes needed for certain programs reading the EMF files 
+ do not use MS Windows\&' PolyDraw but an emulation of it \- sometimes needed for certain programs reading the EMF files 
 .PP
 .TP
 [\fB\-OO\fP]
@@ -802,7 +802,7 @@
 .PP
 .TP
 [\fB\-pencolorsfromfile\fP]
- read pen colors from file drvhpgl.pencolors in pstoedit data directory 
+ read pen colors from file drvhpgl.pencolors in pstoedit\&'s data directory 
 .PP
 .TP
 [\fB\-pencolors\fP\fI number\fP]
@@ -835,7 +835,7 @@
 .PP
 .TP
 [\fB\-pencolorsfromfile\fP]
- read pen colors from file drvhpgl.pencolors in pstoedit data directory 
+ read pen colors from file drvhpgl.pencolors in pstoedit\&'s data directory 
 .PP
 .TP
 [\fB\-pencolors\fP\fI number\fP]
@@ -1015,20 +1015,20 @@
 .PP
 .SS fig \- .fig format for xfig
 The xfig format driver supports special fontnames, which may be produced by using a fontmap file. The following types of names are supported : 
-.br 
+.br
 .Vb
-General notation: 
-"Postscript Font Name" ((LaTeX|PostScript|empty)(::special)::)XFigFontName
- 
+General notation:
+"PostScript Font Name" ((LaTeX|PostScript|empty)(::special)::)XFigFontName
+
 Examples:
 
 Helvetica LaTeX::SansSerif
 Courier LaTeX::special::Typewriter
 GillSans "AvantGarde Demi"
-Albertus PostScript::special::"New Century Schoolbook Italic" 
-Symbol ::special::Symbol (same as Postscript::special::Symbol)
+Albertus PostScript::special::"New Century Schoolbook Italic"
+Symbol ::special::Symbol (same as PostScript::special::Symbol)
 .Ve
-See also the file examplefigmap.fmp in the misc directory of the pstoedit source distribution for an example font map file for xfig. Please note that the Fontname has to be among those supported by xfig. See \- \fBhttp://www.xfig.org/userman/fig\-format.html\fP
+See also the file examplefigmap.fmp in the misc directory of the pstoedit source distribution for an example font map file for xfig. Please note that the fontname has to be among those supported by xfig. See \- \fBhttp://www.xfig.org/userman/fig\-format.html\fP
 for a list of legal font names 
 .PP
 .TP
@@ -1041,7 +1041,7 @@
 .PP
 .TP
 [\fB\-usecorrectfontsize\fP]
- don\&'t scale fonts for xfig. Use this if you also use this option with xfig 
+ do not scale fonts for xfig. Use this if you also use this option with xfig 
 .PP
 .TP
 [\fB\-depth\fP\fI number\fP]
@@ -1060,7 +1060,7 @@
 .PP
 .TP
 [\fB\-usecorrectfontsize\fP]
- don\&'t scale fonts for xfig. Use this if you also use this option with xfig 
+ do not scale fonts for xfig. Use this if you also use this option with xfig 
 .PP
 .TP
 [\fB\-depth\fP\fI number\fP]
@@ -1079,7 +1079,7 @@
 .PP
 .TP
 [\fB\-usecorrectfontsize\fP]
- don\&'t scale fonts for xfig. Use this if you also use this option with xfig 
+ do not scale fonts for xfig. Use this if you also use this option with xfig 
 .PP
 .TP
 [\fB\-depth\fP\fI number\fP]
@@ -1114,14 +1114,14 @@
 [\fB\-integers\fP]
  round all coordinates to the nearest integer 
 .PP
-.SS lwo \- LightWave 3D Object Format
+.SS lwo \- LightWave 3D object format
 No driver specific options 
-.SS mma \- Mathematica Graphics
+.SS mma \- Mathematica graphics
 .TP
 [\fB\-eofillfills\fP]
  Filling is used for eofill (default is not to fill) 
 .PP
-.SS mpost \- MetaPost Format
+.SS mpost \- MetaPost format
 No driver specific options 
 .SS noixml \- Nemetschek NOI XML format
 Nemetschek Object Interface XML format 
@@ -1165,7 +1165,7 @@
 .PP
 .TP
 [\fB\-mm\fP]
- Switch to metric units (mm) 
+ switch to metric units (mm) 
 .PP
 .TP
 [\fB\-stdnames\fP]
@@ -1198,16 +1198,16 @@
 .PP
 .SS rib \- RenderMan Interface Bytestream
 No driver specific options 
-.SS rpl \- Real3D Programming Language Format
+.SS rpl \- Real3D Programming Language format
 No driver specific options 
-.SS sample \- sample driver: if you don\&'t want to see this, uncomment the corresponding line in makefile and make again
+.SS sample \- sample driver: if you do not want to see this, uncomment the corresponding line in makefile and make again
 this is a long description for the sample driver 
 .PP
 .TP
 [\fB\-sampleoption\fP\fI integer\fP]
  just an example 
 .PP
-.SS sk \- Sketch Format
+.SS sk \- Sketch format
 No driver specific options 
 .SS svm \- StarView/OpenOffice.org metafile
 StarView/OpenOffice.org metafile, readable from OpenOffice.org 1.0/StarOffice 6.0 and above. 
@@ -1251,14 +1251,14 @@
 [\fB\-n\fP\fI string\fP]
  tagnames 
 .PP
-.SS vtk \- VTK driver: if you don\&'t want to see this, uncomment the corresponding line in makefile and make again
+.SS vtk \- VTK driver: if you do not want to see this, uncomment the corresponding line in makefile and make again
 this is a long description for the VTKe driver 
 .PP
 .TP
 [\fB\-VTKeoption\fP\fI integer\fP]
  just an example 
 .PP
-.SS wmf \- Windows metafile
+.SS wmf \- MS Windows metafile
 .TP
 [\fB\-m\fP]
  map to Arial 
@@ -1277,17 +1277,17 @@
 .PP
 .TP
 [\fB\-nfw\fP]
- Newer versions of Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains Text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the \-pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the \-nfw options provides a sort of compromise between portability and nice to edit but still nice looking text. Again \- this option has no meaning when pstoedit is executed under Windows anyway. In that case the output is portable but nevertheless not split and still looks fine. 
+ Newer versions of MS Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under MS Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the \-pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the \-nfw option provides a sort of compromise between portability and nice to edit but still nice looking text. Again \- this option has no meaning when pstoedit is executed under MS Windows anyway. In that case the output is portable but nevertheless not split and still looks fine. 
 .PP
 .TP
 [\fB\-winbb\fP]
- let the Windows API calculate the Bounding Box (Windows only) 
+ let the MS Windows API calculate the Bounding Box (Windows only) 
 .PP
 .TP
 [\fB\-OO\fP]
  generate OpenOffice compatible EMF file 
 .PP
-.SS emf \- Enhanced Windows metafile
+.SS emf \- Enhanced MS Windows Metafile
 .TP
 [\fB\-m\fP]
  map to Arial 
@@ -1306,11 +1306,11 @@
 .PP
 .TP
 [\fB\-nfw\fP]
- Newer versions of Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains Text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the \-pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the \-nfw options provides a sort of compromise between portability and nice to edit but still nice looking text. Again \- this option has no meaning when pstoedit is executed under Windows anyway. In that case the output is portable but nevertheless not split and still looks fine. 
+ Newer versions of MS Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under MS Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the \-pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the \-nfw option provides a sort of compromise between portability and nice to edit but still nice looking text. Again \- this option has no meaning when pstoedit is executed under MS Windows anyway. In that case the output is portable but nevertheless not split and still looks fine. 
 .PP
 .TP
 [\fB\-winbb\fP]
- let the Windows API calculate the Bounding Box (Windows only) 
+ let the MS Windows API calculate the Bounding Box (Windows only) 
 .PP
 .TP
 [\fB\-OO\fP]
@@ -1330,11 +1330,11 @@
 .SS PS2AI
 .PP
 The ps2ai output format driver is not a native pstoedit output format driver. It does not use the 
-pstoedit postcript flattener, instead it uses the PostScript program 
-ps2ai.ps which is installed in the GhostScript distribution directory. It 
+pstoedit PostScript flattener, instead it uses the PostScript program 
+ps2ai.ps which is installed in the Ghostscript distribution directory. It 
 is included to provide the same "look\-and\-feel" for the conversion to AI. 
 The additional benefit is that this conversion is now available also via 
-the "convert\-to\-vector" menu of Gsview. However, lot\&'s of files don\&'t 
+the "convert\-to\-vector" menu of Gsview. However, lot\&'s of files do not 
 convert nicely or at all using ps2ai.ps. So a native pstoedit driver would 
 be much better. Anyone out there to take this? The AI format is usable for 
 example by Mayura Draw (\fBhttp://www.mayura.com\fP).
@@ -1343,42 +1343,43 @@
 .PP
 An alternative to the ps2ai based driver is available via the \-f plot:ai format if the libplot(ter) is installed. 
 .PP
-You should use a version of GhostScript greater than or equal to 6.00 for using the ps2ai output format driver. 
+You should use a version of Ghostscript greater than or equal to 6.00 for using the ps2ai output format driver. 
 .PP
 .SS METAPOST
 .PP
 Note that, as far as Scott knows, MetaPost does not support PostScript\&'s 
-eofill. The metapost output format driver just converts eofill to fill, and issues a warning if 
+eofill. The MetaPost output format driver just converts eofill to fill, and issues a warning if 
 verbose is set. Fortunately, very few PostScript programs rely on the 
 even\-odd fill rule, even though many specify it. 
 .PP
 For more on MetaPost see: 
 .PP
-\fBhttp://cm.bell\-labs.com/who/hobby/MetaPost.html\fP
+\fBhttp://tug.org/metapost\fP
 .PP
 .SS CONTEXT FREE \- CFDG
 The driver for the CFDG format (drvcfdg) defines 
 one shape per page of PostScript, but only the first shape is actually 
 rendered (unless the user edits the generated CFDG code, of course). 
-CFDG doesn\&'t support multi\-page output, so this probably a reasonable thing to do. 
+CFDG does not support multi\-page output, so this probably is a reasonable thing to do. 
 .PP
 For more on Context Free see: 
 \fBhttp://www.contextfreeart.org/\fP
 .PP
-.SS LATEX2E
+.SS LaTeX2E
 .PP
 .TP
 .B *
 LaTeX2e\&'s picture environment is not very powerful. As a result, many 
 elementary PostScript constructs are ignored \-\- fills, line 
 thicknesses (besides "thick" and "thin"), and dash patterns, to name a 
-few. Furthermore, complex pictures may overrun TeX\&'s memory capacity. 
+few. Furthermore, complex pictures may overrun TeX\&'s{}memory capacity. 
+(The eepic package overcomes many such restrictions.) 
 .PP
 .TP
 .B *
 Some PostScript constructs are not supported directly by "picture", 
 but can be handled by external packages. If a figure uses color, the 
-top\-level document will need to do a "\\usepackage{color}"\&. And if a 
+top\-level document will need to do a "\\usepackage{color}" or "\\usepackage{xcolor}"\&. And if a 
 figure contains rotated text, the top\-level document will need to do a 
 "\\usepackage{rotating}"\&. 
 .PP
@@ -1398,12 +1399,12 @@
 .TP
 .B *
 Why is this output format driver useful? One answer is portability; any LaTeX2e 
-system can handle the picture environment, even if it can\&'t handle 
+system can handle the picture environment, even if it cannot handle 
 PostScript graphics. (pdfLaTeX comes to mind here.) A second answer 
-is that pictures can be edited easily to contain any arbitrary LaTeX2e 
+is that pictures can be edited easily to contain any arbitrary LaTeX2e
 code. For instance, the text in a figure can be modified to contain 
 complex mathematics, non\-Latin alphabets, bibliographic citations, or 
-\-\- the real reason Scott wrote the LaTeX2e output format driver \-\- hyperlinks to the 
+\-\- the real reason Scott wrote the LaTeX2e{}output format driver \-\- hyperlinks to the 
 surrounding document (with help from the hyperref package). 
 .PP
 .SS CREATING A NEW OUTPUT FORMAT DRIVER
@@ -1428,8 +1429,8 @@
 pstoedit using: \fBpstoedit\fP
 \fB\-help \-v\fP\&.
 .PP
-See the GhostScript manual for descriptions of environment variables used by 
-Ghostscript most importantly GS_FONTPATH and GS_LIB; other 
+See the Ghostscript manual for descriptions of environment variables used by 
+Ghostscript, most importantly GS_FONTPATH and GS_LIB; other 
 environment variables also affect output to display, print, and additional 
 filtering and processing. See the related documentation. 
 .PP
@@ -1454,7 +1455,7 @@
 \fItestfile.ps\fP
 and check whether \fItestfile.ps\fP
 still displays correctly using 
-Ghostscript. If this file doesn\&'t look correctly then there seems to be a 
+Ghostscript. If this file does not look correctly then there seems to be a 
 problem with pstoedit\&'s
 PostScript frontend. If this file looks good 
 but the output for a specific format is wrong, the problem is probably in 
@@ -1488,12 +1489,12 @@
 .PP
 .TP
 .B *
-Non\-standard fonts (e.g. TeXbitmap fonts) are mapped to a default font which 
+Non\-standard fonts (e.g. TeX bitmap fonts) are mapped to a default font which 
 can be changed using the \fB\-df\fP
 option. pstoedit
 chooses the size of 
 the replacement font such that the width of the string in the original font is 
-the same as in the replacement font. This is done for each text fragment 
+the same as with the replacement font. This is done for each text fragment 
 displayed. Special character encoding support is limited in this case. If a 
 character cannot be mapped into the target format, pstoedit displays a \&'#\&' 
 instead. See also the \-uchar option. 
@@ -1510,7 +1511,7 @@
 .B *
 For most output format drivers pstoedit does not support clipping (mainly due to limitations in the target format). You can try to use the 
 \fB\-sclip\fP
-option to simulate clipping. However, this doesn\&'t work in all cases 
+option to simulate clipping. However, this does not work in all cases 
 as expected. 
 .PP
 .TP
@@ -1534,12 +1535,12 @@
 using the \fB\-dt\fP
 option? 
 .PP
-This is because most output format drivers don\&'t support composite paths with 
-intermediate gaps (moveto\&'s) and second don\&'t support very well the (eo)fill 
+This is because most output format drivers do not support composite paths with 
+intermediate gaps (moveto\&'s) and second do not support very well the (eo)fill 
 operators of PostScript (winding rule). For such objects pstoedit
 breaks 
 them into smaller objects whenever such a gap is found. This results in the 
-"hole" beeing filled with black color instead of beeing transparent. Since 
+"hole" being filled with black color instead of beeing transparent. Since 
 version 3.11 you can try the \fB\-ssp\fP
 option in combination with the xfig 
 output format driver. 
@@ -1553,7 +1554,7 @@
 font in other format. So pstoedit replaces the TeX font with another native 
 font. Of course, the replacement font will in most cases produce another 
 look, especially if mathematical symbols are used. 
-Try to use PostScript fonts instead of the bitmap fonts when generating a PostScript file from TeX or LaTeX. 
+Try to use PostScript fonts instead of the bitmap fonts when generating a PostScript file from TeX or LaTeX\&.
 .PP
 .SH AUTHOR
 
@@ -1699,11 +1700,11 @@
 .PP
 .TP
 .B *
-Scott Pakin, \fBscott+ps2ed_AT_pakin.org\fP provided the MetaPost and LaTeX2e and PowerPoint output format driver.
+Scott Pakin, \fBscott+ps2ed_AT_pakin.org\fP provided the MetaPost and LaTeX2e and MS PowerPoint output format driver.
 .PP
 .TP
 .B *
-The PowerPoint driver uses the libzip library \- \fBhttp://www.nih.at/libzip\fP\&. Under Windows, this library is linked into the provided binary statically. Thanks to the whole libzip team.
+The MS PowerPoint driver uses the libzip library \- \fBhttp://www.nih.at/libzip\fP\&. Under MS Windows, this library is linked into the provided binary statically. Thanks to the whole libzip team.
 .PP
 .TP
 .B *
@@ -1724,7 +1725,7 @@
 .PP
 .TP
 .B *
-Several others sent smaller bug fixed and bug reports. Sorry if I don\&'t 
+Several others sent smaller bug fixed and bug reports. Sorry if I do not 
 mention them all here. 
 .PP
 .TP
@@ -1760,7 +1761,7 @@
 But most important: Peter Deutsch \fBghost_AT_aladdin.com\fP and Russell
 Lang \fBgsview_AT_ghostgum.com.au\fP
 for their help and answers regarding 
-GhostScript and gsview. 
+Ghostscript and gsview. 
 .PP
 .SH LEGAL NOTICES
 
--- pstoedit-3.62-orig/doc/pstoedit.htm	2013-04-28 20:18:06.000000000 +0200
+++ pstoedit-3.62/doc/pstoedit.htm	2013-06-27 11:50:33.000000000 +0200
@@ -1,10 +1,10 @@
 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
-<!-- Manual page created with latex2man on Sun Apr 28 20:18:06 CEST 2013 --
--- Author of latex2man: Juergen.Vollmer@informatik-vollmer.de --
--- NOTE: This file is generated, DO NOT EDIT. -->
+<!-- Manual page created with latex2man on Thu Jun 27 11:50:33 CEST 2013
+** Author of latex2man: Juergen.Vollmer@informatik-vollmer.de
+** NOTE: This file is generated, DO NOT EDIT. -->
 <html>
-<head><title>PSTOEDIT</title></head>
-<body bgcolor="white">
+<head><title>PSTOEDIT</title>
+</head><body bgcolor="white">
 <h1 align=center>
 PSTOEDIT 
 </h1>
@@ -43,8 +43,8 @@
 <li><a href="#section_18">ps - Simplified PostScript with curves </a></li>
 <li><a href="#section_19">debug - for test purposes </a></li>
 <li><a href="#section_20">dump - for test purposes (same as debug) </a></li>
-<li><a href="#section_21">gs - any device that GhostScript provides - use gs:format, e.g. gs:pdfwrite </a></li>
-<li><a href="#section_22">ps2ai - Adobe Illustrator via ps2ai.ps of GhostScript </a></li>
+<li><a href="#section_21">gs - any device that Ghostscript provides - use gs:format, e.g. gs:pdfwrite </a></li>
+<li><a href="#section_22">ps2ai - Adobe Illustrator via ps2ai.ps of Ghostscript </a></li>
 <li><a href="#section_23">gmfa - ASCII GNU metafile  </a></li>
 <li><a href="#section_24">gmfb - binary GNU metafile  </a></li>
 <li><a href="#section_25">plot - GNU libplot output types, e.g. plot:-plotformat X </a></li>
@@ -58,16 +58,16 @@
 <li><a href="#section_33">plot-tek - tek  via GNU libplot </a></li>
 <li><a href="#section_34">magick - MAGICK driver </a></li>
 <li><a href="#section_35">swf - SWF driver:  </a></li>
-<li><a href="#section_36">svg - scalable vector graphics </a></li>
+<li><a href="#section_36">svg - Scalable Vector Graphics </a></li>
 <li><a href="#section_37">xaml - eXtensible Application Markup Language </a></li>
-<li><a href="#section_38">cgmb1 - CGM binary Format (V1) </a></li>
-<li><a href="#section_39">cgmb - CGM binary Format (V3) </a></li>
-<li><a href="#section_40">cgmt - CGM textual Format </a></li>
+<li><a href="#section_38">cgmb1 - CGM Binary format (V1) </a></li>
+<li><a href="#section_39">cgmb - CGM Binary format (V3) </a></li>
+<li><a href="#section_40">cgmt - CGM Textual format </a></li>
 <li><a href="#section_41">mif - (Frame)Maker Intermediate Format </a></li>
-<li><a href="#section_42">rtf - RTF Format </a></li>
-<li><a href="#section_43">wemf - Wogls version of EMF  </a></li>
-<li><a href="#section_44">wemfc - Wogls version of EMF with experimental clip support </a></li>
-<li><a href="#section_45">wemfnss - Wogls version of EMF - no subpathes  </a></li>
+<li><a href="#section_42">rtf - Rich Text Format </a></li>
+<li><a href="#section_43">wemf - Wogl's version of EMF  </a></li>
+<li><a href="#section_44">wemfc - Wogl's version of EMF with experimental clip support </a></li>
+<li><a href="#section_45">wemfnss - Wogl's version of EMF - no subpaths </a></li>
 <li><a href="#section_46">hpgl - HPGL code </a></li>
 <li><a href="#section_47">pcl - PCL code </a></li>
 <li><a href="#section_48">pic - PIC format for troff et.al. </a></li>
@@ -86,10 +86,10 @@
 <li><a href="#section_61">java1 - java 1 applet source code </a></li>
 <li><a href="#section_62">java2 - java 2 source code </a></li>
 <li><a href="#section_63">kil - .kil format for Kontour </a></li>
-<li><a href="#section_64">latex2e - LaTeX2e picture format </a></li>
-<li><a href="#section_65">lwo - LightWave 3D Object Format </a></li>
-<li><a href="#section_66">mma - Mathematica Graphics </a></li>
-<li><a href="#section_67">mpost - MetaPost Format </a></li>
+<li><a href="#section_64">latex2e - LaTeX2e picture format</a></li>
+<li><a href="#section_65">lwo - LightWave 3D object format </a></li>
+<li><a href="#section_66">mma - Mathematica graphics </a></li>
+<li><a href="#section_67">mpost - MetaPost format </a></li>
 <li><a href="#section_68">noixml - Nemetschek NOI XML format </a></li>
 <li><a href="#section_69">pcbi - engrave data - insulate/PCB format </a></li>
 <li><a href="#section_70">pcb - pcb format </a></li>
@@ -97,16 +97,16 @@
 <li><a href="#section_72">pdf - Adobe's Portable Document Format </a></li>
 <li><a href="#section_73">pptx - PresentationML (PowerPoint) format </a></li>
 <li><a href="#section_74">rib - RenderMan Interface Bytestream </a></li>
-<li><a href="#section_75">rpl - Real3D Programming Language Format </a></li>
-<li><a href="#section_76">sample - sample driver: if you don't want to see this, uncomment the corresponding line in makefile and make again </a></li>
-<li><a href="#section_77">sk - Sketch Format </a></li>
+<li><a href="#section_75">rpl - Real3D Programming Language format </a></li>
+<li><a href="#section_76">sample - sample driver: if you do not want to see this, uncomment the corresponding line in makefile and make again </a></li>
+<li><a href="#section_77">sk - Sketch format </a></li>
 <li><a href="#section_78">svm - StarView/OpenOffice.org metafile </a></li>
 <li><a href="#section_79">text - text in different forms  </a></li>
 <li><a href="#section_80">tgif - Tgif .obj format </a></li>
 <li><a href="#section_81">tk - tk and/or tk applet source code </a></li>
-<li><a href="#section_82">vtk - VTK driver: if you don't want to see this, uncomment the corresponding line in makefile and make again </a></li>
-<li><a href="#section_83">wmf - Windows metafile </a></li>
-<li><a href="#section_84">emf - Enhanced Windows metafile </a></li>
+<li><a href="#section_82">vtk - VTK driver: if you do not want to see this, uncomment the corresponding line in makefile and make again </a></li>
+<li><a href="#section_83">wmf - MS Windows metafile </a></li>
+<li><a href="#section_84">emf - Enhanced MS Windows Metafile </a></li>
 </ul>
 </li>
 </ul>
@@ -116,7 +116,7 @@
 <li><a href="#section_87">Ps2ai </a></li>
 <li><a href="#section_88">MetaPost </a></li>
 <li><a href="#section_89">Context Free - CFDG </a></li>
-<li><a href="#section_90">LaTeX2e </a></li>
+<li><a href="#section_90">LaTeX2e</a></li>
 <li><a href="#section_91">Creating a new output format driver </a></li>
 </ul>
 <li><a href="#section_92">ENVIRONMENT VARIABLES </a></li>
@@ -137,14 +137,14 @@
 <p>
 <tt>pstoedit</tt>
 [<b>-v -help</b>]
-<br> 
+<br>
 <p>
 <tt>pstoedit</tt>
-[<b>-include</b><i>&nbsp;name of a PostScript file to be included</i>]
-[<b>-df</b><i>&nbsp;font name</i>]
+[<font class="optstyle">-include</font><font class="argstyle">&nbsp;name of a PostScript file to be included</font>]
+[<font class="optstyle">-df</font><font class="argstyle">&nbsp;font name</font>]
 [<b>-nomaptoisolatin1</b>]
 [<b>-dis</b>]
-[<b>-pngimage</b><i>&nbsp;filename - for debugging purpose mainly. Write result of processing also to a PNG file.</i>]
+[<font class="optstyle">-pngimage</font><font class="argstyle">&nbsp;filename - for debugging purpose mainly. Write result of processing also to a PNG file.</font>]
 [<b>-q</b>]
 [<b>-nq</b>]
 [<b>-nc</b>]
@@ -159,21 +159,21 @@
 [<b>-correctdefinefont</b>]
 [<b>-pti</b>]
 [<b>-pta</b>]
-[<b>-xscale</b><i>&nbsp;number</i>]
-[<b>-yscale</b><i>&nbsp;number</i>]
-[<b>-xshift</b><i>&nbsp;number</i>]
-[<b>-yshift</b><i>&nbsp;number</i>]
+[<font class="optstyle">-xscale</font><font class="argstyle">&nbsp;number</font>]
+[<font class="optstyle">-yscale</font><font class="argstyle">&nbsp;number</font>]
+[<font class="optstyle">-xshift</font><font class="argstyle">&nbsp;number</font>]
+[<font class="optstyle">-yshift</font><font class="argstyle">&nbsp;number</font>]
 [<b>-centered</b>]
-[<b>-minlinewidth</b><i>&nbsp;number</i>]
-[<b>-pagenumberformat</b><i>&nbsp;page number format specification</i>]
+[<font class="optstyle">-minlinewidth</font><font class="argstyle">&nbsp;number</font>]
+[<font class="optstyle">-pagenumberformat</font><font class="argstyle">&nbsp;page number format specification</font>]
 [<b>-split</b>]
 [<b>-v</b>]
 [<b>-usebbfrominput</b>]
 [<b>-ssp</b>]
-[<b>-uchar</b><i>&nbsp;character</i>]
+[<font class="optstyle">-uchar</font><font class="argstyle">&nbsp;character</font>]
 [<b>-nb</b>]
-[<b>-page</b><i>&nbsp;page number</i>]
-[<b>-flat</b><i>&nbsp;flatness factor</i>]
+[<font class="optstyle">-page</font><font class="argstyle">&nbsp;page number</font>]
+[<font class="optstyle">-flat</font><font class="argstyle">&nbsp;flatness factor</font>]
 [<b>-sclip</b>]
 [<b>-ups</b>]
 [<b>-rgb</b>]
@@ -186,16 +186,16 @@
 [<b>-nfr</b>]
 [<b>-glyphs</b>]
 [<b>-useoldnormalization</b>]
-[<b>-rotate</b><i>&nbsp;angle (0-360)</i>]
-[<b>-fontmap</b><i>&nbsp;name of font map file for pstoedit</i>]
-[<b>-pagesize</b><i>&nbsp;page format</i>]
+[<font class="optstyle">-rotate</font><font class="argstyle">&nbsp;angle (0-360)</font>]
+[<font class="optstyle">-fontmap</font><font class="argstyle">&nbsp;name of font map file for pstoedit</font>]
+[<font class="optstyle">-pagesize</font><font class="argstyle">&nbsp;page format</font>]
 [<b>-help</b>]
-[<b>-gs</b><i>&nbsp;path to the ghostscript executable/DLL </i>]
+[<font class="optstyle">-gs</font><font class="argstyle">&nbsp;path to the Ghostscript executable/DLL </font>]
 [<b>-bo</b>]
-[<b>-psarg</b><i>&nbsp;argument string</i>]
-[<b>-pslanguagelevel</b><i>&nbsp;PostScript Language Level to be used 1,2, or 3</i>]
-<b>-f</b><i>&nbsp;"format[:options]"</i>
-[<b>-gsregbase</b><i>&nbsp;GhostScript base registry path</i>]
+[<font class="optstyle">-pslanguagelevel</font><font class="argstyle">&nbsp;PostScript Language Level to be used 1, 2, or 3</font>]
+[<font class="optstyle">-psarg</font><font class="argstyle">&nbsp;argument string</font>]
+<font class="optstyle">-f</font><font class="argstyle">&nbsp;"format[:options]"</font>
+[<font class="optstyle">-gsregbase</font><font class="argstyle">&nbsp;Ghostscript base registry path</font>]
 [ inputfile [outputfile] ] 
 <p>
 <h4><a name="section_3">From Gsview</a></h4>
@@ -209,7 +209,7 @@
 <p>
 <tt>pstoedit</tt>
 can also be used as PostScript and PDF graphic import filter for several programs including 
-MS-Office, PaintShop-Pro and PhotoLine. See 
+MS Office, PaintShop-Pro and PhotoLine. See 
 <a href ="http://www.pstoedit.net/importps/"><tt>http://www.pstoedit.net/importps/</tt></a>
 for more 
 details. 
@@ -246,17 +246,17 @@
 
 <p>
 <tt>pstoedit</tt>
-works by redefining the some basic painting operators of 
+works by redefining some basic painting operators of 
 PostScript, e.g. <strong>stroke</strong>
 or <strong>show</strong>
 (bitmaps drawn by the image 
 operator are not supported by all output formats.) After 
 redefining these operators, the PostScript or PDF file that needs to be 
 converted is processed by a PostScript interpreter, e.g., Ghostscript 
-(<em>gs</em>(1)).
+(<font class="commandname">gs</font>(1)).
 You normally need to have a PostScript interpreter installed in 
 order to use this program. However, you can perform some "back end only" processing 
-of files following the conventions of the pstoedit intermediate formate by specifying the <b>-bo</b>
+of files following the conventions of the pstoedit intermediate format by specifying the <b>-bo</b>
 option. See "Available formats and their specific options" below. 
 <p>
 The output that is written by the interpreter due to the redefinition of the 
@@ -282,31 +282,31 @@
 <h4><a name="section_11">General options</a></h4>
 
 <dl compact>
-<dt>[<b>-include</b><i>&nbsp;name of a PostScript file to be included</i>]
+<dt>[<font class="optstyle">-include</font><font class="argstyle">&nbsp;name of a PostScript file to be included</font>]
 </dt>
 <dd> 
-This options allows to specify an additional PostScript file that will be executed just before the normal input is read. This is helpful for including specific page settings or for disabling potentially unsafe PostScript operators, e.g., file, renamefile, or deletefile. 
+This option allows to specify an additional PostScript file that will be executed just before the normal input is read. This is helpful for including specific page settings or for disabling potentially unsafe PostScript operators, e.g., file, renamefile, or deletefile. 
 <p>
 </dd>
-<dt>[<b>-xscale</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-xscale</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 scale by a factor in x-direction 
 <p>
 </dd>
-<dt>[<b>-yscale</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-yscale</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 scale by a factor in y-direction 
 <p>
 </dd>
-<dt>[<b>-xshift</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-xshift</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 shift image in x-direction 
 <p>
 </dd>
-<dt>[<b>-yshift</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-yshift</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 shift image in y-direction 
@@ -318,22 +318,22 @@
 center image before scaling or shifting 
 <p>
 </dd>
-<dt>[<b>-minlinewidth</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-minlinewidth</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 minimal line width. All lines thinner than this will be drawn in this line width - especially zero-width lines 
 <p>
 </dd>
-<dt>[<b>-pagenumberformat</b><i>&nbsp;page number format specification</i>]
+<dt>[<font class="optstyle">-pagenumberformat</font><font class="argstyle">&nbsp;page number format specification</font>]
 </dt>
 <dd> 
-format specification for page numbers in file name if -split is used. The specification is used to create the page number using sprintf.The specification shall not include the leading 
+format specification for page numbers in file name if -split is used. The specification is used to create the page number using sprintf. The specification shall not include the leading % nor the trailing d. Default is empty string which results in formatting the page number using %d. This results in page numbers like 1, 2, ..., 10. Sometimes you may want to have fixed length with leading 0, so you might want to specify 02 which means 2 digits with leading 0. 
 <p>
 </dd>
 <dt>[<b>-split</b>]
 </dt>
 <dd> 
-Create a new file for each page of the input. For this the output filename must contain a %d which is replaced with the current page number. This option is automatically switched on for output formats that don't support multiple pages within one file, e.g. fig or gnuplot. 
+Create a new file for each page of the input. For this the output filename must contain a %d which is replaced with the current page number. This option is automatically switched on for output formats that do not support multiple pages within one file, e.g. fig or gnuplot. 
 <p>
 </dd>
 <dt>[<b>-usebbfrominput</b>]
@@ -342,10 +342,10 @@
 If specified, pstoedit uses the BoundingBox as is (hopefully) found in the input file instead of one that is calculated by its own. 
 <p>
 </dd>
-<dt>[<b>-page</b><i>&nbsp;page number</i>]
+<dt>[<font class="optstyle">-page</font><font class="argstyle">&nbsp;page number</font>]
 </dt>
 <dd> 
-Select a single page from a multi page PostScript or PDF file. 
+Select a single page from a multi-page PostScript or PDF file. 
 <p>
 </dd>
 <dt>[<b>-rgb</b>]
@@ -357,22 +357,22 @@
 <dt>[<b>-useagl</b>]
 </dt>
 <dd> 
-use Adobe Glyph List instead of the IsoLatin1 table (this is experimental) 
+use Adobe Glyph List instead of the ISO Latin-1 table (this is experimental) 
 <p>
 </dd>
 <dt>[<b>-noclip</b>]
 </dt>
 <dd> 
-don't use clipping (relevant only if output format supports clipping at all) 
+do not use clipping (relevant only if output format supports clipping at all) 
 <p>
 </dd>
-<dt>[<b>-rotate</b><i>&nbsp;angle (0-360)</i>]
+<dt>[<font class="optstyle">-rotate</font><font class="argstyle">&nbsp;angle (0-360)</font>]
 </dt>
 <dd> 
-Rotage image by angle. 
+Rotate image by angle. 
 <p>
 </dd>
-<dt>[<b>-pagesize</b><i>&nbsp;page format</i>]
+<dt>[<font class="optstyle">-pagesize</font><font class="argstyle">&nbsp;page format</font>]
 </dt>
 <dd> 
 set page size for output medium. 
@@ -385,10 +385,10 @@
 show the help information 
 <p>
 </dd>
-<dt>[<b>-gs</b><i>&nbsp;path to the ghostscript executable/DLL </i>]
+<dt>[<font class="optstyle">-gs</font><font class="argstyle">&nbsp;path to the Ghostscript executable/DLL </font>]
 </dt>
 <dd> 
-tells pstoedit which ghostscript executable/DLL to use - overwrites the internal search heuristic 
+tells pstoedit which Ghostscript executable/DLL to use - overwrites the internal search heuristic 
 <p>
 </dd>
 <dt>[<b>-bo</b>]
@@ -399,32 +399,32 @@
 <i>infile</i>
 <i>dumpfile</i>
 and then running <strong>pstoedit</strong>
-<b>-f</b><i>&nbsp;format</i>
+<font class="optstyle">-f</font><font class="argstyle">&nbsp;format</font>
 <b>-bo</b>
 <i>dumpfile</i>
 <i>outfile</i>.
 <p>
 </dd>
-<dt>[<b>-psarg</b><i>&nbsp;argument string</i>]
+<dt>[<font class="optstyle">-psarg</font><font class="argstyle">&nbsp;argument string</font>]
 </dt>
 <dd> 
 The string given with this option is passed directly to Ghostscript when Ghostscript is called to process the PostScript file for <tt>pstoedit</tt>.
 For example: <strong>-psarg</strong><strong>&nbsp;"</strong><strong>-r300x300</strong><strong>"</strong>.
-This causes the resolution to be changed to 300x300 dpi. (With older versions of GhostScript, changing the resolution this way has an effect only if the <b>-dis</b>
+This causes the resolution to be changed to 300x300 dpi. (With older versions of Ghostscript, changing the resolution this way has an effect only if the <b>-dis</b>
 option is given.) If you want to pass multiple options to Ghostscript you can use multiple -psarg options <b>-psarg opt1</b>
 <b>-psarg opt2</b>
 <b>-psarg opt2</b>.
-See the GhostScript manual for other possible options. 
+See the Ghostscript manual for other possible options. 
 <p>
 </dd>
-<dt>[<b>-pslanguagelevel</b><i>&nbsp;PostScript Language Level to be used 1,2, or 3</i>]
+<dt>[<font class="optstyle">-pslanguagelevel</font><font class="argstyle">&nbsp;PostScript Language Level 1, 2, or 3 to be used</font>]
 </dt>
 <dd> 
-PostScript Language Level to be used 1,2, or 3 You can switch Ghostscript into PostScript Level 1 only mode by <b>-pslanguagelevel 1</b>.
+PostScript Language Level 1, 2, or 3 to be used. You can switch Ghostscript into PostScript Level 1 only mode by <b>-pslanguagelevel 1</b>.
 This can be useful for example if the PostScript file to be converted uses some Level 2 specific custom color models that are not supported by pstoedit. However, this requires that the PostScript program checks for the PostScript level supported by the interpreter and "acts" accordingly. The default language level is 3. 
 <p>
 </dd>
-<dt><b>-f</b><i>&nbsp;"format[:options]"</i>
+<dt><font class="optstyle">-f</font><font class="argstyle">&nbsp;"format[:options]"</font>
 </dt>
 <dd> 
 target output format recognized by <tt>pstoedit</tt>.
@@ -435,21 +435,21 @@
 option. 
 <p>
 </dd>
-<dt>[<b>-gsregbase</b><i>&nbsp;GhostScript base registry path</i>]
+<dt>[<font class="optstyle">-gsregbase</font><font class="argstyle">&nbsp;Ghostscript base registry path</font>]
 </dt>
 <dd> 
-registry path to use as a base path when searching GhostScript interpreter 
-This option provides means to specify a registry key under HKLM/Software where to search for GS interpreter key, version and <tt>GS_DLL / GS_LIB</tt> values. Example: "-gsregbase MyCompany" means that HKLM/Software/MyCompany/GPL GhostScript would be searched instead of HKLM/Software/GPL GhostScript. 
+registry path to use as a base path when searching Ghostscript interpreter. 
+This option provides means to specify a registry key under HKLM/Software where to search for GS interpreter key, version and <tt>GS_DLL / GS_LIB</tt> values. Example: "-gsregbase MyCompany" means that HKLM/Software/MyCompany/GPL Ghostscript would be searched instead of HKLM/Software/GPL Ghostscript. 
 <p>
 </dd>
 </dl>
 <h4><a name="section_12">Text and font handling related options</a></h4>
 
 <dl compact>
-<dt>[<b>-df</b><i>&nbsp;font name</i>]
+<dt>[<font class="optstyle">-df</font><font class="argstyle">&nbsp;font name</font>]
 </dt>
 <dd> 
-Sometimes fonts embedded in a PostScript program do not have a fontname. For example, this happens in PostScript files generated by <em>dvips</em>(1).
+Sometimes fonts embedded in a PostScript program do not have a fontname. For example, this happens in PostScript files generated by <font class="commandname">dvips</font>(1).
 In such a case <tt>pstoedit</tt>
 uses a replacement font. The default for this is Courier. Another font can be specified using the <b>-df</b>
 option. <b>-df Helvetica</b>
@@ -460,33 +460,32 @@
 </dt>
 <dd> 
 Normally <tt>pstoedit</tt>
-maps all character codes to the ones defined by the ISO-Latin1 encoding. If you specify <b>-nomaptoisolatin1</b>
+maps all character codes to the ones defined by the ISO Latin1 encoding. If you specify <b>-nomaptoisolatin1</b>
 then the encoding from the input PostScript is passed unchanged to the output. This may result in strange text output but on the other hand may be the only way to get some fonts converted appropriately. Try what fits best to your concrete case. 
 <p>
 </dd>
-<dt>[<b>-pngimage</b><i>&nbsp;filename - for debugging purpose mainly. Write result of processing also to a PNG file.</i>]
+<dt>[<font class="optstyle">-pngimage</font><font class="argstyle">&nbsp;filename</font>]
 </dt>
-<dd> 
-for debugging purpose mainly. Write result of processing also to a PNG file 
+<dd> - for debugging purpose mainly. Write result of processing also to a PNG file. 
 <p>
 </dd>
 <dt>[<b>-dt</b>]
 </dt>
 <dd> 
-Draw text - Text is drawn as polygons. This might produce a large output file. This option is automatically switched on if the selected output format does not support text, e.g. <em>gnuplot</em>(1).
+draw text. Text is drawn as polygons. This might produce a large output file. This option is automatically switched on if the selected output format does not support text, e.g. <font class="commandname">gnuplot</font>(1).
 <p>
 </dd>
 <dt>[<b>-adt</b>]
 </dt>
 <dd> 
-Automatic Draw text - This option turns on the <b>-dt</b>
-option selectively for fonts that seem to be no normal text fonts, e.g. Symbol.. 
+automatic draw text. This option turns on the <b>-dt</b>
+option selectively for fonts that seem to be no normal text fonts, e.g. Symbol. 
 <p>
 </dd>
 <dt>[<b>-ndt</b>]
 </dt>
 <dd> 
-Never Draw text - fully disable the heuristics used by pstoedit to decide when to "draw" text instead of showing it as text. This may produce incorrect results, but in some cases it might nevertheless be useful. "Use at own risk". 
+never draw text. Fully disable the heuristics used by pstoedit to decide when to "draw" text instead of showing it as text. This may produce incorrect results, but in some cases it might nevertheless be useful. "Use at own risk". 
 <p>
 </dd>
 <dt>[<b>-dgbm</b>]
@@ -498,13 +497,13 @@
 <dt>[<b>-correctdefinefont</b>]
 </dt>
 <dd> 
-Some PostScript files, e.g. such as generated by ChemDraw, use the PostScript definefont operator in way that is incompatible with pstoedit's assumptions. The new font is defined by copying an old font without changing the FontName of the new font. When this option is applied, some "patches" are done after a definefont in order to make it again compatible with pstoedit's assumptions. This option is not enabled per default, since it may break other PostScript file. It is tested only with ChemDraw generated files. 
+Some PostScript files, e.g. such as generated by ChemDraw, use the PostScript definefont operator in a way that is incompatible with pstoedit's assumptions. The new font is defined by copying an old font without changing the FontName of the new font. When this option is applied, some "patches" are done after a definefont in order to make it again compatible with pstoedit's assumptions. This option is not enabled by default, since it may break other PostScript files. It is tested only with ChemDraw generated files. 
 <p>
 </dd>
 <dt>[<b>-pti</b>]
 </dt>
 <dd> 
-Precision text - Normally a text string is drawn as it occurs in the input file. However, in some situations, this might produce wrongly positioned characters. This is due to limitiations in most output formats of pstoedit. They cannot represent text with arbitray inter-letter spacing which is easily possible in PDF and PostScript. With <b>-pta</b>,
+precision text. Normally a text string is drawn as it occurs in the input file. However, in some situations, this might produce wrongly positioned characters. This is due to limitiations in most output formats of pstoedit. They cannot represent text with arbitray inter-letter spacing which is easily possible in PDF and PostScript. With <b>-pta</b>,
 each character of a text string is placed separately. With <b>-pti</b>,
 this is done only in cases when there is a non zero inter-letter spacing. The downside of "precision text" is a bigger file size and hard to edit text. 
 <p>
@@ -515,25 +514,25 @@
 see -pti 
 <p>
 </dd>
-<dt>[<b>-uchar</b><i>&nbsp;character</i>]
+<dt>[<font class="optstyle">-uchar</font><font class="argstyle">&nbsp;character</font>]
 </dt>
 <dd> 
-Sometimes pstoedit cannot map a character from the encoding used by the PostScript file to the font encoding of the target format. In this case pstoedit replaces the input character by a special character in order to show all the places that couldn't be mapped correctly. The default for this is a "#". Using the <b>-uchar</b>
+Sometimes pstoedit cannot map a character from the encoding used by the PostScript file to the font encoding of the target format. In this case pstoedit replaces the input character by a special character in order to show all the places that could not be mapped correctly. The default for this is a "#". Using the <b>-uchar</b>
 option it is possible to specify another character to be used instead. If you want to use a space, use -uchar " ". 
 <p>
 </dd>
 <dt>[<b>-t2fontsast1</b>]
 </dt>
 <dd> 
-Handle type 2 fonts same as type 1. Type 2 fonts sometimes occur as embedded fonts within PDF files. In the default mode, text using such fonts is drawn as polygons since pstoedit assumes that such a font is not available on the users machine. If this option is set, pstoedit assumes that the internal encoding follows the same as for a standard font and generates normal text output. This assumption may not be true in all cases. But it is nearly impossible for pstoedit to verify this assumption - it would have to do a sort of OCR. 
+Handle Type 2 fonts same as Type 1. Type 2 fonts sometimes occur as embedded fonts within PDF files. In the default mode, text using such fonts is drawn as polygons since pstoedit assumes that such a font is not available on the user's machine. If this option is set, pstoedit assumes that the internal encoding follows the same as for a standard font and generates normal text output. This assumption may not be true in all cases. But it is nearly impossible for pstoedit to verify this assumption - it would have to do a sort of OCR. 
 <p>
 </dd>
 <dt>[<b>-nfr</b>]
 </dt>
 <dd> 
 In normal mode pstoedit replaces bitmap fonts with a font as defined by the <b>-df</b>
-option. This is done, because most output formats can't handle such fonts. This behavior can be switched off using the <b>-nfr</b>
-option but then it strongly depends on the application reading the the generated file whether the file is usable and correctly interpreted or not. Any problems are then out of control of pstoedit. 
+option. This is done, because most output formats cannot handle such fonts. This behavior can be switched off using the <b>-nfr</b>
+option but then it strongly depends on the application reading the generated file whether the file is usable and correctly interpreted or not. Any problems are then out of control of pstoedit. 
 <p>
 </dd>
 <dt>[<b>-glyphs</b>]
@@ -545,20 +544,21 @@
 <dt>[<b>-useoldnormalization</b>]
 </dt>
 <dd> 
-Just use this option in case the new heuristic introduced in 3.5 doesn't produce correct results - however, this normalization of font encoding will always be a best-effort approach since there is no real general solution to it with reasonable effort 
+Just use this option in case the new heuristic introduced in 3.5 does not produce correct results - however, this normalization of font encoding will always be a best-effort approach since there is no real general solution to it with reasonable effort 
 <p>
 </dd>
-<dt>[<b>-fontmap</b><i>&nbsp;name of font map file for pstoedit</i>]
+<dt>[<font class="optstyle">-fontmap</font><font class="argstyle">&nbsp;name of font map file for pstoedit</font>]
 </dt>
 <dd> 
 The font map is a simple text file containing lines in the following format:<br>
- 
+
 <p>
-<tt>document_font_name target_font_name</tt> <br>
- 
-Lines beginning with <tt>%</tt> are considerd comments <br>
+<tt>document_font_name target_font_name</tt><br>
  
-If a font name contains spaces, use the <tt>"font name with spaces"</tt> notation. 
+<p>
+Lines beginning with <tt>%</tt> are considerd comments.<br>
+
+For font names with spaces use the <tt>"font name with spaces"</tt> notation. 
 <p>
 If a target_font_name starts with /, it is regarded as alias to a former entry. 
 <p>
@@ -571,19 +571,18 @@
 <p>
 <ul compact>
 <p>
-<li>Windows: The same directory where the <tt>pstoedit</tt> executable is
-located 
+<li>MS Windows: The same directory where the <tt>pstoedit</tt> executable is located
 <p>
 </li>
-<li>Unix: <br>
+<li>Unix:<br>
  
-&lt;<em>The directory where the pstoedit executably is located</em>&gt;
+&lt;<em>The directory where the pstoedit executable is located</em>&gt;
 <tt>/../lib/</tt> 
 <p>
 </li>
 </ul>
 <p>
-The mpost.fmp in the misc directory of the pstoedit distibution is a sample map file with mappings from over 5000 PostScript font names to their TeXequivalents. This is useful because MetaPost is frequently used with TeX/LaTeX and those programs don't use standard font names. This file and the MetaPost output format driver are provided by Scott Pakin (<a href ="mailto:scott+ps2ed_AT_pakin.org"><tt>scott+ps2ed_AT_pakin.org</tt></a>).
+The mpost.fmp in the misc directory of the pstoedit distibution is a sample map file with mappings from over 5000 PostScript font names to their TeX equivalents. This is useful because MetaPost is frequently used with TeX/LaTeX and those programs do not use standard font names. This file and the MetaPost output format driver are provided by Scott Pakin (<a href ="mailto:scott+ps2ed_AT_pakin.org"><tt>scott+ps2ed_AT_pakin.org</tt></a>).
 Another example is wemf.fmp to be used under Windows. See the misc directory of the pstoedit source distribution. 
 After loading the implicit (based on driver name) or explicit (based on the -fontmap option) font map file, a system specific map file is searched and loaded from the installation directory (unix.fmp or windows.fmp). This file can be used to redirect certain fonts to system specific names using the /AliasName notation described above. 
 <p>
@@ -607,7 +606,7 @@
 <dt>[<b>-nq</b>]
 </dt>
 <dd> 
-No exit from the PostScript interpreter. Normally Ghostscript exits after processing the pstoedit input-file. For debugging it can be useful to avoid this. If you do, you will have to type quit at the <tt>GS&gt;</tt> prompt to exit from Ghostscript. 
+No exit from the PostScript interpreter. Normally Ghostscript exits after processing the pstoedit input file. For debugging it can be useful to avoid this. If you do, you will have to type quit at the <tt>GS&gt;</tt> prompt to exit from Ghostscript. 
 <p>
 </dd>
 <dt>[<b>-v</b>]
@@ -621,7 +620,7 @@
 <dd> 
 Since version 3.10 <tt>pstoedit</tt>
 uses the <tt>-dDELAYBIND</tt>
-option when calling GhostScript. Previously the <tt>-dNOBIND</tt>
+option when calling Ghostscript. Previously the <tt>-dNOBIND</tt>
 option was used instead but that sometimes caused problems if a user's PostScript file overloaded standard PostScript operator with totally new semantic, e.g. lt for lineto instead of the standard meaning of "less than". Using <b>-nb</b>
 the old style can be activated again in case the <tt>-dDELAYBIND</tt>
 gives different results as before. In such a case please also contact the author. 
@@ -648,7 +647,7 @@
 <dt>[<b>-gstest</b>]
 </dt>
 <dd> 
-perform a basic test for the interworking with GhostScript 
+perform a basic test of the interworking with Ghostscript 
 <p>
 </dd>
 </dl>
@@ -667,7 +666,7 @@
 <dt>[<b>-nsp</b>]
 </dt>
 <dd> 
-normally subpathes are used if the output format support them. This option turns off subpathes. 
+normally subpaths are used if the output format supports them. This option turns off subpaths. 
 <p>
 </dd>
 <dt>[<b>-mergelines</b>]
@@ -693,27 +692,27 @@
 <dt>[<b>-ssp</b>]
 </dt>
 <dd> 
-simulate sub paths. 
-Several output formats don't support PostScript pathes containing sub pathes, i.e. pathes with intermediate movetos. In the normal case, each subpath is treated as an independent path for such output formats. This can lead to bad looking results. The most common case where this happens is if you use the <b>-dt</b>
-option and show some text with letters like e, o, or b, i.e. letter that have a "hole". When the <b>-ssp</b>
+simulate subpaths. 
+Several output formats do not support PostScript paths containing subpaths, i.e. paths with intermediate movetos. In the normal case, each subpath is treated as an independent path for such output formats. This can lead to bad looking results. The most common case where this happens is if you use the <b>-dt</b>
+option and show some text with letters like e, o, or b, i.e. letters that have a "hole". When the <b>-ssp</b>
 option is set, pstoedit tries to eliminate these problems. However, this option is CPU time intensive! 
 <p>
 </dd>
-<dt>[<b>-flat</b><i>&nbsp;flatness factor</i>]
+<dt>[<font class="optstyle">-flat</font><font class="argstyle">&nbsp;flatness factor</font>]
 </dt>
 <dd> 
 If the output format does not support curves in the way PostScript does or if the <b>-nc</b>
 option is specified, all curves are approximated by lines. Using the <b>-flat</b>
 option one can control this approximation. This parameter is directly converted to a PostScript <strong>setflat</strong>
-command. Higher numbers, e.g. 10 give rougher, lower numbers, e.g. 0.1 finer approximations. 
+command. Higher numbers, e.g. 10 give rougher, lower numbers, e.g. 0.1, give finer approximations. 
 <p>
 </dd>
 <dt>[<b>-sclip</b>]
 </dt>
 <dd> 
 simulate clipping. 
-Most output formats of pstoedit don't have native support for clipping. For that <tt>pstoedit</tt>
-offers an option to perform the clipping of the graphics directly without passing the clippath to the output driver. However, this results in curves being replaced by a lot of line segments and thus larger output files. So use this option only if your output looks different from the input due to clipping. In addition, this "simulated clipping" is not exactly the same as defined in PostScript. There might be lines drawn at the double size. Also clipping of text is not supported unless you also use the <b>-dt</b>
+Most output formats of pstoedit do not have native support for clipping. For that <tt>pstoedit</tt>
+offers an option to perform the clipping of the graphics directly without passing the clippath to the output driver. However, this results in curves being replaced by a lot of line segments and thus larger output files. So use this option only if your output looks different from the input due to clipping. In addition, this "simulated clipping" is not exactly the same as defined in PostScript. There might be lines drawn at double size. Also clipping of text is not supported unless you also use the <b>-dt</b>
 option. 
 <p>
 </dd>
@@ -730,7 +729,7 @@
 
 <p>
 <tt>pstoedit</tt>
-allows passing individual options to a output format driver. This is done by 
+allows passing individual options to an output format driver. This is done by 
 appending all options to the format specified after the <b>-f</b>
 option. The format 
 specifier and its options must be separated by a colon (:). If more than one 
@@ -738,11 +737,11 @@
 must be 
 enclosed within double-quote characters, thus: 
 <p>
-<b>-f</b><i>&nbsp;"format[:option option ...]"</i>
+<font class="optstyle">-f</font><font class="argstyle">&nbsp;"format[:option option ...]"</font>
 <p>
 To see which options are supported by a specific format, type: 
 <strong>pstoedit -f format:-help</strong>
-<br> 
+<br>
 <p>
 The following description of the different formats supported by pstoedit is extracted from the source code of the individual drivers. 
 <p>
@@ -758,16 +757,16 @@
 <h5><a name="section_20">dump - for test purposes (same as debug)</a></h5>
 
 No driver specific options 
-<h5><a name="section_21">gs - any device that GhostScript provides - use gs:format, e.g. gs:pdfwrite</a></h5>
+<h5><a name="section_21">gs - any device that Ghostscript provides - use gs:format, e.g. gs:pdfwrite</a></h5>
 
 No driver specific options 
-<h5><a name="section_22">ps2ai - Adobe Illustrator via ps2ai.ps of GhostScript</a></h5>
+<h5><a name="section_22">ps2ai - Adobe Illustrator via ps2ai.ps of Ghostscript</a></h5>
 
 No driver specific options 
 <h5><a name="section_23">gmfa - ASCII GNU metafile </a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -777,7 +776,7 @@
 <h5><a name="section_24">gmfb - binary GNU metafile </a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -787,7 +786,7 @@
 <h5><a name="section_25">plot - GNU libplot output types, e.g. plot:-plotformat X</a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -797,7 +796,7 @@
 <h5><a name="section_26">plot-cgm - cgm via GNU libplot</a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -807,7 +806,7 @@
 <h5><a name="section_27">plot-ai - ai via GNU libplot</a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -817,7 +816,7 @@
 <h5><a name="section_28">plot-svg - svg via GNU libplot</a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -827,7 +826,7 @@
 <h5><a name="section_29">plot-ps - ps via GNU libplot</a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -837,7 +836,7 @@
 <h5><a name="section_30">plot-fig - fig via GNU libplot</a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -847,7 +846,7 @@
 <h5><a name="section_31">plot-pcl - pcl via GNU libplot</a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -857,7 +856,7 @@
 <h5><a name="section_32">plot-hpgl - hpgl via GNU libplot</a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -867,7 +866,7 @@
 <h5><a name="section_33">plot-tek - tek via GNU libplot</a></h5>
 
 <dl compact>
-<dt>[<b>-plotformat</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-plotformat</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 plotutil format to generate 
@@ -876,7 +875,7 @@
 </dl>
 <h5><a name="section_34">magick - MAGICK driver</a></h5>
 
-This driver uses the C++ API of ImageMagick or GraphicsMagick to finally produce different output formats. The output format is determined automatically by Image/GraphicsMagick based on the suffix of the output filename. So an output file test.png will force the creation of an image in PNG format. 
+This driver uses the C++ API of ImageMagick or GraphicsMagick to finally produce different output formats. The output format is determined automatically by Image-/GraphicsMagick based on the suffix of the output filename. So an output file test.png will force the creation of an image in PNG format. 
 <p>
 No driver specific options 
 <h5><a name="section_35">swf - SWF driver: </a></h5>
@@ -895,7 +894,7 @@
 <p>
 </dd>
 </dl>
-<h5><a name="section_36">svg - scalable vector graphics</a></h5>
+<h5><a name="section_36">svg - Scalable Vector Graphics</a></h5>
 
 <dl compact>
 <dt>[<b>-localdtd</b>]
@@ -925,19 +924,19 @@
 <dt>[<b>-nogroupedpath</b>]
 </dt>
 <dd> 
-do not write a group around pathes 
+do not write a group around paths 
 <p>
 </dd>
 <dt>[<b>-noviewbox</b>]
 </dt>
 <dd> 
-don't write a view box 
+do not write a view box 
 <p>
 </dd>
 <dt>[<b>-texmode</b>]
 </dt>
 <dd> 
-TeX Mode 
+TeX mode 
 <p>
 </dd>
 <dt>[<b>-imagetofile</b>]
@@ -952,13 +951,13 @@
 do not write textrendering attribute 
 <p>
 </dd>
-<dt>[<b>-border</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-border</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 additional border to draw around bare bounding box (in percent of width and height) 
 <p>
 </dd>
-<dt>[<b>-title</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-title</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 text to use as title for the generated document 
@@ -995,19 +994,19 @@
 <dt>[<b>-nogroupedpath</b>]
 </dt>
 <dd> 
-do not write a group around pathes 
+do not write a group around paths 
 <p>
 </dd>
 <dt>[<b>-noviewbox</b>]
 </dt>
 <dd> 
-don't write a view box 
+do not write a view box 
 <p>
 </dd>
 <dt>[<b>-texmode</b>]
 </dt>
 <dd> 
-TeX Mode 
+TeX mode 
 <p>
 </dd>
 <dt>[<b>-imagetofile</b>]
@@ -1022,26 +1021,26 @@
 do not write textrendering attribute 
 <p>
 </dd>
-<dt>[<b>-border</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-border</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 additional border to draw around bare bounding box (in percent of width and height) 
 <p>
 </dd>
-<dt>[<b>-title</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-title</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 text to use as title for the generated document 
 <p>
 </dd>
 </dl>
-<h5><a name="section_38">cgmb1 - CGM binary Format (V1)</a></h5>
+<h5><a name="section_38">cgmb1 - CGM Binary format (V1)</a></h5>
 
 No driver specific options 
-<h5><a name="section_39">cgmb - CGM binary Format (V3)</a></h5>
+<h5><a name="section_39">cgmb - CGM Binary format (V3)</a></h5>
 
 No driver specific options 
-<h5><a name="section_40">cgmt - CGM textual Format</a></h5>
+<h5><a name="section_40">cgmt - CGM Textual format</a></h5>
 
 No driver specific options 
 <h5><a name="section_41">mif - (Frame)Maker Intermediate Format</a></h5>
@@ -1054,10 +1053,10 @@
 <p>
 </dd>
 </dl>
-<h5><a name="section_42">rtf - RTF Format</a></h5>
+<h5><a name="section_42">rtf - Rich Text Format</a></h5>
 
 No driver specific options 
-<h5><a name="section_43">wemf - Wogls version of EMF </a></h5>
+<h5><a name="section_43">wemf - Wogl's version of EMF </a></h5>
 
 <dl compact>
 <dt>[<b>-df</b>]
@@ -1075,19 +1074,19 @@
 <dt>[<b>-size:psbbox</b>]
 </dt>
 <dd> 
-use the bounding box as calculated by the PostScript frontent as size 
+use the bounding box as calculated by the PostScript frontend as size 
 <p>
 </dd>
 <dt>[<b>-size:fullpage</b>]
 </dt>
 <dd> 
-set the size to the size of a full page 
+set the size to that of the full page 
 <p>
 </dd>
 <dt>[<b>-size:automatic</b>]
 </dt>
 <dd> 
-let windows calculate the bounding box (default) 
+let MS Windows calculate the bounding box (default) 
 <p>
 </dd>
 <dt>[<b>-keepimages</b>]
@@ -1099,7 +1098,7 @@
 <dt>[<b>-useoldpolydraw</b>]
 </dt>
 <dd> 
-do not use Windows PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files 
+do not use MS Windows' PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files 
 <p>
 </dd>
 <dt>[<b>-OO</b>]
@@ -1109,7 +1108,7 @@
 <p>
 </dd>
 </dl>
-<h5><a name="section_44">wemfc - Wogls version of EMF with experimental clip support</a></h5>
+<h5><a name="section_44">wemfc - Wogl's version of EMF with experimental clip support</a></h5>
 
 <dl compact>
 <dt>[<b>-df</b>]
@@ -1127,19 +1126,19 @@
 <dt>[<b>-size:psbbox</b>]
 </dt>
 <dd> 
-use the bounding box as calculated by the PostScript frontent as size 
+use the bounding box as calculated by the PostScript frontend as size 
 <p>
 </dd>
 <dt>[<b>-size:fullpage</b>]
 </dt>
 <dd> 
-set the size to the size of a full page 
+set the size to that of the full page 
 <p>
 </dd>
 <dt>[<b>-size:automatic</b>]
 </dt>
 <dd> 
-let windows calculate the bounding box (default) 
+let MS Windows calculate the bounding box (default) 
 <p>
 </dd>
 <dt>[<b>-keepimages</b>]
@@ -1151,7 +1150,7 @@
 <dt>[<b>-useoldpolydraw</b>]
 </dt>
 <dd> 
-do not use Windows PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files 
+do not use MS Windows' PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files 
 <p>
 </dd>
 <dt>[<b>-OO</b>]
@@ -1161,7 +1160,7 @@
 <p>
 </dd>
 </dl>
-<h5><a name="section_45">wemfnss - Wogls version of EMF - no subpathes </a></h5>
+<h5><a name="section_45">wemfnss - Wogl's version of EMF - no subpaths</a></h5>
 
 <dl compact>
 <dt>[<b>-df</b>]
@@ -1179,19 +1178,19 @@
 <dt>[<b>-size:psbbox</b>]
 </dt>
 <dd> 
-use the bounding box as calculated by the PostScript frontent as size 
+use the bounding box as calculated by the PostScript frontend as size 
 <p>
 </dd>
 <dt>[<b>-size:fullpage</b>]
 </dt>
 <dd> 
-set the size to the size of a full page 
+set the size to that of the full page 
 <p>
 </dd>
 <dt>[<b>-size:automatic</b>]
 </dt>
 <dd> 
-let windows calculate the bounding box (default) 
+let MS Windows calculate the bounding box (default) 
 <p>
 </dd>
 <dt>[<b>-keepimages</b>]
@@ -1203,7 +1202,7 @@
 <dt>[<b>-useoldpolydraw</b>]
 </dt>
 <dd> 
-do not use Windows PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files 
+do not use MS Windows' PolyDraw but an emulation of it - sometimes needed for certain programs reading the EMF files 
 <p>
 </dd>
 <dt>[<b>-OO</b>]
@@ -1225,16 +1224,16 @@
 <dt>[<b>-pencolorsfromfile</b>]
 </dt>
 <dd> 
-read pen colors from file drvhpgl.pencolors in pstoedit data directory 
+read pen colors from file drvhpgl.pencolors in pstoedit's data directory 
 <p>
 </dd>
-<dt>[<b>-pencolors</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-pencolors</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 maximum number of pen colors to be used by pstoedit (default 0) - 
 <p>
 </dd>
-<dt>[<b>-filltype</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-filltype</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 select fill type e.g. FT 1 
@@ -1277,16 +1276,16 @@
 <dt>[<b>-pencolorsfromfile</b>]
 </dt>
 <dd> 
-read pen colors from file drvhpgl.pencolors in pstoedit data directory 
+read pen colors from file drvhpgl.pencolors in pstoedit's data directory 
 <p>
 </dd>
-<dt>[<b>-pencolors</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-pencolors</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 maximum number of pen colors to be used by pstoedit (default 0) - 
 <p>
 </dd>
-<dt>[<b>-filltype</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-filltype</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 select fill type e.g. FT 1 
@@ -1371,13 +1370,13 @@
 use pango for font rendering 
 <p>
 </dd>
-<dt>[<b>-funcname</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-funcname</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 sets the base name for the generated functions and variables. e.g. myfig 
 <p>
 </dd>
-<dt>[<b>-header</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-header</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 sets the output file name for the generated C header file. e.g. myfig.h 
@@ -1446,7 +1445,7 @@
 use Bezier splines in DXF format (only for -f dxf_s) 
 <p>
 </dd>
-<dt>[<b>-splineprecision</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-splineprecision</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 number of samples to take from spline curve when doing approximation with -splineaspolyline or -splineasmultispline - should be &gt;= 2 (default 5) 
@@ -1458,13 +1457,13 @@
 dump all layer names found to standard output 
 <p>
 </dd>
-<dt>[<b>-layers</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-layers</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 layers to be shown (comma separated list of layer names, no space) 
 <p>
 </dd>
-<dt>[<b>-layerfilter</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-layerfilter</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 layers to be hidden (comma separated list of layer names, no space) 
@@ -1528,7 +1527,7 @@
 use Bezier splines in DXF format (only for -f dxf_s) 
 <p>
 </dd>
-<dt>[<b>-splineprecision</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-splineprecision</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 number of samples to take from spline curve when doing approximation with -splineaspolyline or -splineasmultispline - should be &gt;= 2 (default 5) 
@@ -1540,13 +1539,13 @@
 dump all layer names found to standard output 
 <p>
 </dd>
-<dt>[<b>-layers</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-layers</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 layers to be shown (comma separated list of layer names, no space) 
 <p>
 </dd>
-<dt>[<b>-layerfilter</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-layerfilter</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 layers to be hidden (comma separated list of layer names, no space) 
@@ -1556,24 +1555,24 @@
 <h5><a name="section_54">fig - .fig format for xfig</a></h5>
 
 The xfig format driver supports special fontnames, which may be produced by using a fontmap file. The following types of names are supported : <br>
- 
+
 <pre>
-General notation: 
-"Postscript Font Name" ((LaTeX|PostScript|empty)(::special)::)XFigFontName
- 
+General notation:
+"PostScript Font Name" ((LaTeX|PostScript|empty)(::special)::)XFigFontName
+
 Examples:
 
 Helvetica LaTeX::SansSerif
 Courier LaTeX::special::Typewriter
 GillSans "AvantGarde Demi"
-Albertus PostScript::special::"New Century Schoolbook Italic" 
-Symbol ::special::Symbol (same as Postscript::special::Symbol)
+Albertus PostScript::special::"New Century Schoolbook Italic"
+Symbol ::special::Symbol (same as PostScript::special::Symbol)
 </pre>
-See also the file examplefigmap.fmp in the misc directory of the pstoedit source distribution for an example font map file for xfig. Please note that the Fontname has to be among those supported by xfig. See - <a href ="http://www.xfig.org/userman/fig-format.html"><tt>http://www.xfig.org/userman/fig-format.html</tt></a>
+See also the file examplefigmap.fmp in the misc directory of the pstoedit source distribution for an example font map file for xfig. Please note that the fontname has to be among those supported by xfig. See - <a href ="http://www.xfig.org/userman/fig-format.html"><tt>http://www.xfig.org/userman/fig-format.html</tt></a>
 for a list of legal font names 
 <p>
 <dl compact>
-<dt>[<b>-startdepth</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-startdepth</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 Set the initial depth (default 999) 
@@ -1588,10 +1587,10 @@
 <dt>[<b>-usecorrectfontsize</b>]
 </dt>
 <dd> 
-don't scale fonts for xfig. Use this if you also use this option with xfig 
+do not scale fonts for xfig. Use this if you also use this option with xfig 
 <p>
 </dd>
-<dt>[<b>-depth</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-depth</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 Set the page depth in inches (default 11) 
@@ -1603,7 +1602,7 @@
 See fig format for more details. 
 <p>
 <dl compact>
-<dt>[<b>-startdepth</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-startdepth</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 Set the initial depth (default 999) 
@@ -1618,10 +1617,10 @@
 <dt>[<b>-usecorrectfontsize</b>]
 </dt>
 <dd> 
-don't scale fonts for xfig. Use this if you also use this option with xfig 
+do not scale fonts for xfig. Use this if you also use this option with xfig 
 <p>
 </dd>
-<dt>[<b>-depth</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-depth</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 Set the page depth in inches (default 11) 
@@ -1633,7 +1632,7 @@
 Test only 
 <p>
 <dl compact>
-<dt>[<b>-startdepth</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-startdepth</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 Set the initial depth (default 999) 
@@ -1648,10 +1647,10 @@
 <dt>[<b>-usecorrectfontsize</b>]
 </dt>
 <dd> 
-don't scale fonts for xfig. Use this if you also use this option with xfig 
+do not scale fonts for xfig. Use this if you also use this option with xfig 
 <p>
 </dd>
-<dt>[<b>-depth</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-depth</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 Set the page depth in inches (default 11) 
@@ -1677,7 +1676,7 @@
 <h5><a name="section_61">java1 - java 1 applet source code</a></h5>
 
 <dl compact>
-<dt>[<b>java class name</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">java class name</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 name of java class to generate 
@@ -1687,7 +1686,7 @@
 <h5><a name="section_62">java2 - java 2 source code</a></h5>
 
 <dl compact>
-<dt>[<b>java class name</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">java class name</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 name of java class to generate 
@@ -1707,10 +1706,10 @@
 <p>
 </dd>
 </dl>
-<h5><a name="section_65">lwo - LightWave 3D Object Format</a></h5>
+<h5><a name="section_65">lwo - LightWave 3D object format</a></h5>
 
 No driver specific options 
-<h5><a name="section_66">mma - Mathematica Graphics</a></h5>
+<h5><a name="section_66">mma - Mathematica graphics</a></h5>
 
 <dl compact>
 <dt>[<b>-eofillfills</b>]
@@ -1720,7 +1719,7 @@
 <p>
 </dd>
 </dl>
-<h5><a name="section_67">mpost - MetaPost Format</a></h5>
+<h5><a name="section_67">mpost - MetaPost format</a></h5>
 
 No driver specific options 
 <h5><a name="section_68">noixml - Nemetschek NOI XML format</a></h5>
@@ -1728,13 +1727,13 @@
 Nemetschek Object Interface XML format 
 <p>
 <dl compact>
-<dt>[<b>-r</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-r</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 Allplan resource file 
 <p>
 </dd>
-<dt>[<b>-bsl</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-bsl</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 Bezier Split Level (default 3) 
@@ -1753,31 +1752,31 @@
 and <a href ="http://www.penguin.cz/~utx/pstoedit-pcb/"><tt>http://www.penguin.cz/~utx/pstoedit-pcb/</tt></a>
 <p>
 <dl compact>
-<dt>[<b>-grid</b><i>&nbsp;missing arg name</i>]
+<dt>[<font class="optstyle">-grid</font><font class="argstyle">&nbsp;missing arg name</font>]
 </dt>
 <dd> 
 attempt to snap relevant output to grid (mils) and put failed objects to a different layer 
 <p>
 </dd>
-<dt>[<b>-snapdist</b><i>&nbsp;missing arg name</i>]
+<dt>[<font class="optstyle">-snapdist</font><font class="argstyle">&nbsp;missing arg name</font>]
 </dt>
 <dd> 
 grid snap distance ratio (0 < snapdist <= 0.5, default 0.1) 
 <p>
 </dd>
-<dt>[<b>-tshiftx</b><i>&nbsp;missing arg name</i>]
+<dt>[<font class="optstyle">-tshiftx</font><font class="argstyle">&nbsp;missing arg name</font>]
 </dt>
 <dd> 
 additional x shift measured in target units (mils) 
 <p>
 </dd>
-<dt>[<b>-tshifty</b><i>&nbsp;missing arg name</i>]
+<dt>[<font class="optstyle">-tshifty</font><font class="argstyle">&nbsp;missing arg name</font>]
 </dt>
 <dd> 
 additional y shift measured in target units (mils) 
 <p>
 </dd>
-<dt>[<b>-grid</b><i>&nbsp;missing arg name</i>]
+<dt>[<font class="optstyle">-grid</font><font class="argstyle">&nbsp;missing arg name</font>]
 </dt>
 <dd> 
 attempt to snap relevant output to grid (mils) and put failed objects to a different layer 
@@ -1786,7 +1785,7 @@
 <dt>[<b>-mm</b>]
 </dt>
 <dd> 
-Switch to metric units (mm) 
+switch to metric units (mm) 
 <p>
 </dd>
 <dt>[<b>-stdnames</b>]
@@ -1815,19 +1814,19 @@
 This is the format used internally by Microsoft PowerPoint. LibreOffice can also read/write PowerPoint files albeit with some lack of functionality. 
 <p>
 <dl compact>
-<dt>[<b>-colors</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-colors</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 "original" to retain original colors (default), "theme" to convert randomly to theme colors, or "theme-lum" also to vary luminance 
 <p>
 </dd>
-<dt>[<b>-fonts</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-fonts</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 use "windows" fonts (default), "native" fonts, or convert to the "theme" font 
 <p>
 </dd>
-<dt>[<b>-embed</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-embed</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 embed fonts, specified as a comma-separated list of EOT-format font files 
@@ -1837,22 +1836,22 @@
 <h5><a name="section_74">rib - RenderMan Interface Bytestream</a></h5>
 
 No driver specific options 
-<h5><a name="section_75">rpl - Real3D Programming Language Format</a></h5>
+<h5><a name="section_75">rpl - Real3D Programming Language format</a></h5>
 
 No driver specific options 
-<h5><a name="section_76">sample - sample driver: if you don't want to see this, uncomment the corresponding line in makefile and make again</a></h5>
+<h5><a name="section_76">sample - sample driver: if you do not want to see this, uncomment the corresponding line in makefile and make again</a></h5>
 
 this is a long description for the sample driver 
 <p>
 <dl compact>
-<dt>[<b>-sampleoption</b><i>&nbsp;integer</i>]
+<dt>[<font class="optstyle">-sampleoption</font><font class="argstyle">&nbsp;integer</font>]
 </dt>
 <dd> 
 just an example 
 <p>
 </dd>
 </dl>
-<h5><a name="section_77">sk - Sketch Format</a></h5>
+<h5><a name="section_77">sk - Sketch format</a></h5>
 
 No driver specific options 
 <h5><a name="section_78">svm - StarView/OpenOffice.org metafile</a></h5>
@@ -1876,13 +1875,13 @@
 <h5><a name="section_79">text - text in different forms </a></h5>
 
 <dl compact>
-<dt>[<b>-height</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-height</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 page height in terms of characters 
 <p>
 </dd>
-<dt>[<b>-width</b><i>&nbsp;number</i>]
+<dt>[<font class="optstyle">-width</font><font class="argstyle">&nbsp;number</font>]
 </dt>
 <dd> 
 page width in terms of characters 
@@ -1920,26 +1919,26 @@
 no impress 
 <p>
 </dd>
-<dt>[<b>-n</b><i>&nbsp;string</i>]
+<dt>[<font class="optstyle">-n</font><font class="argstyle">&nbsp;string</font>]
 </dt>
 <dd> 
 tagnames 
 <p>
 </dd>
 </dl>
-<h5><a name="section_82">vtk - VTK driver: if you don't want to see this, uncomment the corresponding line in makefile and make again</a></h5>
+<h5><a name="section_82">vtk - VTK driver: if you do not want to see this, uncomment the corresponding line in makefile and make again</a></h5>
 
 this is a long description for the VTKe driver 
 <p>
 <dl compact>
-<dt>[<b>-VTKeoption</b><i>&nbsp;integer</i>]
+<dt>[<font class="optstyle">-VTKeoption</font><font class="argstyle">&nbsp;integer</font>]
 </dt>
 <dd> 
 just an example 
 <p>
 </dd>
 </dl>
-<h5><a name="section_83">wmf - Windows metafile</a></h5>
+<h5><a name="section_83">wmf - MS Windows metafile</a></h5>
 
 <dl compact>
 <dt>[<b>-m</b>]
@@ -1969,13 +1968,13 @@
 <dt>[<b>-nfw</b>]
 </dt>
 <dd> 
-Newer versions of Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains Text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the -pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the -nfw options provides a sort of compromise between portability and nice to edit but still nice looking text. Again - this option has no meaning when pstoedit is executed under Windows anyway. In that case the output is portable but nevertheless not split and still looks fine. 
+Newer versions of MS Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under MS Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the -pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the -nfw option provides a sort of compromise between portability and nice to edit but still nice looking text. Again - this option has no meaning when pstoedit is executed under MS Windows anyway. In that case the output is portable but nevertheless not split and still looks fine. 
 <p>
 </dd>
 <dt>[<b>-winbb</b>]
 </dt>
 <dd> 
-let the Windows API calculate the Bounding Box (Windows only) 
+let the MS Windows API calculate the Bounding Box (Windows only) 
 <p>
 </dd>
 <dt>[<b>-OO</b>]
@@ -1985,7 +1984,7 @@
 <p>
 </dd>
 </dl>
-<h5><a name="section_84">emf - Enhanced Windows metafile</a></h5>
+<h5><a name="section_84">emf - Enhanced MS Windows Metafile</a></h5>
 
 <dl compact>
 <dt>[<b>-m</b>]
@@ -2015,13 +2014,13 @@
 <dt>[<b>-nfw</b>]
 </dt>
 <dd> 
-Newer versions of Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains Text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the -pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the -nfw options provides a sort of compromise between portability and nice to edit but still nice looking text. Again - this option has no meaning when pstoedit is executed under Windows anyway. In that case the output is portable but nevertheless not split and still looks fine. 
+Newer versions of MS Windows (2000, XP, Vista) will not accept WMF/EMF files generated when this option is set and the input contains text. But if this option is not set, then the WMF/EMF driver will estimate interletter spacing of text using a very coarse heuristic. This may result in ugly looking output. On the other hand, OpenOffice can still read EMF/WMF files where pstoedit delegates the calculation of the inter letter spacing to the program reading the WMF/EMF file. So if the generated WMF/EMF file shall never be processed under MS Windows, use this option. If WMF/EMF files with high precision text need to be generated under *nix the only option is to use the -pta option of pstoedit. However that causes every text to be split into single characters which makes the text hard to edit afterwards. Hence the -nfw option provides a sort of compromise between portability and nice to edit but still nice looking text. Again - this option has no meaning when pstoedit is executed under MS Windows anyway. In that case the output is portable but nevertheless not split and still looks fine. 
 <p>
 </dd>
 <dt>[<b>-winbb</b>]
 </dt>
 <dd> 
-let the Windows API calculate the Bounding Box (Windows only) 
+let the MS Windows API calculate the Bounding Box (Windows only) 
 <p>
 </dd>
 <dt>[<b>-OO</b>]
@@ -2048,11 +2047,11 @@
 
 <p>
 The ps2ai output format driver is not a native pstoedit output format driver. It does not use the 
-pstoedit postcript flattener, instead it uses the PostScript program 
-ps2ai.ps which is installed in the GhostScript distribution directory. It 
+pstoedit PostScript flattener, instead it uses the PostScript program 
+ps2ai.ps which is installed in the Ghostscript distribution directory. It 
 is included to provide the same "look-and-feel" for the conversion to AI. 
 The additional benefit is that this conversion is now available also via 
-the "convert-to-vector" menu of Gsview. However, lot's of files don't 
+the "convert-to-vector" menu of Gsview. However, lot's of files do not 
 convert nicely or at all using ps2ai.ps. So a native pstoedit driver would 
 be much better. Anyone out there to take this? The AI format is usable for 
 example by Mayura Draw (<a href ="http://www.mayura.com"><tt>http://www.mayura.com</tt></a>).
@@ -2061,26 +2060,26 @@
 <p>
 An alternative to the ps2ai based driver is available via the -f plot:ai format if the libplot(ter) is installed. 
 <p>
-You should use a version of GhostScript greater than or equal to 6.00 for using the ps2ai output format driver. 
+You should use a version of Ghostscript greater than or equal to 6.00 for using the ps2ai output format driver. 
 <p>
 <h4><a name="section_88">MetaPost</a></h4>
 
 <p>
 Note that, as far as Scott knows, MetaPost does not support PostScript's 
-eofill. The metapost output format driver just converts eofill to fill, and issues a warning if 
+eofill. The MetaPost output format driver just converts eofill to fill, and issues a warning if 
 verbose is set. Fortunately, very few PostScript programs rely on the 
 even-odd fill rule, even though many specify it. 
 <p>
 For more on MetaPost see: 
 <p>
-<a href ="http://cm.bell-labs.com/who/hobby/MetaPost.html"><tt>http://cm.bell-labs.com/who/hobby/MetaPost.html</tt></a>
+<a href ="http://tug.org/metapost"><tt>http://tug.org/metapost</tt></a>
 <p>
 <h4><a name="section_89">Context Free - CFDG</a></h4>
 
 The driver for the CFDG format (drvcfdg) defines 
 one shape per page of PostScript, but only the first shape is actually 
 rendered (unless the user edits the generated CFDG code, of course). 
-CFDG doesn't support multi-page output, so this probably a reasonable thing to do. 
+CFDG does not support multi-page output, so this probably is a reasonable thing to do. 
 <p>
 For more on Context Free see: 
 <a href ="http://www.contextfreeart.org/"><tt>http://www.contextfreeart.org/</tt></a>
@@ -2092,12 +2091,13 @@
 <li>LaTeX2e's picture environment is not very powerful. As a result, many 
 elementary PostScript constructs are ignored -- fills, line 
 thicknesses (besides "thick" and "thin"), and dash patterns, to name a 
-few. Furthermore, complex pictures may overrun TeX's memory capacity. 
+few. Furthermore, complex pictures may overrun TeX's{}memory capacity. 
+(The eepic package overcomes many such restrictions.) 
 <p>
 </li>
 <li>Some PostScript constructs are not supported directly by "picture", 
 but can be handled by external packages. If a figure uses color, the 
-top-level document will need to do a <tt>"\usepackage{color}"</tt>. And if a 
+top-level document will need to do a <tt>"\usepackage{color}"</tt> or <tt>"\usepackage{xcolor}"</tt>. And if a 
 figure contains rotated text, the top-level document will need to do a 
 <tt>"\usepackage{rotating}"</tt>. 
 <p>
@@ -2114,12 +2114,12 @@
 <p>
 </li>
 <li>Why is this output format driver useful? One answer is portability; any LaTeX2e 
-system can handle the picture environment, even if it can't handle 
+system can handle the picture environment, even if it cannot handle 
 PostScript graphics. (pdfLaTeX comes to mind here.) A second answer 
-is that pictures can be edited easily to contain any arbitrary LaTeX2e 
+is that pictures can be edited easily to contain any arbitrary LaTeX2e
 code. For instance, the text in a figure can be modified to contain 
 complex mathematics, non-Latin alphabets, bibliographic citations, or 
--- the real reason Scott wrote the LaTeX2e output format driver -- hyperlinks to the 
+-- the real reason Scott wrote the LaTeX2e{}output format driver -- hyperlinks to the 
 surrounding document (with help from the hyperref package). 
 </li>
 </ul>
@@ -2147,15 +2147,15 @@
 pstoedit using: <strong>pstoedit</strong>
 <b>-help -v</b>.
 <p>
-See the GhostScript manual for descriptions of environment variables used by 
-Ghostscript most importantly <tt>GS_FONTPATH</tt> and <tt>GS_LIB</tt>; other 
+See the Ghostscript manual for descriptions of environment variables used by 
+Ghostscript, most importantly <tt>GS_FONTPATH</tt> and <tt>GS_LIB</tt>; other 
 environment variables also affect output to display, print, and additional 
 filtering and processing. See the related documentation. 
 <p>
 <tt>pstoedit</tt>
-allocates temporary files using the function <em>tempnam</em>(3).
+allocates temporary files using the function <font class="commandname">tempnam</font>(3).
 Thus the location for temporary files might be controllable by other 
-environment variables used by this function. See the <em>tempnam</em>(3)
+environment variables used by this function. See the <font class="commandname">tempnam</font>(3)
 manpage 
 for descriptions of environment variables used. On UNIX like system this is 
 probably the <tt>TMPDIR</tt> variable, on DOS/WINDOWS either <tt>TMP</tt> or 
@@ -2173,7 +2173,7 @@
 <i>testfile.ps</i>
 and check whether <i>testfile.ps</i>
 still displays correctly using 
-Ghostscript. If this file doesn't look correctly then there seems to be a 
+Ghostscript. If this file does not look correctly then there seems to be a 
 problem with <tt>pstoedit</tt>'s
 PostScript frontend. If this file looks good 
 but the output for a specific format is wrong, the problem is probably in 
@@ -2207,12 +2207,12 @@
 
 <p>
 <ul compact>
-<li>Non-standard fonts (e.g. TeXbitmap fonts) are mapped to a default font which 
+<li>Non-standard fonts (e.g. TeX bitmap fonts) are mapped to a default font which 
 can be changed using the <b>-df</b>
 option. <tt>pstoedit</tt>
 chooses the size of 
 the replacement font such that the width of the string in the original font is 
-the same as in the replacement font. This is done for each text fragment 
+the same as with the replacement font. This is done for each text fragment 
 displayed. Special character encoding support is limited in this case. If a 
 character cannot be mapped into the target format, pstoedit displays a '#' 
 instead. See also the -uchar option. 
@@ -2226,7 +2226,7 @@
 </li>
 <li>For most output format drivers pstoedit does not support clipping (mainly due to limitations in the target format). You can try to use the 
 <b>-sclip</b>
-option to simulate clipping. However, this doesn't work in all cases 
+option to simulate clipping. However, this does not work in all cases 
 as expected. 
 <p>
 </li>
@@ -2251,12 +2251,12 @@
 using the <b>-dt</b>
 option? 
 <p>
-This is because most output format drivers don't support composite paths with 
-intermediate gaps (moveto's) and second don't support very well the (eo)fill 
+This is because most output format drivers do not support composite paths with 
+intermediate gaps (moveto's) and second do not support very well the (eo)fill 
 operators of PostScript (winding rule). For such objects <tt>pstoedit</tt>
 breaks 
 them into smaller objects whenever such a gap is found. This results in the 
-"hole" beeing filled with black color instead of beeing transparent. Since 
+"hole" being filled with black color instead of beeing transparent. Since 
 version 3.11 you can try the <b>-ssp</b>
 option in combination with the xfig 
 output format driver. 
@@ -2269,7 +2269,7 @@
 font in other format. So pstoedit replaces the TeX font with another native 
 font. Of course, the replacement font will in most cases produce another 
 look, especially if mathematical symbols are used. 
-Try to use PostScript fonts instead of the bitmap fonts when generating a PostScript file from TeX or LaTeX. 
+Try to use PostScript fonts instead of the bitmap fonts when generating a PostScript file from TeX or LaTeX.
 <p>
 </li>
 </ol>
@@ -2394,10 +2394,10 @@
 output format driver for Kontour. 
 <p>
 </li>
-<li>Scott Pakin, <a href ="mailto:scott+ps2ed_AT_pakin.org"><tt>scott+ps2ed_AT_pakin.org</tt></a> provided the MetaPost and LaTeX2e and PowerPoint output format driver.
+<li>Scott Pakin, <a href ="mailto:scott+ps2ed_AT_pakin.org"><tt>scott+ps2ed_AT_pakin.org</tt></a> provided the MetaPost and LaTeX2e and MS PowerPoint output format driver.
 <p>
 </li>
-<li>The PowerPoint driver uses the libzip library - <a href ="http://www.nih.at/libzip"><tt>http://www.nih.at/libzip</tt></a>. Under Windows, this library is linked into the provided binary statically. Thanks to the whole libzip team.
+<li>The MS PowerPoint driver uses the libzip library - <a href ="http://www.nih.at/libzip"><tt>http://www.nih.at/libzip</tt></a>. Under MS Windows, this library is linked into the provided binary statically. Thanks to the whole libzip team.
 <p>
 </li>
 <li>Burkhard Plaum <a href ="mailto:plaum_AT_IPF.Uni-Stuttgart.de"><tt>plaum_AT_IPF.Uni-Stuttgart.de</tt></a> added support for
@@ -2414,7 +2414,7 @@
 base format. 
 <p>
 </li>
-<li>Several others sent smaller bug fixed and bug reports. Sorry if I don't 
+<li>Several others sent smaller bug fixed and bug reports. Sorry if I do not 
 mention them all here. 
 <p>
 </li>
@@ -2441,7 +2441,7 @@
 <li>But most important: Peter Deutsch <a href ="mailto:ghost_AT_aladdin.com"><tt>ghost_AT_aladdin.com</tt></a> and Russell
 Lang <a href ="mailto:gsview_AT_ghostgum.com.au"><tt>gsview_AT_ghostgum.com.au</tt></a>
 for their help and answers regarding 
-GhostScript and gsview. 
+Ghostscript and gsview. 
 <p>
 </li>
 </ul>
--- pstoedit-3.62-orig/doc/pstoedit.txt	1970-01-01 01:00:00.000000000 +0100
+++ pstoedit-3.62/doc/pstoedit.txt	2013-06-27 11:50:33.000000000 +0200
@@ -0,0 +1,1869 @@
+PSTOEDIT(1)                    Conversion Tools                    PSTOEDIT(1)
+
+
+
+NAME
+       pstoedit - a tool converting PostScript and PDF files into various vec-
+       tor graphic formats
+
+
+SYNOPSIS
+   FROM THE COMMAND SHELL
+       pstoedit [-v -help]
+
+       pstoedit [-include name of a PostScript file to be included] [-df  font
+       name]  [-nomaptoisolatin1]  [-dis]  [-pngimage filename - for debugging
+       purpose mainly. Write result of processing also to a PNG  file.]   [-q]
+       [-nq]  [-nc]  [-nsp]  [-mergelines]  [-filledrecttostroke] [-mergetext]
+       [-dt] [-adt] [-ndt] [-dgbm] [-correctdefinefont] [-pti] [-pta] [-xscale
+       number]  [-yscale number] [-xshift number] [-yshift number] [-centered]
+       [-minlinewidth number] [-pagenumberformat page number format specifica-
+       tion]  [-split]  [-v] [-usebbfrominput] [-ssp] [-uchar character] [-nb]
+       [-page page number] [-flat  flatness  factor]  [-sclip]  [-ups]  [-rgb]
+       [-useagl]   [-noclip]   [-t2fontsast1]   [-keep]   [-debugfonthandling]
+       [-gstest]  [-nfr]  [-glyphs]  [-useoldnormalization]   [-rotate   angle
+       (0-360)]  [-fontmap name of font map file for pstoedit] [-pagesize page
+       format] [-help] [-gs path to the  Ghostscript  executable/DLL  ]  [-bo]
+       [-pslanguagelevel  PostScript  Language  Level  to  be used 1, 2, or 3]
+       [-psarg argument string] -f "format[:options]" [-gsregbase  Ghostscript
+       base registry path] [ inputfile [outputfile] ]
+
+
+   FROM GSVIEW
+       Pstoedit can be called from within gsview via "Edit | Convert to vector
+       format"
+
+
+   FROM PROGRAMS THAT SUPPORT THE ALDUS GRAPHIC IMPORT FILTER INTERFACE
+       pstoedit can also be used as PostScript and PDF graphic  import  filter
+       for  several programs including MS Office, PaintShop-Pro and PhotoLine.
+       See http://www.pstoedit.net/importps/ for more details.
+
+
+DESCRIPTION
+   RELEASE LEVEL
+       This manpage documents release 3.62 of pstoedit.
+
+
+   USE
+       pstoedit converts PostScript and PDF files to  various  vector  graphic
+       formats.  The  resulting  files  can be edited or imported into various
+       drawing packages. Type
+
+       pstoedit -help
+
+       to get a list of supported output formats. Pstoedit comes with a  large
+       set  of format drivers integrated in the binary. Additional drivers can
+       be    installed    as     plugins     and     are     available     via
+       http://www.pstoedit.net/plugins/.   Just  copy  the plugins to the same
+       directory where the pstoedit binary is installed or - under  Unix  like
+       systems only - alternatively into the lib directory parallel to the bin
+       directory where pstoedit is installed.
+
+       However, unless you also get a license key for the plugins,  the  addi-
+       tional  drivers  will  slightly distort the resulting graphics. See the
+       documentation provided with the plugins for further details.
+
+
+   PRINCIPLE OF CONVERSION
+       pstoedit works by redefining some basic  painting  operators  of  Post-
+       Script,  e.g.  stroke  or show (bitmaps drawn by the image operator are
+       not supported by all output formats.) After redefining these operators,
+       the PostScript or PDF file that needs to be converted is processed by a
+       PostScript interpreter, e.g., Ghostscript (gs(1)).  You  normally  need
+       to  have  a  PostScript interpreter installed in order to use this pro-
+       gram. However, you can perform some "back end only" processing of files
+       following the conventions of the pstoedit intermediate format by speci-
+       fying the  -bo  option.  See  "Available  formats  and  their  specific
+       options" below.
+
+       The  output  that is written by the interpreter due to the redefinition
+       of the drawing operators is a sort of 'flat' PostScript file that  con-
+       tains  only  simple  operations like moveto, lineto, show, etc. You can
+       look at this file using the -f debug option.
+
+       This output is read by end-processing functions of pstoedit  and  trig-
+       gers  the  drawing functions in the selected output format driver some-
+       time called also "backend".
+
+
+   NOTES
+       If you want to process PDF files directly, your PostScript  interpreter
+       must  provide this feature, as does Ghostscript. Aladdin Ghostscript is
+       recommended for processing PDF and PostScript files.
+
+
+OPTIONS
+   GENERAL OPTIONS
+       [-include name of a PostScript file to be included]
+               This option allows to specify  an  additional  PostScript  file
+              that will be executed just before the normal input is read. This
+              is helpful for including specific page settings or for disabling
+              potentially unsafe PostScript operators, e.g., file, renamefile,
+              or deletefile.
+
+
+       [-xscale number]
+               scale by a factor in x-direction
+
+
+       [-yscale number]
+               scale by a factor in y-direction
+
+
+       [-xshift number]
+               shift image in x-direction
+
+
+       [-yshift number]
+               shift image in y-direction
+
+
+       [-centered]
+               center image before scaling or shifting
+
+
+       [-minlinewidth number]
+               minimal line width. All lines thinner than this will  be  drawn
+              in this line width - especially zero-width lines
+
+
+       [-pagenumberformat page number format specification]
+               format specification for page numbers in file name if -split is
+              used. The specification is used to create the page number  using
+              sprintf.  The  specification shall not include the leading % nor
+              the trailing d. Default is empty string which results in format-
+              ting the page number using %d. This results in page numbers like
+              1, 2, ..., 10. Sometimes you may want to have fixed length  with
+              leading  0, so you might want to specify 02 which means 2 digits
+              with leading 0.
+
+
+       [-split]
+               Create a new file for each page of the input. For this the out-
+              put  filename  must contain a %d which is replaced with the cur-
+              rent page number. This option is automatically switched  on  for
+              output  formats  that  do  not support multiple pages within one
+              file, e.g. fig or gnuplot.
+
+
+       [-usebbfrominput]
+               If specified, pstoedit uses the BoundingBox as  is  (hopefully)
+              found in the input file instead of one that is calculated by its
+              own.
+
+
+       [-page page number]
+               Select a single page from a multi-page PostScript or PDF  file.
+
+
+       [-rgb]   Since  version  3.30 pstoedit uses the CMYK colors internally.
+              The -rgb option turns on the old behavior to use RGB values.
+
+
+       [-useagl]
+               use Adobe Glyph List instead of the ISO Latin-1 table (this  is
+              experimental)
+
+
+       [-noclip]
+               do  not  use  clipping (relevant only if output format supports
+              clipping at all)
+
+
+       [-rotate angle (0-360)]
+               Rotate image by angle.
+
+
+       [-pagesize page format]
+               set page size for output medium.  This  option  sets  the  page
+              size  for  the output medium. Currently this is just used by the
+              libplot output format driver, but might be used by other  output
+              format drivers in future. The page size is specified in terms of
+              the usual page size names, e.g. letter or a4.
+
+
+       [-help]
+               show the help information
+
+
+       [-gs path to the Ghostscript executable/DLL ]
+               tells pstoedit which Ghostscript executable/DLL to use -  over-
+              writes the internal search heuristic
+
+
+       [-bo]    You  can  run  backend processing only (without the PostScript
+              interpreter frontend) by first running pstoedit -f  dump  infile
+              dumpfile  and  then running pstoedit -f format -bo dumpfile out-
+              file.
+
+
+       [-psarg argument string]
+               The string  given  with  this  option  is  passed  directly  to
+              Ghostscript when Ghostscript is called to process the PostScript
+              file for  pstoedit.   For  example:  -psarg  "-r300x300".   This
+              causes  the resolution to be changed to 300x300 dpi. (With older
+              versions of Ghostscript, changing the resolution this way has an
+              effect  only  if  the -dis option is given.) If you want to pass
+              multiple options to Ghostscript  you  can  use  multiple  -psarg
+              options   -psarg   opt1   -psarg  opt2  -psarg  opt2.   See  the
+              Ghostscript manual for other possible options.
+
+
+       [-pslanguagelevel PostScript Language Level 1, 2, or 3 to be used]
+               PostScript Language Level 1, 2, or 3 to be used. You can switch
+              Ghostscript  into  PostScript  Level  1  only  mode  by  -pslan-
+              guagelevel 1.  This can be useful for example if the  PostScript
+              file  to  be  converted  uses some Level 2 specific custom color
+              models  that  are  not  supported  by  pstoedit.  However,  this
+              requires  that  the PostScript program checks for the PostScript
+              level supported by the interpreter and "acts"  accordingly.  The
+              default language level is 3.
+
+
+       -f "format[:options]"
+               target  output format recognized by pstoedit.  Since other for-
+              mat drivers can be loaded dynamically, type  pstoedit  -help  to
+              get  a  full  list  of formats. See "Available formats and their
+              specific options " below for an explanation of the [:options] to
+              -f  format. If the format option is not given, pstoedit tries to
+              guess the target format from the suffix of the output  filename.
+              However,  in  a  lot  of cases, this is not a unique mapping and
+              hence pstoedit demands the -f option.
+
+
+       [-gsregbase Ghostscript base registry path]
+               registry path to use as a base path when searching  Ghostscript
+              interpreter.   This  option provides means to specify a registry
+              key under HKLM/Software where to search for GS interpreter  key,
+              version   and  GS_DLL  /  GS_LIB  values.  Example:  "-gsregbase
+              MyCompany" means  that  HKLM/Software/MyCompany/GPL  Ghostscript
+              would be searched instead of HKLM/Software/GPL Ghostscript.
+
+
+   TEXT AND FONT HANDLING RELATED OPTIONS
+       [-df font name]
+               Sometimes  fonts embedded in a PostScript program do not have a
+              fontname. For example, this happens in PostScript  files  gener-
+              ated  by  dvips(1).   In such a case pstoedit uses a replacement
+              font. The default for this is Courier. Another font can be spec-
+              ified  using  the  -df  option. -df Helvetica causes all unnamed
+              fonts to be replaced by Helvetica.
+
+
+       [-nomaptoisolatin1]
+               Normally pstoedit maps all character codes to the ones  defined
+              by  the  ISO  Latin1  encoding. If you specify -nomaptoisolatin1
+              then the encoding from the input PostScript is passed  unchanged
+              to the output. This may result in strange text output but on the
+              other hand may be the only  way  to  get  some  fonts  converted
+              appropriately. Try what fits best to your concrete case.
+
+
+       [-pngimage filename]
+               - for debugging purpose mainly. Write result of processing also
+              to a PNG file.
+
+
+       [-dt]   draw text. Text is drawn as  polygons.  This  might  produce  a
+              large  output  file. This option is automatically switched on if
+              the selected output format does  not  support  text,  e.g.  gnu-
+              plot(1).
+
+
+       [-adt]  automatic draw text. This option turns on the -dt option selec-
+              tively for fonts that seem to be no normal text fonts, e.g. Sym-
+              bol.
+
+
+       [-ndt]   never draw text. Fully disable the heuristics used by pstoedit
+              to decide when to "draw" text instead of  showing  it  as  text.
+              This  may  produce incorrect results, but in some cases it might
+              nevertheless be useful. "Use at own risk".
+
+
+       [-dgbm]
+               experimental - draw also bitmaps generated by fonts/glyphs
+
+
+       [-correctdefinefont]
+               Some PostScript files, e.g. such as generated by ChemDraw,  use
+              the PostScript definefont operator in a way that is incompatible
+              with pstoedit's assumptions. The new font is defined by  copying
+              an  old font without changing the FontName of the new font. When
+              this option is applied, some "patches" are done after a  define-
+              font  in  order  to  make  it  again  compatible with pstoedit's
+              assumptions. This option is not enabled by default, since it may
+              break  other  PostScript  files. It is tested only with ChemDraw
+              generated files.
+
+
+       [-pti]  precision text. Normally a text string is drawn as it occurs in
+              the  input file. However, in some situations, this might produce
+              wrongly positioned characters. This is due  to  limitiations  in
+              most output formats of pstoedit. They cannot represent text with
+              arbitray inter-letter spacing which is easily  possible  in  PDF
+              and  PostScript.  With  -pta, each character of a text string is
+              placed separately. With -pti, this is done only  in  cases  when
+              there  is a non zero inter-letter spacing. The downside of "pre-
+              cision text" is a bigger file size and hard to edit text.
+
+
+       [-pta]  see -pti
+
+
+       [-uchar character]
+               Sometimes pstoedit cannot map a  character  from  the  encoding
+              used  by  the PostScript file to the font encoding of the target
+              format. In this case pstoedit replaces the input character by  a
+              special character in order to show all the places that could not
+              be mapped correctly. The default for this is a  "#".  Using  the
+              -uchar  option it is possible to specify another character to be
+              used instead. If you want to use a space, use -uchar " ".
+
+
+       [-t2fontsast1]
+               Handle Type 2 fonts same as Type  1.  Type  2  fonts  sometimes
+              occur  as  embedded fonts within PDF files. In the default mode,
+              text using such  fonts  is  drawn  as  polygons  since  pstoedit
+              assumes that such a font is not available on the user's machine.
+              If this option is set, pstoedit assumes that the internal encod-
+              ing follows the same as for a standard font and generates normal
+              text output. This assumption may not be true in all  cases.  But
+              it is nearly impossible for pstoedit to verify this assumption -
+              it would have to do a sort of OCR.
+
+
+       [-nfr]  In normal mode pstoedit replaces bitmap fonts with  a  font  as
+              defined  by  the  -df  option. This is done, because most output
+              formats cannot handle such fonts. This behavior can be  switched
+              off  using  the  -nfr option but then it strongly depends on the
+              application reading the  generated  file  whether  the  file  is
+              usable  and  correctly interpreted or not. Any problems are then
+              out of control of pstoedit.
+
+
+       [-glyphs]
+               pass glyph names to the output format driver. So far no  output
+              format driver really uses the glyph names, so this does not have
+              any effect at the moment. It is a preparation for future work.
+
+
+       [-useoldnormalization]
+               Just use this option in case the new  heuristic  introduced  in
+              3.5  does not produce correct results - however, this normaliza-
+              tion of font encoding will  always  be  a  best-effort  approach
+              since  there  is  no real general solution to it with reasonable
+              effort
+
+
+       [-fontmap name of font map file for pstoedit]
+               The font map is a simple text file containing lines in the fol-
+              lowing format:
+
+       document_font_name target_font_name
+
+       Lines beginning with % are considerd comments.
+       For font names with spaces use the "font name with spaces" notation.
+
+       If  a target_font_name starts with /, it is regarded as alias to a for-
+       mer entry.
+
+       Each font name found in the document is checked  against  this  mapping
+       and  if  there  is  a corresponding entry, the new name is used for the
+       output.
+
+       If the -fontmap option is not specified, pstoedit  automatically  looks
+       for the file drivername.fmp in the installation directory and uses that
+       file as a default fontmap file if available. The installation directory
+       is:
+
+
+
+              *      MS  Windows:  The  same directory where the pstoedit exe-
+                     cutable is located
+
+
+              *      Unix:
+                     <The directory where the pstoedit executable is  located>
+                     /../lib/
+
+
+       The  mpost.fmp  in  the misc directory of the pstoedit distibution is a
+       sample map file with mappings from over 5000 PostScript font  names  to
+       their  TeX  equivalents.  This is useful because MetaPost is frequently
+       used with TeX/LaTeX and those programs do not use standard font  names.
+       This  file  and the MetaPost output format driver are provided by Scott
+       Pakin (scott+ps2ed_AT_pakin.org).  Another example is  wemf.fmp  to  be
+       used  under Windows. See the misc directory of the pstoedit source dis-
+       tribution.  After loading  the  implicit  (based  on  driver  name)  or
+       explicit  (based  on  the -fontmap option) font map file, a system spe-
+       cific map file is searched and loaded from the  installation  directory
+       (unix.fmp  or  windows.fmp).  This file can be used to redirect certain
+       fonts to system specific names using the /AliasName notation  described
+       above.
+
+
+
+   DEBUG OPTIONS
+       [-dis]   Open  a  display  during processing by Ghostscript. Some files
+              only work correctly this way.
+
+
+       [-q]    quiet mode - do not write startup message
+
+
+       [-nq]   No exit from the PostScript interpreter.  Normally  Ghostscript
+              exits after processing the pstoedit input file. For debugging it
+              can be useful to avoid this. If you do, you will  have  to  type
+              quit at the GS> prompt to exit from Ghostscript.
+
+
+       [-v]     Switch  on  verbose mode. Some additional information is shown
+              during processing.
+
+
+       [-nb]   Since version 3.10 pstoedit uses the  -dDELAYBIND  option  when
+              calling  Ghostscript.  Previously  the  -dNOBIND option was used
+              instead but that sometimes caused problems  if  a  user's  Post-
+              Script file overloaded standard PostScript operator with totally
+              new semantic, e.g. lt for lineto instead of the standard meaning
+              of  "less  than". Using -nb the old style can be activated again
+              in case the -dDELAYBIND gives different results  as  before.  In
+              such a case please also contact the author.
+
+
+       [-ups]   write text as plain string instead of hex string in intermedi-
+              ate format - normally useful for trouble shooting and  debugging
+              only.
+
+
+       [-keep]
+               keep  the  intermediate  files produced by pstoedit - for debug
+              purposes only
+
+
+       [-debugfonthandling]
+               writes verbose messages related to internal font  processing  -
+              for debug purposes only
+
+
+       [-gstest]
+               perform a basic test of the interworking with Ghostscript
+
+
+   DRAWING RELATED OPTIONS
+       [-nc]    no  curves.   Normally  pstoedit tries to keep curves from the
+              input and transfers them to the output if the output format sup-
+              ports curves. If the output format does not support curves, then
+              pstoedit replaces curves by a series of lines  (see  also  -flat
+              option). However, in some cases the user might wish to have this
+              behavior also for output formats that originally support curves.
+              This can be forced via the -nc option.
+
+
+       [-nsp]   normally subpaths are used if the output format supports them.
+              This option turns off subpaths.
+
+
+       [-mergelines]
+               Some output formats permit the representation of  filled  poly-
+              gons  with  edges  that  are  in a different color than the fill
+              color. Since PostScript does not support this  by  the  standard
+              drawing primitives directly, drawing programs typically generate
+              two objects (the outline and the filled polygon) into the  Post-
+              Script output. pstoedit is able to recombine these, if they fol-
+              low each other directly and you specify  -mergelines.   However,
+              this  merging  is  not  supported  by  all output formats due to
+              restrictions in the target format.
+
+
+       [-filledrecttostroke]
+               Rectangles filled with a solid color  can  be  converted  to  a
+              stroked  line  with a width that corresponds to the width of the
+              rectangle. This is of primary interest for output formats  which
+              do  not  support filled polygons at all. But it is restricted to
+              rectangles only, i.e. it is not supported for general polygons
+
+
+       [-mergetext]
+               In order to produce nice looking text output, programs  produc-
+              ing PostScript files often split words into smaller pieces which
+              are then placed individually  on  adjacent  positions.  However,
+              such  split  text is hard to edit later on and hence it is some-
+              time better to recombine these pieces again to form a  word  (or
+              even  sequence  of  words).  For  this  pstoedit implements some
+              heuristics about what text pieces are to be considered parts  of
+              a  split word. This is based on the geometrical proximity of the
+              different parts and seems to work quite well so far.  But  there
+              are certainly cases where this simple heuristic fails. So please
+              check the results carefully.
+
+
+       [-ssp]  simulate subpaths.  Several output formats do not support Post-
+              Script  paths  containing subpaths, i.e. paths with intermediate
+              movetos. In the normal case, each subpath is treated as an inde-
+              pendent path for such output formats. This can lead to bad look-
+              ing results. The most common case where this happens is  if  you
+              use the -dt option and show some text with letters like e, o, or
+              b, i.e. letters that have a "hole". When the -ssp option is set,
+              pstoedit tries to eliminate these problems. However, this option
+              is CPU time intensive!
+
+
+       [-flat flatness factor]
+               If the output format does not support curves in the  way  Post-
+              Script  does  or  if the -nc option is specified, all curves are
+              approximated by lines. Using the -flat option  one  can  control
+              this  approximation.  This  parameter is directly converted to a
+              PostScript  setflat  command.  Higher  numbers,  e.g.  10   give
+              rougher, lower numbers, e.g. 0.1, give finer approximations.
+
+
+       [-sclip]
+               simulate clipping.  Most output formats of pstoedit do not have
+              native support for clipping. For that pstoedit offers an  option
+              to perform the clipping of the graphics directly without passing
+              the clippath to the output  driver.  However,  this  results  in
+              curves  being replaced by a lot of line segments and thus larger
+              output files. So use this option only if your output looks  dif-
+              ferent  from the input due to clipping. In addition, this "simu-
+              lated clipping" is not exactly the  same  as  defined  in  Post-
+              Script. There might be lines drawn at double size. Also clipping
+              of text is not supported unless you also use the -dt option.
+
+
+   INPUT AND OUTFILE FILE ARGUMENTS
+       [ inputfile [outputfile] ]
+
+       If neither an input nor an output file is given as  argument,  pstoedit
+       works  as  filter  reading  from standard input and writing to standard
+       output.  The special filename "-" can also be used. It represents stan-
+       dard  input  if it is the first on the command line and standard output
+       if it is the second. So "pstoedit -  output.xxx"  reads  from  standard
+       input and writes to output.xxx
+
+
+AVAILABLE FORMATS AND THEIR SPECIFIC OPTIONS
+       pstoedit  allows passing individual options to an output format driver.
+       This is done by appending all options to the format specified after the
+       -f  option. The format specifier and its options must be separated by a
+       colon (:). If more than one option needs to be  passed  to  the  output
+       format  driver,  the  whole argument to -f must be enclosed within dou-
+       ble-quote characters, thus:
+
+       -f "format[:option option ...]"
+
+       To see which options are supported by a specific format, type: pstoedit
+       -f format:-help
+
+       The  following  description  of  the  different  formats  supported  by
+       pstoedit is extracted from the source code of the individual drivers.
+
+
+   psf - Flattened PostScript (no curves)
+       No driver specific options
+
+   ps - Simplified PostScript with curves
+       No driver specific options
+
+   debug - for test purposes
+       No driver specific options
+
+   dump - for test purposes (same as debug)
+       No driver specific options
+
+   gs - any device that Ghostscript provides - use gs:format, e.g. gs:pdfwrite
+       No driver specific options
+
+   ps2ai - Adobe Illustrator via ps2ai.ps of Ghostscript
+       No driver specific options
+
+   gmfa - ASCII GNU metafile
+       [-plotformat string]
+               plotutil format to generate
+
+
+   gmfb - binary GNU metafile
+       [-plotformat string]
+               plotutil format to generate
+
+
+   plot - GNU libplot output types, e.g. plot:-plotformat X
+       [-plotformat string]
+               plotutil format to generate
+
+
+   plot-cgm - cgm via GNU libplot
+       [-plotformat string]
+               plotutil format to generate
+
+
+   plot-ai - ai via GNU libplot
+       [-plotformat string]
+               plotutil format to generate
+
+
+   plot-svg - svg via GNU libplot
+       [-plotformat string]
+               plotutil format to generate
+
+
+   plot-ps - ps via GNU libplot
+       [-plotformat string]
+               plotutil format to generate
+
+
+   plot-fig - fig via GNU libplot
+       [-plotformat string]
+               plotutil format to generate
+
+
+   plot-pcl - pcl via GNU libplot
+       [-plotformat string]
+               plotutil format to generate
+
+
+   plot-hpgl - hpgl via GNU libplot
+       [-plotformat string]
+               plotutil format to generate
+
+
+   plot-tek - tek via GNU libplot
+       [-plotformat string]
+               plotutil format to generate
+
+
+   magick - MAGICK driver
+       This  driver  uses  the  C++  API  of  ImageMagick or GraphicsMagick to
+       finally produce different output formats. The output format  is  deter-
+       mined automatically by Image-/GraphicsMagick based on the suffix of the
+       output filename. So an output file test.png will force the creation  of
+       an image in PNG format.
+
+       No driver specific options
+
+   swf - SWF driver:
+       [-cubic]
+               cubic ???
+
+
+       [-trace]
+               trace ???
+
+
+   svg - Scalable Vector Graphics
+       [-localdtd]
+               use local DTD
+
+
+       [-standalone]
+               create stand-alone type svg
+
+
+       [-withdtd]
+               write DTD
+
+
+       [-withgrouping]
+               write also ordinary save/restores as SVG group
+
+
+       [-nogroupedpath]
+               do not write a group around paths
+
+
+       [-noviewbox]
+               do not write a view box
+
+
+       [-texmode]
+               TeX mode
+
+
+       [-imagetofile]
+               write raster images to separate files instead of embedding them
+
+
+       [-notextrendering]
+               do not write textrendering attribute
+
+
+       [-border number]
+               additional border to draw around bare bounding box (in  percent
+              of width and height)
+
+
+       [-title string]
+               text to use as title for the generated document
+
+
+   xaml - eXtensible Application Markup Language
+       [-localdtd]
+               use local DTD
+
+
+       [-standalone]
+               create stand-alone type svg
+
+
+       [-withdtd]
+               write DTD
+
+
+       [-withgrouping]
+               write also ordinary save/restores as SVG group
+
+
+       [-nogroupedpath]
+               do not write a group around paths
+
+
+       [-noviewbox]
+               do not write a view box
+
+
+       [-texmode]
+               TeX mode
+
+
+       [-imagetofile]
+               write raster images to separate files instead of embedding them
+
+
+       [-notextrendering]
+               do not write textrendering attribute
+
+
+       [-border number]
+               additional border to draw around bare bounding box (in  percent
+              of width and height)
+
+
+       [-title string]
+               text to use as title for the generated document
+
+
+   cgmb1 - CGM Binary format (V1)
+       No driver specific options
+
+   cgmb - CGM Binary format (V3)
+       No driver specific options
+
+   cgmt - CGM Textual format
+       No driver specific options
+
+   mif - (Frame)Maker Intermediate Format
+       [-nopage]
+               do not add a separate Page entry
+
+
+   rtf - Rich Text Format
+       No driver specific options
+
+   wemf - Wogl's version of EMF
+       [-df]   write info about font processing
+
+
+       [-dumpfontmap]
+               write info about font mapping
+
+
+       [-size:psbbox]
+               use  the  bounding box as calculated by the PostScript frontend
+              as size
+
+
+       [-size:fullpage]
+               set the size to that of the full page
+
+
+       [-size:automatic]
+               let MS Windows calculate the bounding box (default)
+
+
+       [-keepimages]
+               debug option - keep the embedded bitmaps as external files
+
+
+       [-useoldpolydraw]
+               do not use MS Windows' PolyDraw but an emulation of it -  some-
+              times needed for certain programs reading the EMF files
+
+
+       [-OO]   generate OpenOffice compatible EMF file
+
+
+   wemfc - Wogl's version of EMF with experimental clip support
+       [-df]   write info about font processing
+
+
+       [-dumpfontmap]
+               write info about font mapping
+
+
+       [-size:psbbox]
+               use  the  bounding box as calculated by the PostScript frontend
+              as size
+
+
+       [-size:fullpage]
+               set the size to that of the full page
+
+
+       [-size:automatic]
+               let MS Windows calculate the bounding box (default)
+
+
+       [-keepimages]
+               debug option - keep the embedded bitmaps as external files
+
+
+       [-useoldpolydraw]
+               do not use MS Windows' PolyDraw but an emulation of it -  some-
+              times needed for certain programs reading the EMF files
+
+
+       [-OO]   generate OpenOffice compatible EMF file
+
+
+   wemfnss - Wogl's version of EMF - no subpaths
+       [-df]   write info about font processing
+
+
+       [-dumpfontmap]
+               write info about font mapping
+
+
+       [-size:psbbox]
+               use  the  bounding box as calculated by the PostScript frontend
+              as size
+
+
+       [-size:fullpage]
+               set the size to that of the full page
+
+
+       [-size:automatic]
+               let MS Windows calculate the bounding box (default)
+
+
+       [-keepimages]
+               debug option - keep the embedded bitmaps as external files
+
+
+       [-useoldpolydraw]
+               do not use MS Windows' PolyDraw but an emulation of it -  some-
+              times needed for certain programs reading the EMF files
+
+
+       [-OO]   generate OpenOffice compatible EMF file
+
+
+   hpgl - HPGL code
+       [-penplotter]
+               plotter  is  pen  plotter  (i.e.  no  support for specific line
+              widths)
+
+
+       [-pencolorsfromfile]
+               read pen colors from file drvhpgl.pencolors in pstoedit's  data
+              directory
+
+
+       [-pencolors number]
+               maximum number of pen colors to be used by pstoedit (default 0)
+              -
+
+
+       [-filltype string]
+               select fill type e.g. FT 1
+
+
+       [-hpgl2]
+               Use HPGL/2 instead of HPGL/1
+
+
+       [-rot90]
+               rotate hpgl by 90 degrees
+
+
+       [-rot180]
+               rotate hpgl by 180 degrees
+
+
+       [-rot270]
+               rotate hpgl by 270 degrees
+
+
+   pcl - PCL code
+       [-penplotter]
+               plotter is pen plotter  (i.e.  no  support  for  specific  line
+              widths)
+
+
+       [-pencolorsfromfile]
+               read  pen colors from file drvhpgl.pencolors in pstoedit's data
+              directory
+
+
+       [-pencolors number]
+               maximum number of pen colors to be used by pstoedit (default 0)
+              -
+
+
+       [-filltype string]
+               select fill type e.g. FT 1
+
+
+       [-hpgl2]
+               Use HPGL/2 instead of HPGL/1
+
+
+       [-rot90]
+               rotate hpgl by 90 degrees
+
+
+       [-rot180]
+               rotate hpgl by 180 degrees
+
+
+       [-rot270]
+               rotate hpgl by 270 degrees
+
+
+   pic - PIC format for troff et.al.
+       [-troff]
+               troff mode (default is groff)
+
+
+       [-landscape]
+               landscape output
+
+
+       [-portrait]
+               portrait output
+
+
+       [-keepfont]
+               print unrecognized literally
+
+
+       [-text]
+               try not to make pictures from running text
+
+
+       [-debug]
+               enable debug output
+
+
+   asy - Asymptote Format
+       No driver specific options
+
+   cairo - cairo driver
+       generates compilable c code for rendering with cairo
+
+
+       [-pango]
+               use pango for font rendering
+
+
+       [-funcname string]
+               sets  the  base name for the generated functions and variables.
+              e.g. myfig
+
+
+       [-header string]
+               sets the output file name for the generated C header file. e.g.
+              myfig.h
+
+
+   cfdg - Context Free Design Grammar
+       Context   Free   Design   Grammar,   usable   by   Context   Free   Art
+       (http://www.contextfreeart.org/)
+
+       No driver specific options
+
+   dxf - CAD exchange format
+       [-polyaslines]
+               use LINE instead of POLYLINE in DXF
+
+
+       [-mm]   use mm coordinates instead of points in DXF (mm=pt/72*25.4)
+
+
+       [-ctl]  map colors to layers
+
+
+       [-splineaspolyline]
+               approximate splines with PolyLines (only for -f dxf_s)
+
+
+       [-splineasnurb]
+               experimental (only for -f dxf_s)
+
+
+       [-splineasbspline]
+               experimental (only for -f dxf_s)
+
+
+       [-splineassinglespline]
+               experimental (only for -f dxf_s)
+
+
+       [-splineasmultispline]
+               experimental (only for -f dxf_s)
+
+
+       [-splineasbezier]
+               use Bezier splines in DXF format (only for -f dxf_s)
+
+
+       [-splineprecision number]
+               number of samples to take from spline curve when doing approxi-
+              mation  with  -splineaspolyline or -splineasmultispline - should
+              be >= 2 (default 5)
+
+
+       [-dumplayernames]
+               dump all layer names found to standard output
+
+
+       [-layers string]
+               layers to be shown (comma separated list  of  layer  names,  no
+              space)
+
+
+       [-layerfilter string]
+               layers  to  be  hidden (comma separated list of layer names, no
+              space)
+
+
+   dxf_s - CAD exchange format with splines
+       [-polyaslines]
+               use LINE instead of POLYLINE in DXF
+
+
+       [-mm]   use mm coordinates instead of points in DXF (mm=pt/72*25.4)
+
+
+       [-ctl]  map colors to layers
+
+
+       [-splineaspolyline]
+               approximate splines with PolyLines (only for -f dxf_s)
+
+
+       [-splineasnurb]
+               experimental (only for -f dxf_s)
+
+
+       [-splineasbspline]
+               experimental (only for -f dxf_s)
+
+
+       [-splineassinglespline]
+               experimental (only for -f dxf_s)
+
+
+       [-splineasmultispline]
+               experimental (only for -f dxf_s)
+
+
+       [-splineasbezier]
+               use Bezier splines in DXF format (only for -f dxf_s)
+
+
+       [-splineprecision number]
+               number of samples to take from spline curve when doing approxi-
+              mation  with  -splineaspolyline or -splineasmultispline - should
+              be >= 2 (default 5)
+
+
+       [-dumplayernames]
+               dump all layer names found to standard output
+
+
+       [-layers string]
+               layers to be shown (comma separated list  of  layer  names,  no
+              space)
+
+
+       [-layerfilter string]
+               layers  to  be  hidden (comma separated list of layer names, no
+              space)
+
+
+   fig - .fig format for xfig
+       The xfig format driver supports special fontnames, which  may  be  pro-
+       duced  by  using  a fontmap file. The following types of names are sup-
+       ported :
+       General notation:
+       "PostScript Font Name" ((LaTeX|PostScript|empty)(::special)::)XFigFontName
+
+       Examples:
+
+       Helvetica LaTeX::SansSerif
+       Courier LaTeX::special::Typewriter
+       GillSans "AvantGarde Demi"
+       Albertus PostScript::special::"New Century Schoolbook Italic"
+       Symbol ::special::Symbol (same as PostScript::special::Symbol)
+
+       See also the file  examplefigmap.fmp  in  the  misc  directory  of  the
+       pstoedit  source  distribution  for  an example font map file for xfig.
+       Please note that the fontname has to be among those supported by  xfig.
+       See  -  http://www.xfig.org/userman/fig-format.html for a list of legal
+       font names
+
+
+       [-startdepth number]
+               Set the initial depth (default 999)
+
+
+       [-metric]
+               Switch to centimeter display (default inches)
+
+
+       [-usecorrectfontsize]
+               do not scale fonts for xfig. Use this  if  you  also  use  this
+              option with xfig
+
+
+       [-depth number]
+               Set the page depth in inches (default 11)
+
+
+   xfig - .fig format for xfig
+       See fig format for more details.
+
+
+       [-startdepth number]
+               Set the initial depth (default 999)
+
+
+       [-metric]
+               Switch to centimeter display (default inches)
+
+
+       [-usecorrectfontsize]
+               do  not  scale  fonts  for  xfig. Use this if you also use this
+              option with xfig
+
+
+       [-depth number]
+               Set the page depth in inches (default 11)
+
+
+   tfig - .fig format for xfig
+       Test only
+
+
+       [-startdepth number]
+               Set the initial depth (default 999)
+
+
+       [-metric]
+               Switch to centimeter display (default inches)
+
+
+       [-usecorrectfontsize]
+               do not scale fonts for xfig. Use this  if  you  also  use  this
+              option with xfig
+
+
+       [-depth number]
+               Set the page depth in inches (default 11)
+
+
+   gcode - emc2 gcode format
+       See also: http://linuxcnc.org/
+
+       No driver specific options
+
+   gnuplot - gnuplot format
+       No driver specific options
+
+   gschem - gschem format
+       See also: http://www.geda.seul.org/tools/gschem/
+
+       No driver specific options
+
+   idraw - Interviews draw format (EPS)
+       No driver specific options
+
+   java1 - java 1 applet source code
+       [java class name string]
+               name of java class to generate
+
+
+   java2 - java 2 source code
+       [java class name string]
+               name of java class to generate
+
+
+   kil - .kil format for Kontour
+       No driver specific options
+
+   latex2e - LaTeX2e picture format
+       [-integers]
+               round all coordinates to the nearest integer
+
+
+   lwo - LightWave 3D object format
+       No driver specific options
+
+   mma - Mathematica graphics
+       [-eofillfills]
+               Filling is used for eofill (default is not to fill)
+
+
+   mpost - MetaPost format
+       No driver specific options
+
+   noixml - Nemetschek NOI XML format
+       Nemetschek Object Interface XML format
+
+
+       [-r string]
+               Allplan resource file
+
+
+       [-bsl number]
+               Bezier Split Level (default 3)
+
+
+   pcbi - engrave data - insulate/PCB format
+       See  http://home.vr-web.de/~hans-juergen-jahn/software/devpcb.html  for
+       more details.
+
+       No driver specific options
+
+   pcb - pcb format
+       See    also:     http://pcb.sourceforge.net     and     http://www.pen-
+       guin.cz/~utx/pstoedit-pcb/
+
+
+       [-grid missing arg name]
+               attempt  to  snap relevant output to grid (mils) and put failed
+              objects to a different layer
+
+
+       [-snapdist missing arg name]
+               grid snap distance ratio (0 < snapdist <= 0.5, default 0.1)
+
+
+       [-tshiftx missing arg name]
+               additional x shift measured in target units (mils)
+
+
+       [-tshifty missing arg name]
+               additional y shift measured in target units (mils)
+
+
+       [-grid missing arg name]
+               attempt to snap relevant output to grid (mils) and  put  failed
+              objects to a different layer
+
+
+       [-mm]   switch to metric units (mm)
+
+
+       [-stdnames]
+               use standard layer names instead of descriptive names
+
+
+       [-forcepoly]
+               force all objects to be interpreted as polygons
+
+
+   pcbfill - pcb format with fills
+       See also: http://pcb.sourceforge.net
+
+       No driver specific options
+
+   pdf - Adobe's Portable Document Format
+       No driver specific options
+
+   pptx - PresentationML (PowerPoint) format
+       This is the format used internally by Microsoft PowerPoint. LibreOffice
+       can also read/write PowerPoint files albeit with some lack of function-
+       ality.
+
+
+       [-colors string]
+               "original" to retain original colors (default), "theme" to con-
+              vert randomly to theme colors, or "theme-lum" also to vary lumi-
+              nance
+
+
+       [-fonts string]
+               use  "windows"  fonts  (default), "native" fonts, or convert to
+              the "theme" font
+
+
+       [-embed string]
+               embed fonts, specified as a comma-separated list of  EOT-format
+              font files
+
+
+   rib - RenderMan Interface Bytestream
+       No driver specific options
+
+   rpl - Real3D Programming Language format
+       No driver specific options
+
+   sample  - sample driver: if you do not want to see this, uncomment the cor-
+       responding line in makefile and make again
+       this is a long description for the sample driver
+
+
+       [-sampleoption integer]
+               just an example
+
+
+   sk - Sketch format
+       No driver specific options
+
+   svm - StarView/OpenOffice.org metafile
+       StarView/OpenOffice.org   metafile,   readable   from    OpenOffice.org
+       1.0/StarOffice 6.0 and above.
+
+
+       [-m]    map to Arial
+
+
+       [-nf]   emulate narrow fonts
+
+
+   text - text in different forms
+       [-height number]
+               page height in terms of characters
+
+
+       [-width number]
+               page width in terms of characters
+
+
+       [-dump]
+               dump text pieces
+
+
+   tgif - Tgif .obj format
+       [-ta]   text as attribute
+
+
+   tk - tk and/or tk applet source code
+       [-R]    swap HW
+
+
+       [-I]    no impress
+
+
+       [-n string]
+               tagnames
+
+
+   vtk - VTK driver: if you do not want to see this, uncomment the correspond-
+       ing line in makefile and make again
+       this is a long description for the VTKe driver
+
+
+       [-VTKeoption integer]
+               just an example
+
+
+   wmf - MS Windows metafile
+       [-m]    map to Arial
+
+
+       [-nf]   emulate narrow fonts
+
+
+       [-drawbb]
+               draw bounding box
+
+
+       [-p]    prune line ends
+
+
+       [-nfw]  Newer versions of MS Windows (2000, XP, Vista) will not  accept
+              WMF/EMF  files  generated  when this option is set and the input
+              contains text. But if this option is not set, then  the  WMF/EMF
+              driver  will  estimate  interletter spacing of text using a very
+              coarse heuristic. This may result in ugly looking output. On the
+              other  hand,  OpenOffice  can  still  read  EMF/WMF  files where
+              pstoedit delegates the calculation of the inter  letter  spacing
+              to  the  program  reading  the WMF/EMF file. So if the generated
+              WMF/EMF file shall never be processed under MS Windows, use this
+              option.  If  WMF/EMF  files  with high precision text need to be
+              generated under *nix the only option is to use the  -pta  option
+              of  pstoedit.  However  that  causes every text to be split into
+              single characters which makes the text hard to edit  afterwards.
+              Hence  the  -nfw  option  provides  a sort of compromise between
+              portability and nice to edit but still nice looking text.  Again
+              -  this option has no meaning when pstoedit is executed under MS
+              Windows anyway. In that case the output is portable  but  never-
+              theless not split and still looks fine.
+
+
+       [-winbb]
+               let  the  MS  Windows  API  calculate the Bounding Box (Windows
+              only)
+
+
+       [-OO]   generate OpenOffice compatible EMF file
+
+
+   emf - Enhanced MS Windows Metafile
+       [-m]    map to Arial
+
+
+       [-nf]   emulate narrow fonts
+
+
+       [-drawbb]
+               draw bounding box
+
+
+       [-p]    prune line ends
+
+
+       [-nfw]  Newer versions of MS Windows (2000, XP, Vista) will not  accept
+              WMF/EMF  files  generated  when this option is set and the input
+              contains text. But if this option is not set, then  the  WMF/EMF
+              driver  will  estimate  interletter spacing of text using a very
+              coarse heuristic. This may result in ugly looking output. On the
+              other  hand,  OpenOffice  can  still  read  EMF/WMF  files where
+              pstoedit delegates the calculation of the inter  letter  spacing
+              to  the  program  reading  the WMF/EMF file. So if the generated
+              WMF/EMF file shall never be processed under MS Windows, use this
+              option.  If  WMF/EMF  files  with high precision text need to be
+              generated under *nix the only option is to use the  -pta  option
+              of  pstoedit.  However  that  causes every text to be split into
+              single characters which makes the text hard to edit  afterwards.
+              Hence  the  -nfw  option  provides  a sort of compromise between
+              portability and nice to edit but still nice looking text.  Again
+              -  this option has no meaning when pstoedit is executed under MS
+              Windows anyway. In that case the output is portable  but  never-
+              theless not split and still looks fine.
+
+
+       [-winbb]
+               let  the  MS  Windows  API  calculate the Bounding Box (Windows
+              only)
+
+
+       [-OO]   generate OpenOffice compatible EMF file
+
+
+NOTES
+   AUTOTRACE
+       pstoedit cooperates with autotrace. Autotrace can now  produce  a  dump
+       file  for  further  processing by pstoedit using the -bo (backend only)
+       option.  Autotrace is a program written by a group around Martin  Weber
+       and can be found at http://sourceforge.net/projects/autotrace/.
+
+
+   PS2AI
+       The  ps2ai  output format driver is not a native pstoedit output format
+       driver. It does not use the pstoedit PostScript flattener,  instead  it
+       uses  the  PostScript  program  ps2ai.ps  which  is  installed  in  the
+       Ghostscript distribution directory. It is included to provide the  same
+       "look-and-feel"  for  the  conversion to AI.  The additional benefit is
+       that this conversion is now available also via the  "convert-to-vector"
+       menu of Gsview. However, lot's of files do not convert nicely or at all
+       using ps2ai.ps. So a native pstoedit driver would be much better.  Any-
+       one  out  there  to  take  this? The AI format is usable for example by
+       Mayura Draw (http://www.mayura.com).   Also  a  driver  to  the  Mayura
+       native format would be nice.
+
+       An  alternative  to  the  ps2ai  based  driver  is available via the -f
+       plot:ai format if the libplot(ter) is installed.
+
+       You should use a version of Ghostscript greater than or equal  to  6.00
+       for using the ps2ai output format driver.
+
+
+   METAPOST
+       Note  that,  as  far  as  Scott  knows, MetaPost does not support Post-
+       Script's eofill. The MetaPost output format driver just converts eofill
+       to  fill, and issues a warning if verbose is set. Fortunately, very few
+       PostScript programs rely on the even-odd fill rule,  even  though  many
+       specify it.
+
+       For more on MetaPost see:
+
+       http://tug.org/metapost
+
+
+   CONTEXT FREE - CFDG
+       The  driver for the CFDG format (drvcfdg) defines one shape per page of
+       PostScript, but only the first shape is actually rendered  (unless  the
+       user  edits the generated CFDG code, of course).  CFDG does not support
+       multi-page output, so this probably is a reasonable thing to do.
+
+       For more on Context Free see: http://www.contextfreeart.org/
+
+
+   LaTeX2E
+       *      LaTeX2e's picture environment is not very powerful. As a result,
+              many elementary PostScript constructs are ignored -- fills, line
+              thicknesses (besides "thick" and "thin"), and dash patterns,  to
+              name   a   few.   Furthermore,   complex  pictures  may  overrun
+              TeX's{}memory capacity.  (The eepic package overcomes many  such
+              restrictions.)
+
+
+       *      Some  PostScript  constructs are not supported directly by "pic-
+              ture", but can be handled by external packages. If a figure uses
+              color,  the  top-level  document  will  need  to do a "\usepack-
+              age{color}" or "\usepackage{xcolor}". And if a  figure  contains
+              rotated  text, the top-level document will need to do a "\usepa-
+              ckage{rotating}".
+
+
+       *      All lengths, coordinates, and font sizes output  by  the  output
+              format  driver  are in terms of \unitlength, so scaling a figure
+              is simply a matter of doing a "\setlength{\unitlength}{...}".
+
+
+       *      The output format driver currently supports  one  output  format
+              driver  specific  option,  "integers", which rounds all lengths,
+              coordinates, and font sizes to the nearest integer.  This  makes
+              hand-editing the picture a little nicer.
+
+
+       *      Why is this output format driver useful? One answer is portabil-
+              ity; any LaTeX2e system can handle the picture environment, even
+              if it cannot handle PostScript graphics. (pdfLaTeX comes to mind
+              here.) A second answer is that pictures can be edited easily  to
+              contain  any arbitrary LaTeX2e code. For instance, the text in a
+              figure can be modified to contain complex mathematics, non-Latin
+              alphabets,  bibliographic citations, or -- the real reason Scott
+              wrote the LaTeX2e{}output format driver  --  hyperlinks  to  the
+              surrounding document (with help from the hyperref package).
+
+
+   CREATING A NEW OUTPUT FORMAT DRIVER
+       To implement a new output format driver you can start from drvsampl.cpp
+       and drvsampl.h.  See also comments in drvbase.h and drvfuncs.h  for  an
+       explanation of methods that should be implemented for a new output for-
+       mat driver.
+
+
+ENVIRONMENT VARIABLES
+       A default PostScript interpreter to be called by pstoedit is  specified
+       at  compile time. You can overwrite the default by setting the GS envi-
+       ronment variable to the name of a suitable PostScript interpreter.
+
+       You can check which name of a PostScript interpreter was compiled  into
+       pstoedit using: pstoedit -help -v.
+
+       See  the  Ghostscript  manual for descriptions of environment variables
+       used by Ghostscript, most importantly  GS_FONTPATH  and  GS_LIB;  other
+       environment  variables  also affect output to display, print, and addi-
+       tional filtering and processing. See the related documentation.
+
+       pstoedit allocates temporary files using the function tempnam(3).  Thus
+       the  location  for temporary files might be controllable by other envi-
+       ronment variables used by this function. See the tempnam(3) manpage for
+       descriptions of environment variables used. On UNIX like system this is
+       probably the TMPDIR variable, on DOS/WINDOWS either TMP or TEMP.
+
+
+TROUBLE SHOOTING
+       If you have problems with pstoedit first try whether  Ghostscript  suc-
+       cessfully displays your file. If yes, then try pstoedit -f ps infile.ps
+       testfile.ps and check  whether  testfile.ps  still  displays  correctly
+       using  Ghostscript.  If  this  file  does not look correctly then there
+       seems to be a problem with pstoedit's PostScript frontend. If this file
+       looks  good  but the output for a specific format is wrong, the problem
+       is probably in the output format driver for  the  specific  format.  In
+       either case send bug fixes and reports to the author.
+
+       A  common  problem  with  PostScript  files is that the PostScript file
+       redefines one of  the  standard  PostScript  operators  inconsistently.
+       There  is no effect of this if you just print the file since the origi-
+       nal PostScript "program" uses these new operator in the new meaning and
+       does  not  use  the  original ones anymoew. However, when run under the
+       control of pstoedit, these operators are  expected  to  work  with  the
+       original semantics.
+
+       So far I've seen redefinitions for:
+
+
+       *      lt - "less-then" to mean "draw a line to"
+
+       *      string - "create a string object" to mean "draw a string"
+
+       *      length - "get the length of e.g. a string" to a "float constant"
+
+       I've included work-arounds for the ones mentioned above, but some  oth-
+       ers could show up in addition to those.
+
+
+RESTRICTIONS
+       *      Non-standard  fonts  (e.g.  TeX  bitmap  fonts)  are mapped to a
+              default font which can be changed using the -df option. pstoedit
+              chooses  the size of the replacement font such that the width of
+              the string in the original font is the same as with the replace-
+              ment  font.  This is done for each text fragment displayed. Spe-
+              cial character encoding support is limited in this  case.  If  a
+              character cannot be mapped into the target format, pstoedit dis-
+              plays a '#' instead. See also the -uchar option.
+
+
+       *      pstoedit supports bitmap graphics only for  some  output  format
+              drivers.
+
+
+       *      Some  output  format  drivers,  e.g.  the  Gnuplot output format
+              driver or the 3D output format driver (rpl,  lwo,  rib)  do  not
+              support text.
+
+
+       *      For  most  output format drivers pstoedit does not support clip-
+              ping (mainly due to limitations in the target format).  You  can
+              try to use the -sclip option to simulate clipping. However, this
+              does not work in all cases as expected.
+
+
+       *      Special note about the Java output  format  drivers  (java1  and
+              java2).   The  java output format drivers generate a java source
+              file that needs other files in order to be compiled and  usable.
+              These  other  files  are  Java  classes  (one applet and support
+              classes) that allow to step through the individual  pages  of  a
+              converted  PostScript  document. This applet can easily be acti-
+              vated     from     a     html-document.     See     the     con-
+              trib/java/java1/readme_java1.txt             or             con-
+              trib/java/java2/readme_java2.htm file for more details.
+
+
+FAQS
+       1.     Why do letters like O or B get strange if converted to tgif/xfig
+              using the -dt option?
+
+       This  is  because  most  output format drivers do not support composite
+       paths with intermediate gaps (moveto's) and second do not support  very
+       well  the  (eo)fill  operators  of  PostScript (winding rule). For such
+       objects pstoedit breaks them into smaller objects whenever such  a  gap
+       is  found.  This  results  in  the "hole" being filled with black color
+       instead of beeing transparent. Since version 3.11 you can try the  -ssp
+       option in combination with the xfig output format driver.
+
+
+       2.     Why  does  pstoedit  produce  ugly results from PostScript files
+              generated by dvips?
+
+       TeX documents usually use bitmap fonts. Such fonts cannot  be  used  as
+       native  font  in  other  format. So pstoedit replaces the TeX font with
+       another native font. Of course, the replacement font will in most cases
+       produce another look, especially if mathematical symbols are used.  Try
+       to use PostScript fonts instead of the bitmap fonts when  generating  a
+       PostScript file from TeX or LaTeX.
+
+
+AUTHOR
+       Wolfgang                Glunz,                wglunz35_AT_pstoedit.net,
+       http://de.linkedin.com/in/wolfgangglunz
+
+
+CANONICAL ARCHIVE SITE
+       http://www.pstoedit.net/pstoedit/
+
+       At this site you also find more information about pstoedit and  related
+       programs  and  hints how to subscribe to a mailing list in order to get
+       informed about new releases and bug-fixes.
+
+       If  you  like  pstoedit  -  please  express   so   also   at   Facebook
+       http://www.facebook.com/pages/pstoedit/260606183958062.
+
+
+ACKNOWLEDGEMENTS
+       *      Klaus   Steinberger  Klaus.Steinberger_AT_physik.uni-muenchen.de
+              wrote the initial version of this manpage.
+
+
+       *      Lar Kaufman revised the increasingly complex command syntax dia-
+              grams and updated the structure and content of this manpage fol-
+              lowing release 2.5.
+
+
+       *      David B. Rosen rosen_AT_unr.edu provided ideas  and  some  Post-
+              Script code from his ps2aplot program.
+
+
+       *      Ian MacPhedran Ian_MacPhedran_AT_engr.USask.CA provided the xfig
+              output format driver.
+
+
+       *      Carsten Hammer  chammer_AT_hermes.hrz.uni-bielefeld.de  provided
+              the gnuplot output format driver and the initial DXF output for-
+              mat driver.
+
+
+       *      Christoph Jaeschke provided the OS/2 metafile (MET) output  for-
+              mat  driver.   Thomas Hoffmann thoffman_AT_zappa.sax.de did some
+              further updates on the OS/2 part.
+
+
+       *      Jens Weber rz47b7_AT_PostAG.DE  provided  the  Windows  metafile
+              (WMF)  output  format  driver,  and  a  graphical user interface
+              (GUI).
+
+
+       *      G.  Edward  Johnson  lorax_AT_nist.gov  provided  the  CGM  Draw
+              library used in the CGM output format driver.
+
+
+       *      Gerhard  Kircher  kircher_AT_edvz.tuwien.ac.at provided some bug
+              fixes.
+
+
+       *      Bill Cheng bill.cheng_AT_acm.org provided  help  with  the  tgif
+              format and some changes to tgif to make the output format driver
+              easier to implement.  http://bourbon.usc.edu:8001/
+
+
+       *      Reini Urban rurban_AT_sbox.tu-graz.ac.at provided input for  the
+              extended DXF output format driver.(http://autocad.xarch.at/)
+
+
+       *      Glenn  M.  Lewis  glenn_AT_gmlewis.com provided RenderMan (RIB),
+              Real3D (RPL), and LightWave  3D  (LWO)  output  format  drivers.
+              (http://www.gmlewis.com/)
+
+
+       *      Piet van Oostrum piet_AT_cs.ruu.nl made several bug fixes.
+
+
+       *      Lutz Vieweg lkv_AT_mania.robin.de provided several bug fixes and
+              suggestions for improvements.
+
+
+       *      Derek B. Noonburg  derekn_AT_vw.ece.cmu.edu  and  Rainer  Dorsch
+              rd_AT_berlepsch.wohnheim.uni-ulm.de   isolated  and  resolved  a
+              Linux-specific core dump problem.
+
+
+       *      Rob Warner rcw2_AT_ukc.ac.uk made pstoedit compile under RiscOS.
+
+
+       *      Patrick  Gosling  jpmg_AT_eng.cam.ac.uk  made  some  suggestions
+              regarding the usage of pstoedit in Ghostscript's SAFER mode.
+
+
+       *      Scott Pakin scott+ps2ed_AT_pakin.org for the Idraw output format
+              driver and the autoconf support.
+
+
+       *      Peter  Katzmann  p.katzmann_AT_thiesen.com  for  the HPGL output
+              format driver.
+
+
+       *      Chris Cox ccox_AT_airmail.net contributed the Tcl/Tk output for-
+              mat driver.
+
+
+       *      Thorsten  Behrens  Thorsten_Behrens_AT_public.uni-hamburg.de and
+              Bjoern Petersen for reworking the WMF output format driver.
+
+
+       *      Leszek Piotrowicz leszek_AT_sopot.rodan.pl implemented the image
+              support for the xfig driver and a JAVA based GUI.
+
+
+       *      Egil  Kvaleberg  egil_AT_kvaleberg.no contributed the pic output
+              format driver.
+
+
+       *      Kai-Uwe Sattler kus_AT_iti.cs.uni-magdeburg.de  implemented  the
+              output format driver for Kontour.
+
+
+       *      Scott  Pakin, scott+ps2ed_AT_pakin.org provided the MetaPost and
+              LaTeX2e and MS PowerPoint output format driver.
+
+
+       *      The  MS  PowerPoint   driver   uses   the   libzip   library   -
+              http://www.nih.at/libzip.  Under  MS  Windows,  this  library is
+              linked into the provided binary statically. Thanks to the  whole
+              libzip team.
+
+
+       *      Burkhard  Plaum  plaum_AT_IPF.Uni-Stuttgart.de added support for
+              complex filled paths for the xfig output format driver.
+
+
+       *      Bernhard Herzog herzog_AT_online.de contributed the output  for-
+              mat driver for sketch ( http://www.skencil.org/ )
+
+
+       *      Rolf  Niepraschk  (niepraschk_AT_ptb.de)  converted the HTML man
+              page to LaTeX. This allows to generate the UNIX  style  and  the
+              HTML manual from this base format.
+
+
+       *      Several  others sent smaller bug fixed and bug reports. Sorry if
+              I do not mention them all here.
+
+
+       *      Gisbert W. Selke (gisbert_AT_tapirsoft.de) for the Java 2 output
+              format driver.
+
+
+       *      Robert  S. Maier (rsm_AT_math.arizona.edu) for many improvements
+              on the libplot output format driver and for libplot itself.
+
+       *      The  authors  of  pstotext   (mcjones_AT_pa.dec.com   and   bir-
+              rell_AT_pa.dec.com)  for  giving  me the permission to use their
+              simple PostScript code for performing rotation.
+
+       *      Daniel Gehriger gehriger_AT_linkcad.com for his help  concerning
+              the handling of Splines in the DXF format.
+
+       *      Allen  Barnett libemf_AT_lignumcomputing.com for his work on the
+              libEMF which allows to create WMF/EMF files under *nix  systems.
+
+       *      Dave  dave_AT_opaque.net  for  providing  the libming which is a
+              multiplatform library for generating SWF files.
+
+       *      Masatake Yamoto for the introduction of autoconf,  automake  and
+              libtool into pstoedit
+
+       *      Bob  Friesenhahn  for  his help and the building of the Magick++
+              API to ImageMagick.
+
+       *      But most important: Peter Deutsch ghost_AT_aladdin.com and  Rus-
+              sell  Lang  gsview_AT_ghostgum.com.au for their help and answers
+              regarding Ghostscript and gsview.
+
+
+LEGAL NOTICES
+       Trademarks mentioned are the property of their respective owners.
+
+       Some code incorporated in the pstoedit package is subject to  copyright
+       or  other intellectual property rights or restrictions including attri-
+       bution rights. See the notes in individual files.
+
+       pstoedit is controlled under the Free Software  Foundation  GNU  Public
+       License  (GPL).  However, this does not apply to importps and the addi-
+       tional plugins.
+
+       Aladdin Ghostscript is a redistributable software  package  with  copy-
+       right restrictions controlled by Aladdin Software.
+
+       pstoedit  has  no other relation to Ghostscript besides calling it in a
+       subprocess.
+
+       The authors, contributors, and distributors of pstoedit are not respon-
+       sible  for  its  use  for  any  purpose,  or  for the results generated
+       thereby.
+
+       Restrictions such as the foregoing may apply in other countries accord-
+       ing to international conventions and agreements.
+
+
+
+
+Conversion Tools                  April 2013                       PSTOEDIT(1)
