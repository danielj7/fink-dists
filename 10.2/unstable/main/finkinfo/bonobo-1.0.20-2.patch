diff -Naur bonobo-1.0.20.old/Makefile.in bonobo-1.0.20.new/Makefile.in
--- bonobo-1.0.20.old/Makefile.in	Fri Apr 12 00:17:56 2002
+++ bonobo-1.0.20.new/Makefile.in	Sun May 19 14:54:54 2002
@@ -166,7 +166,7 @@
 
 NULL = 
 
-SUBDIRS =  	macros intl 				idl 					libefs 					bonobo storage-modules 			monikers				components samples	 		gshell					tests doc po
+SUBDIRS =  	macros intl 				idl 					libefs 					bonobo storage-modules 			monikers				components samples	 		gshell					doc po
 
 
 confexecdir = $(libdir)
diff -Naur bonobo-1.0.20.old/configure bonobo-1.0.20.new/configure
--- bonobo-1.0.20.old/configure	Fri Apr 12 00:10:55 2002
+++ bonobo-1.0.20.new/configure	Wed Jun 12 06:03:38 2002
@@ -5533,11 +5533,11 @@
     ;;
 
   darwin* | rhapsody*)
-    allow_undefined_flag='-undefined suppress'
+    allow_undefined_flag='-flat_namespace -undefined suppress'
     # FIXME: Relying on posixy $() will cause problems for
     #        cross-compilation, but unfortunately the echo tests do not
     #        yet detect zsh echo's removal of \ escapes.
-    archive_cmds='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts -install_name $rpath/$soname $(test -n "$verstring" -a x$verstring != x0.0 && echo $verstring)'
+    archive_cmds='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts $(test .$module != .yes && echo -install_name $rpath/$soname $tmp_verstring)'
     # We need to add '_' to the symbols in $export_symbols first
     #archive_expsym_cmds="$archive_cmds"' && strip -s $export_symbols'
     hardcode_direct=yes
diff -Naur bonobo-1.0.20.old/libefs/configure bonobo-1.0.20.new/libefs/configure
--- bonobo-1.0.20.old/libefs/configure	Fri Apr 12 00:11:03 2002
+++ bonobo-1.0.20.new/libefs/configure	Tue Jun  4 21:10:28 2002
@@ -4553,11 +4553,11 @@
     ;;
 
   darwin* | rhapsody*)
-    allow_undefined_flag='-undefined suppress'
+    allow_undefined_flag='-flat_namespace -undefined suppress'
     # FIXME: Relying on posixy $() will cause problems for
     #        cross-compilation, but unfortunately the echo tests do not
     #        yet detect zsh echo's removal of \ escapes.
-    archive_cmds='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts -install_name $rpath/$soname $(test -n "$verstring" -a x$verstring != x0.0 && echo $verstring)'
+    archive_cmds='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts -install_name $rpath/$soname $tmp_verstring'
     # We need to add '_' to the symbols in $export_symbols first
     #archive_expsym_cmds="$archive_cmds"' && strip -s $export_symbols'
     hardcode_direct=yes
diff -Naur bonobo-1.0.20.old/ltmain.sh bonobo-1.0.20.new/ltmain.sh
--- bonobo-1.0.20.old/ltmain.sh	Fri Apr 12 00:10:55 2002
+++ bonobo-1.0.20.new/ltmain.sh	Thu May 30 21:39:32 2002
@@ -1727,7 +1727,7 @@
 
 	  if test "$installed" = no; then
 	    notinst_deplibs="$notinst_deplibs $lib"
-	    need_relink=yes
+	    # need_relink=yes
 	  fi
 
 	  if test -n "$old_archive_from_expsyms_cmds"; then
@@ -2888,6 +2888,11 @@
 	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	  eval cmds=\"$archive_expsym_cmds\"
 	else
+	  if test "x$verstring" = "x0.0"; then
+	    tmp_verstring=
+	  else
+	    tmp_verstring="$verstring"
+	  fi
 	  eval cmds=\"$archive_cmds\"
 	fi
 	IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
diff -Naur bonobo-1.0.20.old/storage-modules/bonobo-storage-fs.c bonobo-1.0.20.new/storage-modules/bonobo-storage-fs.c
--- bonobo-1.0.20.old/storage-modules/bonobo-storage-fs.c	Tue Sep 25 01:21:33 2001
+++ bonobo-1.0.20.new/storage-modules/bonobo-storage-fs.c	Sun May 19 14:55:09 2002
@@ -329,11 +329,15 @@
 	  CORBA_Environment *ev)
 {
 	BonoboStorageFS *storage_fs = BONOBO_STORAGE_FS (storage);
+	struct stat st;
 	char *full;
 
 	full = g_concat_dir_and_file (storage_fs->path, path);
 
-	if (remove (full) == -1) {
+	/* remove() on Mac OS X(10.0.4) does not remove a directory. */
+	/* if (remove (full) == -1) { */
+	stat (full, &st);
+	if ((S_ISDIR(st.st_mode) ? rmdir (full) : unlink (full)) == -1) {
 
 		if (errno == ENOENT) 
 			CORBA_exception_set (ev, CORBA_USER_EXCEPTION, 
