Package: org-mode
Description: Organize projects and take notes in emacs
Version: 6.14
Homepage: http://orgmode.org/
License: GPL
Revision: 1
Maintainer: Jesse Alama <alama@stanford.edu>
Depends: emacsen
Recommends: remember-el, org-mode-contrib
Enhances: wl, bbdb, erc, remind
DocFiles: ChangeLog Changes.org README doc/org.pdf doc/orgcard.pdf:orgcard_a4.pdf doc/orgcard_letter.pdf request-assign-future.txt contrib/ChangeLog:ChangeLog.contrib contrib/README:README.contrib contrib/packages/org-export-freemind-0.1.0/README:README.org-export-freemind contrib/packages/org-export-freemind-0.1.0/ChangeLog:ChangeLog.org-export-freemind
Source: http://orgmode.org/org-%v.tar.gz
Source-MD5: f07b665c08c42130647af85e6312fc6b
PatchScript: sed 's|@PREFIX@|%p|g' < %a/%n.patch | patch -p1
CompileScript: <<
<<
InstallScript: <<
mkdir -p %i/share/emacs/site-lisp/org
install -m 644 lisp/*.el %i/share/emacs/site-lisp/org
install -m 644 Makefile %i/share/emacs/site-lisp/org

# Contributed lisp
mkdir -p %i/share/emacs/site-lisp/org/contrib
install -m 644 contrib/lisp/*.el %i/share/emacs/site-lisp/org/contrib

# Contributed packages
# org-export-freemind
mkdir -p %i/share/emacs/site-lisp/org/contrib/org-export-freemind
install -m 644 contrib/packages/org-export-freemind-0.1.0/*.el %i/share/emacs/site-lisp/org/contrib/org-export-freemind

# Contributed scripts
mkdir -p %i/bin
install -m 755 contrib/scripts/dir2org.zsh %i/bin
install -m 755 contrib/scripts/org2hpda %i/bin

# Info
mkdir -p %i/share/info
install -m 644 doc/org %i/share/info/org-%v

# emacs-{install,remove}
mkdir -p %i/lib/emacsen-common/packages/install
mkdir -p %i/lib/emacsen-common/packages/remove
install -m 755 fink/emacsen-install %i/lib/emacsen-common/packages/install/%n
install -m 755 fink/emacsen-remove %i/lib/emacsen-common/packages/remove/%n

mkdir -p %i/etc/emacs/site-start.d
install -m 644 fink/50org.el %i/etc/emacs/site-start.d
<<
InfoDocs: org-%v
PostInstScript: %p/lib/emacsen-common/emacs-package-install %n
PreRmScript: %p/lib/emacsen-common/emacs-package-remove %n
DescDetail: <<
Org is a mode for keeping notes, maintaining TODO lists, and doing
project planning with a fast and effective plain-text system.

Org develops organizational tasks around NOTES files that contain
lists or information about projects as plain text.  Org is implemented
on top of Outline mode, which makes it possible to keep the content of
large files well structured.  Visibility cycling and structure editing
help to work with the tree.  Tables are easily created with a built-in
table editor.  Org supports TODO items, deadlines, time stamps, and
scheduling.  It dynamically compiles entries into an agenda that
utilizes and smoothly integrates much of the Emacs calendar and diary.
Plain text URL-like links connect to websites, emails, Usenet
messages, BBDB entries, and any files related to the projects.  For
printing and sharing of notes, an Org file can be exported as a
structured ASCII file, as HTML, or (TODO and agenda items only) as an
iCalendar file.  It can also serve as a publishing tool for a set of
linked web pages.

An important design aspect that distinguishes Org from for example
Planner/Muse is that it encourages to store every piece of information
only once.  In Planner, you have project pages, day pages and possibly
other files, duplicating some information such as tasks.  In Org, you
only have notes files.  In your notes you mark entries as tasks, label
them with tags and timestamps.  All necessary lists like a schedule
for the day, the agenda for a meeting, tasks lists selected by tags
etc are created dynamically when you need them.

Org keeps simple things simple.  When first fired up, it should feel
like a straightforward, easy to use outliner.  Complexity is not
imposed, but a large amount of functionality is available when you
need it.  Org is a toolbox and can be used in different ways, for
example as:

* outline extension with visibility cycling and structure editing
* ASCII system and table editor for taking structured notes
* ASCII table editor with spreadsheet-like capabilities
* TODO list editor
* full agenda and planner with deadlines and work scheduling
* environment to implement David Allen's GTD system
* a basic database application
* simple hypertext system, with HTML and LaTeX export
* publishing tool to create a set of interlinked webpages

Org's automatic, context sensitive table editor with spreadsheet
capabilities can be integrated into any major mode by activating the
minor Orgtbl mode.  Using a translation step, it can be used to
maintain tables in arbitrary file types, for example in LaTeX.  The
structure editing and list creation capabilities can be used outside
Org with the minor Orgstruct mode.

<<
DescUsage: <<
The upstream author of org-mode suggests that you assign global
keybindings to the org-mode commands `org-store-link', `org-agenda'
and `org-iswitchb'.  This can be accomplished by adding the following
two forms to your `.emacs' file; they define global keys for the
commands `org-store-link' and `org-agenda'.  Clearly, the precise keys
you use are not important, and these are but suggestions; choose
suitable keys for yourself.

  (global-set-key "\C-cl" 'org-store-link)
  (global-set-key "\C-ca" 'org-agenda)
  (global-set-key "\C-cb" 'org-iswitchb)

By default, the org-mode fink package has set up emacs to load
org-mode whenever a file whose extension is ".org" is encountered.  To
manually enable org-mode in an emacs buffer, issue the command
`org-mode'.
<<
DescPackaging: <<
As mentioned in the DescUsage field, the upstream maintainer
recommends adding a few keybindings.  I thought it would be unwise to
add those to 50org.el, the file that is automatically loaded upon
emacs startup and which loads org-mode, because adding global bindings
seems to me to be too much of an intrusion.  That is why I refrained
from making defaults out of them and instead describe the keys in
DescUsage.
<<
SplitOff: <<
  Package: org-mode-contrib
  Depends: %N
  Files: <<
    share/emacs/site-lisp/org/contrib/*.el 
    bin/dir2org.zsh
    bin/org2hpda
    share/emacs/site-lisp/org/contrib/org-export-freemind/*.el
    share/doc/org-mode/ChangeLog.contrib
    share/doc/org-mode/README.contrib
    share/doc/org-mode/README.org-export-freemind
    share/doc/org-mode/ChangeLog.org-export-freemind
  <<
  DescDetail: <<
This package contains a grabbag of contributed add-ons to the org-mode
package.  It consists of:

LISP (emacs-lisp code)
======================
org-annotate-file.el     --- Annotate a file with org syntax
org-annotation-helper.el --- Call remember directly from Firefox/Opera
org-bookmark.el          --- Links to bookmarks
org-depend.el            --- TODO dependencies for Org-mode
org-elisp-symbol.el      --- Org links to emacs-lisp symbols
org-eval.el              --- The <lisp> tag, adapted from Muse
org-expiry.el 	         --- expiry mechanism for Org entries
org-indent.el            --- Dynamic outline indentation (does not really work)
org-interactive-query.el --- Interactive modification of tags query
org-mairix.el 	         --- Hook mairix search into Org for different MUAs
org-man.el 	         --- Support for links to manpages in Org-mode
org-mtags.el 	         --- Support for some Muse-like tags in Org-mode
org-panel.el 	         --- Simple routines for us with bad memory
org-registry.el          --- a registry for Org links
org2rem.el               --- Convert org appointments into reminders
org-screen.el            --- visit screen sessions through Org-mode links
org-toc.el 	         --- Table of contents for Org-mode buffer
orgtbl-sqlinsert.el      --- Convert Org-mode tables to SQL insertions.

PACKAGES
========
org-export-freemind  --- exporting utilities from org-mode to freemind

SCRIPTS (shell, bash, etc.)
===========================
dir2org.zsh          --- Org compatible fs structure output
org2hpda	     --- Generate hipster pda style printouts from Org-mode

To get started with any of these pieces of code, consult their
respective files.
<<
<<