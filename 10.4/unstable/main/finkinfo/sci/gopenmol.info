Package: gopenmol
Version: 2.30
Revision: 1016
Architecture: powerpc
GCC: 4.0
Description: Molecular visualization and analysis program
DescDetail: <<
With gOpenMol small molecules, and to lesser extent protein
structures, as well as the chemical properties, total electron
densities and molecule orbitals of small molecules can be visualized
and analyzed. Data from a variety of computational chemistry programs
such as TurboMole, Gaussian, Gamess, etc., can be analyzed if the
output files from these programs have been converted into the
.plt-file format understood by gOpenMol. Moreover, dynamics done with,
e.g., InsightII can be visualized and a short mpeg animation of the
dynamics files generated.

Copyright info (from the website):
  The program is distributed free of charge for academic installations
  and academic use.
  If you have used gOpenMol for your publication, please use the
  following references:
    * Laaksonen, L. (1992) A graphics program for the analysis and
      display of molecular dynamics trajectories. J. Mol. Graph. 10:
      33-34.
    * Bergman, D.L., Laaksonen, L., and Laaksonen, A. (1997)
      Visualization of solvation structures in liquid mixtures.
      J. Mol. Graph. Model. 15: 301-306.
<<
DescPort: <<
A bug in the %p/bin/tclsh from tcltk-8.4.1-2 causes tclsh to emit
DOS-style line-endings (\r\n) when used in a pipeline. This breaks
parsing of its output by configure. Tcl/Tk folks know and are working
on it. For now, just patch configure to fix the line-endings (in a way
that will continue working when bug is fixed).

Darwin has no malloc.h, so discard all #include of it. But malloc()
needs sys/types.h for size_t. The recommended replacement for malloc.h
is stdlib.h (which brings along size_t for us) so #include that as
necessary.

Darwin (gcc) cpp doesn't seem to like null parameters to macros, so fix
the last param IMPLEMENT_GET_MODIFIABLE_POINTER in trajectory.c to
something harmless.

OTOH, GOM_PARSER_RETRIEVE_SELECTIONLIST is only a mild warning? But it
does cause a cpp-precomp segfault (not necessarily cause/effect). Apple
engineers say just -no-cpp-precomp and get on with our life; so be it.

I don't understand why when set_show in config.mk causes ": command
not found" when show=':', but making it always 'echo' seems to allow
the install.mk install-data-dir target to proceed.

The build/install process doesn't understand how to install in a temp
packaging location for later installation somewhere else, so need to
fix the pathnames in some runtime scripts.

Package installs lots of docs in its private hierarchies, so move to
or make links from the standard share/doc/%n location.

Patch install.mk to not install libs that we already have from other
Fink packages. Set our Depends for each of those packages >= version
that comes in Source tarball.

Put libgopenmol.* in lib instead of private bin. Still in its private
space since I don't know version info (so leave -avoid-version) so
cannot do -shlibs.

Patch plugins/config.mk.ac to link plugins as shared libraries
(.dylib) instead of bundles (.so), obeying dyld error message given
when using default options. Patch data/{gopenmol_guirc,gopenmolrc}.tcl
to use the platform-correct lib extension.

The "Tools...Plugins...load" routine for the libfilters plugin was
removing the menu item for libsymmetry instead of for itself. Patched
a mistake in filters.tcl to fix this.

Some plugins fail to load because "couldn't find procedure Thing_Init"
(during a tcl "load" call for libthing.dylib). These functions all
exist in the associated source files and it's not consistent which
ones fail. It seems to depend on order loaded, so there may be
something weird going on with memory or symbol namespaces.

Patch vrml.tcl to fix broken "Tools...Plugins...VRML..." menu item
callback.

I can't find a make target to use the src/plugins/*/*.tcl instead of
(or to first copy these into) data/autotcl/plugins/*.tcl so will
manually copy these during PatchScript (so do all patching to src/ not
data/).

Shorten lines in utility/UHBD/*.f

Fix flag passing in utility.mk (LDFLAGS for linking).

Fix read() format in utility/convert.f (my best guess).

Disabled icon8 because there are too many compiling problems
(non-portable code and old coding standards).

No default $TMP or $TMPDIR, so set GOM_TEMP in environment.txt to
user's own.

The rungOpenMol script just sets vars and calls the actual gopenmol,
so put the vars in a profile.d and patch install.mk to not bother with
the wrapper. Move the actual binary into %p/bin.

The internal command is "identify" but the GUI tries to call it as
"indentify". Patch parser/p_s_atomc.c to fix (will be fixed in a
future version).

Utility programs are in %p/lib/gOpenMol-%v/bin so you have to either
add that to yout PATH or call the programs using the full pathname.
This is so we don't conflict with (for example) imagemagick's convert
program. This will eventually be handled automatically via a splitoff
for placing these programs in PATH and/or using alternatives.
<<
DescUsage: <<
  May not run correctly over remote X11
<<
Homepage: http://www.csc.fi/gopenmol/
License: Restrictive
Maintainer: Daniel Macks <dmacks@netspace.org>
BuildDepends: tcltk-dev (>= 8.4-1), tclxml-dev, tclexpat-dev, freeglut, libjpeg, python23 (>= 1:2.3.5-1124), g77, x11-dev
Depends: tcltk (>= 8.4-1), tcltk-shlibs (>= 8.4-1), tcllib (>= 1.4-1), bwidget (>= 1.6.0), tclxml (>= 2.6-1), tclexpat (>= 2.6-1), freeglut-shlibs, libjpeg-shlibs, python23-shlibs (>= 1:2.3.5-1124), x11
Source: http://www.csc.fi/gopenmol/distribute/%n-linux-%v.tar.gz
Source-MD5: e988fac98c064d574daba5329055110a
SourceDirectory: gOpenMol-%v
Patch: %n.patch
PatchScript: <<
  perl -pi -e 's/#include\s*<malloc.h>//' `find . -name \*.\[hc\]`
  perl -pi -e 's#__fink_d__#%d#g;s#__fink_p__#%p#g' src/config.mk.ac src/unix/make/install.mk
  cp -f src/plugins/{ball/ball.tcl,fchk203/fchk.tcl,filters/filters.tcl,sararea/surfarea.tcl,sym602/symmetry.tcl,vrml/vrml.tcl}  data/autotcl/plugins
<<
ConfigureParams: --with-x --enable-shared
CompileScript: <<
  cd src; TCLSH=%p/bin/tclsh PYTHON=%p/bin/python2.3 ./configure %c
  cd src; make all utility
<<
InstallScript: <<
  cd src; make prefix=%i install install-utility
  mkdir -p -m 0755 %i/share/doc/%n
  ln -s ../../gOpenMol-%v/help %i/share/doc/%n/html
  mv %i/share/gOpenMol-%v/docs/* %i/share/doc/%n
  rmdir %i/share/gOpenMol-%v/docs
  mv %i/share/gOpenMol-%v/utility %i/share/doc/%n
  rm %i/share/gOpenMol-%v/README-GLUT-win32.txt
  mv %i/share/gOpenMol-%v/{COPYRIGHT,README.txt} %i/share/doc/%n
<<
RuntimeVars: <<
  GOM_ROOT: %p/lib/gOpenMol-%v
<<

SplitOff: <<
  Package: %N-dev
  BuildDependsOnly: true
  Depends: %N (=%v-%r)
  Replaces: %N
  Files: include lib/gOpenMol-%v/plugins/*.la lib/gOpenMol-%v/lib/*.la lib/gOpenMol-%v/lib/*.a
  DocFiles: COPYRIGHT
<<
