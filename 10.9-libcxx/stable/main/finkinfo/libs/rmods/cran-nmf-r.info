Info2: <<

Package: cran-nmf-r%type_pkg[rversion]
Type: rversion (3.3 3.2 3.1)
Version: 0.20.6
Revision: 3
Description: Nonnegative Matrix Factorization
Homepage: http://cran.r-project.org/web/packages/NMF/index.html
License: GPL
Maintainer: None <fink-devel@lists.sourceforge.net>
Source: http://cran.r-project.org/src/contrib/NMF_%v.tar.gz
Source-MD5: 81df07b3bf710a611db5af24730ff3d0
SourceDirectory: NMF
Depends: <<
	r-base%type_pkg[rversion],
	cran-cluster-r%type_pkg[rversion],
	cran-colorspace-r%type_pkg[rversion],
	cran-doparallel-r%type_pkg[rversion],
	cran-ggplot2-r%type_pkg[rversion],
	cran-gridbase-r%type_pkg[rversion],
	cran-pkgmaker-r%type_pkg[rversion] (>=0.20),
	cran-rcolorbrewer-r%type_pkg[rversion] (>=0.20),
	cran-registry-r%type_pkg[rversion],
	cran-reshape2-r%type_pkg[rversion],
	cran-rngtools-r%type_pkg[rversion] (>= 1.2.3)
<<
BuildDepends: r-base%type_pkg[rversion]-dev
CompileScript: <<
  #!/bin/bash -ev
  export TMPDIR=%b/tmp
  BIN_R=%p/Library/Frameworks/R.framework/Versions/%type_raw[rversion]/Resources/bin/R
  
  pushd ..
  $BIN_R --verbose CMD build --no-build-vignettes NMF
<<
InstallScript: <<
  #!/bin/sh -ev
  . %p/sbin/fink-buildenv-helper.sh
  BIN_R=%p/Library/Frameworks/R.framework/Versions/%type_raw[rversion]/Resources/bin/R
  
  mkdir -p %i/lib/R/%type_raw[rversion]/site-library
  pushd %b/.. && $BIN_R --verbose CMD INSTALL --configure-args="--x-includes=$X11_BASE_DIR/include --x-libraries=$X11_BASE_DIR/lib" --library=%i/lib/R/%type_raw[rversion]/site-library NMF
  install_name_tool -id %p/lib/R/%type_raw[rversion]/site-library/NMF/libs/NMF.dylib %i/lib/R/%type_raw[rversion]/site-library/NMF/libs/NMF.dylib
<<
Shlibs: <<
  %p/lib/R/%type_raw[rversion]/site-library/NMF/libs/NMF.dylib 0.0.0 %n (>=0.20.6-1)
<<
DescDetail: <<
Provides a framework to perform Non-negative Matrix Factorization 
(NMF). The package implements a set of already published algorithms 
and seeding methods, and provides a framework to test, develop and 
plug new/custom algorithms. Most of the built-in algorithms have been 
optimized in C++, and the main interface function provides an easy 
way of performing parallel computations on multicore machines.
<<

<<
