--- classicladder/serial_linux.c	Sun Aug 14 05:05:00 2005
+++ classicladder.patched/serial_linux.c	Thu Aug 31 14:08:48 2006
@@ -1,196 +1,197 @@
-/* Classic Ladder Project */
-/* Copyright (C) 2001-2005 Marc Le Douarain */
-/* http://www.multimania.com/mavati/classicladder */
-/* http://www.sourceforge.net/projects/classicladder */
-/* August 2005 */
-/* ------------------------------------ */
-/* Serial low-level functions for Linux */
-/* ------------------------------------ */
-
-/* This library is free software; you can redistribute it and/or */
-/* modify it under the terms of the GNU Lesser General Public */
-/* License as published by the Free Software Foundation; either */
-/* version 2.1 of the License, or (at your option) any later version. */
-
-/* This library is distributed in the hope that it will be useful, */
-/* but WITHOUT ANY WARRANTY; without even the implied warranty of */
-/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU */
-/* Lesser General Public License for more details. */
-
-/* You should have received a copy of the GNU Lesser General Public */
-/* License along with this library; if not, write to the Free Software */
-/* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA */
-
-#include <termios.h>
-#include <stdio.h>
-#include <string.h>
-#include <unistd.h>
-#include <fcntl.h>
-#include <sys/signal.h>
-#include <sys/types.h> 
-#include <sys/ioctl.h>
-
-#include "serial_common.h"
-extern int ModbusSerialUseRtsToSend;
-extern int ModbusDebugLevel;
-
-
-int SerialSpeed[ ] = { 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 0 };
-int SerialCorres[ ] = { B300, B600, B1200, B2400, B4800, B9600, B19200, B38400, B57600, B115200, 0 };
-
-char PortIsOpened = 0;
-int fd;
-struct termios oldtio;
-struct termios newtio;
-
-char SerialOpen( char * SerialPortName, int Speed )
-{
-	/* if port already opened => close it before */
-	if ( PortIsOpened )
-		SerialClose( );
-
-	/* open the device to be non-blocking (read will return immediatly) */
-	fd = open( SerialPortName, O_RDWR | O_NOCTTY | O_NDELAY/*don't wait DTR*/ );
-	if (fd >=0)
-	{
-		int BaudRate = -1;
-		int ScanBaudRate = 0;
-		while( SerialSpeed[ ScanBaudRate ]!=Speed && SerialSpeed[ ScanBaudRate ]>=0 )
-		{
-			ScanBaudRate++;
-			if ( SerialSpeed[ ScanBaudRate ]==Speed )
-			{
-				BaudRate = SerialCorres[ ScanBaudRate ];
-			}
-		}
-		if ( BaudRate!=-1 )
-		{        
-			tcgetattr(fd,&oldtio); /* save current port settings */
-			/* set new port settings */
-			bzero(&newtio, sizeof(newtio));
-			newtio.c_cflag = BaudRate | /*CRTSCTS |*/ CS8 | CLOCAL | CREAD;
-			//newtio.c_cflag |= PARENB
-			newtio.c_iflag = IGNPAR    | IGNBRK; // | ICRNL;
-			newtio.c_oflag = 0;
-			newtio.c_lflag = 0;
-			newtio.c_cc[VMIN]=0; //1;
-			newtio.c_cc[VTIME]=0;
-			tcsetattr(fd,TCSANOW,&newtio);
-			PortIsOpened = 1;
-		}
-		else
-		{
-			printf("Speed value not found for serial\n");
-		}
-	}
-	else
-	{
-		printf( "Failed to open serial port %s...\n", SerialPortName );
-	}
-	return PortIsOpened;
-}
-
-void SerialClose( )
-{
-	if ( PortIsOpened )
-	{
-		PortIsOpened = 0;
-		/* restore old port settings */
-		tcsetattr(fd,TCSANOW,&oldtio);
-		close(fd);
-	}
-}
-
-void SerialSetRTS( int State )
-{
-	if ( PortIsOpened )
-	{
-		int status;
-		ioctl(fd, TIOCMGET, &status);
-		if ( State )
-			status |= TIOCM_RTS;
-		else
-			status &= ~TIOCM_RTS;
-		if ( ModbusDebugLevel>=3 )
-			printf( "Set RTS=%d\n", State );
-		ioctl(fd, TIOCMSET, &status);
-	}
-}
-
-void SerialSend( char *Buff, int BuffLength )
-{
-	if ( PortIsOpened )
-	{
-		if ( ModbusSerialUseRtsToSend )
-		{
-			SerialSetRTS( 1 );
-		}
-		if ( ModbusDebugLevel>=2 )
-			printf("Serial writing...\n");
-		write(fd,Buff,BuffLength);
-		if ( ModbusDebugLevel>=2 )
-			printf("Writing done!\n");
-		if ( ModbusSerialUseRtsToSend )
-		{
-			// wait until everything has been transmitted
-			tcdrain( fd );
-			SerialSetRTS( 0 );
-		}
-	}
-}
-
-void SerialSetResponseSize( int Size, int TimeOutResp )
-{
-	if ( PortIsOpened )
-	{
-	        newtio.c_cc[VMIN] = Size; //Nbr chars we should receive;
-		newtio.c_cc[VTIME] = TimeOutResp/100; // TimeOut in 0.1s
-//		tcflush(fd, TCIFLUSH);
-		if ( ModbusDebugLevel>=2 )
-			printf("Serial config...\n");
-		tcsetattr(fd,TCSANOW,&newtio);
-	}
-}
-
-int SerialReceive( char * Buff, int MaxBuffLength )//, int TimeOutResp )
-{
-	int NbrCarsReceived = 0;
-	if ( PortIsOpened )
-	{
-
-// the select is used it no char at all is received (else read() block...)
-int recep_descrip;
-fd_set myset;
-struct timeval tv;
-FD_ZERO( &myset);
-// add descrip to survey and set time-out wanted !
-FD_SET( fd, &myset );
-tv.tv_sec = 0; //seconds
-tv.tv_usec = newtio.c_cc[VTIME]*100 *1000; //micro-seconds
-if ( ModbusDebugLevel>=3 )
-	printf("select() for serial reading...\n");
-recep_descrip = select( 16, &myset, NULL, NULL, &tv );
-if ( recep_descrip>0 )
-{
-		if ( ModbusDebugLevel>=2 )
-			printf("Serial reading...\n");
-			NbrCarsReceived = read(fd,Buff,MaxBuffLength);
-		if ( ModbusDebugLevel>=2 )
-			printf("%d chars found\n", NbrCarsReceived);
-}
-	}
-	return NbrCarsReceived;
-}
-
-void SerialFlush( void )
-{
-	if ( PortIsOpened )
-	{
-		if ( ModbusDebugLevel>=2 )
-			printf("Serial flush all!\n");
-		tcflush( fd, TCIOFLUSH );
-		usleep( 250*1000 );
-		tcflush( fd, TCIOFLUSH );
-	}
-}
-
+/* Classic Ladder Project */
+/* Copyright (C) 2001-2005 Marc Le Douarain */
+/* http://www.multimania.com/mavati/classicladder */
+/* http://www.sourceforge.net/projects/classicladder */
+/* August 2005 */
+/* ------------------------------------ */
+/* Serial low-level functions for Linux */
+/* ------------------------------------ */
+
+/* This library is free software; you can redistribute it and/or */
+/* modify it under the terms of the GNU Lesser General Public */
+/* License as published by the Free Software Foundation; either */
+/* version 2.1 of the License, or (at your option) any later version. */
+
+/* This library is distributed in the hope that it will be useful, */
+/* but WITHOUT ANY WARRANTY; without even the implied warranty of */
+/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU */
+/* Lesser General Public License for more details. */
+
+/* You should have received a copy of the GNU Lesser General Public */
+/* License along with this library; if not, write to the Free Software */
+/* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA */
+
+#include <termios.h>
+#include <stdio.h>
+#include <string.h>
+#include <unistd.h>
+#include <fcntl.h>
+#include <sys/signal.h>
+#include <sys/types.h> 
+#include <sys/ioctl.h>
+#include <sys/time.h>
+
+#include "serial_common.h"
+extern int ModbusSerialUseRtsToSend;
+extern int ModbusDebugLevel;
+
+
+int SerialSpeed[ ] = { 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 0 };
+int SerialCorres[ ] = { B300, B600, B1200, B2400, B4800, B9600, B19200, B38400, B57600, B115200, 0 };
+
+char PortIsOpened = 0;
+int fd;
+struct termios oldtio;
+struct termios newtio;
+
+char SerialOpen( char * SerialPortName, int Speed )
+{
+	/* if port already opened => close it before */
+	if ( PortIsOpened )
+		SerialClose( );
+
+	/* open the device to be non-blocking (read will return immediatly) */
+	fd = open( SerialPortName, O_RDWR | O_NOCTTY | O_NDELAY/*don't wait DTR*/ );
+	if (fd >=0)
+	{
+		int BaudRate = -1;
+		int ScanBaudRate = 0;
+		while( SerialSpeed[ ScanBaudRate ]!=Speed && SerialSpeed[ ScanBaudRate ]>=0 )
+		{
+			ScanBaudRate++;
+			if ( SerialSpeed[ ScanBaudRate ]==Speed )
+			{
+				BaudRate = SerialCorres[ ScanBaudRate ];
+			}
+		}
+		if ( BaudRate!=-1 )
+		{        
+			tcgetattr(fd,&oldtio); /* save current port settings */
+			/* set new port settings */
+			bzero(&newtio, sizeof(newtio));
+			newtio.c_cflag = BaudRate | /*CRTSCTS |*/ CS8 | CLOCAL | CREAD;
+			//newtio.c_cflag |= PARENB
+			newtio.c_iflag = IGNPAR    | IGNBRK; // | ICRNL;
+			newtio.c_oflag = 0;
+			newtio.c_lflag = 0;
+			newtio.c_cc[VMIN]=0; //1;
+			newtio.c_cc[VTIME]=0;
+			tcsetattr(fd,TCSANOW,&newtio);
+			PortIsOpened = 1;
+		}
+		else
+		{
+			printf("Speed value not found for serial\n");
+		}
+	}
+	else
+	{
+		printf( "Failed to open serial port %s...\n", SerialPortName );
+	}
+	return PortIsOpened;
+}
+
+void SerialClose( )
+{
+	if ( PortIsOpened )
+	{
+		PortIsOpened = 0;
+		/* restore old port settings */
+		tcsetattr(fd,TCSANOW,&oldtio);
+		close(fd);
+	}
+}
+
+void SerialSetRTS( int State )
+{
+	if ( PortIsOpened )
+	{
+		int status;
+		ioctl(fd, TIOCMGET, &status);
+		if ( State )
+			status |= TIOCM_RTS;
+		else
+			status &= ~TIOCM_RTS;
+		if ( ModbusDebugLevel>=3 )
+			printf( "Set RTS=%d\n", State );
+		ioctl(fd, TIOCMSET, &status);
+	}
+}
+
+void SerialSend( char *Buff, int BuffLength )
+{
+	if ( PortIsOpened )
+	{
+		if ( ModbusSerialUseRtsToSend )
+		{
+			SerialSetRTS( 1 );
+		}
+		if ( ModbusDebugLevel>=2 )
+			printf("Serial writing...\n");
+		write(fd,Buff,BuffLength);
+		if ( ModbusDebugLevel>=2 )
+			printf("Writing done!\n");
+		if ( ModbusSerialUseRtsToSend )
+		{
+			// wait until everything has been transmitted
+			tcdrain( fd );
+			SerialSetRTS( 0 );
+		}
+	}
+}
+
+void SerialSetResponseSize( int Size, int TimeOutResp )
+{
+	if ( PortIsOpened )
+	{
+	        newtio.c_cc[VMIN] = Size; //Nbr chars we should receive;
+		newtio.c_cc[VTIME] = TimeOutResp/100; // TimeOut in 0.1s
+//		tcflush(fd, TCIFLUSH);
+		if ( ModbusDebugLevel>=2 )
+			printf("Serial config...\n");
+		tcsetattr(fd,TCSANOW,&newtio);
+	}
+}
+
+int SerialReceive( char * Buff, int MaxBuffLength )//, int TimeOutResp )
+{
+	int NbrCarsReceived = 0;
+	if ( PortIsOpened )
+	{
+
+// the select is used it no char at all is received (else read() block...)
+int recep_descrip;
+fd_set myset;
+struct timeval tv;
+FD_ZERO( &myset);
+// add descrip to survey and set time-out wanted !
+FD_SET( fd, &myset );
+tv.tv_sec = 0; //seconds
+tv.tv_usec = newtio.c_cc[VTIME]*100 *1000; //micro-seconds
+if ( ModbusDebugLevel>=3 )
+	printf("select() for serial reading...\n");
+recep_descrip = select( 16, &myset, NULL, NULL, &tv );
+if ( recep_descrip>0 )
+{
+		if ( ModbusDebugLevel>=2 )
+			printf("Serial reading...\n");
+			NbrCarsReceived = read(fd,Buff,MaxBuffLength);
+		if ( ModbusDebugLevel>=2 )
+			printf("%d chars found\n", NbrCarsReceived);
+}
+	}
+	return NbrCarsReceived;
+}
+
+void SerialFlush( void )
+{
+	if ( PortIsOpened )
+	{
+		if ( ModbusDebugLevel>=2 )
+			printf("Serial flush all!\n");
+		tcflush( fd, TCIOFLUSH );
+		usleep( 250*1000 );
+		tcflush( fd, TCIOFLUSH );
+	}
+}
+
--- classicladder/Makefile	Sun Jun 11 16:58:49 2006
+++ classicladder.patched/Makefile	Thu Aug 31 14:20:55 2006
@@ -1,260 +1,260 @@
-#
-# ClassicLadder - Makefile
-#
-# By Marc Le Douarain - 11 June 2006
-#
-
-# Comment if you do not want to support this language
-export SEQUENTIAL_SUPPORT = 1
-
-# Comment if you do not want the GTK interface (for an embedded version)
-# (possible only with RTLinux support version !)
-GTK_INTERFACE = 1
-
-# Uncomment if you want to build a static library
-# BUILD_LIB = 1
-
-# Uncomment the following flag to make the MAT connection version
-####MAT_CONNECTION = 1
-
-# Uncomment if you want to use dynamic sizing of plc arrays
-export DYNAMIC_PLCSIZE = 1
-
-# Uncomment if you want to be able to use comedi drivers (see www.comedi.org)
-###export COMEDI_SUPPORT = 1
-
-# Comment if you do not want the I/O access (not x86 platform)
-# Used in the hardware.c file.
-MAKE_IO_ACCESS = 1
-
-# Uncomment if you want to debug a 'segmentation fault' with gdb or KDbg for example... ;-)
-DEBUG = 1
-
-# Comment if you dont want GTK+2
-GTK2=1
-
-# Comment to disable gnome_print dependencies...
-GNOME_PRINT=1
-
-###OWN_LIBS = -lpthread # already in the lib list, with gthread2.0
-
-CROSS =
-CC = $(CROSS)gcc
-AR = $(CROSS)ar
-PREFIX=/usr
-BINDIR=${PREFIX}/bin
-LIBDIR=${PREFIX}/lib
-INCLUDEDIR=${PREFIX}/include
-
-ifdef GTK_INTERFACE
-ifdef GTK2
-OWN_CFLAGS = -Wall `pkg-config gtk+-2.0 --cflags` `pkg-config pango --cflags` `pkg-config gthread-2.0 --cflags` -DGTK_INTERFACE -DGTK2
-OWN_LIBS += `pkg-config gtk+-2.0 --cflags --libs` `pkg-config pango --cflags --libs` `pkg-config gthread-2.0 --cflags --libs`
-else
-OWN_CFLAGS = -Wall `gtk-config --cflags` -DGTK_INTERFACE
-OWN_LIBS += `gtk-config --cflags --libs`
-endif
-ifdef GNOME_PRINT
-OWN_CFLAGS += `pkg-config --cflags libgnomeprintui-2.2` -DGNOME_PRINT_USE
-OWN_LIBS += `pkg-config --libs libgnomeprintui-2.2`
-endif
-endif
-
-ifdef SEQUENTIAL_SUPPORT
-OWN_CFLAGS += -DSEQUENTIAL_SUPPORT
-endif
-ifdef DYNAMIC_PLCSIZE
-OWN_CFLAGS += -DDYNAMIC_PLCSIZE
-endif
-ifdef COMEDI_SUPPORT
-OWN_CFLAGS += -DCOMEDI_SUPPORT
-COMEDI_LIB = -lcomedi
-endif
-ifdef MAKE_IO_ACCESS
-OWN_CFLAGS += -DMAKE_IO_ACCESS
-endif
-
-ifdef DEBUG
-OWN_CFLAGS += -g
-endif
-
-RM = rm
-
-OBJ_COMMON = calc_.o files.o arithm_eval_.o manager_.o arrays_.o socket_server.o protocol_modbus_slave_.o socket_modbus_master.o protocol_modbus_master.o serial_linux.o
-ifdef GTK_INTERFACE
-OBJ_GTK_INTERFACE = drawing.o edit.o edit_gtk.o editproperties_gtk.o manager_gtk.o classicladder_gtk.o config_gtk.o
-OBJ_CLASSICLADDER = $(OBJ_COMMON) $(OBJ_GTK_INTERFACE) vars_access_.o
-else
-OBJ_CLASSICLADDER = $(OBJ_COMMON) vars_access_.o
-endif
-
-ifdef GNOME_PRINT
-OBJ_CLASSICLADDER += print_gnome.o
-endif
-
-OBJ_CLASSICLADDER_LIB = $(OBJ_COMMON) ladderlib.o
-
-ifdef SEQUENTIAL_SUPPORT
-OBJ_CLASSICLADDER_LIB += files_sequential.o calc_sequential_.o
-OBJ_CLASSICLADDER += files_sequential.o calc_sequential_.o
-ifdef GTK_INTERFACE
-OBJ_CLASSICLADDER += drawing_sequential.o edit_sequential.o
-endif
-endif
-
-# Some objects names end with _ because there are not identical if compiled for RTLinux or not.
-
-ifdef MAT_CONNECTION
-MAT = ../..
-OBJ_CLASSICLADDER_MAT = $(OBJ_COMMON) vars_mat.o $(MAT)/lib/libmatplc.la -lrt
-all: classicladder classicladder-mat
-else
-ifdef BUILD_LIB
-all: classicladder-lib
-else
-all: classicladder
-endif
-endif
-
-classicladder: $(OBJ_CLASSICLADDER) classicladder_.o config.o hardware_.o
-	$(CC) -o classicladder $(OBJ_CLASSICLADDER) config.o hardware_.o classicladder_.o $(OWN_LIBS) $(COMEDI_LIB)
-
-classicladder-mat: $(OBJ_CLASSICLADDER_MAT) classicladder_mat.o config.o
-	libtool $(CC) -o classicladder-mat $(OBJ_CLASSICLADDER_MAT) classicladder_mat.o $(OWN_LIBS)
-
-classicladder-lib: libladder.a
-
-libladder.a: $(OBJ_CLASSICLADDER_LIB)
-	$(AR) -r libladder.a $(OBJ_CLASSICLADDER_LIB)
-
-rtl_support: OWN_CFLAGS+=-DRT_SUPPORT -DRTLINUX
-rtl_support: $(OBJ_CLASSICLADDER) classicladder_rtl_support.o config.o
-	$(CC) -o classicladder_rtl_support $(OBJ_CLASSICLADDER) config.o classicladder_rtl_support.o $(OWN_LIBS)
-	make -f Makefile_rtlinux
-
-rtai_support: OWN_CFLAGS+=-DRT_SUPPORT -DRTAI -I/usr/src/rtai/include
-rtai_support: $(OBJ_CLASSICLADDER) classicladder_rtai_support.o config.o
-	$(CC) -o classicladder_rtl_support $(OBJ_CLASSICLADDER) config.o classicladder_rtai_support.o $(OWN_LIBS)
-	make -f Makefile_rtai
-	make test2 -f Makefile_rtai
-
-test:
-	make test -f Makefile_rtlinux
-
-
-classicladder_.o : classicladder.c classicladder.h global.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-classicladder_rtl_support.o : classicladder.c classicladder.h global.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS) -DRT_SUPPORT -DRTLINUX
-classicladder_rtai_support.o : classicladder.c classicladder.h global.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS) -DRT_SUPPORT -DRTAI
-classicladder_mat.o : classicladder.c classicladder.h global.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS) -DMAT_CONNECTION
-
-classicladder_gtk.o : classicladder_gtk.c classicladder.h global.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-calc_.o : calc.c classicladder.h global.h calc.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-config.o : config.c classicladder.h global.h config.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-arrays_.o : arrays.c classicladder.h global.h calc.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-drawing.o : drawing.c classicladder.h global.h drawing.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-drawing_sequential.o : drawing_sequential.c classicladder.h global.h drawing_sequential.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-edit.o : edit.c classicladder.h global.h edit.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-edit_gtk.o : edit_gtk.c classicladder.h global.h edit_gtk.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-editproperties_gtk.o : editproperties_gtk.c classicladder.h global.h editproperties_gtk.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-manager_gtk.o : manager_gtk.c classicladder.h global.h manager_gtk.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-config_gtk.o : config_gtk.c classicladder.h global.h config_gtk.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-files.o : files.c classicladder.h global.h files.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-files_sequential.o : files_sequential.c classicladder.h global.h files_sequential.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-ladderlib.o : ladderlib.c ladderlib.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-ladderlib.h: classicladder.h global.h ladderlib.head ladderlib.tail
-	cat ladderlib.head classicladder.h global.h ladderlib.tail >ladderlib.h
-
-vars_access_.o : vars_access.c classicladder.h global.h vars_access.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-arithm_eval_.o : arithm_eval.c classicladder.h global.h vars_access.h arithm_eval.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-manager_.o : manager.c classicladder.h global.h vars_access.h manager.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-vars_mat.o : vars_mat.c
-	$(CC) -c $< -o $@ $(OWN_CFLAGS) -DMAT_CONNECTION
-
-calc_sequential_.o : calc_sequential.c classicladder.h global.h calc_sequential.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-hardware_.o : hardware.c classicladder.h global.h hardware.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-#	$(CC) -c $< -o $@ $(OWN_CFLAGS) -I../comedi/comedilib-0.7.20/include/
-
-edit_sequential.o : edit_sequential.c classicladder.h global.h edit_sequential.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-socket_server.o : socket_server.c classicladder.h global.h socket_server.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-protocol_modbus_slave_.o : protocol_modbus_slave.c classicladder.h global.h protocol_modbus_slave.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-socket_modbus_master.o : socket_modbus_master.c classicladder.h global.h socket_modbus_master.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-protocol_modbus_master.o : protocol_modbus_master.c classicladder.h global.h protocol_modbus_master.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-serial_linux.o : serial_linux.c
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-print_gnome.o : print_gnome.c classicladder.h global.h print_gnome.h
-	$(CC) -c $< -o $@ $(OWN_CFLAGS)
-
-PHONY: all install clean dist
-
-install: all
-	install -d ${DESTDIR}${BINDIR}
-	install -d ${DESTDIR}${INCLUDEDIR}
-	install -d ${DESTDIR}${LIBDIR}
-	install classicladder ${DESTDIR}${BINDIR}
-#	install ladderlib.h ${DESTDIR}${INCLUDEDIR}
-#	install libladder.a ${DESTDIR}${LIBDIR}
-
-
-clean:
-	$(RM) -f *.o
-	$(RM) -f classicladder_rtl_support
-	$(RM) -f classicladder-mat
-#	$(RM) -f classicladder
-	$(RM) -f ladderlib.h
-	$(RM) -f libladder.a
-
-dist: clean
-	(cd ..;rm -f classicladder.zip;zip -r classicladder.zip classicladder/*)
-
+#
+# ClassicLadder - Makefile
+#
+# By Marc Le Douarain - 11 June 2006
+#
+
+# Comment if you do not want to support this language
+export SEQUENTIAL_SUPPORT = 1
+
+# Comment if you do not want the GTK interface (for an embedded version)
+# (possible only with RTLinux support version !)
+GTK_INTERFACE = 1
+
+# Uncomment if you want to build a static library
+# BUILD_LIB = 1
+
+# Uncomment the following flag to make the MAT connection version
+####MAT_CONNECTION = 1
+
+# Uncomment if you want to use dynamic sizing of plc arrays
+export DYNAMIC_PLCSIZE = 1
+
+# Uncomment if you want to be able to use comedi drivers (see www.comedi.org)
+###export COMEDI_SUPPORT = 1
+
+# Comment if you do not want the I/O access (not x86 platform)
+# Used in the hardware.c file.
+#MAKE_IO_ACCESS = 1
+
+# Uncomment if you want to debug a 'segmentation fault' with gdb or KDbg for example... ;-)
+DEBUG = 1
+
+# Comment if you dont want GTK+2
+GTK2=1
+
+# Comment to disable gnome_print dependencies...
+GNOME_PRINT=1
+
+###OWN_LIBS = -lpthread # already in the lib list, with gthread2.0
+
+CROSS =
+CC = $(CROSS)gcc
+AR = $(CROSS)ar
+PREFIX=/usr
+BINDIR=${PREFIX}/bin
+LIBDIR=${PREFIX}/lib
+INCLUDEDIR=${PREFIX}/include
+
+ifdef GTK_INTERFACE
+ifdef GTK2
+OWN_CFLAGS = -Wall `pkg-config gtk+-2.0 --cflags` `pkg-config pango --cflags` `pkg-config gthread-2.0 --cflags` -DGTK_INTERFACE -DGTK2
+OWN_LIBS += `pkg-config gtk+-2.0 --cflags --libs` `pkg-config pango --cflags --libs` `pkg-config gthread-2.0 --cflags --libs`
+else
+OWN_CFLAGS = -Wall `gtk-config --cflags` -DGTK_INTERFACE
+OWN_LIBS += `gtk-config --cflags --libs`
+endif
+ifdef GNOME_PRINT
+OWN_CFLAGS += `pkg-config --cflags libgnomeprintui-2.2` -DGNOME_PRINT_USE
+OWN_LIBS += `pkg-config --libs libgnomeprintui-2.2`
+endif
+endif
+
+ifdef SEQUENTIAL_SUPPORT
+OWN_CFLAGS += -DSEQUENTIAL_SUPPORT
+endif
+ifdef DYNAMIC_PLCSIZE
+OWN_CFLAGS += -DDYNAMIC_PLCSIZE
+endif
+ifdef COMEDI_SUPPORT
+OWN_CFLAGS += -DCOMEDI_SUPPORT
+COMEDI_LIB = -lcomedi
+endif
+ifdef MAKE_IO_ACCESS
+OWN_CFLAGS += -DMAKE_IO_ACCESS
+endif
+
+ifdef DEBUG
+OWN_CFLAGS += -g
+endif
+
+RM = rm
+
+OBJ_COMMON = calc_.o files.o arithm_eval_.o manager_.o arrays_.o socket_server.o protocol_modbus_slave_.o socket_modbus_master.o protocol_modbus_master.o serial_linux.o
+ifdef GTK_INTERFACE
+OBJ_GTK_INTERFACE = drawing.o edit.o edit_gtk.o editproperties_gtk.o manager_gtk.o classicladder_gtk.o config_gtk.o
+OBJ_CLASSICLADDER = $(OBJ_COMMON) $(OBJ_GTK_INTERFACE) vars_access_.o
+else
+OBJ_CLASSICLADDER = $(OBJ_COMMON) vars_access_.o
+endif
+
+ifdef GNOME_PRINT
+OBJ_CLASSICLADDER += print_gnome.o
+endif
+
+OBJ_CLASSICLADDER_LIB = $(OBJ_COMMON) ladderlib.o
+
+ifdef SEQUENTIAL_SUPPORT
+OBJ_CLASSICLADDER_LIB += files_sequential.o calc_sequential_.o
+OBJ_CLASSICLADDER += files_sequential.o calc_sequential_.o
+ifdef GTK_INTERFACE
+OBJ_CLASSICLADDER += drawing_sequential.o edit_sequential.o
+endif
+endif
+
+# Some objects names end with _ because there are not identical if compiled for RTLinux or not.
+
+ifdef MAT_CONNECTION
+MAT = ../..
+OBJ_CLASSICLADDER_MAT = $(OBJ_COMMON) vars_mat.o $(MAT)/lib/libmatplc.la -lrt
+all: classicladder classicladder-mat
+else
+ifdef BUILD_LIB
+all: classicladder-lib
+else
+all: classicladder
+endif
+endif
+
+classicladder: $(OBJ_CLASSICLADDER) classicladder_.o config.o hardware_.o
+	$(CC) -o classicladder $(OBJ_CLASSICLADDER) config.o hardware_.o classicladder_.o $(OWN_LIBS) $(COMEDI_LIB)
+
+classicladder-mat: $(OBJ_CLASSICLADDER_MAT) classicladder_mat.o config.o
+	libtool $(CC) -o classicladder-mat $(OBJ_CLASSICLADDER_MAT) classicladder_mat.o $(OWN_LIBS)
+
+classicladder-lib: libladder.a
+
+libladder.a: $(OBJ_CLASSICLADDER_LIB)
+	$(AR) -r libladder.a $(OBJ_CLASSICLADDER_LIB)
+
+rtl_support: OWN_CFLAGS+=-DRT_SUPPORT -DRTLINUX
+rtl_support: $(OBJ_CLASSICLADDER) classicladder_rtl_support.o config.o
+	$(CC) -o classicladder_rtl_support $(OBJ_CLASSICLADDER) config.o classicladder_rtl_support.o $(OWN_LIBS)
+	make -f Makefile_rtlinux
+
+rtai_support: OWN_CFLAGS+=-DRT_SUPPORT -DRTAI -I/usr/src/rtai/include
+rtai_support: $(OBJ_CLASSICLADDER) classicladder_rtai_support.o config.o
+	$(CC) -o classicladder_rtl_support $(OBJ_CLASSICLADDER) config.o classicladder_rtai_support.o $(OWN_LIBS)
+	make -f Makefile_rtai
+	make test2 -f Makefile_rtai
+
+test:
+	make test -f Makefile_rtlinux
+
+
+classicladder_.o : classicladder.c classicladder.h global.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+classicladder_rtl_support.o : classicladder.c classicladder.h global.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS) -DRT_SUPPORT -DRTLINUX
+classicladder_rtai_support.o : classicladder.c classicladder.h global.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS) -DRT_SUPPORT -DRTAI
+classicladder_mat.o : classicladder.c classicladder.h global.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS) -DMAT_CONNECTION
+
+classicladder_gtk.o : classicladder_gtk.c classicladder.h global.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+calc_.o : calc.c classicladder.h global.h calc.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+config.o : config.c classicladder.h global.h config.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+arrays_.o : arrays.c classicladder.h global.h calc.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+drawing.o : drawing.c classicladder.h global.h drawing.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+drawing_sequential.o : drawing_sequential.c classicladder.h global.h drawing_sequential.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+edit.o : edit.c classicladder.h global.h edit.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+edit_gtk.o : edit_gtk.c classicladder.h global.h edit_gtk.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+editproperties_gtk.o : editproperties_gtk.c classicladder.h global.h editproperties_gtk.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+manager_gtk.o : manager_gtk.c classicladder.h global.h manager_gtk.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+config_gtk.o : config_gtk.c classicladder.h global.h config_gtk.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+files.o : files.c classicladder.h global.h files.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+files_sequential.o : files_sequential.c classicladder.h global.h files_sequential.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+ladderlib.o : ladderlib.c ladderlib.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+ladderlib.h: classicladder.h global.h ladderlib.head ladderlib.tail
+	cat ladderlib.head classicladder.h global.h ladderlib.tail >ladderlib.h
+
+vars_access_.o : vars_access.c classicladder.h global.h vars_access.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+arithm_eval_.o : arithm_eval.c classicladder.h global.h vars_access.h arithm_eval.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+manager_.o : manager.c classicladder.h global.h vars_access.h manager.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+vars_mat.o : vars_mat.c
+	$(CC) -c $< -o $@ $(OWN_CFLAGS) -DMAT_CONNECTION
+
+calc_sequential_.o : calc_sequential.c classicladder.h global.h calc_sequential.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+hardware_.o : hardware.c classicladder.h global.h hardware.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+#	$(CC) -c $< -o $@ $(OWN_CFLAGS) -I../comedi/comedilib-0.7.20/include/
+
+edit_sequential.o : edit_sequential.c classicladder.h global.h edit_sequential.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+socket_server.o : socket_server.c classicladder.h global.h socket_server.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+protocol_modbus_slave_.o : protocol_modbus_slave.c classicladder.h global.h protocol_modbus_slave.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+socket_modbus_master.o : socket_modbus_master.c classicladder.h global.h socket_modbus_master.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+protocol_modbus_master.o : protocol_modbus_master.c classicladder.h global.h protocol_modbus_master.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+serial_linux.o : serial_linux.c
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+print_gnome.o : print_gnome.c classicladder.h global.h print_gnome.h
+	$(CC) -c $< -o $@ $(OWN_CFLAGS)
+
+PHONY: all install clean dist
+
+install: all
+	install -d ${DESTDIR}${BINDIR}
+#	install -d ${DESTDIR}${INCLUDEDIR}
+#	install -d ${DESTDIR}${LIBDIR}
+	install classicladder ${DESTDIR}${BINDIR}
+#	install ladderlib.h ${DESTDIR}${INCLUDEDIR}
+#	install libladder.a ${DESTDIR}${LIBDIR}
+
+
+clean:
+	$(RM) -f *.o
+	$(RM) -f classicladder_rtl_support
+	$(RM) -f classicladder-mat
+#	$(RM) -f classicladder
+	$(RM) -f ladderlib.h
+	$(RM) -f libladder.a
+
+dist: clean
+	(cd ..;rm -f classicladder.zip;zip -r classicladder.zip classicladder/*)
+
