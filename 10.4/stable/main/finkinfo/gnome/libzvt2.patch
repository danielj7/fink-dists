diff -Nurd -x'*~' libzvt-2.0.1.orig/acinclude.m4 libzvt-2.0.1/acinclude.m4
--- libzvt-2.0.1.orig/acinclude.m4	1969-12-31 19:00:00.000000000 -0500
+++ libzvt-2.0.1/acinclude.m4	2008-12-23 03:56:38.000000000 -0500
@@ -0,0 +1,255 @@
+# old names
+AC_DEFUN([AM_PROG_LIBTOOL],   [AC_PROG_LIBTOOL])
+AC_DEFUN([AM_ENABLE_SHARED],  [AC_ENABLE_SHARED($@)])
+AC_DEFUN([AM_ENABLE_STATIC],  [AC_ENABLE_STATIC($@)])
+AC_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])
+AC_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])
+AC_DEFUN([AM_PROG_LD],        [AC_PROG_LD])
+AC_DEFUN([AM_PROG_NM],        [AC_PROG_NM])
+
+# This is just to silence aclocal about the macro not being used
+ifelse([AC_DISABLE_FAST_INSTALL])
+
+# Checks for availability of various utmp fields
+#
+# Original code by Bernhard Rosenkraenzer (bero@linux.net.eu.org), 1998.
+# Modifications by Timur Bakeyev (timur@gnu.org), 1999.
+#
+
+dnl AC_CHECK_UTMP()
+dnl Test for presence of the field and define HAVE_UT_UT_field macro
+dnl
+
+AC_DEFUN([AC_CHECK_UTMP],[
+
+AC_CHECK_HEADERS(sys/time.h utmp.h utmpx.h)
+AC_HEADER_TIME
+
+if test "$ac_cv_header_utmpx_h" = "yes"; then
+    AC_DEFINE(UTMP,[struct utmpx])
+else
+    AC_DEFINE(UTMP,[struct utmp])
+fi
+
+dnl some systems (BSD4.4-like) require time.h to be included before utmp.h :/
+AC_MSG_CHECKING(for ut_host field in the utmp structure)
+AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+#include <sys/time.h>
+#include <time.h>
+#else
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#else
+#include <time.h>
+#endif
+#endif
+#ifdef HAVE_UTMP_H
+#include <utmp.h>
+#endif
+#ifdef HAVE_UTMPX_H
+#include <utmpx.h>
+#endif],[UTMP ut; char *p; p=ut.ut_host;],result=yes,result=no)
+if test "$result" = "yes"; then
+  AC_DEFINE(HAVE_UT_UT_HOST)
+fi
+AC_MSG_RESULT($result)
+
+AC_MSG_CHECKING(for ut_pid field in the utmp structure)
+AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+#include <sys/time.h>
+#include <time.h>
+#else
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#else
+#include <time.h>
+#endif
+#endif
+#ifdef HAVE_UTMP_H
+#include <utmp.h>
+#endif
+#ifdef HAVE_UTMPX_H
+#include <utmpx.h>
+#endif],[UTMP ut; int i; i=ut.ut_pid;],result=yes,result=no)
+if test "$result" = "yes"; then
+  AC_DEFINE(HAVE_UT_UT_PID)
+fi
+AC_MSG_RESULT($result)
+
+AC_MSG_CHECKING(for ut_id field in the utmp structure)
+AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+#include <sys/time.h>
+#include <time.h>
+#else
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#else
+#include <time.h>
+#endif
+#endif
+#ifdef HAVE_UTMP_H
+#include <utmp.h>
+#endif
+#ifdef HAVE_UTMPX_H
+#include <utmpx.h>
+#endif],[UTMP ut; char *p; p=ut.ut_id;],result=yes,result=no)
+if test "$result" = "yes"; then
+  AC_DEFINE(HAVE_UT_UT_ID)
+fi
+AC_MSG_RESULT($result)
+
+AC_MSG_CHECKING(for ut_name field in the utmp structure)
+AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+#include <sys/time.h>
+#include <time.h>
+#else
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#else
+#include <time.h>
+#endif
+#endif
+#ifdef HAVE_UTMP_H
+#include <utmp.h>
+#endif
+#ifdef HAVE_UTMPX_H
+#include <utmpx.h>
+#endif],[UTMP ut; char *p; p=ut.ut_name;],result=yes,result=no)
+if test "$result" = "yes"; then
+  AC_DEFINE(HAVE_UT_UT_NAME)
+fi
+AC_MSG_RESULT($result)
+
+AC_MSG_CHECKING(for ut_type field in the utmp structure)
+AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+#include <sys/time.h>
+#include <time.h>
+#else
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#else
+#include <time.h>
+#endif
+#endif
+#ifdef HAVE_UTMP_H
+#include <utmp.h>
+#endif
+#ifdef HAVE_UTMPX_H
+#include <utmpx.h>
+#endif],[UTMP ut; int i; i=(int) ut.ut_type;],result=yes,result=no)
+if test "$result" = "yes"; then
+  AC_DEFINE(HAVE_UT_UT_TYPE)
+fi
+AC_MSG_RESULT($result)
+
+AC_MSG_CHECKING(for ut_exit.e_termination field in the utmp structure)
+AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+#include <sys/time.h>
+#include <time.h>
+#else
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#else
+#include <time.h>
+#endif
+#endif
+#ifdef HAVE_UTMP_H
+#include <utmp.h>
+#endif
+#ifdef HAVE_UTMPX_H
+#include <utmpx.h>
+#endif],[UTMP ut; ut.ut_exit.e_termination=0;],result=yes,result=no)
+if test "$result" = "yes"; then
+  AC_DEFINE(HAVE_UT_UT_EXIT_E_TERMINATION)
+fi
+AC_MSG_RESULT($result)
+
+AC_MSG_CHECKING(for ut_user field in the utmp structure)
+AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+#include <sys/time.h>
+#include <time.h>
+#else
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#else
+#include <time.h>
+#endif
+#endif
+#ifdef HAVE_UTMP_H
+#include <utmp.h>
+#endif
+#ifdef HAVE_UTMPX_H
+#include <utmpx.h>
+#endif],[UTMP ut; char *p; p=ut.ut_user;],result=yes,result=no)
+if test "$result" = "yes"; then
+  AC_DEFINE(HAVE_UT_UT_USER)
+fi
+AC_MSG_RESULT($result)
+
+AC_MSG_CHECKING(for ut_time field in the utmp structure)
+AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+#include <sys/time.h>
+#include <time.h>
+#else
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#else
+#include <time.h>
+#endif
+#endif
+#ifdef HAVE_UTMP_H
+#include <utmp.h>
+#endif
+#ifdef HAVE_UTMPX_H
+#include <utmpx.h>
+#endif],[UTMP ut; ut.ut_time=0;],result=yes,result=no)
+if test "$result" = "yes"; then
+  AC_DEFINE(HAVE_UT_UT_TIME)
+fi
+AC_MSG_RESULT($result)
+
+AC_MSG_CHECKING(for ut_tv field in the utmp structure)
+AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+#include <sys/time.h>
+#include <time.h>
+#else
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#else
+#include <time.h>
+#endif
+#endif
+#ifdef HAVE_UTMP_H
+#include <utmp.h>
+#endif
+#ifdef HAVE_UTMPX_H
+#include <utmpx.h>
+#endif],[UTMP ut; ut.ut_tv={0, 0};],result=yes,result=no)
+if test "$result" = "yes"; then
+  AC_DEFINE(HAVE_UT_UT_TV)
+fi
+AC_MSG_RESULT($result)
+
+AC_MSG_CHECKING(for ut_syslen field in the utmp structure)
+AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+#include <sys/time.h>
+#include <time.h>
+#else
+#ifdef HAVE_SYS_TIME_H
+#include <sys/time.h>
+#else
+#include <time.h>
+#endif
+#endif
+#ifdef HAVE_UTMP_H
+#include <utmp.h>
+#endif
+#ifdef HAVE_UTMPX_H
+#include <utmpx.h>
+#endif],[UTMP ut; ut.ut_syslen=0;],result=yes,result=no)
+if test "$result" = "yes"; then
+  AC_DEFINE(HAVE_UT_UT_SYSLEN)
+fi
+AC_MSG_RESULT($result)
+
+])
diff -Nurd -x'*~' libzvt-2.0.1.orig/configure.in libzvt-2.0.1/configure.in
--- libzvt-2.0.1.orig/configure.in	2002-06-24 11:40:25.000000000 -0400
+++ libzvt-2.0.1/configure.in	2008-12-23 04:31:32.000000000 -0500
@@ -43,6 +43,7 @@
 
 AC_ISC_POSIX
 AC_PROG_CC
+AM_PROG_CC_C_O
 AC_STDC_HEADERS
 AM_PROG_LIBTOOL
 
@@ -130,6 +131,7 @@
 	gtk+-2.0 >= 1.3.11
 	libart-2.0 >= 2.3.5
 ])
+ZVT_LIBS="$ZVT_LIBS -L/usr/X11R6/lib -lX11"
 
 AC_SUBST(ZVT_LIBS)
 AC_SUBST(ZVT_CFLAGS)
diff -Nurd -x'*~' libzvt-2.0.1.orig/libzvt/Makefile.am libzvt-2.0.1/libzvt/Makefile.am
--- libzvt-2.0.1.orig/libzvt/Makefile.am	2002-06-24 11:39:33.000000000 -0400
+++ libzvt-2.0.1/libzvt/Makefile.am	2008-12-23 04:05:35.000000000 -0500
@@ -1,4 +1,4 @@
-ptyhelperdir = $(libexecdir)/libzvt-2.0
+ptyhelperdir = $(sbindir)
 
 noinst_PROGRAMS = zterm test-utmp
 ptyhelper_PROGRAMS = gnome-pty-helper
@@ -80,6 +80,7 @@
         gnome-login-support.c \
         gnome-utmp.c
 
+gnome_pty_helper_CFLAGS= $(AM_CFLAGS)
 gnome_pty_helper_LDADD= $(UTIL_LIBS)
 
 # Since we do gnome-pty-helper manually, include the relevant sources here
@@ -100,5 +101,3 @@
 test_utmp_LDADD =
 
 install-exec-local: install-ptyhelperPROGRAMS
-	-file=$(DESTDIR)$(ptyhelperdir)/gnome-pty-helper; \
-	chown @PTY_HELPER_UID@ $$file && chgrp @PTY_HELPER_GID@ $$file && chmod u+s $$file
diff -Nurd -x'*~' libzvt-2.0.1.orig/libzvt/libzvt.h libzvt-2.0.1/libzvt/libzvt.h
--- libzvt-2.0.1.orig/libzvt/libzvt.h	2002-06-03 12:59:26.000000000 -0400
+++ libzvt-2.0.1/libzvt/libzvt.h	2008-12-23 03:31:26.000000000 -0500
@@ -46,11 +46,11 @@
 /* #define ZVT_NO_TRANSPARENT 1 */
 
 #define ZVT_TYPE_TERM            (zvt_term_get_type ())
-#define ZVT_TERM(obj)            (GTK_CHECK_CAST ((obj), ZVT_TYPE_TERM, ZvtTerm))
-#define ZVT_TERM_CLASS(klass)    (GTK_CHECK_CLASS_CAST ((klass), ZVT_TYPE_TERM, ZvtTermClass))
-#define ZVT_IS_TERM(obj)         (GTK_CHECK_TYPE ((obj), ZVT_TYPE_TERM))
-#define ZVT_IS_TERM_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((klass), ZVT_TYPE_TERM))
-#define ZVT_TERM_GET_CLASS(obj)  (GTK_CHECK_GET_CLASS ((obj), ZVT_TYPE_TERM, ZvtTermClass))
+#define ZVT_TERM(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), ZVT_TYPE_TERM, ZvtTerm))
+#define ZVT_TERM_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), ZVT_TYPE_TERM, ZvtTermClass))
+#define ZVT_IS_TERM(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ZVT_TYPE_TERM))
+#define ZVT_IS_TERM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ZVT_TYPE_TERM))
+#define ZVT_TERM_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj), ZVT_TYPE_TERM, ZvtTermClass))
 	
   /* Capabilities
 
diff -Nurd -x'*~' libzvt-2.0.1.orig/libzvt/subshell.c libzvt-2.0.1/libzvt/subshell.c
--- libzvt-2.0.1.orig/libzvt/subshell.c	2002-06-19 14:53:58.000000000 -0400
+++ libzvt-2.0.1/libzvt/subshell.c	2008-12-23 03:32:35.000000000 -0500
@@ -242,7 +242,7 @@
 			close (helper_socket_fdpassing [0]);
 			close (helper_socket_fdpassing [1]);
 
-			execl (PTY_HELPER_DIR "/gnome-pty-helper", "gnome-pty-helper", NULL);
+			execl (PTY_HELPER_DIR "/gnome-pty-helper-2", "gnome-pty-helper-2", NULL);
 			exit (1);
 		} else {
 			close (helper_socket_fdpassing [1]);
