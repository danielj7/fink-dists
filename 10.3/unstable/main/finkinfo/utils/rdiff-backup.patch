# Let Fink install the document files into the proper location instead
# of having rdiff-backup's setup.py do it, which also puts its version
# number in the document directory name.

diff -ru rdiff-backup-1.1.0-orig/setup.py rdiff-backup-1.1.0/setup.py
--- rdiff-backup-1.1.0-orig/setup.py	2004-01-31 20:31:34.000000000 -0800
+++ rdiff-backup-1.1.0/setup.py	2004-03-08 19:01:56.000000000 -0800
@@ -56,7 +56,4 @@
 							   libraries=libname,
 							   extra_link_args=lflags_arg)],
 	  scripts = ['rdiff-backup'],
-	  data_files = [('share/man/man1', ['rdiff-backup.1']),
-					('share/doc/rdiff-backup-%s' % (version_string,),
-					 ['CHANGELOG', 'COPYING', 'README', 'FAQ.html'])])
-
+	  data_files = [('share/man/man1', ['rdiff-backup.1'])])

# Patch from
# http://savannah.nongnu.org/cgi-bin/viewcvs/rdiff-backup/rdiff-backup/rdiff_backup/fs_abilities.py.diff?r2=1.21&r1=1.20&diff_format=u

diff -u -r1.20 -r1.21
--- rdiff-backup-1.1.0/rdiff_backup/fs_abilities.py	2005/10/25 06:43:23	1.20
+++ rdiff-backup-1.1.0/rdiff_backup/fs_abilities.py	2005/10/26 00:52:53	1.21
@@ -436,8 +436,8 @@
 		self.update_triple(self.src_fsa.carbonfile, self.dest_fsa.carbonfile,
 			  ('carbonfile_active', 'carbonfile_write', 'carbonfile_conn'))
 		if self.src_fsa.carbonfile and not Globals.carbonfile_active:
-			Log("Source may have carbonfile support, but support defaults to "
-				"off.\n  Use --carbonfile to enable.", 5)
+			log.Log("Source may have carbonfile support, but support "
+					"defaults to off.\n  Use --carbonfile to enable.", 5)
 
 	def set_hardlinks(self):
 		if Globals.preserve_hardlinks != 0:
===================================================================
RCS file: /cvsroot/rdiff-backup/cvsroot/rdiff-backup/rdiff-backup/rdiff_backup/fs_abilities.py,v
retrieving revision 1.21
retrieving revision 1.22
diff -u -r1.21 -r1.22
--- rdiff-backup-1.1.0/rdiff_backup/fs_abilities.py	2005/10/26 00:52:53	1.21
+++ rdiff-backup-1.1.0/rdiff_backup/fs_abilities.py	2005/10/26 17:42:17	1.22
@@ -514,7 +514,8 @@
 			return actual_ctq
 		log.Log.FatalError("""New quoting requirements!
 
-The quoting this session appears to need do not match those in
+The quoting chars this session needs (%s) do not match
+the repository settings (%s) listed in
 
 %s
 
@@ -522,10 +523,7 @@
 normal file system onto a windows one that cannot support the same
 characters, or if you backup a case-sensitive file system onto a
 case-insensitive one that previously only had case-insensitive ones
-backed up onto it.
-
-If you want to risk it, remove the file
-rdiff-backup-data/chars_to_quote.""" % (ctq_rp.path,))
+backed up onto it.""" % (suggested_ctq, actual_ctq, ctq_rp.path))
 
 
 class RestoreSetGlobals(SetGlobals):
===================================================================
RCS file: /cvsroot/rdiff-backup/cvsroot/rdiff-backup/rdiff-backup/rdiff_backup/fs_abilities.py,v
retrieving revision 1.22
retrieving revision 1.23
diff -c -r1.22 -r1.23
*** rdiff-backup-1.1.0/rdiff_backup/fs_abilities.py	2005/10/26 17:42:17	1.22
--- rdiff-backup-1.1.0/rdiff_backup/fs_abilities.py	2005/10/30 15:43:42	1.23
***************
*** 199,205 ****
  		assert ord_rp.lstat()
  		ord_rp.delete()
  
! 		extended_filename = ':\\' + chr(175)
  		try:
  			ext_rp = subdir.append(extended_filename)
  			ext_rp.touch()
--- 199,206 ----
  		assert ord_rp.lstat()
  		ord_rp.delete()
  
! 		# Try a UTF-8 encoded character
! 		extended_filename = ':\\ ' + chr(225) + chr(132) + chr(137)
  		try:
  			ext_rp = subdir.append(extended_filename)
  			ext_rp.touch()
***************
*** 423,430 ****
  		self.update_triple(self.src_fsa.acls, self.dest_fsa.acls,
  						   ('acls_active', 'acls_write', 'acls_conn'))
  		if Globals.never_drop_acls and not Globals.acls_active:
! 			Log.FatalError("--never-drop-acls specified, but ACL support\n"
! 						   "missing from destination filesystem")
  
  	def set_resource_forks(self):
  		self.update_triple(self.src_fsa.resource_forks,
--- 424,431 ----
  		self.update_triple(self.src_fsa.acls, self.dest_fsa.acls,
  						   ('acls_active', 'acls_write', 'acls_conn'))
  		if Globals.never_drop_acls and not Globals.acls_active:
! 			log.Log.FatalError("--never-drop-acls specified, but ACL support\n"
! 							   "missing from destination filesystem")
  
  	def set_resource_forks(self):
  		self.update_triple(self.src_fsa.resource_forks,
