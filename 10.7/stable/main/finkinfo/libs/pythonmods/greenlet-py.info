Info2: <<
Package: greenlet-py%type_pkg[python]
Version: 0.4.5
Revision: 1
Type: python (2.7 3.2 3.3 3.4)
Distribution: (%type_pkg[python] = 32) 10.7, (%type_pkg[python] = 32) 10.8, (%type_pkg[python] = 32) 10.9, (%type_pkg[python] = 33) 10.7, (%type_pkg[python] = 33) 10.8, (%type_pkg[python] = 33) 10.9

Description: Lightweight in-process concurrent programming
DescDetail: <<
The greenlet package is a spin-off of Stackless, a version of CPython
that supports micro-threads called "tasklets". Tasklets run
pseudo-concurrently (typically in a single or a few OS-level threads)
and are synchronized with data exchanges on "channels".

A "greenlet", on the other hand, is a still more primitive notion of
micro-thread with no implicit scheduling; coroutines, in other words.
This is useful when you want to control exactly when your code runs. You
can build custom scheduled micro-threads on top of greenlet; however, it
seems that greenlets are useful on their own as a way to make advanced
control flow structures. For example, we can recreate generators; the
difference with Python's own generators is that our generators can call
nested functions and the nested functions can yield values too.
Additionally, you don't need a "yield" keyword. See the example in
tests/test_generator.py.
<<
Maintainer: Daniel Johnson <daniel@daniel-johnson.org>
License: BSD
Homepage: http://pypi.python.org/pypi/greenlet

Source: https://pypi.python.org/packages/source/g/greenlet/greenlet-%v.zip
Source-MD5: ce383f6475e6311cf8932ea779938703

Depends: python%type_pkg[python]
BuildDepends: fink (>= 0.24.12), setuptools-tng-py%type_pkg[python]

CompileScript: %p/bin/python%type_raw[python] setup.py build

InfoTest: <<
	TestScript: <<
		GREENLET_TEST_CPP=1 %p/bin/python%type_raw[python] setup.py test || exit 2
	<<
<<

InstallScript: %p/bin/python%type_raw[python] setup.py install --root=%d

DocFiles: benchmarks doc/greenlet.txt AUTHORS LICENSE* NEWS README.rst
<<
