diff -Nur gmsh-2.5.0-source/CMakeLists.txt gmsh-2.5.0-source.patched/CMakeLists.txt
--- gmsh-2.5.0-source/CMakeLists.txt	2010-10-15 14:35:00.000000000 +0100
+++ gmsh-2.5.0-source.patched/CMakeLists.txt	2011-09-29 17:04:06.000000000 +0100
@@ -955,9 +955,9 @@
   # set these so that the files get installed nicely in the MacOSX
   # .app bundle (FIXME: this screws up a standard "make install" on
   # MacOS)
-  set(GMSH_BIN ../MacOS)
-  set(GMSH_DOC ../../..)
-  set(GMSH_MAN ../../..)
+  set(GMSH_BIN bin)
+  set(GMSH_DOC share/doc/gmsh)
+  set(GMSH_MAN share/man/man1)
 else(WIN32)
   set(GMSH_BIN bin)
   set(GMSH_DOC share/doc/gmsh)
@@ -1057,12 +1057,6 @@
   file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/Info.plist "${F1}")
   set(CPACK_BUNDLE_PLIST ${CMAKE_CURRENT_BINARY_DIR}/Info.plist)
   set(CPACK_BUNDLE_ICON ${CMAKE_CURRENT_SOURCE_DIR}/Fltk/MacIcons.icns)
-  install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/Fltk/MacIconsGeo.icns DESTINATION .
-          RENAME GmshGeo.icns)
-  install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/Fltk/MacIconsMsh.icns DESTINATION .
-          RENAME GmshMsh.icns)
-  install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/Fltk/MacIconsPos.icns DESTINATION .
-          RENAME GmshPos.icns)
   set(CPACK_PACKAGE_ICON ${CMAKE_CURRENT_SOURCE_DIR}/Fltk/MacIcons.icns)
 elseif(WIN32)
   set(CPACK_GENERATOR ZIP)
diff -Nurd gmsh-2.5.0-source/contrib/gmm/gmm_interface.h gmsh-2.5.0-source.patched/contrib/gmm/gmm_interface.h
--- gmsh-2.5.0-source/contrib/gmm/gmm_interface.h	2010-10-15 09:35:00.000000000 -0400
+++ gmsh-2.5.0-source.patched/contrib/gmm/gmm_interface.h	2012-02-20 13:03:11.000000000 -0500
@@ -831,8 +831,8 @@
     }
     
     void fill(T a, T b = T(0)) { 
-      std::fill(begin_, end+nbc*nbl, b);
-      iterator p = begin_, e = end+nbc*nbl;
+      std::fill(begin_, begin_+nbc*nbl, b);
+      iterator p = begin_, e = begin_+nbc*nbl;
       while (p < e) { *p = a; p += nbl+1; }
     }
     inline size_type nrows(void) const { return nbl; }
@@ -957,8 +957,8 @@
     }
     
     void fill(T a, T b = T(0)) { 
-      std::fill(begin_, end+nbc*nbl, b);
-      iterator p = begin_, e = end+nbc*nbl;
+      std::fill(begin_, begin_+nbc*nbl, b);
+      iterator p = begin_, e = begin_+nbc*nbl;
       while (p < e) { *p = a; p += nbc+1; }
     }
     inline size_type nrows(void) const { return nbl; }
