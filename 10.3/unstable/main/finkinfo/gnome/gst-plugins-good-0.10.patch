
--- gst-plugins-good/ext/libpng/gstpngdec.c	2006-10-05 12:37:32.000000000 -0400
+++ gst-plugins-good-new/ext/libpng/gstpngdec.c	2006-12-22 10:15:21.000000000 -0500
@@ -222,7 +222,7 @@
     size_t offset = row_num * GST_ROUND_UP_4 (pngdec->rowbytes);
 
     GST_LOG ("got row %u, copying in buffer %p at offset %d", (guint) row_num,
-        pngdec->buffer_out, offset);
+        pngdec->buffer_out, (int)offset);
     memcpy (GST_BUFFER_DATA (pngdec->buffer_out) + offset, new_row,
         pngdec->rowbytes);
     pngdec->ret = GST_FLOW_OK;
@@ -307,7 +307,7 @@
 
   pngdec = GST_PNGDEC (png_ptr->io_ptr);
 
-  GST_LOG ("reading %d bytes of data at offset %d", length, pngdec->offset);
+  GST_LOG ("reading %d bytes of data at offset %d", (int)length, pngdec->offset);
 
   ret = gst_pad_pull_range (pngdec->sinkpad, pngdec->offset, length, &buffer);
   if ((ret != GST_FLOW_OK) || (GST_BUFFER_SIZE (buffer) != length))
--- gst-plugins-good/ext/taglib/gsttaglibmux.c	2006-05-30 10:35:17.000000000 -0400
+++ gst-plugins-good-new/ext/taglib/gsttaglibmux.c	2006-12-22 10:16:43.000000000 -0500
@@ -166,7 +166,7 @@
     goto render_error;
 
   mux->tag_size = GST_BUFFER_SIZE (buffer);
-  GST_LOG_OBJECT (mux, "tag size = %d bytes", mux->tag_size);
+  GST_LOG_OBJECT (mux, "tag size = %d bytes", (int)mux->tag_size);
 
   /* Send newsegment event from byte position 0, so the tag really gets
    * written to the start of the file, independent of the upstream segment */
@@ -218,7 +218,7 @@
 
   GST_DEBUG_OBJECT (mux, "adjusting newsegment event offsets to start=%"
       G_GINT64_FORMAT ", stop=%" G_GINT64_FORMAT ", cur=%" G_GINT64_FORMAT
-      " (delta = +%u)", start, stop, cur, mux->tag_size);
+      " (delta = +%u)", start, stop, cur, (unsigned int)mux->tag_size);
 
   return gst_event_new_new_segment (TRUE, 1.0, format, start, stop, cur);
 }
--- gst-plugins-good/gst/multipart/multipartmux.c	2006-12-06 09:45:30.000000000 -0500
+++ gst-plugins-good-new/gst/multipart/multipartmux.c	2006-12-22 10:10:53.000000000 -0500
@@ -496,7 +496,7 @@
   ret = gst_pad_alloc_buffer_and_set_caps (mux->srcpad, GST_BUFFER_OFFSET_NONE,
       headerlen, GST_PAD_CAPS (mux->srcpad), &headerbuf);
   if (ret != GST_FLOW_OK) {
-    GST_WARNING_OBJECT (mux, "failed allocating a %d bytes buffer", headerlen);
+    GST_WARNING_OBJECT (mux, "failed allocating a %d bytes buffer", (int)headerlen);
     g_free (header);
     goto beach;
   }
@@ -511,7 +511,7 @@
 
   GST_BUFFER_OFFSET (headerbuf) = mux->offset;
   mux->offset += headerlen;
-  GST_DEBUG_OBJECT (mux, "pushing %u bytes header buffer", headerlen);
+  GST_DEBUG_OBJECT (mux, "pushing %u bytes header buffer", (int)headerlen);
   gst_pad_push (mux->srcpad, headerbuf);
 
   GST_BUFFER_OFFSET (databuf) = mux->offset;
--- gst-plugins-good/sys/ximage/ximageutil.c	2006-10-05 12:37:33.000000000 -0400
+++ gst-plugins-good-new/sys/ximage/ximageutil.c	2006-12-22 10:13:00.000000000 -0500
@@ -78,7 +78,7 @@
 
   SHMInfo.shmid = shmget (IPC_PRIVATE, size, IPC_CREAT | 0777);
   if (SHMInfo.shmid == -1) {
-    GST_WARNING ("could not get shared memory of %d bytes", size);
+    GST_WARNING ("could not get shared memory of %d bytes", (int)size);
     goto beach;
   }
 
