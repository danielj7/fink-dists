diff -Nurd video-1.0.2/src/AVHandler.cc video-1.0.2.patched/src/AVHandler.cc
--- video-1.0.2/src/AVHandler.cc	2009-05-08 09:17:36.000000000 -0400
+++ video-1.0.2.patched/src/AVHandler.cc	2011-10-02 20:23:21.000000000 -0400
@@ -42,6 +42,8 @@
 #endif
 
 std::ostream *AVHandler::out = &std::cout;
+/** head of registered output format linked list */
+static AVOutputFormat *first_oformat = NULL;
 
 AVHandler::~AVHandler(void) {
     if (frame) {
@@ -127,9 +129,9 @@
     }
 
     snprintf(av_output->filename, sizeof(av_output->filename), "%s", filename.c_str());
-    snprintf(av_output->title, sizeof(av_output->title), "%s", title.c_str());
-    snprintf(av_output->author, sizeof(av_output->author), "%s", author.c_str());
-    snprintf(av_output->comment, sizeof(av_output->comment), "%s", comment.c_str());
+//    snprintf(av_output->title, sizeof(av_output->title), "%s", title.c_str());
+//    snprintf(av_output->author, sizeof(av_output->author), "%s", author.c_str());
+//    snprintf(av_output->comment, sizeof(av_output->comment), "%s", comment.c_str());
     
     if (url_fopen(&av_output->pb, filename.c_str(), URL_WRONLY) < 0) {
 	(*out) << "AVHandler: Could not open \"" << filename << "\" for output" << std::endl;
@@ -204,9 +206,9 @@
     width = vstream->codec->width;
     height = vstream->codec->height;
 
-    title = av_input->title;
-    author = av_input->author;
-    comment = av_input->comment;
+//    title = av_input->title;
+//    author = av_input->author;
+//    comment = av_input->comment;
 
     rgbframe = create_frame(PIX_FMT_RGB24);
     if (!rgbframe) return -1;
@@ -296,7 +298,7 @@
        	(*out) << "AVHandler: Error seeking to " << target_timestamp << std::endl;
        	return -1;
     }
-    cc->hurry_up = 1;
+    cc->skip_frame;
 
     // Flush stream buffers after seek
     avcodec_flush_buffers(cc);
@@ -331,7 +333,7 @@
 
 	// Decode the packet into a frame
 	int frameFinished;
-	if (avcodec_decode_video(cc, frame, &frameFinished, packet.data, packet.size) < 0) {
+	if (avcodec_decode_video2(cc, frame, &frameFinished, packet.data, packet.size) < 0) {
 	    (*out) << "AVHandler: Error decoding video stream" << std::endl;
 	    av_free_packet(&packet);
 	    av_free(frame); frame = NULL;
@@ -342,7 +344,7 @@
 	    current_timestamp = (uint64_t)(vstream->cur_dts * AV_TIME_BASE * (long double)stream_time_base);
 	}
     }
-    cc->hurry_up = 0;
+//    cc->hurry_up = 0;
 
     SwsContext *sc = sws_getContext(cc->width, cc->height, cc->pix_fmt, 
 				    cc->width, cc->height, PIX_FMT_BGR24, 
