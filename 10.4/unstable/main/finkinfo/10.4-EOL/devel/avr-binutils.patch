--- binutils-2.19/opcodes/avr-dis.c	2007-07-05 11:49:00.000000000 +0200
+++ binutils-2.19-patched/opcodes/avr-dis.c	2009-09-12 09:34:15.000000000 +0200
@@ -109,7 +109,7 @@
 	    case 0x100e: xyz = "-X"; break;
 	    default: xyz = "??"; ok = 0;
 	  }
-	sprintf (buf, xyz);
+	strcpy(buf, xyz);
 
 	if (AVR_UNDEF_P (insn))
 	  sprintf (comment, _("undefined"));
@@ -149,7 +149,7 @@
 	 value of the address only once, but this would mean recoding
 	 objdump_print_address() which would affect many targets.  */
       sprintf (buf, "%#lx", (unsigned long) *sym_addr);      
-      sprintf (comment, comment_start);
+      strcpy (comment, comment_start);
       break;
       
     case 'L':
@@ -158,7 +158,7 @@
 	sprintf (buf, ".%+-8d", rel_addr);
         *sym = 1;
         *sym_addr = pc + 2 + rel_addr;
-	sprintf (comment, comment_start);
+	strcpy (comment, comment_start);
       }
       break;
 
@@ -169,7 +169,7 @@
 	sprintf (buf, ".%+-8d", rel_addr);
         *sym = 1;
         *sym_addr = pc + 2 + rel_addr;
-	sprintf (comment, comment_start);
+	strcpy (comment, comment_start);
       }
       break;
 
--- binutils-2.19/binutils/strings.c	2008-08-25 06:38:13.000000000 +0200
+++ binutils-2.19-patched/binutils/strings.c	2009-09-12 09:59:00.000000000 +0200
@@ -85,13 +85,9 @@
 typedef off_t file_off;
 #define file_open(s,m) fopen(s, m)
 #endif
-#ifdef HAVE_STAT64
-typedef struct stat64 statbuf;
-#define file_stat(f,s) stat64(f, s)
-#else
+// inode not used - don't try to used 64 bit inodes
 typedef struct stat statbuf;
 #define file_stat(f,s) stat(f, s)
-#endif
 
 /* Radix for printing addresses (must be 8, 10 or 16).  */
 static int address_radix;
