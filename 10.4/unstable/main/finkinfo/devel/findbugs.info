Package: findbugs
Version: 1.3.1
Revision: 1
Description: Bug pattern detector for java
License: OSI-Approved
Maintainer: Rohan Lloyd <fink@rohanl.com>
Depends: system-java14 | system-java15
Source: mirror:sourceforge:%n/%n-%v.tar.gz
Source-MD5: b53bee4ea22c02818b5f67c701cd007a
PatchScript:   /usr/bin/true
CompileScript: /usr/bin/true
InstallScript: <<
  /usr/bin/install -m 755 -d %i/share/%n/lib
  /usr/bin/install -m 644 lib/*.jar %i/share/%n/lib
  /usr/bin/install -m 644 lib/*.icns %i/share/%n/lib

  /usr/bin/install -m 755 -d %i/share/%n/plugin
  /usr/bin/install -m 644 plugin/* %i/share/%n/plugin

  /usr/bin/install -m 755 -d %i/bin

  for i in $( /bin/ls bin/* | /usr/bin/grep -v '.*\.bat$' ); do \
    if [ -f $i ]; then \
      /usr/bin/install -m 755 ${i} %i/bin; \
    fi \
  done

  /usr/bin/install -m 755 -d %i/share/doc/%n
  /bin/cp -Rp doc %i/share/doc/%n
<<
DocFiles: LICENSE.txt README.txt
JarFiles: lib/findbugs-ant.jar
Homepage: http://findbugs.sourceforge.net/
DescDetail: <<
FindBugs is a program to find bugs in Java programs.  It looks for
instances of "bug patterns" --- code instances that are likely to be
errors.

Changes since version 1.3.0:

 * New Reports
   - VA_FORMAT_STRING_ARG_MISMATCH: A format-string method with a
     variable number of arguments is called, but the number of
     arguments passed does not match with the number of % placeholders
     in the format string. This is probably not what the author
     intended.
   - IO_APPENDING_TO_OBJECT_OUTPUT_STREAM: This code opens a file in
     append mode and that wraps the result in an object output
     stream. This won't allow you to append to an existing object
     output stream stored in a file. If you want to be able to append
     to an object output stream, you need to keep the object output
     stream open. The only situation in which opening a file in append
     mode and the writing an object output stream could work is if on
     reading the file you plan to open it in random access mode and
     seek to the byte offset where the append started.
   - NP_BOOLEAN_RETURN_NULL: A method that returns either
     Boolean.TRUE, Boolean.FALSE or null is an accident waiting to
     happen. This method can be invoked as though it returned a value
     of type boolean, and the compiler will insert automatic unboxing
     of the Boolean value. If a null value is returned, this will
     result in a NullPointerException.

 * Changes to Existing Reports
   - RV_DONT_JUST_NULL_CHECK_READLINE: CORRECTNESS -> STYLE
   - DMI_INVOKING_TOSTRING_ON_ARRAY: Long description mentions array
     name whenever possible

 * Fixes:
   - Updated manual to mention that Java 1.5 is now a requirement for
     running FindBugs
   - Applied patch 1840206 fixing issue "Ant task does not work when
     presetdef is used" - thanks to phejl
   - Applied patch 1778690 fixing issue "Ant task: tolerate but
     complain about invalid auxClasspath" - thanks to David Schmidt
   - Applied patch 1852125 adding a Chinese-language GUI bundle props
     file - thanks to fifi
   - Applied patch 1845903 adding ability to load XML results with the
     Eclipse plugin - thanks to Alex Mont
   - Fixed issue 1844671 - "FP for "reversed" null check in catch for
     stream close"
   - Fixed issue 1836050 - "-onlyAnalyze broken"
   - Fixed issue 1853011 - "Typo: Field names should start with aN
     lower case letter"
   - Fixed issue 1844181 - "JNLP file does not contain all necessary
     JARs"
   - Fixed issue 1840245 - "xxxException class does not derive from
     Exception"
   - Fixed issue 1840277 - "[M D EC] Typo in bug documentation"
   - Fixed issue 1782447 - "OutOfMemoryError if i activate Findbugs on
     my project"
   - Fixed issue 1830576 - "[regression] keySet/entrySet false
     positive"

 * Other:
   - New bug code: "IO" (for IO_APPENDING_TO_OBJECT_OUTPUT_STREAM)
   - Added "-onlyMostRecent" option for computeBugHistory script/ant
     task
   - More explicit language in RV_RETURN_VALUE_IGNORED_BAD_PRACTICE
     messages
   - Modified ResourceValueAnalysis to correctly identify null == X or
     null != X as a null check (for issue 1844671)
   - Modified DMI_HARDCODED_ABSOLUTE_FILENAME logic in
     DumbMethodInvocations to ignore files from /etc or /dev and
     increase priority of files from /home
   - Better bug details for infinite loop warnings
   - Modified unread-fields detector to reduce false positives from
     reflective fields
   - build.xml "classes" target now builds all sources in one step
<<
DescPackaging: <<
Findbugs itself is release under the LGPL, however the shell scripts that
launch the program contain some code subject to the Apache Software
License.

This is why I've set the License field to OSI-Approved
<<
