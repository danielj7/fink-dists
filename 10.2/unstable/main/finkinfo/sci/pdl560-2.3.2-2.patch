--- PDL-2.3.1/IO/Browser/Makefile.PL	Fri Jul 13 12:15:50 2001
+++ PDL-2.3.1/IO/Browser/Makefile.PL	Fri Jul 13 12:14:27 2001
@@ -17,13 +17,14 @@
 @pack = (["browser.pd",Browser,PDL::IO::Browser]);
 
 %hash = pdlpp_stdargs_int(@::pack);
-push @{$hash{LIBS}} , '-lcurses';
+push @{$hash{LIBS}} , '-L<PREFIX>/lib -lcurses';
+$hash{'INC'} .= ' -I<PREFIX>/include';
 $hash{'OBJECT'} .= ' browse$(OBJ_EXT)';
 $hash{'clean'}{FILES} .= ' browse$(OBJ_EXT)';
-unshift @{$hash{LIBS}} , '-lncurses'; # For some systems
+unshift @{$hash{LIBS}} , '-L<PREFIX>/lib -lncurses'; # For some systems
 
 # Find the relevant file to include
-@idirs = ('/usr/include', '/usr/local/include');
+@idirs = ('<PREFIX>/include', '/usr/include', '/usr/local/include');
 @curses = ('curses','ncurses');
 @curses = reverse @curses if $^O eq 'freebsd';
 CURSES:
--- PDL-2.3.1/Doc/Doc/Perldl.pm.orig	Thu Sep 13 05:48:20 2001
+++ PDL-2.3.1/Doc/Doc/Perldl.pm	Thu Sep 13 05:48:43 2001
@@ -109,24 +109,6 @@
 
     # XXX this is NASTY
     my $width = screen_width()-17;
-    if ( $Pod::Text::VERSION < 2 ) {
-	$Pod::Text::indent = 0;
-	$Pod::Text::SCREEN = $width;
-	local $^W = 0;
-	for my $m (@match) { 
-	    $_ = $m->[1]->{Ref} || "[No reference available]";
-	  Pod::Text::prepare_for_output(); # adds a '\n' to $_
-	    $_ = Pod::Text::fill $_; # try and get `nice' wrapping 
-	    s/\n*$//; # remove last new lines (so substitution doesn't append spaces at end of text)
-	    s/\n/\n                /g;
-	    my $name = $m->[0];
-	    if ( length($name) > 15 ) { 
-	        push @text, sprintf "%s ...\n                %s\n", $name, $_; 
-	    } else {
-		push @text, sprintf "%-15s %s\n", $name, $_; 
-	    }
-	}
-    } else {
 	my $parser = new Pod::Text( width => $width, indent => 0, sentence => 0 );
 	
 	for my $m (@match) { 
@@ -145,7 +127,6 @@
 		push @text, sprintf "%-15s %s\n", $name, $ref; 
 	    }
 	}
-    }
     return wantarray ? @text : $text[0];
 
 } # sub: format_ref()
--- PDL-2.3.1/perldl.conf	Mon Sep 25 14:59:31 2000
+++ PDL-2.3.1/perldl.conf	Sat Jul 14 07:36:31 2001
@@ -35,17 +35,17 @@
 # true  -> yes
 # false -> no, undef -> no
 #
-	WITH_BADVAL => 0,
+	WITH_BADVAL => 1,
 #	WITH_BADVAL => 1,
 
 # if WITH_BADVAL == 1, do we use NaN/Inf to represent badvalues
 # (not convinced setting this results in faster code)
 #
-	BADVAL_USENAN => 0,
+	BADVAL_USENAN => 1,
 #	BADVAL_USENAN => 1,
 
 # Try to build Graphics/TriD
-	WITH_3D => undef,
+	WITH_3D => 0,
 #
 #  For Mesa 3.2
 #
@@ -68,36 +68,36 @@
 	OPENGL_DEFINE => undef,
 # Whether or not to build the Karma interface module
 
-        WITH_KARMA => undef,    # Leave it up to PDL to decide
-        WHERE_KARMA => undef,   # you may explicitly specify directory location
+        WITH_KARMA => 0,    # Leave it up to PDL to decide
+        WHERE_KARMA => 0,   # you may explicitly specify directory location
 	
 # Whether or not to build the PDL::Slatec module
 # 0 -> don't use
 # true -> force use
 
-        WITH_SLATEC => undef,    # Leave it up to PDL to decide
+        WITH_SLATEC => 1,    # Leave it up to PDL to decide
 
 # Whether or not to build the PDL::GSL module
 # 0 -> don't use
 # true -> force use
 
-        WITH_GSL => undef,    # Leave it up to PDL to decide
+        WITH_GSL => 1,    # Leave it up to PDL to decide
 
 # Location to search for the GSL libs
-	GSL_LIBS => [ '/lib','/usr/lib','/usr/local/lib'],
+	GSL_LIBS => ['<PREFIX>/lib', '/lib','/usr/lib','/usr/local/lib'],
 # Location to find GSL includes:
- 	GSL_INC => '-I/usr/include/gsl -I/usr/local/include',
+ 	GSL_INC => '-I<PREFIX>/include -I<PREFIX>/include/gsl -I/usr/include/gsl -I/usr/local/include',
 
 # Whether or not to build the PDL::FFTW module
 # 0 -> don't use
 # true -> force use
 
-        WITH_FFTW => undef,    # Leave it up to PDL to decide
+        WITH_FFTW => 1,    # Leave it up to PDL to decide
 
 # Location to search for the FFTW libs
-	FFTW_LIBS => [ '/lib','/usr/lib','/usr/local/lib'],
+	FFTW_LIBS => ['<PREFIX>/lib', '/lib','/usr/lib','/usr/local/lib'],
 # Location to find FFTW includes:
- 	FFTW_INC => ['/usr/include/','/usr/local/include'],
+ 	FFTW_INC => ['<PREFIX>/include', '/usr/include/','/usr/local/include'],
 
 # FFTW Numeric Precision Type to link in: (double or single precision)
 	FFTW_TYPE => 'double',
@@ -107,7 +107,7 @@
 #    about curses to fix it 
 #  - 1 builds, 0 or undef does not build
 #
-        WITH_IO_BROWSER => 0,
+        WITH_IO_BROWSER => 1,
 );
 
 1; # Return OK status on 'require'
