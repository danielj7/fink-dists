diff -Nurd kdebase-workspace-4.2.4/ConfigureChecks.cmake kdebase-workspace-4.2.4-new/ConfigureChecks.cmake
--- kdebase-workspace-4.2.4/ConfigureChecks.cmake	2009-03-26 10:42:29.000000000 -0400
+++ kdebase-workspace-4.2.4-new/ConfigureChecks.cmake	2009-06-11 10:57:17.000000000 -0400
@@ -1,8 +1,10 @@
 include(UnixAuth)
 include(CheckTypeSize)
 include(FindPkgConfig)
+include(CheckTypeSize)
 
 macro_optional_find_package(XKB) # kxkb, kdm
+macro_optional_find_package(Fontconfig)
 
 if (PAM_FOUND)
     set(KDE4_COMMON_PAM_SERVICE "kde" CACHE STRING "The PAM service to use unless overridden for a particular app.")
diff -Nurd kdebase-workspace-4.2.4/kcontrol/CMakeLists.txt kdebase-workspace-4.2.4-new/kcontrol/CMakeLists.txt
--- kdebase-workspace-4.2.4/kcontrol/CMakeLists.txt	2008-12-04 03:34:47.000000000 -0500
+++ kdebase-workspace-4.2.4-new/kcontrol/CMakeLists.txt	2009-06-11 10:57:17.000000000 -0400
@@ -3,8 +3,6 @@
 
 
 set(libkxftconfig_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/fonts/kxftconfig.cpp )
-
-
 if( X11_Xrandr_FOUND )
    add_subdirectory( randr )
 endif(X11_Xrandr_FOUND )
diff -Nurd kdebase-workspace-4.2.4/kcontrol/input/xcursor/thememodel.cpp kdebase-workspace-4.2.4-new/kcontrol/input/xcursor/thememodel.cpp
--- kdebase-workspace-4.2.4/kcontrol/input/xcursor/thememodel.cpp	2008-08-07 11:21:08.000000000 -0400
+++ kdebase-workspace-4.2.4-new/kcontrol/input/xcursor/thememodel.cpp	2009-06-11 10:57:17.000000000 -0400
@@ -165,7 +165,7 @@
     QString path("~/.icons:/usr/share/icons:/usr/share/pixmaps:/usr/X11R6/lib/X11/icons");
 
     // If XCURSOR_PATH is set, use that instead of the default path
-    char *xcursorPath = std::getenv("XCURSOR_PATH");
+    char *xcursorPath = ::getenv("XCURSOR_PATH");
     if (xcursorPath)
         path = xcursorPath;
 #else
diff -Nurd kdebase-workspace-4.2.4/kcontrol/kxkb/CMakeLists.txt kdebase-workspace-4.2.4-new/kcontrol/kxkb/CMakeLists.txt
--- kdebase-workspace-4.2.4/kcontrol/kxkb/CMakeLists.txt	2008-12-21 15:19:16.000000000 -0500
+++ kdebase-workspace-4.2.4-new/kcontrol/kxkb/CMakeLists.txt	2009-06-11 10:58:17.000000000 -0400
@@ -51,8 +51,19 @@
 endif(USE_XKLAVIER STREQUAL ON)
 macro_log_feature(X11_Xkbfile_FOUND "xkbfile" "X11 KXB library for keyboard handling software" "http://www.x.org" FALSE "" "xkbfile is required to build kxkb.")
 
-macro_bool_to_01(X11_Xinput_FOUND HAVE_XINPUT)
+if(Q_WS_X11)
+SET(CMAKE_REQUIRED_LIBRARIES -lXi)
+CHECK_FUNCTION_EXISTS(_XiGetDevicePresenceNotifyEvent XiGetDevicePresenceNotifyEvent_EXISTS)
+
+if( X11_Xinput_FOUND AND XiGetDevicePresenceNotifyEvent_EXISTS )
+    set(XiGetDevicePresence_FOUND 1)
+else( X11_Xinput_FOUND AND XiGetDevicePresenceNotifyEvent_EXISTS )
+    MESSAGE(STATUS "_XiGetDevicePresenceNotifyEvent is not found, libXi version 1.2.0 or later is required to keep layouts with keyboard hotplugging")
+endif( X11_Xinput_FOUND AND XiGetDevicePresenceNotifyEvent_EXISTS )
+
+macro_bool_to_01(XiGetDevicePresence_FOUND HAVE_XINPUT)
 ADD_DEFINITIONS(-DHAVE_XINPUT=${HAVE_XINPUT})
+endif(Q_WS_X11)
 
 if(X11_Xkbfile_FOUND AND HAVE_XKLAVIER)
 
@@ -89,9 +100,9 @@
   target_link_libraries(kcm_keyboard_layout ${X11_XTest_LIB})
 endif(X11_XTest_FOUND)
 
-if(X11_Xinput_FOUND)
+if(XiGetDevicePresence_FOUND)
   target_link_libraries(kcm_keyboard_layout ${X11_Xinput_LIB})
-endif(X11_Xinput_FOUND)
+endif(XiGetDevicePresence_FOUND)
 
 install(TARGETS kcm_keyboard_layout DESTINATION ${PLUGIN_INSTALL_DIR})
 install(FILES keyboard_layout.desktop DESTINATION  ${SERVICES_INSTALL_DIR})
@@ -113,9 +124,9 @@
 target_link_libraries(kdeinit_kxkb ${X11_X11_LIB} ${X11_Xext_LIB} ${KDE4_KDEUI_LIBS}
      ${XKB_SUPPORT_LIB})
 
-if(X11_Xinput_FOUND)
+if(XiGetDevicePresence_FOUND)
   target_link_libraries(kdeinit_kxkb ${X11_Xinput_LIB})
-endif(X11_Xinput_FOUND)
+endif(XiGetDevicePresence_FOUND)
 
 install(TARGETS kdeinit_kxkb ${INSTALL_TARGETS_DEFAULT_ARGS})
 install(TARGETS kxkb         ${INSTALL_TARGETS_DEFAULT_ARGS})
diff -Nurd kdebase-workspace-4.2.4/kcontrol/kxkb/x11helper.cpp kdebase-workspace-4.2.4-new/kcontrol/kxkb/x11helper.cpp
--- kdebase-workspace-4.2.4/kcontrol/kxkb/x11helper.cpp	2008-12-21 15:19:16.000000000 -0500
+++ kdebase-workspace-4.2.4-new/kcontrol/kxkb/x11helper.cpp	2009-06-11 10:57:17.000000000 -0400
@@ -369,7 +369,7 @@
 
 #endif  /* HAVE_XKLAVIER*/
 
-#ifdef HAVE_XINPUT
+#if defined(HAVE_XINPUT) && defined(DevicePresence)
 
 int X11Helper::m_xinputEventType = -1;
 
@@ -425,7 +425,7 @@
 int
 X11Helper::registerForNewDeviceEvent(Display* display)
 {
-    kWarn() << "Kxkb is compiled without XInput, xkb configuration will be reset when new keyboard device is plugged in!";
+    kWarning() << "Kxkb is compiled without XInput, xkb configuration will be reset when new keyboard device is plugged in!";
     return -1;
 }
 #endif
diff -Nurd kdebase-workspace-4.2.4/ksmserver/server.cpp kdebase-workspace-4.2.4-new/ksmserver/server.cpp
--- kdebase-workspace-4.2.4/ksmserver/server.cpp	2009-04-30 05:11:55.000000000 -0400
+++ kdebase-workspace-4.2.4-new/ksmserver/server.cpp	2009-06-11 10:57:17.000000000 -0400
@@ -643,6 +643,8 @@
         int i;
         while( (i = display.indexOf(':')) >= 0)
            display[i] = '_';
+        while( (i = display.indexOf('/')) >= 0)
+           display[i] = '_';
 
         fName += '_'+display.toLocal8Bit();
         FILE *f;
@@ -710,6 +712,8 @@
     int i;
     while( (i = display.indexOf(':')) >= 0)
          display[i] = '_';
+    while( (i = display.indexOf('/')) >= 0)
+         display[i] = '_';
 
     fName += '_'+display.toLocal8Bit();
     ::unlink(fName.data());
diff -Nurd kdebase-workspace-4.2.4/ksplash/ksplashx/qpoint.h kdebase-workspace-4.2.4-new/ksplash/ksplashx/qpoint.h
--- kdebase-workspace-4.2.4/ksplash/ksplashx/qpoint.h	2008-01-04 18:55:38.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksplash/ksplashx/qpoint.h	2009-06-11 10:57:17.000000000 -0400
@@ -93,7 +93,7 @@
 private:
     static void warningDivByZero();
 
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     QCOORD yp;
     QCOORD xp;
 #else
diff -Nurd kdebase-workspace-4.2.4/ksplash/ksplashx/qrect.h kdebase-workspace-4.2.4-new/ksplash/ksplashx/qrect.h
--- kdebase-workspace-4.2.4/ksplash/ksplashx/qrect.h	2008-01-04 18:55:38.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksplash/ksplashx/qrect.h	2009-06-11 10:57:17.000000000 -0400
@@ -145,7 +145,7 @@
 #if defined(Q_WS_X11) || defined(Q_OS_TEMP)
     friend void qt_setCoords( QRect *r, int xp1, int yp1, int xp2, int yp2 );
 #endif
-#if defined(Q_OS_MAC)
+#if defined(Q_WS_MAC)
     QCOORD y1;
     QCOORD x1;
     QCOORD y2;
diff -Nurd kdebase-workspace-4.2.4/ksysguard/gui/setscheduler.c kdebase-workspace-4.2.4-new/ksysguard/gui/setscheduler.c
--- kdebase-workspace-4.2.4/ksysguard/gui/setscheduler.c	2008-07-31 04:14:09.000000000 -0400
+++ kdebase-workspace-4.2.4-new/ksysguard/gui/setscheduler.c	2009-06-11 10:57:17.000000000 -0400
@@ -4,6 +4,9 @@
 
 int main(int argc, char **argv)
 {
+#ifdef __APPLE__
+	exit(EXIT_FAILURE);
+#else
 	if(argc != 4) {
 		fprintf(stderr, "Usage: %s PID SCHEDULER PRIORITY\n", argv[0]);
 		fprintf(stderr, "Sets the CPU Scheduler and priority for the given PID.\n  See man sched_setscheduler for more information\n\n");
@@ -48,4 +51,5 @@
 	}
 
 	return result;
+#endif // __APPLE__
 }
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/CMakeLists.txt kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/CMakeLists.txt
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/CMakeLists.txt	2008-10-17 07:00:26.000000000 -0400
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/CMakeLists.txt	2009-06-11 10:57:17.000000000 -0400
@@ -25,8 +25,13 @@
         add_subdirectory( "Solaris" )
         include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/Solaris )
     else( ${CMAKE_SYSTEM_NAME} MATCHES "SunOS" )
-        add_subdirectory( ${CMAKE_SYSTEM_NAME} )
-        include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/${CMAKE_SYSTEM_NAME} )
+        if( IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${CMAKE_SYSTEM_NAME} )
+            add_subdirectory( ${CMAKE_SYSTEM_NAME} )
+            include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/${CMAKE_SYSTEM_NAME} )
+        else( IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${CMAKE_SYSTEM_NAME} )
+            add_subdirectory( "Stub" )
+            include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/"Stub" )
+        endif( IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${CMAKE_SYSTEM_NAME} )
     endif( ${CMAKE_SYSTEM_NAME} MATCHES "SunOS" )
 endif( ${CMAKE_SYSTEM_NAME} MATCHES "DragonFly" )
 
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/CMakeLists.txt kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/CMakeLists.txt
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/CMakeLists.txt	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/CMakeLists.txt	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,13 @@
+INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/../../CContLib ${CMAKE_CURRENT_SOURCE_DIR}/../ )
+
+KDE4_ADD_LIBRARY(libksysguardd STATIC 
+            apm.c
+            CPU.c
+            diskstat.c
+            loadavg.c
+            logfile.c
+            Memory.c
+            netdev.c
+            ProcessList.c)
+
+
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/CPU.c kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/CPU.c
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/CPU.c	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/CPU.c	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,80 @@
+/*
+    KSysGuard, the KDE System Guard
+
+	Copyright (c) 1999 Chris Schlaeger <cs@kde.org>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#include "CPU.h"
+#include "Command.h"
+#include "ksysguardd.h"
+
+void
+initCpuInfo(struct SensorModul* sm)
+{
+}
+
+void
+exitCpuInfo(void)
+{
+}
+
+int
+updateCpuInfo(void)
+{
+	return 0;
+}
+
+void
+printCPUUser(const char* cmd)
+{
+}
+
+void
+printCPUUserInfo(const char* cmd)
+{
+}
+
+void
+printCPUNice(const char* cmd)
+{
+}
+
+void
+printCPUNiceInfo(const char* cmd)
+{
+}
+
+void
+printCPUSys(const char* cmd)
+{
+}
+
+void
+printCPUSysInfo(const char* cmd)
+{
+}
+
+void
+printCPUIdle(const char* cmd)
+{
+}
+
+void
+printCPUIdleInfo(const char* cmd)
+{
+}
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/CPU.h kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/CPU.h
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/CPU.h	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/CPU.h	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,49 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 1999 Chris Schlaeger <cs@kde.org>
+    
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#ifndef _cpuinfo_h_
+#define _cpuinfo_h_
+
+struct SensorModul;
+
+void initCpuInfo(struct SensorModul* sm);
+void exitCpuInfo(void);
+
+int updateCpuInfo(void);
+
+void printCPUUser(const char* cmd);
+void printCPUUserInfo(const char* cmd);
+void printCPUNice(const char* cmd);
+void printCPUNiceInfo(const char* cmd);
+void printCPUSys(const char* cmd);
+void printCPUSysInfo(const char* cmd);
+void printCPUIdle(const char* cmd);
+void printCPUIdleInfo(const char* cmd);
+void printCPUxUser(const char* cmd);
+void printCPUxUserInfo(const char* cmd);
+void printCPUxNice(const char* cmd);
+void printCPUxNiceInfo(const char* cmd);
+void printCPUxSys(const char* cmd);
+void printCPUxSysInfo(const char* cmd);
+void printCPUxIdle(const char* cmd);
+void printCPUxIdleInfo(const char* cmd);
+
+#endif
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/Memory.c kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/Memory.c
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/Memory.c	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/Memory.c	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,111 @@
+/*
+    KSysGuard, the KDE System Guard
+
+	Copyright (c) 1999-2000 Hans Petter Bieker <bieker@kde.org>
+	Copyright (c) 1999 Chris Schlaeger <cs@kde.org>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#include "Command.h"
+#include "Memory.h"
+#include "ksysguardd.h"
+
+void
+initMemory(struct SensorModul* sm)
+{
+}
+
+void
+exitMemory(void)
+{
+}
+
+int
+updateMemory(void)
+{
+	return 0;
+}
+
+void
+printMFree(const char* cmd)
+{
+}
+
+void
+printMFreeInfo(const char* cmd)
+{
+}
+
+void
+printUsed(const char* cmd)
+{
+}
+
+void
+printUsedInfo(const char* cmd)
+{
+}
+
+void
+printBuffers(const char* cmd)
+{
+}
+
+void
+printBuffersInfo(const char* cmd)
+{
+}
+
+void
+printCached(const char* cmd)
+{
+}
+
+void
+printCachedInfo(const char* cmd)
+{
+}
+
+void
+printApplication(const char* cmd)
+{
+}
+
+void
+printApplicationInfo(const char* cmd)
+{
+}
+
+void
+printSwapUsed(const char* cmd)
+{
+}
+
+void
+printSwapUsedInfo(const char* cmd)
+{
+}
+
+void
+printSwapFree(const char* cmd)
+{
+}
+
+void
+printSwapFreeInfo(const char* cmd)
+{
+}
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/Memory.h kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/Memory.h
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/Memory.h	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/Memory.h	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,45 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 1999 Chris Schlaeger <cs@kde.org>
+    
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#ifndef _memory_h_
+#define _memory_h_
+
+void initMemory(struct SensorModul* sm);
+void exitMemory(void);
+
+int updateMemory(void);
+
+void printMFree(const char* cmd);
+void printMFreeInfo(const char* cmd);
+void printUsed(const char* cmd);
+void printUsedInfo(const char* cmd);
+void printBuffers(const char* cmd);
+void printBuffersInfo(const char* cmd);
+void printCached(const char* cmd);
+void printCachedInfo(const char* cmd);
+void printApplication(const char* cmd);
+void printApplicationInfo(const char* cmd);
+void printSwapUsed(const char* cmd);
+void printSwapUsedInfo(const char* cmd);
+void printSwapFree(const char* cmd);
+void printSwapFreeInfo(const char* cmd);
+
+#endif
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/ProcessList.c kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/ProcessList.c
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/ProcessList.c	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/ProcessList.c	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,73 @@
+/*
+    KSysGuard, the KDE System Guard
+
+	Copyright (c) 1999-2000 Hans Petter Bieker<bieker@kde.org>
+	Copyright (c) 1999 Chris Schlaeger <cs@kde.org>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#include "../../gui/SignalIDs.h"
+#include "Command.h"
+#include "ProcessList.h"
+#include "ccont.h"
+#include "ksysguardd.h"
+
+void
+initProcessList(struct SensorModul* sm)
+{
+}
+
+void
+exitProcessList(void)
+{
+}
+
+int
+updateProcessList(void)
+{
+	return 0;
+}
+
+void
+printProcessListInfo(const char* cmd)
+{
+}
+
+void
+printProcessList(const char* cmd)
+{
+}
+
+void
+printProcessCount(const char* cmd)
+{
+}
+
+void
+printProcessCountInfo(const char* cmd)
+{
+}
+
+void
+killProcess(const char* cmd)
+{
+}
+
+void
+setPriority(const char* cmd)
+{
+}
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/ProcessList.h kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/ProcessList.h
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/ProcessList.h	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/ProcessList.h	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,38 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 1999 Chris Schlaeger <cs@kde.org>
+    
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#ifndef _process_list_h_
+#define _process_list_h_
+
+void initProcessList(struct SensorModul* sm);
+void exitProcessList(void);
+
+int updateProcessList(void);
+
+void printProcessList(const char*);
+void printProcessListInfo(const char*);
+void printProcessCount(const char* cmd);
+void printProcessCountInfo(const char* cmd);
+
+void killProcess(const char* cmd);
+void setPriority(const char* cmd);
+
+#endif
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/apm.c kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/apm.c
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/apm.c	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/apm.c	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,58 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 2001 Tobias Koenig <tokoe@kde.org>
+    
+    This program is free software; you can redistribute it and/or
+    modify it under the terms of version 2 of the GNU General Public
+    License as published by the Free Software Foundation.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#include "Command.h"
+#include "apm.h"
+#include "ksysguardd.h"
+
+void
+initApm(struct SensorModul* sm)
+{
+}
+
+void
+exitApm(void)
+{
+}
+
+int
+updateApm(void)
+{
+}
+
+void
+printApmBatFill(const char* c)
+{
+}
+
+void
+printApmBatFillInfo(const char* c)
+{
+}
+
+void
+printApmBatTime(const char* c)
+{
+}
+
+void
+printApmBatTimeInfo(const char* c)
+{
+}
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/apm.h kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/apm.h
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/apm.h	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/apm.h	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,34 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 2001 Tobias Koenig <tokoe@kde.org>
+    
+    This program is free software; you can redistribute it and/or
+    modify it under the terms of version 2 of the GNU General Public
+    License as published by the Free Software Foundation.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#ifndef _apm_h_
+#define _apm_h_
+
+void initApm(struct SensorModul* sm);
+void exitApm(void);
+
+int updateApm(void);
+
+void printApmBatFill(const char*);
+void printApmBatFillInfo(const char*);
+void printApmBatTime(const char*);
+void printApmBatTimeInfo(const char*);
+
+#endif
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/diskstat.c kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/diskstat.c
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/diskstat.c	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/diskstat.c	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,73 @@
+/*
+    KSysGuard, the KDE System Guard
+
+	Copyright (c) 2001 Tobias Koenig <tokoe@kde.org>
+
+    This program is free software; you can redistribute it and/or
+    modify it under the terms of version 2 of the GNU General Public
+    License as published by the Free Software Foundation.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#include "Command.h"
+#include "ccont.h"
+#include "diskstat.h"
+#include "ksysguardd.h"
+
+void initDiskStat(struct SensorModul* sm)
+{
+}
+
+void checkDiskStat(void)
+{
+}
+
+void exitDiskStat(void)
+{
+}
+
+int updateDiskStat(void)
+{
+	return 0;
+}
+
+void printDiskStat(const char* cmd)
+{
+}
+
+void printDiskStatInfo(const char* cmd)
+{
+}
+
+void printDiskStatUsed(const char* cmd)
+{
+}
+
+void printDiskStatUsedInfo(const char* cmd)
+{
+}
+
+void printDiskStatFree(const char* cmd)
+{
+}
+
+void printDiskStatFreeInfo(const char* cmd)
+{
+}
+
+void printDiskStatPercent(const char* cmd)
+{
+}
+
+void printDiskStatPercentInfo(const char* cmd)
+{
+}
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/diskstat.h kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/diskstat.h
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/diskstat.h	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/diskstat.h	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,40 @@
+/*
+    KSysGuard, the KDE System Guard
+	   
+	Copyright (c) 2001 Tobias Koenig <tokoe@kde.org>
+    
+    This program is free software; you can redistribute it and/or
+    modify it under the terms of version 2 of the GNU General Public
+    License as published by the Free Software Foundation.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#ifndef _diskstat_h_
+#define _diskstat_h_
+
+void initDiskStat(struct SensorModul* sm);
+void exitDiskStat(void);
+
+int updateDiskStat(void);
+void checkDiskStat(void);
+
+void printDiskStat(const char* cmd);
+void printDiskStatInfo(const char* cmd);
+
+void printDiskStatUsed(const char* cmd);
+void printDiskStatUsedInfo(const char* cmd);
+void printDiskStatFree(const char* cmd);
+void printDiskStatFreeInfo(const char* cmd);
+void printDiskStatPercent(const char* cmd);
+void printDiskStatPercentInfo(const char* cmd);
+
+#endif
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/loadavg.c kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/loadavg.c
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/loadavg.c	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/loadavg.c	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,69 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 2001 Tobias Koenig <tokoe@kde.org>
+    
+    This program is free software; you can redistribute it and/or
+    modify it under the terms of version 2 of the GNU General Public
+    License as published by the Free Software Foundation.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#include "Command.h"
+#include "ksysguardd.h"
+#include "loadavg.h"
+
+void
+initLoadAvg(struct SensorModul* sm)
+{
+}
+
+void
+exitLoadAvg(void)
+{
+}
+
+int
+updateLoadAvg(void)
+{
+	return 0;
+}
+
+void
+printLoadAvg1(const char* c)
+{
+}
+
+void
+printLoadAvg1Info(const char* c)
+{
+}
+
+void
+printLoadAvg5(const char* c)
+{
+}
+
+void
+printLoadAvg5Info(const char* c)
+{
+}
+
+void
+printLoadAvg15(const char* c)
+{
+}
+
+void
+printLoadAvg15Info(const char* c)
+{
+}
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/loadavg.h kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/loadavg.h
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/loadavg.h	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/loadavg.h	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,36 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 2001 Tobias Koenig <tokoe@kde.org>
+    
+    This program is free software; you can redistribute it and/or
+    modify it under the terms of version 2 of the GNU General Public
+    License as published by the Free Software Foundation.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#ifndef _loadavg_h_
+#define _loadavg_h_
+
+void initLoadAvg(struct SensorModul* sm);
+void exitLoadAvg(void);
+
+int updateLoadAvg(void);
+
+void printLoadAvg1(const char*);
+void printLoadAvg1Info(const char*);
+void printLoadAvg5(const char*);
+void printLoadAvg5Info(const char*);
+void printLoadAvg15(const char*);
+void printLoadAvg15Info(const char*);
+
+#endif
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/logfile.c kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/logfile.c
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/logfile.c	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/logfile.c	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,53 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 2001 Tobias Koenig <tokoe@kde.org>
+    
+    This program is free software; you can redistribute it and/or
+    modify it under the terms of version 2 of the GNU General Public
+    License as published by the Free Software Foundation.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#include "Command.h"
+#include "ccont.h"
+#include "conf.h"
+#include "ksysguardd.h"
+#include "logfile.h"
+
+void initLogFile(struct SensorModul* sm)
+{
+}
+
+void exitLogFile(void)
+{
+}
+
+void printLogFile(const char* cmd)
+{
+}
+
+void printLogFileInfo(const char* cmd)
+{
+}
+
+void registerLogFile(const char* cmd)
+{
+}
+
+void unregisterLogFile(const char* cmd)
+{
+}
+
+void printRegistered(const char* cmd)
+{
+}
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/logfile.h kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/logfile.h
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/logfile.h	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/logfile.h	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,36 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 2001 Tobias Koenig <tokoe@kde.org>
+    
+    This program is free software; you can redistribute it and/or
+    modify it under the terms of version 2 of the GNU General Public
+    License as published by the Free Software Foundation.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#ifndef _logfile_h_
+#define _logfile_h_
+
+void initLogFile(struct SensorModul* sm);
+void exitLogFile(void);
+
+void printLogFile(const char* cmd);
+void printLogFileInfo(const char* cmd);
+
+void registerLogFile(const char* cmd);
+void unregisterLogFile(const char* cmd);
+
+/* debug command */
+void printRegistered(const char* cmd);
+
+#endif
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/netdev.c kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/netdev.c
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/netdev.c	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/netdev.c	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,56 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 2001 Tobias Koenig <tokoe@kde.org>
+    
+    This program is free software; you can redistribute it and/or
+    modify it under the terms of version 2 of the GNU General Public
+    License as published by the Free Software Foundation.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#include "Command.h"
+#include "ksysguardd.h"
+#include "netdev.h"
+
+void initNetDev(struct SensorModul* sm)
+{
+}
+
+void exitNetDev(void)
+{
+}
+
+int updateNetDev(void)
+{
+	return 0;
+}
+
+void checkNetDev(void)
+{
+}
+
+void printNetDevRecBytes(const char *cmd)
+{
+}
+
+void printNetDevRecBytesInfo(const char *cmd)
+{
+}
+
+void printNetDevSentBytes(const char *cmd)
+{
+}
+
+void printNetDevSentBytesInfo(const char *cmd)
+{
+}
diff -Nurd kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/netdev.h kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/netdev.h
--- kdebase-workspace-4.2.4/ksysguard/ksysguardd/Stub/netdev.h	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/ksysguard/ksysguardd/Stub/netdev.h	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,35 @@
+/*
+    KSysGuard, the KDE System Guard
+   
+	Copyright (c) 2001 Tobias Koenig <tokoe@kde.org>
+    
+    This program is free software; you can redistribute it and/or
+    modify it under the terms of version 2 of the GNU General Public
+    License as published by the Free Software Foundation.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+*/
+
+#ifndef _netdev_h_
+#define _netdev_h_
+
+void initNetDev(struct SensorModul* sm);
+void exitNetDev(void);
+
+int updateNetDev(void);
+void checkNetDev(void);
+
+void printNetDevRecBytes(const char* cmd);
+void printNetDevRecBytesInfo(const char* cmd);
+void printNetDevSentBytes(const char* cmd);
+void printNetDevSentBytesInfo(const char* cmd);
+
+#endif
diff -Nurd kdebase-workspace-4.2.4/kwin/CMakeLists.txt kdebase-workspace-4.2.4-new/kwin/CMakeLists.txt
--- kdebase-workspace-4.2.4/kwin/CMakeLists.txt	2008-11-19 05:18:06.000000000 -0500
+++ kdebase-workspace-4.2.4-new/kwin/CMakeLists.txt	2009-06-11 10:57:17.000000000 -0400
@@ -26,6 +26,10 @@
 
 macro_bool_to_01( OPENGL_FOUND KWIN_HAVE_OPENGL )
 
+if(OPENGL_FOUND)
+  include_directories(${OPENGL_INCLUDE_DIR})
+endif(OPENGL_FOUND)
+
 # for things that are also used by kwin libraries
 configure_file(lib/kwinconfig.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/lib/kwinconfig.h )
 # for kwin internal things
diff -Nurd kdebase-workspace-4.2.4/kwin/lib/CMakeLists.txt kdebase-workspace-4.2.4-new/kwin/lib/CMakeLists.txt
--- kdebase-workspace-4.2.4/kwin/lib/CMakeLists.txt	2008-12-10 11:13:19.000000000 -0500
+++ kdebase-workspace-4.2.4-new/kwin/lib/CMakeLists.txt	2009-06-11 10:57:17.000000000 -0400
@@ -8,7 +8,6 @@
    kcommondecoration.cpp
    kcommondecoration_p.cpp )
 
-
 kde4_add_library(kdecorations SHARED ${kdecorations_LIB_SRCS})
 
 target_link_libraries(kdecorations ${KDE4_KDEUI_LIBS} kephal)
@@ -53,6 +52,7 @@
   if (DL_LIBRARY)
     target_link_libraries(kwineffects ${DL_LIBRARY})
   endif(DL_LIBRARY)
+  include_directories(${OPENGL_INCLUDE_DIR})
 endif(OPENGL_FOUND)
 if (X11_Xrender_FOUND)
   target_link_libraries(kwineffects ${X11_Xrender_LIB})
diff -Nurd kdebase-workspace-4.2.4/libs/ksysguard/processcore/processes_local_p.cpp kdebase-workspace-4.2.4-new/libs/ksysguard/processcore/processes_local_p.cpp
--- kdebase-workspace-4.2.4/libs/ksysguard/processcore/processes_local_p.cpp	2008-01-04 18:55:30.000000000 -0500
+++ kdebase-workspace-4.2.4-new/libs/ksysguard/processcore/processes_local_p.cpp	2009-06-11 10:57:17.000000000 -0400
@@ -32,6 +32,8 @@
 #include <qglobal.h>
 #ifdef Q_OS_SOLARIS
 #include "processes_solaris_p.cpp"
+#else
+#include "processes_stub_p.cpp"
 #endif
 #endif
 
diff -Nurd kdebase-workspace-4.2.4/libs/ksysguard/processcore/processes_stub_p.cpp kdebase-workspace-4.2.4-new/libs/ksysguard/processcore/processes_stub_p.cpp
--- kdebase-workspace-4.2.4/libs/ksysguard/processcore/processes_stub_p.cpp	1969-12-31 19:00:00.000000000 -0500
+++ kdebase-workspace-4.2.4-new/libs/ksysguard/processcore/processes_stub_p.cpp	2009-06-11 10:57:17.000000000 -0400
@@ -0,0 +1,163 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2007 Manolo Valdes <nolis71cu@gmail.com>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License version 2 as published by the Free Software Foundation.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+*/
+
+#include "processes_local_p.h"
+#include "process.h"
+
+#include <klocale.h>
+
+#include <QSet>
+
+#include <sys/param.h>
+#include <sys/sysctl.h>
+#include <sys/types.h>
+#include <sys/user.h>
+#include <sys/resource.h>
+#if defined(__DragonFly__)
+#include <sys/resourcevar.h>
+#include <err.h>
+#endif
+#include <signal.h>
+#include <unistd.h>  
+
+
+
+
+namespace KSysGuard
+{
+
+  class ProcessesLocal::Private
+  {
+    public:
+      Private() {;}
+      ~Private() {;}
+      inline bool readProc(long pid, struct kinfo_proc *p);
+      inline void readProcStatus(struct kinfo_proc *p, Process *process);
+      inline void readProcStat(struct kinfo_proc *p, Process *process);
+      inline void readProcStatm(struct kinfo_proc *p, Process *process);
+      inline bool readProcCmdline(long pid, Process *process);
+    };
+
+#ifndef _SC_NPROCESSORS_ONLN
+long int KSysGuard::ProcessesLocal::numberProcessorCores()
+{
+    int mib[2];
+    int ncpu;
+    size_t len;
+
+    mib[0] = CTL_HW;
+    mib[1] = HW_NCPU;
+    len = sizeof(ncpu);
+
+    if (sysctl(mib, 2, &ncpu, &len, NULL, 0) == -1 || !len)
+        return 1;
+    return len;
+}
+#endif  
+
+bool ProcessesLocal::Private::readProc(long pid, struct kinfo_proc *p)
+{
+    return false;
+}
+
+void ProcessesLocal::Private::readProcStatus(struct kinfo_proc *p, Process *process)
+{
+}
+
+void ProcessesLocal::Private::readProcStat(struct kinfo_proc *p, Process *ps)
+{
+}
+
+void ProcessesLocal::Private::readProcStatm(struct kinfo_proc *p, Process *process)
+{
+}
+
+bool ProcessesLocal::Private::readProcCmdline(long pid, Process *process)
+{
+    return false;
+}
+
+ProcessesLocal::ProcessesLocal() : d(new Private())
+{
+}
+
+long ProcessesLocal::getParentPid(long pid) {
+    Q_ASSERT(pid != 0);
+    long long ppid = 0;
+    struct kinfo_proc p;
+    if(d->readProc(pid, &p))
+    {
+#if defined(__FreeBSD__) && __FreeBSD_version >= 500015
+        ppid = p.ki_ppid;
+#elif defined(__DragonFly__) && __DragonFly_version >= 190000
+        ppid = p.kp_ppid;
+#else
+        ppid = p.kp_eproc.e_ppid;
+#endif
+    }
+    return ppid;
+}
+
+bool ProcessesLocal::updateProcessInfo( long pid, Process *process)
+{
+    struct kinfo_proc p;
+    if(!d->readProc(pid, &p)) return false;
+    d->readProcStat(&p, process);
+    d->readProcStatus(&p, process);
+    d->readProcStatm(&p, process);
+    if(!d->readProcCmdline(pid, process)) return false;
+
+    return true;
+}
+
+QSet<long> ProcessesLocal::getAllPids( )
+{
+    QSet<long> pids;
+    return pids;
+}
+
+bool ProcessesLocal::sendSignal(long pid, int sig) {
+    return false;
+}
+
+bool ProcessesLocal::setNiceness(long pid, int priority) {
+    return false;
+}
+
+bool ProcessesLocal::setIoNiceness(long pid, int priorityClass, int priority) {
+    return false;
+}
+
+bool ProcessesLocal::supportsIoNiceness() {
+    return false;
+}
+
+bool ProcessesLocal::setScheduler(long pid, int priorityClass, int priority) 
+{
+    return false;
+}
+
+long long ProcessesLocal::totalPhysicalMemory() {
+    return 0;
+}
+
+ProcessesLocal::~ProcessesLocal()
+{
+}
+
+}
diff -Nurd kdebase-workspace-4.2.4/libs/kworkspace/kworkspace.cpp kdebase-workspace-4.2.4-new/libs/kworkspace/kworkspace.cpp
--- kdebase-workspace-4.2.4/libs/kworkspace/kworkspace.cpp	2009-04-30 05:11:56.000000000 -0400
+++ kdebase-workspace-4.2.4-new/libs/kworkspace/kworkspace.cpp	2009-06-11 10:57:17.000000000 -0400
@@ -207,6 +207,8 @@
     int i;
     while( (i = display.indexOf(':')) >= 0)
        display[i] = '_';
+    while( (i = display.indexOf('/')) >= 0)
+       display[i] = '_';
 
     fName += '_';
     fName += display.toLocal8Bit();
diff -Nurd kdebase-workspace-4.2.4/plasma/applets/system-monitor/CMakeLists.txt kdebase-workspace-4.2.4-new/plasma/applets/system-monitor/CMakeLists.txt
--- kdebase-workspace-4.2.4/plasma/applets/system-monitor/CMakeLists.txt	2009-01-01 11:26:05.000000000 -0500
+++ kdebase-workspace-4.2.4-new/plasma/applets/system-monitor/CMakeLists.txt	2009-06-11 10:57:17.000000000 -0400
@@ -10,6 +10,7 @@
 kde4_add_library(plasma_applet-system-monitor SHARED ${lib_SRCS})
 
 target_link_libraries(plasma_applet-system-monitor ${KDE4_PLASMA_LIBS} ${KDE4_KDEUI_LIBS})
+set_target_properties(plasma_applet-system-monitor PROPERTIES VERSION ${GENERIC_LIB_VERSION} SOVERSION ${GENERIC_LIB_SOVERSION} )
 
 set_target_properties(plasma_applet-system-monitor PROPERTIES VERSION ${GENERIC_LIB_VERSION} SOVERSION ${GENERIC_LIB_SOVERSION} )
 
diff -Nurd kdebase-workspace-4.2.4/plasma/applets/systemtray/core/notification.h kdebase-workspace-4.2.4-new/plasma/applets/systemtray/core/notification.h
--- kdebase-workspace-4.2.4/plasma/applets/systemtray/core/notification.h	2008-11-19 05:18:12.000000000 -0500
+++ kdebase-workspace-4.2.4-new/plasma/applets/systemtray/core/notification.h	2009-06-11 10:57:17.000000000 -0400
@@ -60,7 +60,7 @@
      **/
     void destroyed(SystemTray::Notification *notification = 0);
 
-protected:
+public:
     void setApplicationName(const QString &applicationName);
     void setApplicationIcon(const QIcon &applicationIcon);
     void setEventId(const QString &eventId);
diff -Nurd kdebase-workspace-4.2.4/plasma/shells/desktop/plasmaapp.cpp kdebase-workspace-4.2.4-new/plasma/shells/desktop/plasmaapp.cpp
--- kdebase-workspace-4.2.4/plasma/shells/desktop/plasmaapp.cpp	2009-03-26 10:42:26.000000000 -0400
+++ kdebase-workspace-4.2.4-new/plasma/shells/desktop/plasmaapp.cpp	2009-06-11 10:57:17.000000000 -0400
@@ -39,6 +39,11 @@
     #include <sys/param.h>
     #include <sys/sysctl.h>
     #endif
+
+    #if defined(Q_OS_DARWIN) || defined(Q_OS_MAC)
+    #include <sys/param.h>
+    #include <sys/sysctl.h>
+    #endif
 #endif
 
 #include <QApplication>
@@ -202,6 +207,23 @@
 
     memorySize = (statex.ullTotalPhys/1024) + (statex.ullTotalPageFile/1024);
 #endif
+#if defined(Q_OS_DARWIN) || defined(Q_OS_MAC)
+    uint64_t hostMemory;
+    size_t memorySize = 0;
+
+    int mib[2];
+    size_t size;
+
+    mib[0] = CTL_HW;
+    mib[1] = HW_MEMSIZE;
+
+    size = sizeof(hostMemory);
+    if (sysctl(mib, 2, &hostMemory, &size, NULL, 0) == -1) {
+        hostMemory = 0;
+    } else {
+        memorySize = (size_t)(hostMemory / 1024);
+    }
+#endif
     // If you have no suitable sysconf() interface and are not FreeBSD,
     // then you are out of luck and get a compile error.
 #endif
diff -Nurd kdebase-workspace-4.2.4/plasma/shells/screensaver/plasmaapp.cpp kdebase-workspace-4.2.4-new/plasma/shells/screensaver/plasmaapp.cpp
--- kdebase-workspace-4.2.4/plasma/shells/screensaver/plasmaapp.cpp	2009-01-01 11:25:53.000000000 -0500
+++ kdebase-workspace-4.2.4-new/plasma/shells/screensaver/plasmaapp.cpp	2009-06-11 10:57:17.000000000 -0400
@@ -37,6 +37,11 @@
     #include <sys/param.h>
     #include <sys/sysctl.h>
     #endif
+
+    #if defined(Q_OS_DARWIN) || defined(Q_OS_MAC)
+    #include <sys/param.h>
+    #include <sys/sysctl.h>
+    #endif
 #endif
 
 #include <QApplication>
@@ -181,6 +186,23 @@
     sysctl(mib, 2, &memorySize, &len, NULL, 0);
     memorySize /= 1024;
 #endif
+#if defined(Q_OS_DARWIN) || defined(Q_OS_MAC)
+    uint64_t hostMemory;
+    size_t memorySize = 0;
+
+    int mib[2];
+    size_t size;
+
+    mib[0] = CTL_HW;
+    mib[1] = HW_MEMSIZE;
+
+    size = sizeof(hostMemory);
+    if (sysctl(mib, 2, &hostMemory, &size, NULL, 0) == -1) {
+        hostMemory = 0;
+    } else {
+        memorySize = (size_t)(hostMemory / 1024);
+    }
+#endif
     // If you have no suitable sysconf() interface and are not FreeBSD,
     // then you are out of luck and get a compile error.
 #endif
diff -Nurd kdebase-workspace-4.2.4/powerdevil/daemon/TimerBasedPoller.cpp kdebase-workspace-4.2.4-new/powerdevil/daemon/TimerBasedPoller.cpp
--- kdebase-workspace-4.2.4/powerdevil/daemon/TimerBasedPoller.cpp	2008-09-29 01:55:39.000000000 -0400
+++ kdebase-workspace-4.2.4-new/powerdevil/daemon/TimerBasedPoller.cpp	2009-06-11 10:57:17.000000000 -0400
@@ -20,6 +20,7 @@
 #include "TimerBasedPoller.h"
 
 #include <klocalizedstring.h>
+#include <X11/Xlib.h>
 
 TimerBasedPoller::TimerBasedPoller(QObject *parent)
         : AbstractSystemPoller(parent),
diff -Nurd kdebase-workspace-4.2.4/powerdevil/daemon/WidgetBasedPoller.cpp kdebase-workspace-4.2.4-new/powerdevil/daemon/WidgetBasedPoller.cpp
--- kdebase-workspace-4.2.4/powerdevil/daemon/WidgetBasedPoller.cpp	2008-12-21 15:19:18.000000000 -0500
+++ kdebase-workspace-4.2.4-new/powerdevil/daemon/WidgetBasedPoller.cpp	2009-06-11 10:57:17.000000000 -0400
@@ -21,6 +21,8 @@
 
 #include <QWidget>
 #include <QTimer>
+#include <X11/Xlib.h>
+#undef KeyPress
 #include <QX11Info>
 #include <QEvent>
 
diff -Nurd kdebase-workspace-4.2.4/startkde.cmake kdebase-workspace-4.2.4-new/startkde.cmake
--- kdebase-workspace-4.2.4/startkde.cmake	2009-03-26 10:42:29.000000000 -0400
+++ kdebase-workspace-4.2.4-new/startkde.cmake	2009-06-11 10:57:17.000000000 -0400
@@ -7,6 +7,26 @@
 # because we still need to do some cleanup.
 trap 'echo GOT SIGHUP' HUP
 
+unset KDEDIR KDEDIRS
+
+export PATH="@FINKPREFIX@/bin:$PATH"
+
+_XDG_DATA_DIRS=""
+_XDG_CONFIG_DIRS=""
+PREFIXES=`grep '^prefixes=' "@FINKPREFIX@/opt/kde4/@FINKTYPE@/etc/kde4rc" | cut -d= -f2-`
+orig_IFS=$IFS
+IFS=","
+for PRE in $PREFIXES; do
+        export _XDG_DATA_DIRS="$_XDG_DATA_DIRS:$PRE/share"
+        export _XDG_CONFIG_DIRS="$_XDG_CONFIG_DIRS:$PRE/etc/xdg"
+		  export PATH="$PRE/bin:$PATH"
+done
+IFS=$orig_IFS
+
+XDG_DATA_DIRS=`echo $_XDG_DATA_DIRS:$XDG_DATA_DIRS | sed -e 's,^:,,' -e 's,:$,,'`
+XDG_CONFIG_DIRS=`echo $_XDG_CONFIG_DIRS:$XDG_CONFIG_DIRS | sed -e 's,^:,,' -e 's,:$,,'`
+export XDG_DATA_DIRS XDG_CONFIG_DIRS
+
 # Check if a KDE session already is running and whether it's possible to connect to X
 kcheckrunning
 kcheckrunning_result=$?
@@ -46,6 +66,11 @@
   esac
 fi
 
+for DIR in `echo $KDEDIRS | perl -e 'chomp(my $line = <STDIN>); print join(" ", reverse(split(/:/, $line)))'`; do
+	PATH="$DIR/bin:$PATH"
+	export PATH
+done
+
 # Boot sequence:
 #
 # kdeinit is used to fork off processes which improves memory usage
