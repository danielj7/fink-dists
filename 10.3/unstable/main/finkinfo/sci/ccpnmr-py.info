Info2: <<
Package: ccpnmr-%type_pkg[handler]-py%type_pkg[python]
Version: 1.0.11
Revision: 2

Type: python (2.3 2.4), handler (opengl mesa)

Maintainer: Murali Vadivelu <murali1080@users.sf.net>

Depends: python%type_pkg[python], python%type_pkg[python]-socket, x11, tcltk, (%type_pkg[handler] = opengl) freeglut-shlibs, (%type_pkg[handler] = mesa) mesa-shlibs, python%type_pkg[python]-socket-ssl | python%type_pkg[python]-socket
BuildDepends: x11-dev, tcltk-dev, (%type_pkg[handler] = opengl) freeglut, (%type_pkg[handler] = mesa) mesa
Conflicts: ccpnmr-opengl-py23, ccpnmr-mesa-py23, ccpnmr-opengl-py24, ccpnmr-mesa-py24, ccpnmr-opengl-py25, ccpnmr-mesa-py25 
Replaces: ccpnmr-opengl-py23, ccpnmr-mesa-py23, ccpnmr-opengl-py24, ccpnmr-mesa-py24, ccpnmr-opengl-py25, ccpnmr-mesa-py25

Description: NMR Software Suite (using %type_pkg[handler])
Homepage: http://www.ccpn.ac.uk/ccpn_suite/ccpn_suite.html
License: LGPL

Source: ftp://www.bio.cam.ac.uk/pub/ccpnmr/analysis%v.tar.gz
SourceDirectory: ccpnmr
Source-MD5: 955ebeeafc67a4592f9bae9e3071034a 

PatchScript: sed 's,@PREFIX@,%p,g' < %a/ccpnmr-py.patch | sed 's,python2.X,python%type_raw[python],g' | patch -p1

CompileScript: <<
#!/bin/sh -ev

export CCPNMR_TOP_DIR=%b

cd $CCPNMR_TOP_DIR/ccpnmr1.0/c

if [ "%type_raw[handler]" == opengl ]; then
    cp environment-opengl.txt environment.txt
else
    cp environment-mesa.txt environment.txt
fi    

make
make links
<<
InstallScript: <<
mkdir -p %i/lib/%n
cp -r %b/bin %i/lib/%n
chmod 755 %i/lib/%n/bin/analysis
chmod 755 %i/lib/%n/bin/formatConverter

mkdir -p %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0
cp -r %b/ccpnmr1.0/c %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/
cp -r %b/ccpnmr1.0/python %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/
echo 'ccpnmr/ccpnmr1.0/python' > %i/lib/python%type_raw[python]/site-packages/ccpnmr.pth

cp -r %b/ccpnmr1.0/data %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/
cp -r %b/ccpnmr1.0/model %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/

cp -r %b/ccpnmr1.0/doc %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/
cp -r %b/doc %i/lib/python%type_raw[python]/site-packages/ccpnmr/

mkdir -p %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/python/
cp -r %b/ccpnmr1.0/python/doc %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/python/

find %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/c -name \*.c -delete
find %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/c -name \*.h -delete
find %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/c -name \*.o -delete
find %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/c -name environment\*.txt -delete
find %i/lib/python%type_raw[python]/site-packages/ccpnmr/ccpnmr1.0/c -name Makefile -delete

cd %i/lib/python%type_raw[python]/site-packages; %p/bin/python%type_raw[python] -O %p/lib/python%type_raw[python]/compileall.py ccpnmr/ccpnmr1.0

mkdir -p %i/etc/profile.d
echo "append_path PATH %p/lib/%n/bin" >  %i/etc/profile.d/%n.csh
echo "append_path PATH %p/lib/%n/bin" >  %i/etc/profile.d/%n.sh
chmod 755 %i/etc/profile.d/%n.*
<<

DocFiles: ccpnmr1.0/license/CCPN.license ccpnmr1.0/license/LGPL.license

PostRmScript: <<
if [ -d  %p/lib/python%type_raw[python]/site-packages/ccpnmr ]; then rm -r %p/lib/python%type_raw[python]/site-packages/ccpnmr; fi
<<

DescDetail: <<
The CcpNmr software suite is a series of programs for 
macromolecular NMR spectroscopy integrated with the 
CCP data model. The CCP Data Model for macromolecular 
NMR is intended to cover all data needed for macromolecular 
NMR spectroscopy from the initial experimental data to 
the final validation. It serves for exchange of data 
between programs, for storage, data harvesting, and 
database deposition. 
<<
DescUsage: <<
If Fink is properly installed and your environment 
variables, such as PATH, etc. are set properly, you
should be able to run CcpNmr software, after installation,
by calling the command analysis or formatConverter in an 
xterm or terminal window.

After, installation you can't use the same window to run
analysis or formatConverter. You need to use a new xterm
window or terminal window for the path to the commands to
be sourced.

If you see a lot of memory error reports on the analysis
commandline (python CLI), before starting analysis, set
the environment variable, MallocLogFile, as follows:
Eg., For sh family of shells -
export MallocLogFile=/dev/null
<<
<<
