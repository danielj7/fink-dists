Info2: <<
Package: octave%type_pkg[-atlas]%type_pkg[-x11]
Type: -atlas (boolean), oct(3.2.4), gcc (4.6), -x11 (boolean)
Version: 3.2.4
Revision: 3007
#atlas-only on x86_64
Architecture: (%type_raw[-atlas] != -atlas) i386, (%type_raw[-atlas] != -atlas) powerpc
Maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>

BuildDepends: <<
	fftw3 (>= 3.1.1-7), 
	gcc%type_pkg[gcc]-compiler, 
	glpk-dev, 
	graphicsmagick-dev,
	hdf5.7, 
	libcurl4,
	libftgl2,
	pcre, 
	qhull5-dev, 
	readline5,
	sed, 
	suitesparse, 
	fink (>= 0.30.0-1), 
	fink-package-precedence, 
	flag-sort,
	xcode (>=3.1),
	(%type_raw[-x11] != -x11) 		fltk13-aqua,
	(%type_raw[-x11] = -x11) 		fltk-x11,
	(%type_raw[-x11] = -x11) 		x11-dev,	
	(%type_raw[-atlas] != -atlas) 	qrupdate (>=1.1.1-5),
	(%type_raw[-atlas] != -atlas) 	arpack-ng (>= 3.0.1-2),
	(%type_raw[-atlas] = -atlas) 	atlas (>= 3.8.1-1), 
	(%type_raw[-atlas] = -atlas) 	qrupdate-atlas (>=1.1.1-5),
	(%type_raw[-atlas] = -atlas) 	arpack-ng-atlas (>= 3.0.1-2)
<<
Depends: %{Ni}%type_pkg[oct]%type_pkg[-atlas]%type_pkg[-x11] (=%v-%r)
BuildConflicts: coot-dev, broken-gcc, lammpi-dev, fort77, 4ti2-dev, imagemagick10-dev
Suggests: %{Ni}%type_pkg[oct]-docs
Provides: <<
								octave-interpreter,
(%type_raw[-x11] = -x11) 		octave-interpreter-x11,
(%type_raw[-x11] != -x11) 		octave-interpreter-aqua,
(%type_raw[-atlas] = -atlas) 	octave-interpreter-atlas,
(%type_raw[-atlas] != -atlas) 	octave-interpreter-veclib
<<
Conflicts: <<
	%{Ni}, 
	%{Ni}-atlas,
	%{Ni}-x11, 
	%{Ni}-atlas-x11,
	%{Ni}3.0.2 ( << 3.0.2-5), 
	%{Ni}3.0.2-atlas ( << 3.0.2-5) 
	<<
Replaces: <<
	%{Ni}, 
	%{Ni}-atlas,
	%{Ni}-x11, 
	%{Ni}-atlas-x11,
	%{Ni}3.0.2 ( << 3.0.2-5), 
	%{Ni}3.0.2-atlas ( << 3.0.2-5) 
<<

Source: mirror:gnu:%{Ni}/%{Ni}-%v.tar.gz
Source-MD5: 90c39fa9e241ad2e978bcee4682a2ba9

PatchFile: %{ni}-glpk.patch
PatchFile-MD5: a4861a0803cfbbbb8892019cd5f217d2
PatchFile2: %{ni}-manpages.patch
PatchFile2-MD5: 647cff8601e837e8b8e46d15867b14f0
PatchFile3: %{ni}.patch
PatchFile3-MD5: 675cf038c246ec6f138684551fab2cbb
PatchFile4: %{ni}-GM.patch
PatchFile4-MD5: 7f016e7d32fa32a0b2962f35892f52a9
PatchScript: <<
	#!/bin/sh -ev
	#fix for use of glpk private internals
	patch -p1 < %{PatchFile}
	# create versioned manpages
	cp doc/interpreter/%{Ni}.1 doc/interpreter/%{Ni}-%v.1
	cp doc/interpreter/%{Ni}-bug.1 doc/interpreter/%{Ni}-bug-%v.1
	cp doc/interpreter/%{Ni}-config.1 doc/interpreter/%{Ni}-config-%v.1
	cp doc/interpreter/mkoctfile.1 doc/interpreter/mkoctfile-%v.1
	# fix executable names in versioned manpages
	sed -e 's/@OCTVERSION@/%v/g' %{PatchFile2} | patch -p1 

	#Fink-specific structural changes
	sed -e 's/@OCTVERSION@/%v/g' -e 's|@FINKPREFIX@|%p|g' %{PatchFile3} | patch -p1 
	# Put in the Fink tree.
	sed -i.orig -e 's|@FINKPREFIX@|%p|g'   %{Ni}-forge* %{Ni}rc doc/interpreter/*.1 mkoctfile*in
 	# Put OS-version-invariant links to compilers into oct-conf.h, which in 
 	# turn gets harcoded into the Octave interpreter's 'octave_config_info' 
 	# function, which is then used by some of the octave-forge packages at 
 	# configure time.  Also do this for mkoctfile.in.
 	sed -i.orig -e "s|%%OCTAVE_CONF_CC%%|\"oct-cc\"|" \
 				-e "s|%%OCTAVE_CONF_CXXCPP%%|\"oct-cxx -E\"|" \
 				-e "s|%%OCTAVE_CONF_CXX%%|\"oct-cxx\"|" \
 				-e "s|%%OCTAVE_CONF_DL_LD%%|\"oct-cxx\"|" \
 				-e "s|%%OCTAVE_CONF_LD_CXX%%|\"oct-cxx\"|" \
 				-e "s|%%OCTAVE_CONF_SH_LD%%|\"oct-cxx\"|" \
 					src/oct-conf.h.in mkoctfile*in	
	
	# Make sure GraphicsMagick gets activated properly.
	sed -e 's/@OCTVERSION@/%v/g' %{PatchFile4} | patch -p1
	perl -pi.orig -e 's|(#include \<GraphicsMagick/Magick\+\+\.h\>)|\1\nusing namespace Magick;|' src/DLD-FUNCTIONS/__magick_read__.cc
	# more patching by fangism
	# silence some warnings
	sed -i.orig -e '/ibasea/s|\*ibasea, ||' \
		-e '/ibasea/s| ibasea =.*||' \
		liboctave/oct-sort.cc
	# should this accompany -D_THREAD_SAFE? in CFLAGS,CXXFLAGS
	sed -i.orig -e '/#include.*Range\.h/i\
#define	_REENTRANT' liboctave/lo-specfun.cc
	# need size_t from <cstddef>
	sed -i.orig -e '/#define octave_oct_alloc_h/a\
using std::size_t;' liboctave/oct-alloc.h
	# needed by clang++, safe for g++: using-declaration as typedef
	for f in liboctave/DiagArray2.h liboctave/intNDArray.h
	do sed -i.orig -e '/using.*element_type;/s|using|& typename|' $f
	done
	# missing qualifier to dependent-name member-function
	sed -i.orig -e '/truncate_int/s|\(return\) \(truncate_int\)|\1 octave_int_base<T>::\2|' \
		liboctave/oct-inttypes.h
	sed -i.orig -e 's|template static|template|g' liboctave/eigs-base.cc
<<

GCC: 4.0
UseMaxBuildJobs: false
SetCC: flag-sort -r gcc
SetCXX: flag-sort -r g++
SetLDFLAGS: -Wl,-dead_strip_dylibs
SetLIBS: -lGraphicsMagick

ConfigureParams: <<
	(%type_raw[-atlas] != -atlas)	--with-lapack=-Wl,-framework,Accelerate \
	(%type_raw[-atlas] != -atlas)	--with-blas=-Wl,-framework,Accelerate \
 	(%type_raw[-atlas] = -atlas)	--with-lapack="-llapack" \
 	(%type_raw[-atlas] = -atlas)	--with-blas="-lf77blas -lcblas" \
	(%type_raw[-x11] != -x11)		--with-framework-carbon \
	(%type_raw[-x11] = -x11)		--without-framework-carbon \
	--with-x \
	--x-libraries=/usr/X11/lib \
	--x-includes=/usr/X11/include \
	--host=%m-apple-darwin \
	--build=%m-apple-darwin \
	--infodir='${prefix}/share/info' \
	--mandir='${prefix}/share/man' \
	--libexecdir='${prefix}/lib' \
	--enable-shared \
	--enable-dl \
	--disable-static \
	--without-mpi \
	--with-hdf5 \
	--with-fftw \
	--enable-dependency-tracking
<<
CompileScript: <<
 #!/bin/sh -ev
 export CFLAGS='-O3 -MD'
 export CXXFLAGS='-O3 -MD'
 export FFLAGS='-O3'
 export F77=%p/bin/gfortran-fsf-%type_raw[gcc]
 FLIBDIR="%p/lib/gcc%type_raw[gcc]/lib"
 export FLIBS="-L${FLIBDIR} -lgfortran"
 if [ "%type_pkg[-atlas]" = "" ]
 	then export FFLAGS='-O3 -ff2c'
 	else export FFLAGS='-O3'
 fi
 %{default_script}
 fink-package-precedence --depfile-ext='\.d$' --prohibit-bdep=%{Ni},%{Ni}-atlas,%{Ni}%type_raw[oct]-dev,%{Ni}%type_raw[oct]-atlas-dev,%{Ni}305-dev,%{Ni}305-atlas-dev,saclib-gcc46,saclib src
<<

InfoTest: <<
	TestScript: <<
		#!/bin/sh -ev
		# doesn't work on any OS X
		mv scripts/image/imread.m scripts/image/imread.m.testfails
		if [ "%m" = "i386" ]
		then
			# these don't work on i386
			mv src/ov-struct.cc src/ov-struct.cc.testfails
			mv scripts/miscellaneous/setfield.m scripts/miscellaneous.m.testfails
			if [ "%type_raw[-atlas]" = "-atlas" ]
				# this doesn't work on i386/atlas: 
				then mv scripts/linear-algebra/onenormest.m scripts/linear-algebra/onenormest.m.testfails
			fi
		fi
		make check || exit 2	
		#restore files
		mv scripts/image/imread.m.testfails scripts/image/imread.m
		if [ "%m" = "i386" ] 
		then
			mv src/ov-struct.cc.testfails src/ov-struct.cc
			mv scripts/miscellaneous/setfield.m.testfails scripts/miscellaneous.m
			if [ "%type_raw[-atlas]" = "-atlas" ]
				then mv scripts/linear-algebra/onenormest.m.testfails scripts/linear-algebra/onenormest.m
			fi
		fi
	<<
<<

InstallScript: <<
 #!/bin/sh -ev
 make install DESTDIR=%d
 # Install versioned manpages
 cp doc/interpreter/*-%v.1 %i/share/man/man1
 # Install Fink-specific octaverc which points at our oct-versioned
 # package directory.
 cp %{Ni}rc %i/share/%{Ni}/%v/m/startup
 mkdir -p %i/var/%{Ni}/%v/

 # install examples
 mkdir -p %i/share/%{Ni}/%v/doc/examples
 cp -R examples %i/share/%{Ni}/%v/doc/examples

 # remove autogenerated freedesktop.org desktop file
 rm -f %i/share/applications/www.%{Ni}.org-%{Ni}.desktop
 mkdir -p %i/share/%{Ni}/%v/scripts
 # install the octave-forge helper scripts
 cp %{Ni}-forge* %i/share/%{Ni}/%v/scripts
 chmod a+x %i/share/%{Ni}/%v/scripts/*
 # octave-bug needs to use the octave compiler wrappers, too, since
 # some octave-forge packages use it for configuration.
 sed -i.bak -e "s|flag-sort -r gcc|oct-cc|g" \
 			-e "s|flag-sort -r g++|oct-cxx|g" \
 			%i/bin/%{Ni}-bug-%v 
 # for the -atlas variant, add libcblas.dylib to BLAS_LIBS:
# perl -pi -e 's|(%p/lib/liblapack.dylib %p/lib/libf77blas.dylib)|$1 %p/lib/libcblas.dylib|' \
# 	%i/bin/%{ni}-bug-%v
 # move compiler wrapper over
 cp %b/oct-compiler.in %i/share/%{Ni}/%v/scripts

 # clear out hardcoded Fink sed.
 pushd %i/bin 
 for file in mkoctfile-%v %{Ni}-bug-%v %{Ni}-config-%v 
 do 
 	perl -pi -e 's|%p/bin/sed|/usr/bin/sed|g' $file
 done
 # generate Fink-gcc enabled mkoctfile
 cp mkoctfile-%type_raw[oct] mkoctfile-%type_raw[oct]-gcc%type_raw[gcc]
 perl -pi -e \
 's,oct\-cc,%p/bin/gcc-fsf-%type_raw[gcc],g; \
  s,oct\-cxx,%p/bin/g++-fsf-%type_raw[gcc],g' \
    mkoctfile-%type_raw[oct]-gcc%type_raw[gcc] 
 # create convenience symlink
 ln -s mkoctfile-%type_raw[oct]-gcc%type_raw[gcc] mkoctfile-gcc%type_raw[gcc] 
<<
InfoDocs: %{Ni}.info
RuntimeVars: <<
 GNUTERM: aqua
<<
DocFiles: BUGS COPYING ChangeLog* NEWS* PROJECTS README ROADMAP SENDING-PATCHES

SplitOff: <<
	Package: octave%type_pkg[oct]%type_pkg[-atlas]%type_pkg[-x11]-shlibs
	Conflicts: << 
		%{Ni}%type_pkg[oct]-shlibs,
		%{Ni}%type_pkg[oct]-x11-shlibs,
		%{Ni}%type_pkg[oct]-atlas-shlibs,
		%{Ni}%type_pkg[oct]-atlas-x11-shlibs,
		(%type_raw[-atlas] = -atlas)	%{Ni} (<< 3.0.5-5), 
		(%type_raw[-atlas] != -atlas)	%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5),
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		(%type_raw[-atlas] = atlas)		%{Ni}%type_pkg[oct]-shlibs, 
		(%type_raw[-atlas] != atlas) 	%{Ni}%type_pkg[oct]-atlas-shlibs, 
		%{Ni} (<< 3.0.5-5),	
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5),
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<	
	Depends: << 
		fftw3-shlibs,
		gcc%type_pkg[gcc]-shlibs,
		hdf5.7-shlibs,
		readline5-shlibs, 
		(%type_raw[-atlas] = -atlas)	atlas-shlibs (>= 3.8.1-1),
		(%type_raw[-atlas] = -atlas) 	qrupdate-atlas-shlibs (>= 1.1.1-5), 
		(%type_raw[-atlas] != -atlas) 	qrupdate-shlibs (>= 1.1.1-5)
	<<
	Provides: <<
		liboctave%type_pkg[oct]-v2,
		liboctave%type_pkg[oct],
		(%type_raw[-atlas] = -atlas) liboctave%type_pkg[oct]-atlas,
		(%type_raw[-atlas] != -atlas) liboctave%type_pkg[oct]-veclib,
		(%type_raw[-x11] = -x11) liboctave%type_pkg[oct]-x11,
		(%type_raw[-x11] != -x11) liboctave%type_pkg[oct]-aqua
	<<
	
	Files: <<
		lib/%{Ni}-%v
	<<
	Shlibs: <<
		%p/lib/%{Ni}-%v/libcruft.dylib 0.0.0 %n (>=3.2.4-1)
		%p/lib/%{Ni}-%v/lib%{Ni}.dylib 0.0.0 %n (>=3.2.4-1)
		%p/lib/%{Ni}-%v/liboctinterp.dylib 0.0.0 %n (>=3.2.4-1)
	<<
	DescDetail: <<
	This package contains shared libraries which are used by the Octave
	interpreter itself, as well as for packages that build against Octave, 
	such as the various octave-forge packages.
	<<
	DescUsage: <<
Any package that either links to the libraries in %{Ni}%type_pkg[-atlas]%type_pkg[-x11]-shlibs or 
installs an extension should Depend on %{Ni}%type_pkg[oct]%type_pkg[-atlas]%type_pkg[-x11]-shlibs and BuildDepend
on %{Ni}%type_pkg[oct]%type_pkg[-atlas]-dev.  In addition, it will need to BuildDepend on
hdf5-oldapi and fftw3.  
	<<
	DocFiles: BUGS ChangeLog README ROADMAP SENDING-PATCHES COPYING
<<
SplitOff2: <<
	Package: octave%type_pkg[oct]%type_pkg[-atlas]%type_pkg[-x11]-dev
	Depends: <<
		octave%type_pkg[oct]%type_pkg[-atlas]%type_pkg[-x11]-shlibs (=%v-%r), 
		gcc%type_pkg[gcc]-compiler 
	<<
	Conflicts: << 
		%{Ni}%type_pkg[oct]-dev,
		%{Ni}%type_pkg[oct]-x11-dev,
		%{Ni}%type_pkg[oct]-atlas-dev,
		%{Ni}%type_pkg[oct]-atlas-x11-dev,
		%{Ni}305-dev, 
		%{Ni}305-atlas-dev,  
		%{Ni}343-dev, 
		%{Ni}343-atlas-dev,
		%{Ni}343-x11-dev,
		%{Ni}343-atlas-x11-dev,
		%{Ni}360-dev, 
		%{Ni}360-atlas-dev,
		%{Ni}360-x11-dev,
		%{Ni}360-atlas-x11-dev,
		(%type_raw[-atlas] = atlas)		%{Ni} (<< 3.0.5-5), 
		(%type_raw[-atlas] != atlas) 	%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		%{Ni}%type_pkg[oct]-dev,
		%{Ni}%type_pkg[oct]-x11-dev,
		%{Ni}%type_pkg[oct]-atlas-dev,
		%{Ni}%type_pkg[oct]-atlas-x11-dev,
		%{Ni}305-dev, 
		%{Ni}305-atlas-dev,  
		%{Ni}343-dev, 
		%{Ni}343-atlas-dev,
		%{Ni}343-x11-dev,
		%{Ni}343-atlas-x11-dev,
		%{Ni}360-dev, 
		%{Ni}360-atlas-dev,
		%{Ni}360-x11-dev,
		%{Ni}360-atlas-x11-dev,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5),
		mkoctfile%type_pkg[oct]-gcc46,
		mkoctfile%type_pkg[oct]-gcc46-atlas
	<<
	Provides: <<
		liboctave%type_pkg[oct]-v2-dev,
		liboctave%type_pkg[oct]-dev,
		(%type_raw[-atlas] = -atlas) liboctave%type_pkg[oct]-atlas-dev,
		(%type_raw[-atlas] != -atlas) liboctave%type_pkg[oct]-veclib-dev,
		(%type_raw[-x11] = -x11) liboctave%type_pkg[oct]-x11-dev,
		(%type_raw[-x11] != -x11) liboctave%type_pkg[oct]-aqua-dev
	<<
	
	BuildDependsOnly: true
	
	Files: <<
		include/%{Ni}-%v
		bin/mkoctfile*
		bin/octave-config*
		share/man/man1/mkoctfile*.1
		share/man/man1/octave-config*.1
		share/%{Ni}/%v/scripts/oct-compiler.in
	<<
	
	DescDetail: <<
	This package contains files needed to build against Octave, including
	headers and the mkoctfile executable.  It also contains symlinks to Fink's
	compiler wrappers, which are set up at install time to be appropriate to
	the current machine setup.
	<<
	DescUsage: <<
	To use mkoctfile to build dynamically loadable modules, you will need 	
	to install the hdf5-oldapi and fftw3 packages.
 	%n cannot Depend on them since they are BuildDependsOnly.
	<<
	DescPackaging:  <<
	We make up an extra mkoctfile which uses a Fink gcc for packages that need
	stuff which isn't included in Xcode.
	<<
	DocFiles: BUGS ChangeLog README ROADMAP SENDING-PATCHES COPYING
	PostInstScript: <<
		cd %p/bin
		osversion=`uname -r | cut -d. -f1`
		case $osversion in
			11) perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-clang/cc,' \
							%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cc
				perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-clang/c++,' \
							%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cxx
				chmod a+x oct-cc oct-cxx ;;
			10) perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-10.6/cc,' \
							%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cc
				perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-10.6/c++,' \
							%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cxx
				chmod a+x oct-cc oct-cxx ;;
			9)  if [ "%m" = "x86_64" ]
					# use 10.6 compiler wrappers on 10.5/x86_64	
				then 
					perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-10.6/cc,' \
								%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cc
					perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-10.6/c++,' \
								%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cxx
					chmod a+x oct-cc oct-cxx
			 	else
			 		# default cc compilers on powerpc and i386 builds with proper arch.
					ln -s /usr/bin/gcc oct-cc
					perl -p -e 's,COMPILER,%p/var/lib/fink/path-prefix-g++-4.0/c++' \
								%p/share/%{Ni}/%v/scripts/oct-compiler.in > %p/bin/oct-cxx 
				fi ;;
			# fangism--feel free to update this
			*)  printf "You will need to generate your own %p/bin/oct-cc and %p/bin/oct-cxx symlinks.\n" ;;
		esac
	<<
	PreRmScript: <<
		if [ -e %p/bin/oct-cc ]
			then rm %p/bin/oct-cc
			else printf "%p/bin/oct-cc is not present.\n" 
		fi
		if [ -e %p/bin/oct-cxx ]
			then rm %p/bin/oct-cxx
			else printf "%p/bin/oct-cxx is not present.\n"
		fi
	<<
<<

Splitoff3: <<
	Package: octave%type_pkg[oct]%type_pkg[-atlas]%type_pkg[-x11]
	Depends: <<
	%{Ni}%type_pkg[oct]%type_pkg[-atlas]%type_pkg[-x11]-shlibs (=%v-%r),
	ncurses, gnuplot | gnuplot-nox | gnuplot-nogtk,
	fftw3-shlibs (>= 3.1.1-7), 
	glpk-shlibs,
	graphicsmagick-shlibs,
	libcurl4-shlibs, 
	pcre-shlibs, 
	qhull5-shlibs,
	(%type_raw[-x11] != -x11) 		fltk13-aqua-shlibs,
	(%type_raw[-x11] = -x11) 		fltk-x11-shlibs,
	(%type_raw[-atlas] != -atlas) 	arpack-ng-shlibs (>= 3.0.1-2),
	(%type_raw[-atlas] = -atlas) 	atlas-shlibs (>= 3.8.1-1),
	(%type_raw[-atlas] = -atlas) 	arpack-ng-atlas-shlibs (>= 3.0.1-2)
	<<
	Conflicts: << 
		%{Ni}%type_pkg[oct],
		%{Ni}%type_pkg[oct]-x11,
		%{Ni}%type_pkg[oct]-atlas,
		%{Ni}%type_pkg[oct]-atlas-x11,
		(%type_raw[-atlas] = atlas) %{Ni} (<< 3.0.5-5), 
		(%type_raw[-atlas] != atlas) %{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5),
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		%{Ni}%type_pkg[oct],
		%{Ni}%type_pkg[oct]-x11,
		%{Ni}%type_pkg[oct]-atlas,
		%{Ni}%type_pkg[oct]-atlas-x11,
		fltk-backend-aqua-oct%type_pkg[oct] (<= %v-2),
		fltk-backend-x11-oct%type_pkg[oct] (<= %v-2),
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5),
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Provides: <<
									octave%type_pkg[oct]-interpreter,
	(%type_raw[-x11] = -x11) 		octave%type_pkg[oct]-interpreter-x11,
	(%type_raw[-x11] != -x11) 		octave%type_pkg[oct]-interpreter-aqua,
	(%type_raw[-atlas] = -atlas) 	octave%type_pkg[oct]-interpreter-atlas,
	(%type_raw[-atlas] != -atlas) 	octave%type_pkg[oct]-interpreter-veclib
	<<
	
	Files: <<
		share/%{Ni}/%v
		lib/%{Ni}/%v
		bin/%{Ni}-%v
		bin/%{Ni}-bug-%v
		var/%{Ni}/%v
		share/man/man1/%{Ni}-%v.1
		share/man/man1/%{Ni}-bug-%v.1
	<<
	DescDetail: <<
	The %{Ni}%type_pkg[oct]%type_pkg[-atlas] package contains versioned executables, as well as all of the 
	core functionality of the Octave interpreter.  Note that the GNU info file, 
	which provides the core documentation, is installed as part of the %{Ni}
    package.
    
	Octave provides a convenient command line interface for solving linear and 
	nonlinear problems numerically, and for performing other numerical 
	experiments using a language that is mostly compatible with Matlab.
	It may also be used as a batch-oriented language.

	Octave has extensive tools for solving common numerical linear algebra
	problems, finding the roots of nonlinear equations, integrating ordinary
	functions, manipulating polynomials, and integrating ordinary differential
	and differential-algebraic equations. It is easily extensible and 
	customizable via user-defined functions written in Octave's own language, 
	or using dynamically loaded modules written in C++, C, Fortran, 
	or other languages.
	<<
	DescUsage: <<
	By default the plotting output (via gnuplot) is directed to AquaTerm. 
	This can be overidden in your startup scripts, e.g.
 
 		export GNUTERM=x11
 
	in bash
 
	or
 
		setenv GNUTERM x11
 
	in tcsh.
 
	Note:  Fink's Octave implementation modifies one of the startup files,
	%p/share/%{Ni}/%v/m/startup/octaverc,
	to initialize octave sessions to know about Fink's octave-versioned 
	install location for octave-forge packages.  If you use the '--norc' 
	or '-f' flags in your Octave script, these packages won't be visible.  
	You'll need to run the following command in your script:
 
		pkg global_list %p/var/octave/%v/octave_packages
<<
	DocFiles: BUGS ChangeLog README ROADMAP SENDING-PATCHES COPYING
<<

Description: MATLAB-like language for computations
DescDetail: <<
The %{Ni}%type_pkg[-atlas] package contains unversioned executables and an 
unversioned directory tree.  

Octave provides a convenient command line interface for solving linear and 
nonlinear problems numerically, and for performing other numerical 
experiments using a language that is mostly compatible with Matlab.
It may also be used as a batch-oriented language.

Octave has extensive tools for solving common numerical linear algebra
problems, finding the roots of nonlinear equations, integrating ordinary
functions, manipulating polynomials, and integrating ordinary differential
and differential-algebraic equations. It is easily extensible and 
customizable via user-defined functions written in Octave's own language, 
or using dynamically loaded modules written in C++, C, Fortran, 
or other languages.
<<
DescUsage: << 
By default the plotting output (via gnuplot) is directed to AquaTerm. 
This can be overidden in your startup scripts, e.g.
 
	export GNUTERM=x11
 
in bash
 
or
 
	setenv GNUTERM x11
 
in tcsh.
 
Note:  Fink's Octave implementation modifies one of the startup files,
%p/share/%{Ni}/%v/m/startup/octaverc,
to initialize octave sessions to know about Fink's octave-versioned 
install location for octave-forge packages.  If you use the '--norc' or '-f'
flags in your Octave script, these packages won't be visible.  You'll need to
run the following command in your script:
 
 	pkg global_list %p/var/octave/%v/octave_packages
 
<<
DescPort: <<
Thanks to Per Persson for most (if not all) of the work on the macos X port.

Apply fix from http://lukassen.wordpress.com/2010/01/18/taming-snow-leopard-cgdisplaybitsperpixel-deprication/ ,
with improvements from Peter O'Gorman and Daniel Macks, to display.cc to work around the lack of 
CGDisplayBitsPerPixel on 10.7.

Cleanups from David Fang to get the package to build using clang.

As of revision 125|225:  the non-atlas variant is built with -ff2c in the FFLAGS, 
because this appears to be necessary when using the Accelerate framework.
<<
DescPackaging:  <<
Not sane (and now not even compilable) to use private code
from glpk. Import the functions needed so can still use it
even when glpk stops exporting its internals. See:
	http://octave.1599824.n4.nabble.com/GLPK-interface-was-Re-Multithreaded-Atlas-td1654632.html

Patch the graphicsmagick interface to use InitializeMagick before doing anything:

http://sourceforge.net/tracker/?func=detail&aid=3104518&group_id=73485&atid=537937

This was not mandatory in prior versions of GraphicsMagick, but now it is.
 
Set the GNUTERM environment variable to AquaTerm because autodetection
of DISPLAY seems to cause options to be fed to our gnuplot that it doesn't understand.
AquaTerm seems to be a sensible default, particularly since gnuplot-nox is also a 
legal dependency.

Create manpages for the versioned executables.

Remove a desktop file that gets generated only for users with GNOME/KDE installed.

We have split the package up into runtime, development, and library packages,
to make upgrades easier for us and for users.
	
We generate common octave-forge bash and octave scripts, 
based on the ones by Johnathan Stickel in the original octave-forge-foo 
packages, in _this_ package, so that any required changes can be made in 
a common location rather than spread out over many packages.
Unfortunately, Octave's 'pkg' tool doesn't seem to know how to deal with 
variables, and the individual octave-forge  packages have to make copies
of the octave scripts during their build process and edit them to use the
package's name.

We remove the FLTK backend module since we are allowing for Aqua and X11
variants of that in the fltk-backend-{aqua|x11}-oct324 packages.

As of revision 125|225:  

The -atlas variant depends on -atlas variants (only) of qrupdate and arpack.  
The non-atlas variant depends on non-atlas variants (only) of these.

Patch __magick_read__.cc to do the right thing for current versions of 
GraphicsMagick and actually initialize before doing stuff.

http://sourceforge.net/tracker/?func=detail&aid=3104518&group_id=73485&atid=537937

This was not mandatory in prior versions of GraphicsMagick, but now it is.
 
Patch oct-conf.h, mkoctfile, and octave-bug not to put "flag-sort -r" in the 
name of the compiler used, and to use the full path of Fink's compiler wrappers.
Also, we add the BLAS C library to BLAS_LIBS in the -atlas variant.  This makes
sure that anything that builds against Octave has the proper information when 
installed manually as well as via Fink, and is critical for 10.6/i386 (and 10.5
/x86_64) users.  Unfortunately, this requires a rebuild on OS upgrades, because
the information in oct-conf.h gets hardcoded into the Octave interpreter 
executable, and some octave-forge packages get information from that.

As of revision 126|226:

Get rid of the ugly construction previously used for setting the BLAS and 
LAPACK libraries.

Now includes an additional mkoctfile which uses Fink's gcc46 compilers instead
of Xcode's.

As of revision 127:

Since 'gcc' isn't wrapped by a Fink compiler wrapper on 10.5, we modify 
encoded references to ccache-default's %p/bin/cc to use /usr/bin/gcc instead.

As of revision 501|601:

It turns out that liboctinterp.3.2.4.dylib links to X11 if the package is
configured to build the FLTK graphics with X11, so we'll migrate to a fully-
varianted octave package and leave fltk-backend-oct324-(aqua|x11) just as
a dummy upgrade package.

Create new Provides in a new namespace and with new projections to avoid
unwieldy | lists in the octave-forge packages.

Actually _install_ the manpages for the versioned executables.

Disable non-atlas (vecLib) option on x86_64 due to misbuilding.

As of revision 1002|2002:

Don't use METIS, because of its license.

As of revision 1004|2004:

Due to issues with qhull6, use qhull5 instead.
Clean up octave-forge build scripts.

As of revision 1005|2005: switch to arpack-ng

As of revision 3006:  

Our specifications of FLIBS, LAPACK_LIBS, and BLAS_LIBS weren't quite right
(the latter two are OK in the non-atlas variant); fix so that newer upstream
octave-forge packages that use these will work without patching for this.

Patch oct-conf.h and mkoctfile to use octave-specific compiler executables.  
These go in the -dev package, and are either wrappers around Fink's compiler
wrappers or symlinks to the Xcode compilers, as appropriate for the OS version.
They are resolved in the PostInstScript so that they set themselves 
appropriately for the OS version where Octave is installed, rather than where
it is built, thereby avoiding the necessity to rebuild Octave when updating
the OS.
This allows unification of the 10.5 and 10.6 package descriptions.

These two fixes, which applied in all of our Octave packages, constitute 
"liboctave-v2".
<<
Homepage: http://www.octave.org/
License: GPL
<<
