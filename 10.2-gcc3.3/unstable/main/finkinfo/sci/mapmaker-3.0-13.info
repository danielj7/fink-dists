Package: mapmaker
Version: 3.0
Revision: 13
Description: Interactive genetic linkage mapping package
DescDetail: <<
MAPMAKER/EXP is a linkage analysis package designed to help construct
primary linkage maps of markers segregating in experimental crosses.
MAPMAKER/EXP performs full multipoint linkage analysis (simultaneous
estimation of all recombination fractions from the primary data) for
dominant, recessive, and co- dominant (e.g.  RFLP-like) markers.
MAPMAKER/EXP is an experimental-cross-only successor to the original
MAPMAKER program.

MAPMAKER/QTL is a companion program to MAPMAKER/EXP which allows one
to map genes controlling polygenic quantitative traits in F2
intercrosses and BC1 backcrosses relative to a genetic linkage map.
More information on MAPMAKER/QTL can be found in the technical report
(included with MAPMAKER/QTL).
<<
DescUsage: <<
'mapmaker -help' or 'qtl -help' to get started

Screen drawing is a bit off sometimes, so it might be best to save a
transcript of your work (use -out or -photo) or else disable fancy
screen things (use -simple).

There is a tutorial and several formats of program documentation in
share/doc/mapmaker
<<
DescPort: <<
Compiled using -D_BIG_DATASETS (allows ca. 5000 loci).

Here's my thoughts on lib/system.h:
  -D_SYS_UNIX (so we don't get DOSish artifacts).
  -DSIGHANDLE=void (from the signal() manpage).
  -DUSE_DRAND48 (drand48() uses 48 bits vs 31 for random())
  Some -D to get correct typedefs according to the relevant manpages):
    void * calloc(size_t number, size_t size);
    void qsort(void *base, size_t nmemb, size_t size,
               int (*compar)(const void *, const void *));
      (not sure about QSORT_DATA_PTR_TO)
  -DUSE_LIB (/usr/include has all the resulting INC_*-caused  .h files).

Other lib/system.h things:
  Use system maximum-pathlength def (in sys/param.h) for PATH_LENGTH.
  We have strerror().
  We don't (seem to?) have matherror(), but we'll leave HAVE_MATHERR
    defined for now.
  We have getenv() and getcwd() but not chdir(), but let's see what
    happens if we say we go with the default of saying we have 'em all.
  Leaving the "Terminal I/O" stuff as-is for now.
  Removed malloc.h (malloc() is in stdlib.h).
  Removed USE_DRAND48 prototyping (it's in stdlib.h).

lib/iolib.h: /usr/include/stdio.h provides a conflicting prototype for
a (seemingly?) different fgetln() (from libc). Will do a brute-force
renaming and hope for the best.

A lot of calls to make_filename*(), fprint() and fwrite() pass
constant strings as param 3 which get passed to depsace() which tried
to modify them, causing a bus error. Thanks to Alexander Strange, who
notes that -fwritable-strings fixes this deprecated behavior.

info.c's allocate_three_entries() is recursive, leading to a stack
overflow for large datasets (while running 'pd', "Illegal instruction"
(EXC_BAD_ACCESS/KERN_INVALID_ADDRESS in xalloc()). Thanks to Ben Hines

The xterm wrappers are in sun/ but Makefile forgets to look there so
we link them into the main directory. And we fix a silly typo in them.
for pointing out the -stack_size solution.

Readline is giving problems so we disable it for now.

There's something goofy with the termcap.

CompileScript contains some ugly hacks to convert *.help (used by
online help facility in the programs) into HTML with linked TOCs.
<<
Homepage: http://www-genome.wi.mit.edu/resources.html
License: Restrictive
Maintainer: Daniel Macks <dmacks@netspace.org>
Recommends: x11, ghostscript
GCC: 3.3
Source: http://www-genome.wi.mit.edu/ftp/distribution/software/mapmaker3/mapm3-source.tar.Z
Source-MD5: 8aa7a061d32a49c8704c1a5c4b31aa2d
NoSourceDirectory: true
Source2: http://www-genome.wi.mit.edu/genome_software/other/mapmaker.html
Source2-MD5: 90eaaf5e1d89030cfe9c5d3b7be5566e
Patch: %f.patch
PatchScript: perl -pi -e 's/fgetln/myfgetln/g' `grep -lr fgetln .`
CompileScript: <<
  #!/bin/sh
  make
  ln -s sun/* .
  for prog in mapmaker qtl; do
    rm -f ${prog}-body.html ${prog}-toc.html ${prog}-help.html
    perl -n -e 'if (s/^@//) {if ($not_first) {@lines=("<pre>\n",@lines,"</pre>\n") } else {@lines=("<ol>\n")}; print @lines; @lines=();chomp;  $htype = 3 - s/^TOPIC //; $htype==2 && $not_first++ && print "</ol>\n"; if (/^end$/) {print "</ol></ol>\n"} else {($link=$_)=~tr/ /_/;print "<h$htype><li><a name=\"$link\">$_</a></li></h$htype>\n"; $htype==2 && print "<ol>\n"}} else {push @lines, $_}' ${prog}.help > ${prog}-body.html
    perl -n -e 's/<\/?h.>//g,print if ( s/<a name="/<a href="#/ || /<\/?ol>/)' ${prog}-body.html > ${prog}-toc.html
    ( echo "<html><head><title>${prog} helpfile</title></head><body><h1>$prog helpfile</h1><pre>Translated from %p/share/%n/${prog}.help by Fink %f.info<h2>table of contents</h2>" ; cat ${prog}-toc.html ; echo "<hr>" ; cat ${prog}-body.html ; echo "</body></html>" ) > ${prog}-help.html
  done
<<
InstallScript: <<
  install -d -m0755 %i/bin %i/share/%n %i/share/doc/%n/tutorial %i/share/doc/%n/html
  make DIR=%i/bin install
  mv %i/bin/*.help %i/share/%n
  install -m0644 mouse.* sample.* %i/share/doc/%n/tutorial
  install -m0644 mapmaker.html %i/share/doc/%n/tutorial/mapmaker.html
  install -m0644 *-help.html %i/share/doc/%n/html
<<
RuntimeVars: <<
  MAPM_LIB: %p/share/%n
<<
DocFiles: CHANGE.ME COVER.ME FEED.ME INSTALL.ME READ.ME WANT.ME mapmaker.ps qtl.ps
