diff -Naur gnome-vfs-1.0.5.old/Makefile.in gnome-vfs-1.0.5.new/Makefile.in
--- gnome-vfs-1.0.5.old/Makefile.in	Sat Mar 16 05:51:15 2002
+++ gnome-vfs-1.0.5.new/Makefile.in	Fri May 10 00:52:27 2002
@@ -188,7 +188,7 @@
 cxxflags_set = @cxxflags_set@
 l = @l@
 @PLATFORM_GNOME_2_TRUE@SUBDIRS_GNOME = doc
-@PLATFORM_GNOME_2_FALSE@SUBDIRS_GNOME = doc test
+@PLATFORM_GNOME_2_FALSE@SUBDIRS_GNOME = doc
 
 SUBDIRS =  	libgnomevfs					libgnomevfs-pthread				idl						modules						devel-docs					$(SUBDIRS_GNOME)				po
 
diff -Naur gnome-vfs-1.0.5.old/config.h.in gnome-vfs-1.0.5.new/config.h.in
--- gnome-vfs-1.0.5.old/config.h.in	Fri Mar 15 12:34:58 2002
+++ gnome-vfs-1.0.5.new/config.h.in	Wed May 22 02:06:21 2002
@@ -111,6 +111,12 @@
 /* Define if you have the statvfs function.  */
 #undef HAVE_STATVFS
 
+/* Define if you have the strptime function.  */
+#undef HAVE_STRPTIME
+
+/* Define if you have the readdir_r function.  */
+#undef HAVE_READDIR_R
+
 /* Define if you have the stpcpy function.  */
 #undef HAVE_STPCPY
 
diff -Naur gnome-vfs-1.0.5.old/configure gnome-vfs-1.0.5.new/configure
--- gnome-vfs-1.0.5.old/configure	Fri Mar 15 15:57:17 2002
+++ gnome-vfs-1.0.5.new/configure	Wed Jun 12 06:56:52 2002
@@ -3608,7 +3608,7 @@
   darwin* | rhapsody*)
     case "$host_os" in
     rhapsody* | darwin1.[012])
-      allow_undefined_flag='-undefined suppress'
+      allow_undefined_flag='-undefined suppress -flat_namespace'
       ;;
     *) # Darwin 1.3 on
       allow_undefined_flag='-flat_namespace -undefined suppress'
@@ -3617,7 +3617,7 @@
     # FIXME: Relying on posixy $() will cause problems for
     #        cross-compilation, but unfortunately the echo tests do not
     #        yet detect zsh echo's removal of \ escapes.
-    archive_cmds='$nonopt $(test "x$module" = xyes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags -install_name $rpath/$soname $verstring'
+    archive_cmds='$nonopt $(test x$module = xyes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
     # We need to add '_' to the symbols in $export_symbols first
     #archive_expsym_cmds="$archive_cmds"' && strip -s $export_symbols'
     hardcode_direct=yes
@@ -8869,7 +8869,7 @@
 
 fi
 
-for ac_func in getdtablesize open64 lseek64 statvfs
+for ac_func in getdtablesize open64 lseek64 statvfs strptime readdir_r
 do
 echo $ac_n "checking for $ac_func""... $ac_c" 1>&6
 echo "configure:8876: checking for $ac_func" >&5
diff -Naur gnome-vfs-1.0.5.old/devel-docs/Makefile.in gnome-vfs-1.0.5.new/devel-docs/Makefile.in
--- gnome-vfs-1.0.5.old/devel-docs/Makefile.in	Sat Mar 16 05:51:24 2002
+++ gnome-vfs-1.0.5.new/devel-docs/Makefile.in	Fri May 10 00:52:27 2002
@@ -193,7 +193,7 @@
 TEXT_FILES =  	gnome-vfs-mime-type-handling.txt
 
 
-docdir = $(prefix)/doc
+docdir = $(prefix)/share/doc
 doc_DATA = 
 mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
 CONFIG_HEADER = ../config.h
diff -Naur gnome-vfs-1.0.5.old/libgnomevfs/Makefile.in gnome-vfs-1.0.5.new/libgnomevfs/Makefile.in
--- gnome-vfs-1.0.5.old/libgnomevfs/Makefile.in	Sat Mar 16 05:51:17 2002
+++ gnome-vfs-1.0.5.new/libgnomevfs/Makefile.in	Fri May 10 00:56:28 2002
@@ -208,7 +208,7 @@
 libgnomevfsinclude_HEADERS =  	gnome-vfs-application-registry.h		gnome-vfs-async-ops.h				gnome-vfs-backend.h				gnome-vfs-cancellable-ops.h			gnome-vfs-cancellation.h			gnome-vfs-configuration.h			gnome-vfs-context.h				gnome-vfs-directory-filter.h			gnome-vfs-directory.h				gnome-vfs-file-info.h				gnome-vfs-file-size.h				gnome-vfs-find-directory.h			gnome-vfs-handle.h				gnome-vfs-inet-connection.h			gnome-vfs-init.h				gnome-vfs-iobuf.h				gnome-vfs-messages.h				gnome-vfs-method.h				gnome-vfs-mime-handlers.h			gnome-vfs-mime-info.h				gnome-vfs-mime-magic.h				gnome-vfs-mime-monitor.h			gnome-vfs-mime-sniff-buffer.h			gnome-vfs-mime.h				gnome-vfs-module-callback-module-api.h		gnome-vfs-module-callback.h			gnome-vfs-module-shared.h			gnome-vfs-module.h				gnome-vfs-ops.h					gnome-vfs-parse-ls.h				gnome-vfs-private-utils.h			gnome-vfs-private.h				gnome-vfs-regexp-filter.h			gnome-vfs-result.h				gnome-vfs-seekable.h				gnome-vfs-shellpattern-filter.h			gnome-vfs-socket-buffer.h			gnome-vfs-socket.h				gnome-vfs-ssl-private.h				gnome-vfs-ssl.h					gnome-vfs-standard-callbacks.h			gnome-vfs-transform.h				gnome-vfs-types.h				gnome-vfs-uri.h					gnome-vfs-utils.h				gnome-vfs-xfer.h				gnome-vfs.h					$(NULL)
 
 
-libgnomevfs_la_SOURCES =  	fnmatch.c					gnome-vfs-application-registry.c		gnome-vfs-async-ops.c				gnome-vfs-backend.c				gnome-vfs-cancellable-ops.c			gnome-vfs-cancellation.c			gnome-vfs-configuration.c			gnome-vfs-context.c				gnome-vfs-directory-filter.c			gnome-vfs-directory.c				gnome-vfs-file-info.c				gnome-vfs-find-directory.c			gnome-vfs-handle.c				gnome-vfs-i18n.c				gnome-vfs-inet-connection.c			gnome-vfs-init.c				gnome-vfs-iobuf.c				gnome-vfs-messages.c				gnome-vfs-method.c				gnome-vfs-mime-handlers.c			gnome-vfs-mime-info.c				gnome-vfs-mime-magic.c				gnome-vfs-mime-monitor.c			gnome-vfs-mime-sniff-buffer.c			gnome-vfs-mime.c				gnome-vfs-module-callback-module-api.c		gnome-vfs-module-callback-private.c		gnome-vfs-module-callback.c			gnome-vfs-module-shared.c			gnome-vfs-module.c				gnome-vfs-ops.c					gnome-vfs-parse-ls.c				gnome-vfs-private-utils.c			gnome-vfs-private.c				gnome-vfs-process.c				gnome-vfs-regexp-filter.c			gnome-vfs-result.c				gnome-vfs-seekable.c				gnome-vfs-shellpattern-filter.c			gnome-vfs-socket-buffer.c			gnome-vfs-socket.c				gnome-vfs-ssl.c					gnome-vfs-transform.c				gnome-vfs-uri.c					gnome-vfs-utils.c				gnome-vfs-xfer.c				fnmatch.h					gnome-vfs-mime-private.h			gnome-vfs-mime-sniff-buffer-private.h		gnome-vfs-module-callback-private.h		gnome-vfs-process.h				$(NULL)
+libgnomevfs_la_SOURCES =  	strptime.c					fnmatch.c					gnome-vfs-application-registry.c		gnome-vfs-async-ops.c				gnome-vfs-backend.c				gnome-vfs-cancellable-ops.c			gnome-vfs-cancellation.c			gnome-vfs-configuration.c			gnome-vfs-context.c				gnome-vfs-directory-filter.c			gnome-vfs-directory.c				gnome-vfs-file-info.c				gnome-vfs-find-directory.c			gnome-vfs-handle.c				gnome-vfs-i18n.c				gnome-vfs-inet-connection.c			gnome-vfs-init.c				gnome-vfs-iobuf.c				gnome-vfs-messages.c				gnome-vfs-method.c				gnome-vfs-mime-handlers.c			gnome-vfs-mime-info.c				gnome-vfs-mime-magic.c				gnome-vfs-mime-monitor.c			gnome-vfs-mime-sniff-buffer.c			gnome-vfs-mime.c				gnome-vfs-module-callback-module-api.c		gnome-vfs-module-callback-private.c		gnome-vfs-module-callback.c			gnome-vfs-module-shared.c			gnome-vfs-module.c				gnome-vfs-ops.c					gnome-vfs-parse-ls.c				gnome-vfs-private-utils.c			gnome-vfs-private.c				gnome-vfs-process.c				gnome-vfs-regexp-filter.c			gnome-vfs-result.c				gnome-vfs-seekable.c				gnome-vfs-shellpattern-filter.c			gnome-vfs-socket-buffer.c			gnome-vfs-socket.c				gnome-vfs-ssl.c					gnome-vfs-transform.c				gnome-vfs-uri.c					gnome-vfs-utils.c				gnome-vfs-xfer.c				fnmatch.h					gnome-vfs-mime-private.h			gnome-vfs-mime-sniff-buffer-private.h		gnome-vfs-module-callback-private.h		gnome-vfs-process.h				$(NULL)
 
 
 noinst_HEADERS =  	gnome-vfs-backend-private.h
@@ -228,7 +228,7 @@
 LIBS = @LIBS@
 libgnomevfs_la_LDFLAGS = 
 libgnomevfs_la_DEPENDENCIES =  libcharset/libcharset.la
-libgnomevfs_la_OBJECTS =  fnmatch.lo gnome-vfs-application-registry.lo \
+libgnomevfs_la_OBJECTS =  strptime.lo fnmatch.lo gnome-vfs-application-registry.lo \
 gnome-vfs-async-ops.lo gnome-vfs-backend.lo \
 gnome-vfs-cancellable-ops.lo gnome-vfs-cancellation.lo \
 gnome-vfs-configuration.lo gnome-vfs-context.lo \
@@ -494,6 +494,7 @@
 	      || exit 1; \
 	  fi; \
 	done
+strptime.lo strptime.o : strptime.c
 fnmatch.lo fnmatch.o : fnmatch.c ../config.h fnmatch.h
 gnome-vfs-application-registry.lo gnome-vfs-application-registry.o : \
 	gnome-vfs-application-registry.c ../config.h \
diff -Naur gnome-vfs-1.0.5.old/libgnomevfs/fnmatch.c gnome-vfs-1.0.5.new/libgnomevfs/fnmatch.c
--- gnome-vfs-1.0.5.old/libgnomevfs/fnmatch.c	Tue Jul 17 03:21:06 2001
+++ gnome-vfs-1.0.5.new/libgnomevfs/fnmatch.c	Fri May 10 00:52:27 2002
@@ -54,6 +54,9 @@
 
 /* Match STRING against the filename pattern PATTERN, returning zero if
    it matches, nonzero if not.  */
+#if defined(__APPLE__)
+__private_extern__
+#endif
 int
 fnmatch (pattern, string, flags)
      const char *pattern;
diff -Naur gnome-vfs-1.0.5.old/libgnomevfs/gnome-vfs-backend.c gnome-vfs-1.0.5.new/libgnomevfs/gnome-vfs-backend.c
--- gnome-vfs-1.0.5.old/libgnomevfs/gnome-vfs-backend.c	Sun Nov 25 09:48:21 2001
+++ gnome-vfs-1.0.5.new/libgnomevfs/gnome-vfs-backend.c	Fri May 10 00:52:27 2002
@@ -70,7 +70,7 @@
 	g_strdown (backend_lower);
 
 	short_name = g_strdup_printf ("gnomevfs-%s", backend);
-	backend_filename = g_module_build_path (NULL, short_name);
+	backend_filename = g_module_build_path ("<LIBDIR>", short_name);
 
 	gmod = g_module_open (backend_filename, G_MODULE_BIND_LAZY);
 	if (gmod == NULL) {
diff -Naur gnome-vfs-1.0.5.old/libgnomevfs/gnome-vfs-mime.h gnome-vfs-1.0.5.new/libgnomevfs/gnome-vfs-mime.h
--- gnome-vfs-1.0.5.old/libgnomevfs/gnome-vfs-mime.h	Fri Mar 15 12:33:01 2002
+++ gnome-vfs-1.0.5.new/libgnomevfs/gnome-vfs-mime.h	Fri May 10 00:52:27 2002
@@ -25,12 +25,12 @@
 #define GNOME_VFS_MIME_H
 
 #include <ctype.h>
+#include <sys/types.h>
 #include <dirent.h>
 #include <libgnomevfs/gnome-vfs-uri.h>
 #include <stdio.h>
 #include <string.h>
 #include <sys/stat.h>
-#include <sys/types.h>
 
 #ifdef __cplusplus
 extern "C" {
diff -Naur gnome-vfs-1.0.5.old/libgnomevfs/strptime.c gnome-vfs-1.0.5.new/libgnomevfs/strptime.c
--- gnome-vfs-1.0.5.old/libgnomevfs/strptime.c	Thu Jan  1 09:00:00 1970
+++ gnome-vfs-1.0.5.new/libgnomevfs/strptime.c	Tue May 21 22:56:58 2002
@@ -0,0 +1,368 @@
+/*
+ * Copyright (c) 1994 Powerdog Industries.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer
+ *    in the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. All advertising materials mentioning features or use of this
+ *    software must display the following acknowledgement:
+ *	This product includes software developed by Powerdog Industries.
+ * 4. The name of Powerdog Industries may not be used to endorse or
+ *    promote products derived from this software without specific prior
+ *    written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY POWERDOG INDUSTRIES ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE POWERDOG INDUSTRIES BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+ * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
+ * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
+ * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#include <config.h>
+
+#ifndef HAVE_STRPTIME
+
+#include <time.h>
+#include <ctype.h>
+#include <locale.h>
+#include <string.h>
+
+#define asizeof(a)	(sizeof (a) / sizeof ((a)[0]))
+
+struct dtconv {
+    char	*abbrev_month_names[12];
+    char	*month_names[12];
+    char	*abbrev_weekday_names[7];
+    char	*weekday_names[7];
+    char	*time_format;
+    char	*sdate_format;
+    char	*dtime_format;
+    char	*am_string;
+    char	*pm_string;
+    char	*ldate_format;
+};
+
+static struct dtconv	En_US = {
+    { "Jan", "Feb", "Mar", "Apr", "May", "Jun",
+      "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" },
+    { "January", "February", "March", "April",
+      "May", "June", "July", "August",
+      "September", "October", "November", "December" },
+    { "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" },
+    { "Sunday", "Monday", "Tuesday", "Wednesday",
+      "Thursday", "Friday", "Saturday" },
+    "%H:%M:%S",
+    "%m/%d/%y",
+    "%a %b %e %T %Z %Y",
+    "AM",
+    "PM",
+    "%A, %B, %e, %Y"
+};
+
+#if defined(__APPLE__)
+__private_extern__
+#endif
+char	*
+strptime(char *buf, char *fmt, struct tm *tm)
+{
+    char c, *ptr;
+    int	i, len = 0;
+
+    ptr = fmt;
+    while (*ptr != 0)
+    {
+	if (*buf == 0)
+	    break;
+
+	c = *ptr++;
+
+	if (c != '%')
+	{
+	    if (isspace(c))
+		while (*buf != 0 && isspace(*buf))
+		    buf++;
+	    else if (c != *buf++)
+		return 0;
+	    continue;
+	}
+
+	c = *ptr++;
+	switch (c)
+	{
+	    case 0:
+	    case '%':
+		if (*buf++ != '%')
+		    return 0;
+		break;
+
+	    case 'C':
+		buf = strptime(buf, En_US.ldate_format, tm);
+		if (buf == 0)
+		    return 0;
+		break;
+
+	    case 'c':
+		buf = strptime(buf, "%x %X", tm);
+		if (buf == 0)
+		    return 0;
+		break;
+
+	    case 'D':
+		buf = strptime(buf, "%m/%d/%y", tm);
+		if (buf == 0)
+		    return 0;
+		break;
+
+	    case 'R':
+		buf = strptime(buf, "%H:%M", tm);
+		if (buf == 0)
+		    return 0;
+		break;
+
+	    case 'r':
+		buf = strptime(buf, "%I:%M:%S %p", tm);
+		if (buf == 0)
+		    return 0;
+		break;
+
+	    case 'T':
+		buf = strptime(buf, "%H:%M:%S", tm);
+		if (buf == 0)
+		    return 0;
+		break;
+
+	    case 'X':
+		buf = strptime(buf, En_US.time_format, tm);
+		if (buf == 0)
+		    return 0;
+		break;
+
+	    case 'x':
+		buf = strptime(buf, En_US.sdate_format, tm);
+		if (buf == 0)
+		    return 0;
+		break;
+
+	    case 'j':
+		if (!isdigit(*buf))
+		    return 0;
+
+		for (i = 0; *buf != 0 && isdigit(*buf); buf++)
+		{
+		    i *= 10;
+		    i += *buf - '0';
+		}
+		if (i > 365)
+		    return 0;
+
+		tm->tm_yday = i;
+		break;
+
+	    case 'M':
+	    case 'S':
+		if (*buf == 0 || isspace(*buf))
+		    break;
+
+		if (!isdigit(*buf))
+		    return 0;
+
+		for (i = 0; *buf != 0 && isdigit(*buf); buf++)
+		{
+		    i *= 10;
+		    i += *buf - '0';
+		}
+		if (i > 59)
+		    return 0;
+
+		if (c == 'M')
+		    tm->tm_min = i;
+		else
+		    tm->tm_sec = i;
+
+		if (*buf != 0 && isspace(*buf))
+		    while (*ptr != 0 && !isspace(*ptr))
+			ptr++;
+		break;
+
+	    case 'H':
+	    case 'I':
+	    case 'k':
+	    case 'l':
+		if (!isdigit(*buf))
+		    return 0;
+
+		for (i = 0; *buf != 0 && isdigit(*buf); buf++)
+		{
+		    i *= 10;
+		    i += *buf - '0';
+		}
+		if (c == 'H' || c == 'k') {
+		    if (i > 23)
+			return 0;
+		} else if (i > 11)
+		    return 0;
+
+		tm->tm_hour = i;
+
+		if (*buf != 0 && isspace(*buf))
+		    while (*ptr != 0 && !isspace(*ptr))
+			ptr++;
+		break;
+
+	    case 'p':
+		len = strlen(En_US.am_string);
+		if (strncasecmp(buf, En_US.am_string, len) == 0)
+		{
+		    if (tm->tm_hour > 12)
+			return 0;
+		    if (tm->tm_hour == 12)
+			tm->tm_hour = 0;
+		    buf += len;
+		    break;
+		}
+
+		len = strlen(En_US.pm_string);
+		if (strncasecmp(buf, En_US.pm_string, len) == 0)
+		{
+		    if (tm->tm_hour > 12)
+			return 0;
+		    if (tm->tm_hour != 12)
+			tm->tm_hour += 12;
+		    buf += len;
+		    break;
+		}
+
+		return 0;
+
+	    case 'A':
+	    case 'a':
+		for (i = 0; i < asizeof(En_US.weekday_names); i++)
+		{
+		    len = strlen(En_US.weekday_names[i]);
+		    if (strncasecmp(buf,
+				      En_US.weekday_names[i],
+				      len) == 0)
+			break;
+
+		    len = strlen(En_US.abbrev_weekday_names[i]);
+		    if (strncasecmp(buf,
+				      En_US.abbrev_weekday_names[i],
+				      len) == 0)
+			break;
+		}
+		if (i == asizeof(En_US.weekday_names))
+		    return 0;
+
+		tm->tm_wday = i;
+		buf += len;
+		break;
+
+	    case 'd':
+	    case 'e':
+		if (!isdigit(*buf))
+		    return 0;
+
+		for (i = 0; *buf != 0 && isdigit(*buf); buf++)
+		{
+		    i *= 10;
+		    i += *buf - '0';
+		}
+		if (i > 31)
+		    return 0;
+
+		tm->tm_mday = i;
+
+		if (*buf != 0 && isspace(*buf))
+		    while (*ptr != 0 && !isspace(*ptr))
+			ptr++;
+		break;
+
+	    case 'B':
+	    case 'b':
+	    case 'h':
+		for (i = 0; i < asizeof(En_US.month_names); i++)
+		{
+		    len = strlen(En_US.month_names[i]);
+		    if (strncasecmp(buf,
+				      En_US.month_names[i],
+				      len) == 0)
+			break;
+
+		    len = strlen(En_US.abbrev_month_names[i]);
+		    if (strncasecmp(buf,
+				      En_US.abbrev_month_names[i],
+				      len) == 0)
+			break;
+		}
+		if (i == asizeof(En_US.month_names))
+		    return 0;
+
+		tm->tm_mon = i;
+		buf += len;
+		break;
+
+	    case 'm':
+		if (!isdigit(*buf))
+		    return 0;
+
+		for (i = 0; *buf != 0 && isdigit(*buf); buf++)
+		{
+		    i *= 10;
+		    i += *buf - '0';
+		}
+		if (i < 1 || i > 12)
+		    return 0;
+
+		tm->tm_mon = i - 1;
+
+		if (*buf != 0 && isspace(*buf))
+		    while (*ptr != 0 && !isspace(*ptr))
+			ptr++;
+		break;
+
+	    case 'Y':
+	    case 'y':
+		if (*buf == 0 || isspace(*buf))
+		    break;
+
+		if (!isdigit(*buf))
+		    return 0;
+
+		for (i = 0; *buf != 0 && isdigit(*buf); buf++)
+		{
+		    i *= 10;
+		    i += *buf - '0';
+		}
+		if (c == 'y' && i < 69)	/* Unix Epoch pivot year */
+		    i += 100;
+		if (c == 'Y')
+		    i -= 1900;
+		if (i < 0)
+		    return 0;
+
+		tm->tm_year = i;
+
+		if (*buf != 0 && isspace(*buf))
+		    while (*ptr != 0 && !isspace(*ptr))
+			ptr++;
+		break;
+	}
+    }
+
+    return buf;
+}
+
+#endif /* !HAVE_STRPTIME */
+
diff -Naur gnome-vfs-1.0.5.old/libgnomevfs-pthread/Makefile.in gnome-vfs-1.0.5.new/libgnomevfs-pthread/Makefile.in
--- gnome-vfs-1.0.5.old/libgnomevfs-pthread/Makefile.in	Sat Mar 16 05:51:20 2002
+++ gnome-vfs-1.0.5.new/libgnomevfs-pthread/Makefile.in	Fri May 10 00:52:27 2002
@@ -199,7 +199,7 @@
 libgnomevfs_pthread_la_SOURCES =  	gnome-vfs-pthread.c				gnome-vfs-thread-pool.c				gnome-vfs-async-job-map.c			gnome-vfs-async-ops.c				gnome-vfs-job-slave.c				gnome-vfs-job.c
 
 
-libgnomevfs_pthread_la_LDFLAGS =  	-module -avoid-version
+libgnomevfs_pthread_la_LDFLAGS =  	-export_dynamic -avoid-version -module
 
 mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
 CONFIG_HEADER = ../config.h
diff -Naur gnome-vfs-1.0.5.old/ltmain.sh gnome-vfs-1.0.5.new/ltmain.sh
--- gnome-vfs-1.0.5.old/ltmain.sh	Fri Mar 15 15:57:11 2002
+++ gnome-vfs-1.0.5.new/ltmain.sh	Fri May 10 19:04:10 2002
@@ -2892,7 +2892,18 @@
 	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	  eval cmds=\"$archive_expsym_cmds\"
 	else
+	  save_deplibs="$deplibs"
+	  for conv in $convenience; do
+	    tmp_deplibs=
+	    for test_deplib in $deplibs; do
+	      if test "$test_deplib" != "$conv"; then
+	        tmp_deplibs="$tmp_deplibs $test_deplib"
+	      fi
+	    done
+	    deplibs="$tmp_deplibs"
+	  done
 	  eval cmds=\"$archive_cmds\"
+	  deplibs="$save_deplibs"
 	fi
 	IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
 	for cmd in $cmds; do
diff -Naur gnome-vfs-1.0.5.old/modules/Makefile.in gnome-vfs-1.0.5.new/modules/Makefile.in
--- gnome-vfs-1.0.5.old/modules/Makefile.in	Sat Mar 16 05:51:22 2002
+++ gnome-vfs-1.0.5.new/modules/Makefile.in	Fri May 10 00:52:27 2002
@@ -199,7 +199,7 @@
 @HAVE_CDDA_TRUE@CDDA_LTLIBS = libcdda.la
 @HAVE_CDDA_FALSE@CDDA_LTLIBS = 
 
-module_flags = -export_dynamic -avoid-version
+module_flags = -export_dynamic -avoid-version -module
 modulesdir = $(libdir)/vfs/modules
 
 modules_LTLIBRARIES =  	$(CDDA_LTLIBS)					libextfs.la					libfile.la					libvfs-test.la					$(HTTP_LTLIBS)					libbzip2.la					libgzip.la					libftp.la					libnntp.la					libvfs-pipe.la					libvfs-translate.la				libdesktop.la					$(NULL)
@@ -268,6 +268,7 @@
 ### `ftp' method
 
 libftp_la_SOURCES =  	ftp-method.c					ftp-method.h
+libftp_la_LDFLAGS = $(module_flags)
 
 libftp_la_LDFLAGS = $(module_flags)
 
diff -Naur gnome-vfs-1.0.5.old/modules/file-method.c gnome-vfs-1.0.5.new/modules/file-method.c
--- gnome-vfs-1.0.5.old/modules/file-method.c	Fri Mar 15 12:33:01 2002
+++ gnome-vfs-1.0.5.new/modules/file-method.c	Tue May 21 23:07:17 2002
@@ -31,13 +31,15 @@
 #include <glib.h>
 #include <libgnome/gnome-defs.h>
 #include <libgnome/gnome-i18n.h>
+#include <sys/types.h>
 #include <dirent.h>
 #include <errno.h>
 #include <fcntl.h>
 #include <limits.h>
+#ifdef HAVE_MALLOC_H
 #include <malloc.h>
+#endif
 #include <sys/stat.h>
-#include <sys/types.h>
 #include <unistd.h>
 #include <stdio.h>
 #include <utime.h>
@@ -53,6 +55,44 @@
 #include "gnome-vfs-module-shared.h"
 #include "file-method.h"
 
+
+#ifndef HAVE_READDIR_R
+#include <pthread.h>
+
+static int
+readdir_r (DIR *dirp,
+	   struct dirent *entry,
+	   struct dirent **result)
+{
+	static int readdir_mutex_inited = 0;
+	static pthread_mutex_t readdir_mutex;
+	struct dirent *tmp;
+	int old_errno;
+
+	if (!readdir_mutex_inited) {
+		readdir_mutex_inited = 1;
+		pthread_mutex_init (&readdir_mutex, NULL);
+	}
+
+	old_errno = errno;
+	errno = 0;
+
+	pthread_mutex_lock (&readdir_mutex);
+	if ((tmp = readdir(dirp)) != NULL)
+		memcpy (entry, tmp, sizeof (*entry));
+	pthread_mutex_unlock (&readdir_mutex);
+
+	if (errno && !tmp)
+		return errno;
+
+	if (!errno)
+		errno = old_errno;
+
+	*result = (tmp) ? entry : NULL;
+
+	return 0;
+}
+#endif /* HAVE_READDIR_R */
 
 #ifdef PATH_MAX
 #define	GET_PATH_MAX()	PATH_MAX
diff -NurB gnome-vfs-1.0.5-orig/doc/about.sgml gnome-vfs-1.0.5/doc/about.sgml
--- gnome-vfs-1.0.5-orig/doc/about.sgml	2004-04-01 02:12:47.000000000 -0500
+++ gnome-vfs-1.0.5/doc/about.sgml	2004-04-01 02:13:19.000000000 -0500
@@ -83,7 +83,7 @@
     <para>
       The GnomeVFS equivalent is very similar, but you will notice slightly different data types. The
       consistent returning of a GnomeVFSResult also necessitated moving the return value of read into
-      a pass-back-value pointer <variable>bytes_read</variable>:
+      a pass-back-value pointer <varname>bytes_read</varname>:
       <programlisting>
 	GnomeVFSResult gnome_vfs_read (GnomeVFSHandle *handle,
 	                               gpointer buffer,
diff -NurB gnome-vfs-1.0.5-orig/doc/gnome-vfs-docs.sgml gnome-vfs-1.0.5/doc/gnome-vfs-docs.sgml
--- gnome-vfs-1.0.5-orig/doc/gnome-vfs-docs.sgml	2004-04-01 02:12:47.000000000 -0500
+++ gnome-vfs-1.0.5/doc/gnome-vfs-docs.sgml	2004-04-01 02:40:00.000000000 -0500
@@ -18,7 +18,6 @@
 <!entity gnome-vfs-inet-connection SYSTEM "sgml/inet-connection.sgml">
 <!entity gnome-vfs-init SYSTEM "sgml/init.sgml">
 <!entity gnome-vfs-iobuf SYSTEM "sgml/iobuf.sgml">
-<!entity gnome-vfs-list-sort SYSTEM "sgml/list-sort.sgml">
 <!entity gnome-vfs-method SYSTEM "sgml/method.sgml">
 <!entity gnome-vfs-mime-handlers SYSTEM "sgml/mime-handlers.sgml">
 <!entity gnome-vfs-mime-info SYSTEM "sgml/mime-info.sgml">
@@ -94,7 +93,7 @@
 	without the use of threads.
       </para>
       &gnome-vfs-async-ops;
-    <--FIXME: should we display this?gnome-vfs-cancellable-ops-->
+    <!--FIXME: should we display this?gnome-vfs-cancellable-ops-->
       &gnome-vfs-ops;
       &gnome-vfs-directory;
       &gnome-vfs-xfer;
@@ -136,12 +135,12 @@
       read-write, seeking, etc). Modules are dynamically loaded based upon the URI
       scheme passed into the high-level GnomeVFS APIs.
     </para>
-      &writing-modules;
       &gnome-vfs-method;
       &gnome-vfs-module-shared;
       &gnome-vfs-module;
       &gnome-vfs-module-callback-module-api;
   </chapter>
+  &writing-modules;
 
   <chapter id="everything-else">
     <title>Other APIs</title>
@@ -152,11 +151,10 @@
       &gnome-vfs-directory-filter;
       &gnome-vfs-file-size;
       &gnome-vfs-find-directory;
-      <--FIXME: I think this should be private: gnome-vfs-handle-->
+      <!--FIXME: I think this should be private: gnome-vfs-handle-->
       &gnome-vfs-inet-connection;
       &gnome-vfs-init;
       &gnome-vfs-iobuf;
-      &gnome-vfs-list-sort;
       &gnome-vfs-module-callback;
       &gnome-vfs-standard-callbacks;
       &gnome-vfs-parse-ls;
diff -NurB gnome-vfs-1.0.5-orig/doc/gnome-vfs-sections.txt gnome-vfs-1.0.5/doc/gnome-vfs-sections.txt
--- gnome-vfs-1.0.5-orig/doc/gnome-vfs-sections.txt	2004-04-01 02:12:47.000000000 -0500
+++ gnome-vfs-1.0.5/doc/gnome-vfs-sections.txt	2004-04-01 03:16:07.000000000 -0500
@@ -194,7 +194,7 @@
 
 <SECTION>
 <FILE>find-directory</FILE>
-<TITLE>Find Directory</TITLE>
+<TITLE>Find Directory Section</TITLE>
 gnome_vfs_find_directory
 </SECTION>
 
@@ -224,6 +224,7 @@
 
 <SECTION>
 <FILE>init</FILE>
+<TITLE>Init Section</TITLE>
 gnome_vfs_init
 gnome_vfs_initialized
 gnome_vfs_shutdown
diff -NurB gnome-vfs-1.0.5-orig/doc/tmpl/list-sort.sgml gnome-vfs-1.0.5/doc/tmpl/list-sort.sgml
--- gnome-vfs-1.0.5-orig/doc/tmpl/list-sort.sgml	2004-04-01 02:12:47.000000000 -0500
+++ gnome-vfs-1.0.5/doc/tmpl/list-sort.sgml	1969-12-31 19:00:00.000000000 -0500
@@ -1,38 +0,0 @@
-<!-- ##### SECTION Title ##### -->
-list-sort
-
-<!-- ##### SECTION Short_Description ##### -->
-
-
-<!-- ##### SECTION Long_Description ##### -->
-<para>
-
-</para>
-
-<!-- ##### SECTION See_Also ##### -->
-<para>
-
-</para>
-
-<!-- ##### USER_FUNCTION GnomeVFSListCompareFunc ##### -->
-<para>
-
-</para>
-
-@a: 
-@b: 
-@data: 
-@Returns: 
-
-
-<!-- ##### FUNCTION gnome_vfs_list_sort ##### -->
-<para>
-
-</para>
-
-@list: 
-@compare_func: 
-@data: 
-@Returns: 
-
-
diff -NurB gnome-vfs-1.0.5-orig/doc/tmpl/standard-callbacks.sgml gnome-vfs-1.0.5/doc/tmpl/standard-callbacks.sgml
--- gnome-vfs-1.0.5-orig/doc/tmpl/standard-callbacks.sgml	2004-04-01 02:12:47.000000000 -0500
+++ gnome-vfs-1.0.5/doc/tmpl/standard-callbacks.sgml	2004-04-01 02:32:34.000000000 -0500
@@ -24,7 +24,7 @@
 </para>
 
 
-</para><informaltable pgwide=1 frame="none" role="params">
+<informaltable pgwide=1 frame="none" role="params">
 <tgroup cols="2">
 <colspec colwidth="2*">
 <colspec colwidth="8*">
diff -NurB gnome-vfs-1.0.5-orig/doc/writing-modules.sgml gnome-vfs-1.0.5/doc/writing-modules.sgml
--- gnome-vfs-1.0.5-orig/doc/writing-modules.sgml	2004-04-01 02:12:47.000000000 -0500
+++ gnome-vfs-1.0.5/doc/writing-modules.sgml	2004-04-01 02:21:20.000000000 -0500
@@ -6,7 +6,6 @@
       GNOME Virtual File System.
     </para>
   </abstract>
- </artheader>
 
   <sect1 id="Introduction">
     <title>Introduction</title>
