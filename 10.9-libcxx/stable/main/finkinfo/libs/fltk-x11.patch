diff -uNr fltk-1.1.10/Makefile fltk-1.1.10.fink/Makefile
--- fltk-1.1.10/Makefile	2009-07-02 05:42:17.000000000 -0400
+++ fltk-1.1.10.fink/Makefile	2013-07-19 12:20:24.000000000 -0400
@@ -27,7 +27,7 @@
 
 include makeinclude
 
-DIRS	=	$(IMAGEDIRS) src fluid test documentation
+DIRS	=	$(IMAGEDIRS) src fluid documentation
 
 all: makeinclude fltk-config
 	for dir in $(DIRS); do\
diff -uNr fltk-1.1.10/configure fltk-1.1.10.fink/configure
--- fltk-1.1.10/configure	2009-12-27 10:24:34.000000000 -0500
+++ fltk-1.1.10.fink/configure	2013-07-19 12:20:24.000000000 -0400
@@ -1324,7 +1324,6 @@
   --enable-gl             turn on OpenGL support default=yes
   --enable-shared         turn on shared libraries default=no
   --enable-threads        enable multi-threading support
-  --enable-quartz         use Quartz instead of Quickdraw (default=no)
   --disable-largefile     omit support for large files
   --enable-localjpeg      use local JPEG library, default=auto
   --enable-localzlib      use local ZLIB library, default=auto
@@ -1909,7 +1908,7 @@
             FLDSONAME="libfltk_forms.$FL_API_VERSION.dylib"
             GLDSONAME="libfltk_gl.$FL_API_VERSION.dylib"
             IMGDSONAME="libfltk_images.$FL_API_VERSION.dylib"
-	    DSOCOMMAND="\$(CXX) \$(DSOFLAGS) -dynamiclib -lc -o"
+	    DSOCOMMAND="\$(CXX) \$(DSOFLAGS) -single_module -dynamiclib -lc -o"
 	    ;;
 
 	SunOS* | UNIX_S*)
@@ -2004,7 +2003,7 @@
 	    ;;
     esac
 
-    LINKSHARED="-L../src -lfltk_images$SHAREDSUFFIX -lfltk_forms$SHAREDSUFFIX -lfltk$SHAREDSUFFIX"
+    LINKSHARED="../src/$IMGDSONAME ../src/$FLDSONAME ../src/$DSONAME"
 else
     DSOCOMMAND="echo"
     DSOLINK=""
@@ -2050,7 +2049,7 @@
 
 
 case $uname in
-    Darwin*)
+    Darwin_DO_NOT_GO_HERE)
         # Check whether --enable-quartz was given.
 if test "${enable_quartz+set}" = set; then
   enableval=$enable_quartz;
@@ -9852,7 +9851,7 @@
 	fi
 	;;
 
-    Darwin*)
+    Darwin_DO_NOT_GO_HERE)
         # MacOS X uses Carbon for graphics...
         LIBS="$LIBS -framework Carbon -framework ApplicationServices"
 
@@ -11236,8 +11235,8 @@
 	LIBS="$LIBS -lXext -lX11 $X_EXTRA_LIBS"
 	CFLAGS="$CFLAGS $X_CFLAGS"
 	CXXFLAGS="$CXXFLAGS $X_CFLAGS"
-	LDFLAGS="$X_LIBS $LDFLAGS"
-	DSOFLAGS="$X_LIBS $DSOFLAGS"
+	LDFLAGS="$LDFLAGS $X_LIBS"
+	DSOFLAGS="-L@FINKPREFIX@/lib $DSOFLAGS $X_LIBS"
 
 	if test "x$x_includes" != x; then
 	    ac_cpp="$ac_cpp -I$x_includes"
diff -uNr fltk-1.1.10/fltk-config.in fltk-1.1.10.fink/fltk-config.in
--- fltk-1.1.10/fltk-config.in	2008-12-29 12:24:51.000000000 -0500
+++ fltk-1.1.10.fink/fltk-config.in	2013-07-19 13:12:22.000000000 -0400
@@ -57,7 +57,7 @@
 CFLAGS="@CFLAGS@ @LARGEFILE@ @PTHREAD_FLAGS@"
 CXXFLAGS="@CXXFLAGS@ @LARGEFILE@ @PTHREAD_FLAGS@"
 LDFLAGS="@LDFLAGS@"
-LDLIBS="@LIBS@"
+LDLIBS="@FONTCONFIGLIB@ @LIBS@"
 OPTIM="@OPTIM@"
 
 # Check for local invocation, and update paths accordingly...
diff -uNr fltk-1.1.10/fluid/Makefile fltk-1.1.10.fink/fluid/Makefile
--- fltk-1.1.10/fluid/Makefile	2008-12-29 15:21:29.000000000 -0500
+++ fltk-1.1.10.fink/fluid/Makefile	2013-07-19 12:20:24.000000000 -0400
@@ -57,7 +57,7 @@
 fluid$(EXEEXT):		$(OBJECTS) $(LIBNAME) $(FLLIBNAME) \
 			$(IMGLIBNAME)
 	echo Linking $@...
-	$(CXX) $(ARCHFLAGS) $(LDFLAGS) -o $@ $(OBJECTS) $(LINKFLTKFORMS) $(LINKFLTKIMG) $(LDLIBS)
+	$(CXX) $(ARCHFLAGS) $(LDFLAGS) -o $@ $(OBJECTS) $(LINKFLTKFORMS) $(LINKFLTKIMG) $(LDLIBS) -lfontconfig
 	$(OSX_ONLY) $(INSTALL_BIN) fluid fluid.app/Contents/MacOS
 	$(POSTBUILD) $@ ../FL/mac.r
 
diff -uNr fltk-1.1.10/fluid/fluid.cxx fltk-1.1.10.fink/fluid/fluid.cxx
--- fltk-1.1.10/fluid/fluid.cxx	2009-04-27 11:50:29.000000000 -0400
+++ fltk-1.1.10.fink/fluid/fluid.cxx	2013-07-19 12:20:24.000000000 -0400
@@ -1817,11 +1817,7 @@
   fl_filename_absolute(absolute, sizeof(absolute), flname);
 
   for (i = 0; i < max_files; i ++)
-#if defined(WIN32) || defined(__APPLE__)
     if (!strcasecmp(absolute, absolute_history[i])) break;
-#else
-    if (!strcmp(absolute, absolute_history[i])) break;
-#endif // WIN32 || __APPLE__
 
   if (i == 0) return;
 
diff -uNr fltk-1.1.10/jpeg/jmorecfg.h fltk-1.1.10.fink/jpeg/jmorecfg.h
--- fltk-1.1.10/jpeg/jmorecfg.h	2004-07-05 10:12:39.000000000 -0400
+++ fltk-1.1.10.fink/jpeg/jmorecfg.h	2013-07-19 12:20:24.000000000 -0400
@@ -176,14 +176,15 @@
  * Defining HAVE_BOOLEAN before including jpeglib.h should make it work.
  */
 
-#ifndef HAVE_BOOLEAN
-typedef char boolean;
-#endif
-#ifndef FALSE			/* in case these macros already exist */
-#define FALSE	0		/* values of boolean */
+#ifdef HAVE_BOOLEAN
+#ifndef FALSE           /* in case these macros already exist */
+#define FALSE   0       /* values of boolean */
 #endif
 #ifndef TRUE
-#define TRUE	1
+#define TRUE    1
+#endif
+#else
+typedef enum { FALSE = 0, TRUE = 1 } boolean;
 #endif
 
 
diff -uNr fltk-1.1.10/makeinclude.in fltk-1.1.10.fink/makeinclude.in
--- fltk-1.1.10/makeinclude.in	2008-12-29 15:21:29.000000000 -0500
+++ fltk-1.1.10.fink/makeinclude.in	2013-07-19 13:05:00.000000000 -0400
@@ -88,7 +88,7 @@
 LINKFLTKFORMS	= @LINKFLTKFORMS@ @LINKFLTK@
 LINKFLTKIMG	= @LINKFLTKIMG@ @LINKFLTK@ $(IMAGELIBS)
 LINKSHARED	= @DSOLINK@ @LINKSHARED@ $(IMAGELIBS)
-IMAGELIBS	= -L../lib @IMAGELIBS@
+IMAGELIBS	= @IMAGELIBS@
 
 # image libraries to build...
 IMAGEDIRS	= @JPEG@ @ZLIB@ @PNG@
@@ -132,7 +132,7 @@
 UNINSTALL_DESKTOP = @UNINSTALL_DESKTOP@
 
 # Be quiet when building...
-.SILENT:
+#.SILENT:
 
 # Build commands and filename extensions...
 .SUFFIXES:	.0 .1 .3 .6 .c .cxx .h .fl .man .o .z $(EXEEXT)
diff -uNr fltk-1.1.10/src/Fl_JPEG_Image.cxx fltk-1.1.10.fink/src/Fl_JPEG_Image.cxx
--- fltk-1.1.10/src/Fl_JPEG_Image.cxx	2007-05-19 20:01:06.000000000 -0400
+++ fltk-1.1.10.fink/src/Fl_JPEG_Image.cxx	2013-07-19 12:20:24.000000000 -0400
@@ -153,7 +153,7 @@
 
   jpeg_create_decompress(&dinfo);
   jpeg_stdio_src(&dinfo, fp);
-  jpeg_read_header(&dinfo, 1);
+  jpeg_read_header(&dinfo, TRUE);
 
   dinfo.quantize_colors      = (boolean)FALSE;
   dinfo.out_color_space      = JCS_RGB;
diff -uNr fltk-1.1.10/src/Fl_PNG_Image.cxx fltk-1.1.10.fink/src/Fl_PNG_Image.cxx
--- fltk-1.1.10/src/Fl_PNG_Image.cxx	2006-06-09 12:16:34.000000000 -0400
+++ fltk-1.1.10.fink/src/Fl_PNG_Image.cxx	2013-07-19 12:20:24.000000000 -0400
@@ -66,7 +66,7 @@
   png_structp	pp;			// PNG read pointer
   png_infop	info;			// PNG info pointers
   png_bytep	*rows;			// PNG row pointers
-
+  int          num_trans = 0;          // PNG # of transp. colors
 
   // Open the PNG file...
   if ((fp = fopen(png, "rb")) == NULL) return;
@@ -75,7 +75,7 @@
   pp   = png_create_read_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL);
   info = png_create_info_struct(pp);
 
-  if (setjmp(pp->jmpbuf))
+  if (setjmp(png_jmpbuf(pp)))
   {
     Fl::warning("PNG file \"%s\" contains errors!\n", png);
     return;
@@ -87,27 +87,28 @@
   // Get the image dimensions and convert to grayscale or RGB...
   png_read_info(pp, info);
 
-  if (info->color_type == PNG_COLOR_TYPE_PALETTE)
+  if (png_get_color_type(pp,info) == PNG_COLOR_TYPE_PALETTE)
     png_set_expand(pp);
 
-  if (info->color_type & PNG_COLOR_MASK_COLOR)
+  if (png_get_color_type(pp,info) & PNG_COLOR_MASK_COLOR)
     channels = 3;
   else
     channels = 1;
 
-  if ((info->color_type & PNG_COLOR_MASK_ALPHA) || info->num_trans)
+  png_get_tRNS(pp, info, 0, &num_trans, 0);
+  if ((png_get_color_type(pp, info) & PNG_COLOR_MASK_ALPHA) || num_trans)
     channels ++;
 
-  w((int)(info->width));
-  h((int)(info->height));
+  w((int)(png_get_image_width(pp, info)));
+  h((int)(png_get_image_height(pp, info)));
   d(channels);
 
-  if (info->bit_depth < 8)
+  if (png_get_bit_depth(pp, info) < 8)
   {
     png_set_packing(pp);
     png_set_expand(pp);
   }
-  else if (info->bit_depth == 16)
+  else if (png_get_bit_depth(pp, info) == 16)
     png_set_strip_16(pp);
 
 #  if defined(HAVE_PNG_GET_VALID) && defined(HAVE_PNG_SET_TRNS_TO_ALPHA)
diff -uNr fltk-1.1.10/src/Makefile fltk-1.1.10.fink/src/Makefile
--- fltk-1.1.10/src/Makefile	2009-07-02 05:42:17.000000000 -0400
+++ fltk-1.1.10.fink/src/Makefile	2013-07-19 12:20:24.000000000 -0400
@@ -226,7 +226,7 @@
 		-install_name $(libdir)/$@ \
 		-current_version 1.1.4 \
 		-compatibility_version 1.1.0 \
-		$(OBJECTS) $(LDLIBS)
+		$(OBJECTS) -L@FINKPREFIX@/libxft2/lib -L@FINKPREFIX@/lib/fontconfig2/lib -L@FINKPREFIX@/lib $(LDLIBS) $(FONTCONFIGLIB)
 	$(RM) libfltk.dylib
 	$(LN) libfltk.1.1.dylib libfltk.dylib
 
@@ -262,7 +262,7 @@
 		-install_name $(libdir)/$@ \
 		-current_version 1.1.4 \
 		-compatibility_version 1.1.0 \
-		$(FLOBJECTS) -L. $(LDLIBS) -lfltk
+		$(FLOBJECTS) -L@FINKPREFIX@/lib $(LDLIBS) libfltk.1.1.dylib
 	$(RM) libfltk_forms.dylib
 	$(LN) libfltk_forms.1.1.dylib libfltk_forms.dylib
 
@@ -298,7 +298,7 @@
 		-install_name $(libdir)/$@ \
 		-current_version 1.1.4 \
 		-compatibility_version 1.1.0 \
-		$(GLOBJECTS) -L. $(GLDLIBS) -lfltk
+		$(GLOBJECTS) -L@FINKPREFIX@/lib $(GLDLIBS) libfltk.1.1.dylib
 	$(RM) libfltk_gl.dylib
 	$(LN) libfltk_gl.1.1.dylib libfltk_gl.dylib
 
@@ -334,7 +334,7 @@
 		-install_name $(libdir)/$@ \
 		-current_version 1.1.4 \
 		-compatibility_version 1.1.0 \
-		$(IMGOBJECTS)  -L. $(LDLIBS) $(IMAGELIBS) -lfltk
+		$(IMGOBJECTS)  -L. -L@FINKPREFIX@/lib  $(LDLIBS) $(IMAGELIBS) -lfltk
 	$(RM) libfltk_images.dylib
 	$(LN) libfltk_images.1.1.dylib libfltk_images.dylib
 
diff -uNr fltk-1.1.10/src/filename_absolute.cxx fltk-1.1.10.fink/src/filename_absolute.cxx
--- fltk-1.1.10/src/filename_absolute.cxx	2009-01-23 05:47:53.000000000 -0500
+++ fltk-1.1.10.fink/src/filename_absolute.cxx	2013-07-19 12:20:24.000000000 -0400
@@ -170,11 +170,7 @@
       *slash != '\0' && *newslash != '\0';
        slash ++, newslash ++)
     if (isdirsep(*slash) && isdirsep(*newslash)) continue;
-#if defined(WIN32) || defined(__EMX__) || defined(__APPLE__)
     else if (tolower(*slash & 255) != tolower(*newslash & 255)) break;
-#else
-    else if (*slash != *newslash) break;
-#endif // WIN32 || __EMX__ || __APPLE__
 
   // skip over trailing slashes
   if ( *newslash == '\0' && *slash != '\0' && !isdirsep(*slash)
diff -uNr fltk-1.1.10/src/fl_boxtype.cxx fltk-1.1.10.fink/src/fl_boxtype.cxx
--- fltk-1.1.10/src/fl_boxtype.cxx	2006-10-02 22:35:12.000000000 -0400
+++ fltk-1.1.10.fink/src/fl_boxtype.cxx	2013-07-19 12:20:24.000000000 -0400
@@ -60,19 +60,19 @@
   uchar *g = fl_gray_ramp();
   if (h > 0 && w > 0) for (;*s;) {
     // draw top line:
-    fl_color(g[*s++]);
+    fl_color(g[(uchar)*s++]);
     fl_xyline(x, y, x+w-1);
     y++; if (--h <= 0) break;
     // draw left line:
-    fl_color(g[*s++]);
+    fl_color(g[(uchar)*s++]);
     fl_yxline(x, y+h-1, y);
     x++; if (--w <= 0) break;
     // draw bottom line:
-    fl_color(g[*s++]);
+    fl_color(g[(uchar)*s++]);
     fl_xyline(x, y+h-1, x+w-1);
     if (--h <= 0) break;
     // draw right line:
-    fl_color(g[*s++]);
+    fl_color(g[(uchar)*s++]);
     fl_yxline(x+w-1, y+h-1, y);
     if (--w <= 0) break;
   }
@@ -82,19 +82,19 @@
   uchar *g = fl_gray_ramp();
   if (h > 0 && w > 0) for (;*s;) {
     // draw bottom line:
-    fl_color(g[*s++]);
+    fl_color(g[(uchar)*s++]);
     fl_xyline(x, y+h-1, x+w-1);
     if (--h <= 0) break;
     // draw right line:
-    fl_color(g[*s++]);
+    fl_color(g[(uchar)*s++]);
     fl_yxline(x+w-1, y+h-1, y);
     if (--w <= 0) break;
     // draw top line:
-    fl_color(g[*s++]);
+    fl_color(g[(uchar)*s++]);
     fl_xyline(x, y, x+w-1);
     y++; if (--h <= 0) break;
     // draw left line:
-    fl_color(g[*s++]);
+    fl_color(g[(uchar)*s++]);
     fl_yxline(x, y+h-1, y);
     x++; if (--w <= 0) break;
   }
diff -uNr fltk-1.1.10/src/fl_diamond_box.cxx fltk-1.1.10.fink/src/fl_diamond_box.cxx
--- fltk-1.1.10/src/fl_diamond_box.cxx	2006-06-09 12:16:34.000000000 -0400
+++ fltk-1.1.10.fink/src/fl_diamond_box.cxx	2013-07-19 12:20:24.000000000 -0400
@@ -43,13 +43,13 @@
   int y1 = y+h/2;
   fl_color(bgcolor); fl_polygon(x+3, y1, x1,y+3, x+w-3,y1, x1,y+h-3);
   uchar *g = fl_gray_ramp();
-  fl_color(g['W']); fl_line(x+1, y1, x1, y+1, x+w-1, y1);
-  fl_color(g['U']); fl_line(x+2, y1, x1, y+2, x+w-2, y1);
-  fl_color(g['S']); fl_line(x+3, y1, x1, y+3, x+w-3, y1);
-  fl_color(g['P']); fl_line(x+3, y1, x1, y+h-3, x+w-3, y1);
-  fl_color(g['N']); fl_line(x+2, y1, x1, y+h-2, x+w-2, y1);
-  fl_color(g['H']); fl_line(x+1, y1, x1, y+h-1, x+w-1, y1);
-  fl_color(g['A']); fl_loop(x, y1, x1, y, x+w, y1, x1, y+h);
+  fl_color(g[(uchar)'W']); fl_line(x+1, y1, x1, y+1, x+w-1, y1);
+  fl_color(g[(uchar)'U']); fl_line(x+2, y1, x1, y+2, x+w-2, y1);
+  fl_color(g[(uchar)'S']); fl_line(x+3, y1, x1, y+3, x+w-3, y1);
+  fl_color(g[(uchar)'P']); fl_line(x+3, y1, x1, y+h-3, x+w-3, y1);
+  fl_color(g[(uchar)'N']); fl_line(x+2, y1, x1, y+h-2, x+w-2, y1);
+  fl_color(g[(uchar)'H']); fl_line(x+1, y1, x1, y+h-1, x+w-1, y1);
+  fl_color(g[(uchar)'A']); fl_loop(x, y1, x1, y, x+w, y1, x1, y+h);
 }
 
 static void fl_diamond_down_box(int x,int y,int w,int h,Fl_Color bgcolor) {
@@ -58,14 +58,14 @@
   int x1 = x+w/2;
   int y1 = y+h/2;
   uchar *g = fl_gray_ramp();
-  fl_color(g['P']); fl_line(x+0, y1, x1, y+0, x+w-0, y1);
-  fl_color(g['N']); fl_line(x+1, y1, x1, y+1, x+w-1, y1);
-  fl_color(g['H']); fl_line(x+2, y1, x1, y+2, x+w-2, y1);
-  fl_color(g['W']); fl_line(x+2, y1, x1, y+h-2, x+w-2, y1);
-  fl_color(g['U']); fl_line(x+1, y1, x1, y+h-1, x+w-1, y1);
-  fl_color(g['S']); fl_line(x+0, y1, x1, y+h-0, x+w-0, y1);
+  fl_color(g[(uchar)'P']); fl_line(x+0, y1, x1, y+0, x+w-0, y1);
+  fl_color(g[(uchar)'N']); fl_line(x+1, y1, x1, y+1, x+w-1, y1);
+  fl_color(g[(uchar)'H']); fl_line(x+2, y1, x1, y+2, x+w-2, y1);
+  fl_color(g[(uchar)'W']); fl_line(x+2, y1, x1, y+h-2, x+w-2, y1);
+  fl_color(g[(uchar)'U']); fl_line(x+1, y1, x1, y+h-1, x+w-1, y1);
+  fl_color(g[(uchar)'S']); fl_line(x+0, y1, x1, y+h-0, x+w-0, y1);
   fl_color(bgcolor); fl_polygon(x+3, y1, x1,y+3, x+w-3,y1, x1,y+h-3);
-  fl_color(g['A']); fl_loop(x+3, y1, x1, y+3, x+w-3, y1, x1, y+h-3);
+  fl_color(g[(uchar)'A']); fl_loop(x+3, y1, x1, y+3, x+w-3, y1, x1, y+h-3);
 }
 
 extern void fl_internal_boxtype(Fl_Boxtype, Fl_Box_Draw_F*);
diff -uNr fltk-1.1.10/src/fl_plastic.cxx fltk-1.1.10.fink/src/fl_plastic.cxx
--- fltk-1.1.10/src/fl_plastic.cxx	2006-06-09 12:16:34.000000000 -0400
+++ fltk-1.1.10.fink/src/fl_plastic.cxx	2013-07-19 12:20:24.000000000 -0400
@@ -87,13 +87,13 @@
   {
     // Draw lines around the perimeter of the button, 4 colors per
     // circuit.
-    fl_color(shade_color(g[*c++], bc));
+    fl_color(shade_color(g[(uchar)*c++], bc));
     fl_line(x, y + h + b, x + w - 1, y + h + b, x + w + b - 1, y + h);
-    fl_color(shade_color(g[*c++], bc));
+    fl_color(shade_color(g[(uchar)*c++], bc));
     fl_line(x + w + b - 1, y + h, x + w + b - 1, y, x + w - 1, y - b);
-    fl_color(shade_color(g[*c++], bc));
+    fl_color(shade_color(g[(uchar)*c++], bc));
     fl_line(x + w - 1, y - b, x, y - b, x - b, y);
-    fl_color(shade_color(g[*c++], bc));
+    fl_color(shade_color(g[(uchar)*c++], bc));
     fl_line(x - b, y, x - b, y + h, x, y + h + b);
   }
 }
@@ -106,45 +106,45 @@
   if (w==h) {
     for (; b > 1; b --, x ++, y ++, w -= 2, h -= 2)
     {
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x, y, w, h, 45.0, 135.0);
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x, y, w, h, 315.0, 405.0);
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x, y, w, h, 225.0, 315.0);
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x, y, w, h, 135.0, 225.0);
     }
   } else if (w>h) {
     int d = h/2;
     for (; b > 1; d--, b --, x ++, y ++, w -= 2, h -= 2)
     {
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x, y, h, h, 90.0, 135.0);
       fl_xyline(x+d, y, x+w-d);
       fl_arc(x+w-h, y, h, h, 45.0, 90.0);
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x+w-h, y, h, h, 315.0, 405.0);
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x+w-h, y, h, h, 270.0, 315.0);
       fl_xyline(x+d, y+h-1, x+w-d);
       fl_arc(x, y, h, h, 225.0, 270.0);
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x, y, h, h, 135.0, 225.0);
     }
   } else if (w<h) {
     int d = w/2;
     for (; b > 1; d--, b --, x ++, y ++, w -= 2, h -= 2)
     {
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x, y, w, w, 45.0, 135.0);
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x, y, w, w, 0.0, 45.0);
       fl_yxline(x+w-1, y+d, y+h-d);
       fl_arc(x, y+h-w, w, w, 315.0, 360.0);
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x, y+h-w, w, w, 225.0, 315.0);
-      fl_color(shade_color(g[*c++], bc));
+      fl_color(shade_color(g[(uchar)*c++], bc));
       fl_arc(x, y+h-w, w, w, 180.0, 225.0);
       fl_yxline(x, y+d, y+h-d);
       fl_arc(x, y, w, w, 135.0, 180.0);
@@ -166,18 +166,18 @@
 
     for (i = 0, j = 0; j < chalf; i ++, j += cstep) {
       // Draw the top line and points...
-      fl_color(shade_color(g[c[i]], bc));
+      fl_color(shade_color(g[(uchar)c[i]], bc));
       fl_xyline(x + 1, y + i, x + w - 2);
 
-      fl_color(shade_color(g[c[i] - 2], bc));
+      fl_color(shade_color(g[(uchar)c[i] - 2], bc));
       fl_point(x, y + i + 1);
       fl_point(x + w - 1, y + i + 1);
 
       // Draw the bottom line and points...
-      fl_color(shade_color(g[c[clen - i]], bc));
+      fl_color(shade_color(g[(uchar)c[clen - i]], bc));
       fl_xyline(x + 1, y + h - i, x + w - 2);
 
-      fl_color(shade_color(g[c[clen - i] - 2], bc));
+      fl_color(shade_color(g[(uchar)c[clen - i] - 2], bc));
       fl_point(x, y + h - i);
       fl_point(x + w - 1, y + h - i);
     }
@@ -185,10 +185,10 @@
     // Draw the interior and sides...
     i = chalf / cstep;
 
-    fl_color(shade_color(g[c[chalf]], bc));
+    fl_color(shade_color(g[(uchar)c[chalf]], bc));
     fl_rectf(x + 1, y + i, w - 2, h - 2 * i + 1);
 
-    fl_color(shade_color(g[c[chalf] - 2], bc));
+    fl_color(shade_color(g[(uchar)c[chalf] - 2], bc));
     fl_yxline(x, y + i, y + h - i);
     fl_yxline(x + w - 1, y + i, y + h - i);
   } else {
@@ -197,18 +197,18 @@
 
     for (i = 0, j = 0; j < chalf; i ++, j += cstep) {
       // Draw the left line and points...
-      fl_color(shade_color(g[c[i]], bc));
+      fl_color(shade_color(g[(uchar)c[i]], bc));
       fl_yxline(x + i, y + 1, y + h - 1);
 
-      fl_color(shade_color(g[c[i] - 2], bc));
+      fl_color(shade_color(g[(uchar)c[i] - 2], bc));
       fl_point(x + i + 1, y);
       fl_point(x + i + 1, y + h);
 
       // Draw the right line and points...
-      fl_color(shade_color(g[c[clen - i]], bc));
+      fl_color(shade_color(g[(uchar)c[clen - i]], bc));
       fl_yxline(x + w - 1 - i, y + 1, y + h - 1);
 
-      fl_color(shade_color(g[c[clen - i] - 2], bc));
+      fl_color(shade_color(g[(uchar)c[clen - i] - 2], bc));
       fl_point(x + w - 2 - i, y);
       fl_point(x + w - 2 - i, y + h);
     }
@@ -216,10 +216,10 @@
     // Draw the interior, top, and bottom...
     i = chalf / cstep;
 
-    fl_color(shade_color(g[c[chalf]], bc));
+    fl_color(shade_color(g[(uchar)c[chalf]], bc));
     fl_rectf(x + i, y + 1, w - 2 * i, h - 1);
 
-    fl_color(shade_color(g[c[chalf] - 2], bc));
+    fl_color(shade_color(g[(uchar)c[chalf] - 2], bc));
     fl_xyline(x + i, y, x + w - i);
     fl_xyline(x + i, y + h, x + w - i);
   }
@@ -236,20 +236,20 @@
     const int na = 8;
     for (i=0; i<chalf; i++, d--, x++, y++, w-=2, h-=2)
     {
-      fl_color(shade_color(g[c[i]], bc));
+      fl_color(shade_color(g[(uchar)c[i]], bc));
       fl_pie(x, y, h, h, 90.0, 135.0+i*na);
       fl_xyline(x+d, y, x+w-d);
       fl_pie(x+w-h, y, h, h, 45.0+i*na, 90.0);
-      fl_color(shade_color(g[c[i] - 2], bc));
+      fl_color(shade_color(g[(uchar)c[i] - 2], bc));
       fl_pie(x+w-h, y, h, h, 315.0+i*na, 405.0+i*na);
-      fl_color(shade_color(g[c[clen - i]], bc));
+      fl_color(shade_color(g[(uchar)c[clen - i]], bc));
       fl_pie(x+w-h, y, h, h, 270.0, 315.0+i*na);
       fl_xyline(x+d, y+h-1, x+w-d);
       fl_pie(x, y, h, h, 225.0+i*na, 270.0);
-      fl_color(shade_color(g[c[clen - i] - 2], bc));
+      fl_color(shade_color(g[(uchar)c[clen - i] - 2], bc));
       fl_pie(x, y, h, h, 135.0+i*na, 225.0+i*na);
     }
-    fl_color(shade_color(g[c[chalf]], bc));
+    fl_color(shade_color(g[(uchar)c[chalf]], bc));
     fl_rectf(x+d, y, w-h+1, h+1);
     fl_pie(x, y, h, h, 90.0, 270.0);
     fl_pie(x+w-h, y, h, h, 270.0, 90.0);
@@ -258,20 +258,20 @@
     const int na = 8;
     for (i=0; i<chalf; i++, d--, x++, y++, w-=2, h-=2)
     {
-      fl_color(shade_color(g[c[i]], bc));
+      fl_color(shade_color(g[(uchar)c[i]], bc));
       fl_pie(x, y, w, w, 45.0+i*na, 135.0+i*na);
-      fl_color(shade_color(g[c[i] - 2], bc));
+      fl_color(shade_color(g[(uchar)c[i] - 2], bc));
       fl_pie(x, y, w, w, 0.0, 45.0+i*na);
       fl_yxline(x+w-1, y+d, y+h-d);
       fl_pie(x, y+h-w, w, w, 315.0+i*na, 360.0);
-      fl_color(shade_color(g[c[clen - i]], bc));
+      fl_color(shade_color(g[(uchar)c[clen - i]], bc));
       fl_pie(x, y+h-w, w, w, 225.0+i*na, 315.0+i*na);
       fl_color(shade_color(g[c[clen - i] - 2], bc));
       fl_pie(x, y+h-w, w, w, 180.0, 225.0+i*na);
       fl_yxline(x, y+d, y+h-d);
       fl_pie(x, y, w, w, 135.0+i*na, 180.0);
     }
-    fl_color(shade_color(g[c[chalf]], bc));
+    fl_color(shade_color(g[(uchar)c[chalf]], bc));
     fl_rectf(x, y+d, w+1, h-w+1);
     fl_pie(x, y, w, w, 0.0, 180.0);
     fl_pie(x, y+h-w, w, w, 180.0, 360.0);
@@ -287,9 +287,9 @@
 static void narrow_thin_box(int x, int y, int w, int h, Fl_Color c) {
   if (h<=0 || w<=0) return;
   uchar *g = fl_gray_ramp();
-  fl_color(shade_color(g['R'], c));
+  fl_color(shade_color(g[(uchar)'R'], c));
   fl_rectf(x+1, y+1, w-2, h-2);
-  fl_color(shade_color(g['I'], c));
+  fl_color(shade_color(g[(uchar)'I'], c));
   if (w > 1) {
     fl_xyline(x+1, y, x+w-2);
     fl_xyline(x+1, y+h-1, x+w-2);
diff -uNr fltk-1.1.10/src/fl_round_box.cxx fltk-1.1.10.fink/src/fl_round_box.cxx
--- fltk-1.1.10/src/fl_round_box.cxx	2008-12-02 12:21:36.000000000 -0500
+++ fltk-1.1.10.fink/src/fl_round_box.cxx	2013-07-19 12:20:24.000000000 -0400
@@ -85,29 +85,29 @@
 void fl_round_down_box(int x, int y, int w, int h, Fl_Color bgcolor) {
   uchar *g = fl_gray_ramp();
   draw(FILL,	    x,   y, w,   h, 2, bgcolor);
-  draw(UPPER_LEFT,  x+1, y, w-2, h, 0, g['N']);
-  draw(UPPER_LEFT,  x+1, y, w-2, h, 1, g['H']);
-  draw(UPPER_LEFT,  x,   y, w,   h, 0, g['N']);
-  draw(UPPER_LEFT,  x,   y, w,   h, 1, g['H']);
-  draw(LOWER_RIGHT, x,   y, w,   h, 0, g['S']);
-  draw(LOWER_RIGHT, x+1, y, w-2, h, 0, g['U']);
-  draw(LOWER_RIGHT, x,   y, w,   h, 1, g['U']);
-  draw(LOWER_RIGHT, x+1, y, w-2, h, 1, g['W']);
-  draw(CLOSED,	    x,   y, w,   h, 2, g['A']);
+  draw(UPPER_LEFT,  x+1, y, w-2, h, 0, g[(uchar)'N']);
+  draw(UPPER_LEFT,  x+1, y, w-2, h, 1, g[(uchar)'H']);
+  draw(UPPER_LEFT,  x,   y, w,   h, 0, g[(uchar)'N']);
+  draw(UPPER_LEFT,  x,   y, w,   h, 1, g[(uchar)'H']);
+  draw(LOWER_RIGHT, x,   y, w,   h, 0, g[(uchar)'S']);
+  draw(LOWER_RIGHT, x+1, y, w-2, h, 0, g[(uchar)'U']);
+  draw(LOWER_RIGHT, x,   y, w,   h, 1, g[(uchar)'U']);
+  draw(LOWER_RIGHT, x+1, y, w-2, h, 1, g[(uchar)'W']);
+  draw(CLOSED,	    x,   y, w,   h, 2, g[(uchar)'A']);
 }
 
 void fl_round_up_box(int x, int y, int w, int h, Fl_Color bgcolor) {
   uchar *g = fl_gray_ramp();
   draw(FILL,	    x,   y, w,   h, 2, bgcolor);
-  draw(LOWER_RIGHT, x+1, y, w-2, h, 0, g['H']);
-  draw(LOWER_RIGHT, x+1, y, w-2, h, 1, g['N']);
-  draw(LOWER_RIGHT, x,   y, w,   h, 1, g['H']);
-  draw(LOWER_RIGHT, x,   y, w,   h, 2, g['N']);
-  draw(UPPER_LEFT,  x,   y, w,   h, 2, g['U']);
-  draw(UPPER_LEFT,  x+1, y, w-2, h, 1, g['S']);
-  draw(UPPER_LEFT,  x,   y, w,   h, 1, g['W']);
-  draw(UPPER_LEFT,  x+1, y, w-2, h, 0, g['U']);
-  draw(CLOSED,	    x,   y, w,   h, 0, g['A']);
+  draw(LOWER_RIGHT, x+1, y, w-2, h, 0, g[(uchar)'H']);
+  draw(LOWER_RIGHT, x+1, y, w-2, h, 1, g[(uchar)'N']);
+  draw(LOWER_RIGHT, x,   y, w,   h, 1, g[(uchar)'H']);
+  draw(LOWER_RIGHT, x,   y, w,   h, 2, g[(uchar)'N']);
+  draw(UPPER_LEFT,  x,   y, w,   h, 2, g[(uchar)'U']);
+  draw(UPPER_LEFT,  x+1, y, w-2, h, 1, g[(uchar)'S']);
+  draw(UPPER_LEFT,  x,   y, w,   h, 1, g[(uchar)'W']);
+  draw(UPPER_LEFT,  x+1, y, w-2, h, 0, g[(uchar)'U']);
+  draw(CLOSED,	    x,   y, w,   h, 0, g[(uchar)'A']);
 }
 
 extern void fl_internal_boxtype(Fl_Boxtype, Fl_Box_Draw_F*);
