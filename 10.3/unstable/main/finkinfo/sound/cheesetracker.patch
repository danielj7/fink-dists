diff -uNr cheesetracker/SConstruct cheesetracker-patched/SConstruct
--- cheesetracker/SConstruct	Sat Oct 25 17:54:12 2003
+++ cheesetracker-patched/SConstruct	Sun Oct 26 15:25:40 2003
@@ -85,6 +85,7 @@
 
 if (env.os_is_macosx):
 	env.Append(CXXFLAGS=['-DMACOSX_ENABLED']);
+	env.Append(LINKFLAGS=['-framework','CoreAudio']);
 
 if (env.is_oss_installed):
 	env.Append(CXXFLAGS=['-DOSS_ENABLED']);
diff -uNr cheesetracker/common/components/audio/mixer.cpp cheesetracker-patched/common/components/audio/mixer.cpp
--- cheesetracker/common/components/audio/mixer.cpp	Sat Oct 25 05:41:34 2003
+++ cheesetracker-patched/common/components/audio/mixer.cpp	Sun Oct 26 15:14:27 2003
@@ -37,8 +37,6 @@
 
 #define CYCMSEC(m_parm) (float)( ((double)m_parm/950000000.0) * 1000.0 )
 
-static cycles_t cyc,cycfin,cyctot;
-
 static float history[10];
 
 int Mixer::get_channel_count() {
@@ -103,8 +101,6 @@
 
  	int buffer_size=MIX_BUFFER_SIZE/2;
 
-	cyctot=0;
-
 	//first dont let it mix more than what we can
 	if (p_samples>buffer_size) p_samples=buffer_size;
 
@@ -141,7 +137,6 @@
 
 		history[i]=history[i+1];
 	}
-	history[9]=CYCMSEC(cyctot);
 
         float avg=0;
 
@@ -151,7 +146,6 @@
 	}
 
 	avg/=10;
-//	printf("PARSE %f cycles\n",avg);
 
 	return mixed;
 }
@@ -279,9 +273,7 @@
              	}
 
 		/* Finally, mix the voice to its corresponding channel buffer */
-		cyc=get_cycles();
 		voice[i]->mix(buffer_size,&channel[chan].buffer[0]);
-	        cyctot+=get_cycles()-cyc;
 
 
 		/* After we finished mixing, let's check what's the voice up to. */
diff -uNr cheesetracker/detect.py cheesetracker-patched/detect.py
--- cheesetracker/detect.py	Tue Oct 21 20:27:34 2003
+++ cheesetracker-patched/detect.py	Sun Oct 26 15:14:33 2003
@@ -96,6 +96,8 @@
 		include_qtdir=qtdir+'/include';
 		qt_unix_include_dirs=[];
 		qt_unix_include_dirs.append(include_qtdir);
+		qt_unix_include_dirs.append(include_qtdir + '/qt');
+		qt_unix_include_dirs.append(include_qtdir + '/qt3');
 
 		lib_qtdir=qtdir+'/lib';
 		qt_unix_library_dirs=[];
diff -uNr cheesetracker/trackercore/player_data_events.cpp cheesetracker-patched/trackercore/player_data_events.cpp
--- cheesetracker/trackercore/player_data_events.cpp	Sat Oct 25 15:44:53 2003
+++ cheesetracker-patched/trackercore/player_data_events.cpp	Sun Oct 26 15:23:33 2003
@@ -186,9 +186,6 @@
 	if ( mixer==NULL ) return;
 	if ( song==NULL ) return;
 
-	cycles_t cyc,cycfin;
-
-	cyc=get_cycles();
 	/* update time counter (sngtime is in milliseconds (in fact 2^-10)) */
 
 	if (control.ticks_counter>=control.speed) { // time to process... ***THE ROW***!
@@ -261,29 +258,13 @@
 
 	}
 
-	cycfin=get_cycles()-cyc;
-	//printf("1 PARSE %f cycles\n",CYCMSEC(cycfin));
-	cyc=get_cycles();
-
 	pre_process_effects();
 	process_NNAs();
 
-	cycfin=get_cycles()-cyc;
-	//printf("2 FX&NNA %f cycles\n",CYCMSEC(cycfin));
-	cyc=get_cycles();
-
 	setup_voices();
 
-	cycfin=get_cycles()-cyc;
-	//printf("3 Voices %f cycles\n",CYCMSEC(cycfin));
-	cyc=get_cycles();
-
 	/* now set up the actual hardware channel playback information */
 	update_mixer();
-
-	cycfin=get_cycles()-cyc;
-	//printf("4 Mixer %f cycles\n",CYCMSEC(cycfin));
-	cyc=get_cycles();
 
 	control.ticks_counter++;
 	set_tick_size();
