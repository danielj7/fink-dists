Info2: <<
Package: lyx%type_pkg[-ui]
Type: -ui ( -x11 -mac ) 
Version: 1.6.10
Revision: 54
Distribution: 10.7
Source: ftp://ftp.devel.%{ni}.org/pub/%{ni}/stable/%{ni}-%v.tar.bz2
Source-MD5: 6b286595302020adf8545796e5ea5c89
Depends: <<
qt4-base%type_pkg[-ui]-qtcore-shlibs, qt4-base%type_pkg[-ui]-qtgui-shlibs, 
aspell, libiconv,
freetype219-shlibs, aspell-shlibs, libgettext8-shlibs, expat1-shlibs, 
(%type_pkg[-ui] = -x11) glib2-shlibs,
aiksaurus-shlibs | aiksaurus-nox-shlibs,
boost1.46.1.cmake-shlibs
<<
BuildDepends: <<
qt4-base%type_pkg[-ui], expat1, libgettext8-dev, gettext-bin, gettext-tools, 
libiconv-dev, latex-xft-fonts, aspell-dev, automake1.11, 
freetype219, fink (>= 0.30.0), 
(%type_pkg[-ui] = -x11) glib2-dev,  
(%type_pkg[-ui] = -x11) x11-dev, 
aiksaurus-dev | aiksaurus-nox-dev,
boost1.46.1.cmake, pkgconfig,
fink-package-precedence
<<
Conflicts: (%type_pkg[-ui] = -x11) %{ni}-qt, %{ni}2%type_pkg[-ui]
Replaces:  (%type_pkg[-ui] = -x11) %{ni}-qt, %{ni}2%type_pkg[-ui] 
Provides: %{ni}1, %{ni}-editor
Recommends: <<
tetex | ptex | texlive, 
imagemagick | imagemagick-nox | graphicsmagick-imagemagick-compat,
gv | kghostview | evince | launch , 
gv | kghostview | kpdf | xpdf | evince | launch 
<<

GCC: 4.0
UpdatePoMakefile: true
SetLDFLAGS: -Wl,-framework,AppKit -Wl,-framework,OpenGL -Wl,-framework,AGL -Wl,-dead_strip_dylibs

PatchFile: %{ni}.patch
PatchFile-MD5: 21f0b994568a271f66c7c6da1bfbf114
PatchFile2: %{ni}-10.7.patch
PatchFile2-MD5: 9e257efb83e4d7f379aeda9a06734c84
PatchFile3: %{ni}-1.6.patch
PatchFile3-MD5: 70c525220157e6a05c942d66f128759a
PatchScript: <<
 sed 's|@PREFIX@|%p|g' < %{PatchFile} | patch -p1
 patch -p1 < %{PatchFile2}
 patch -p1 < %{PatchFile3}
 ln -s config/mkinstalldirs mkinstalldirs
<<

ConfigureParams:  << 
(%type_pkg[-ui] = -mac) --prefix='%i/Applications/LyX.app' \
(%type_pkg[-ui] = -x11) --mandir='${prefix}/share/man' \
--with-frontend=qt4 \
--with-qt4-includes=%p/lib/qt4%type_pkg[-ui]/include \
--with-qt4-libraries=%p/lib/qt4%type_pkg[-ui]/lib \
(%type_pkg[-ui] = -mac) --without-x \
(%type_pkg[-ui] = -x11) --with-packaging=posix \
(%type_pkg[-ui] = -mac) --with-packaging=macosx \
(%type_pkg[-ui] = -x11) --x-libraries=/usr/X11R6/lib \
(%type_pkg[-ui] = -x11) --x-includes=/usr/X11R6/include \
--with-aspell --enable-dependency-tracking \
--disable-static --enable-shared --without-included-boost
<<
CompileScript: <<
 #!/bin/sh -ev
 if [ "%type_pkg[-ui]" = "-x11" ]
	then export LDFLAGS=$LDFLAGS' -L/usr/X11/lib -lX11' 
 fi
 export PYTHON=/usr/bin/python
 export CCACHE_DISABLE=1
 export QT4DIR=%p/lib/qt4%type_pkg[-ui]
 # check for new enough clang
 clangvers=`clang++ --version | cut -d\  -f4`
 check='<<'
 clangcheck=`dpkg --compare-versions $clangvers $check 3.0` && echo 'x'
 if [ "$clangcheck" = "x" ] 
 then
 	export CXX=llvm-g++
 	export CC=llvm-gcc
 	export OBJC="llvm-gcc -ObjC"
 fi
 %{default_script}
 fink-package-precedence .
<<
InstallScript: <<
#!/bin/sh -ev
 export PYTHON=/usr/bin/python 
if [ "%type_pkg[-ui]" == "-x11" ]; then
 make install DESTDIR=%d
 mkdir -p %i/etc/texmf.local/tex/latex
 cp -R %i/share/lyx/tex %i/etc/texmf.local/tex/latex/lyx
 pushd %i/share/lyx 
 ln -s %p/share/lyx/lyxrc.example preferences
 popd
 mv %i/bin/lyx %i/bin/lyxx
 cp lyx.sh %i/bin/lyx
 chmod 755 %i/bin/lyx
else 
 make install-strip
 find %i/Applications/LyX.app \( -name '*.pyc' -o -name '*.pyo' \) -delete;
 pushd %i/Applications/LyX.app/Contents/Resources/lyx2lyx
 %p/share/automake-1.11/py-compile  *.py
 popd
 pushd %i/Applications/LyX.app/Contents/Resources/scripts
 %p/share/automake-1.11/py-compile *.py
fi
<<
License: GPL
DocFiles: INSTALL COPYING NEWS README UPGRADING ANNOUNCE
PostInstScript: <<
if [ "%type_pkg[-ui]" == "-x11" ]; then
	echo "Configuring LyX for your system..."
	(cd %p/share/lyx; ./configure.py)
	if [ -f %p/bin/mktexlsr ]; then %p/bin/mktexlsr %p/etc/texmf.local; fi
else
	if ! test -e /Applications/Fink; then
    	/usr/bin/install -d -m 755 /Applications/Fink
  	fi
    /bin/ln -s '%p/Applications/LyX.app' /Applications/Fink/
    (cd %p/Applications/LyX.app/Contents/Resources ; ./configure.py)
fi
<<
PostRmScript: <<
if [ -f %p/bin/mktexlsr ]; then %p/bin/mktexlsr %p/etc/texmf.local; fi
if [ "%type_raw[-ui]" == "-mac" ]; then
  /bin/rm -f '/Applications/Fink/LyX.app'
fi
<<
Description: Wordprocessor utilizing LaTeX
DescDetail: <<
LyX is a modern approach of writing documents with a computer
which breaks with the tradition of the obsolete typewriter
concept.  It is designed for people who want a professional
output with a minimum of time and effort, without becoming specia-
lists in typesetting.  Compared to common word processors LyX
will increase the productivity a lot, since most of the type-
setting will be done by the computer, not the author.  With LyX
the author can concentrate on the contents of his writing,
since the computer will take care of the look.
<<
DescUsage: <<
If you're using a non-Fink TeX distro, you'll want to run

/path/to/mktexlsr %p/etc/texmf.local
after installation of the package, and also after removing it, 
to integrate its style and class files with your TeX setup.

Since LyX is highly configurable at runtime, we've moved to
having recommended rather than mandatory dependencies on
Imagemagick, TeX, and Postscript and PDF viewers.  Some users
may already have non-Fink options for these and so we won't
force extra packages upon them.
<<
DescPort: <<
Thanks to Ronald Florence for his instructions on getting
lyx-1.3.2 to compile (http://www.18james.com/lyx_on_osx.html)

lyx is a wrapper script that sets up symlinks to latex-xft fonts
fonts in ~/.fonts, so that LyX will find them.

Patch to prevent BusError when new file is opened with keyboard
shortcut.

Since we pretty much have to set the prefix to build the .app
bundle we have to reconstitute the python modules by hand in the 
Aqua version or the validator gripes.

Symlink to the real mkinstalldirs as a simple workaround to the 
Makefile trying to find one in %b rather than %b/config.

lyx-10.7 patch contains fixes for 10.7 which are common to both
lyx and lyx2: C++ constructions that aren't compatible with the strict
syntax requirements of clang (even though we don't use clang on lyx
for other reasons)

lyx-1.6.patch contains fixes specific to lyx. 

We don't use clang because it appears to have a problem with the 
boost1.46.1.cmake package, which lyx triggers.
<<
DescPackaging:  <<
Uses by-hand installation of the app bundle rather than AppBundles
so that the -mac and -x11 packages can be described in one .info file.

The -mac and -x11 variants don't have any files that overlap, so they
don't conflict/replace each other.

Since we're using the system's python to avoid extra dependencies, we
force a rebuild for a 10.4 -> 10.5, 10.5 -> 10.6, or 10.6->10.7 update.

Uses Fink's boost as of 1.6.5-22 and later.

Prior versions by Jeffrey Whitaker
<<
Homepage:  http://www.lyx.org
Maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>
<<