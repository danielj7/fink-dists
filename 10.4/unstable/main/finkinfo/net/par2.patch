diff -urN par2cmdline-0.4.orig/par1fileformat.h par2cmdline-0.4/par1fileformat.h
--- par2cmdline-0.4.orig/par1fileformat.h	2003-08-02 01:42:21.000000000 +0200
+++ par2cmdline-0.4/par1fileformat.h	2006-10-16 15:49:33.000000000 +0200
@@ -24,7 +24,7 @@
 #pragma pack(push, 1)
 #define PACKED
 #else
-#define PACKED __attribute__ ((packed))
+#define PACKED
 #endif
 
 #ifdef _MSC_VER
diff -urN par2cmdline-0.4.orig/par2fileformat.h par2cmdline-0.4/par2fileformat.h
--- par2cmdline-0.4.orig/par2fileformat.h	2003-08-02 01:43:40.000000000 +0200
+++ par2cmdline-0.4/par2fileformat.h	2006-10-16 15:49:27.000000000 +0200
@@ -43,7 +43,7 @@
 #pragma pack(push, 1)
 #define PACKED
 #else
-#define PACKED __attribute__ ((packed))
+#define PACKED
 #endif
 
 #ifdef _MSC_VER
--- par2cmdline-0.4.orig/reedsolomon.cpp.orig	2003-05-26 20:01:31.000000000 +0200
+++ par2cmdline-0.4.orig/reedsolomon.cpp
@@ -51,7 +51,7 @@ u32 gcd(u32 a, u32 b)
   }
 }
 
-bool ReedSolomon<Galois8>::SetInput(const vector<bool> &present)
+template<> bool ReedSolomon<Galois8>::SetInput(const vector<bool> &present)
 {
   inputcount = (u32)present.size();
 
@@ -80,7 +80,7 @@ bool ReedSolomon<Galois8>::SetInput(cons
   return true;
 }
 
-bool ReedSolomon<Galois8>::SetInput(u32 count)
+template<> bool ReedSolomon<Galois8>::SetInput(u32 count)
 {
   inputcount = count;
 
@@ -101,7 +101,7 @@ bool ReedSolomon<Galois8>::SetInput(u32 
   return true;
 }
 
-bool ReedSolomon<Galois8>::Process(size_t size, u32 inputindex, const void *inputbuffer, u32 outputindex, void *outputbuffer)
+template<> bool ReedSolomon<Galois8>::Process(size_t size, u32 inputindex, const void *inputbuffer, u32 outputindex, void *outputbuffer)
 {
   // Look up the appropriate element in the RS matrix
   Galois8 factor = leftmatrix[outputindex * (datapresent + datamissing) + inputindex];
@@ -189,7 +189,7 @@ bool ReedSolomon<Galois8>::Process(size_
 
 // Set which of the source files are present and which are missing
 // and compute the base values to use for the vandermonde matrix.
-bool ReedSolomon<Galois16>::SetInput(const vector<bool> &present)
+template<> bool ReedSolomon<Galois16>::SetInput(const vector<bool> &present)
 {
   inputcount = (u32)present.size();
 
@@ -233,7 +233,7 @@ bool ReedSolomon<Galois16>::SetInput(con
 
 // Record that the specified number of source files are all present
 // and compute the base values to use for the vandermonde matrix.
-bool ReedSolomon<Galois16>::SetInput(u32 count)
+template<> bool ReedSolomon<Galois16>::SetInput(u32 count)
 {
   inputcount = count;
 
@@ -267,7 +267,7 @@ bool ReedSolomon<Galois16>::SetInput(u32
   return true;
 }
 
-bool ReedSolomon<Galois16>::Process(size_t size, u32 inputindex, const void *inputbuffer, u32 outputindex, void *outputbuffer)
+template<> bool ReedSolomon<Galois16>::Process(size_t size, u32 inputindex, const void *inputbuffer, u32 outputindex, void *outputbuffer)
 {
   // Look up the appropriate element in the RS matrix
 
