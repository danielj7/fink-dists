diff -ruN SmartEiffel/fink-serc SmartEiffel-patched/fink-serc
--- SmartEiffel/fink-serc	Thu Jan  1 01:00:00 1970
+++ SmartEiffel-patched/fink-serc	Fri Jun 20 01:02:34 2003
@@ -0,0 +1,130 @@
+-- This is the configuration file of SmartEiffel, generated by the
+-- SmartEiffel installer.
+-- If you have any problems or questions, please:
+--   - either look at the SmartEiffel site (http://SmartEiffel.loria.fr)
+--   - or contact the SmartEiffel team (SmartEiffel@loria.fr)
+-- ======================================================================= --
+[General]
+
+-- This section contains some general-purpose keys. They describe how is the
+-- SmartEiffel distribution arranged, and on which operating system it was
+-- installed.
+
+-- The 'bin' key is the path to the directory that contains the SmartEiffel
+-- directory. It is used by 'compile' to find 'compile_to_c'.
+
+-- The 'sys' directory is used to find the C and Java files used by the
+-- compilers.
+
+-- The 'short' directory is used by the 'short' utility to fotmat the output.
+
+-- The 'os' key tells on which system SmartEiffel is installed on.
+
+-- At last, 'tag' gives the version of install configuration (used only by the
+-- installer)
+
+bin: @@PREFIX@@/bin/
+sys: @@PREFIX@@/share/smarteiffel/sys/
+short: @@PREFIX@@/share/smarteiffel/short/
+os: UNIX
+tag: 1
+
+[Loadpath]
+
+-- This section contains the default loadpaths used by this SmartEiffel
+-- installation.
+
+-- The key is a mere description and serves no other purpose,
+
+-- The value of the key is the path to a loadpath file.
+
+-- Note that the loadpath files ar read in the order given below.
+
+lib: @@PREFIX@@/lib/smarteiffel/loadpath.se
+tools: @@PREFIX@@/share/smarteiffel/tools/loadpath.se
+tutorial: @@PREFIX@@/share/smarteiffel/tutorial/loadpath.se
+
+
+-- ======================================================================= --
+
+-- Below are the "C mode" sections. Each C mode describes which C compiler must
+-- be called, with which options, which linker, and so on. The keys are
+-- described below.
+
+-- The first sections (boost, ..., debug_check) are by default used in
+-- conjunction with the corresponding SmartEiffel check level. This behaviour
+-- may be changed by using the -c_mode flag.
+
+-- The recognized keys in each section are:
+
+-- 'compiler_type', which tells which is the compiler type to use
+
+-- 'compiler_path', which gives the path to the compiler executable
+
+-- 'compiler_options', which gives some options to the compiler
+
+-- 'linker_path', which gives the path to the linker executable (not used in
+--  -no_split mode)
+
+-- 'linker_options', which gives some options for the linker (not used in
+--  -no_split mode)
+
+-- 'smarteiffel_options', which gives some extra SmartEiffel options to take
+--  into account
+
+
+[boost]
+c_compiler_type: gcc
+c_compiler_options: -pipe -O2
+cpp_compiler_type: g++
+cpp_compiler_options: -pipe -O2
+
+[no_check]
+c_compiler_type: gcc
+c_compiler_options: -pipe -O1
+cpp_compiler_type: g++
+cpp_compiler_options: -pipe -O1
+
+[require_check]
+c_compiler_type: gcc
+c_compiler_options: -pipe
+cpp_compiler_type: g++
+cpp_compiler_options: -pipe
+
+[ensure_check]
+c_compiler_type: gcc
+c_compiler_options: -pipe
+cpp_compiler_type: g++
+cpp_compiler_options: -pipe
+
+[invariant_check]
+c_compiler_type: gcc
+c_compiler_options: -pipe
+cpp_compiler_type: g++
+cpp_compiler_options: -pipe
+
+[loop_check]
+c_compiler_type: gcc
+c_compiler_options: -pipe
+cpp_compiler_type: g++
+cpp_compiler_options: -pipe
+
+[all_check]
+c_compiler_type: gcc
+c_compiler_options: -pipe
+cpp_compiler_type: g++
+cpp_compiler_options: -pipe
+
+[debug_check]
+c_compiler_type: gcc
+c_compiler_options: -pipe -g
+cpp_compiler_type: g++
+cpp_compiler_options: -pipe -g
+smarteiffel_options: -no_strip
+
+[release]
+c_compiler_type: gcc
+c_compiler_options: -pipe -O3 -fomit-frame-pointer
+cpp_compiler_type: g++
+cpp_compiler_options: -pipe -O3 -fomit-frame-pointer
+smarteiffel_options: -no_split -compact
diff -ruN SmartEiffel/smarteiffel.csh SmartEiffel-patched/smarteiffel.csh
--- SmartEiffel/smarteiffel.csh	Thu Jan  1 01:00:00 1970
+++ SmartEiffel-patched/smarteiffel.csh	Fri Jun 20 01:00:21 2003
@@ -0,0 +1,2 @@
+#setenv SmartEiffel @@PREFIX@@/share/smarteiffel/sys/system.se
+#setenv CLASSPATH @@PREFIX@@/share/smarteiffel/sys/runtime/java/smarteiffel.jar:$CLASSPATH
diff -ruN SmartEiffel/smarteiffel.sh SmartEiffel-patched/smarteiffel.sh
--- SmartEiffel/smarteiffel.sh	Thu Jan  1 01:00:00 1970
+++ SmartEiffel-patched/smarteiffel.sh	Fri Jun 20 01:00:06 2003
@@ -0,0 +1,2 @@
+#export SmartEiffel=@@PREFIX@@/share/smarteiffel/sys/system.se
+#export CLASSPATH=@@PREFIX@@/share/smarteiffel/sys/runtime/java/smarteiffel.jar:$CLASSPATH
diff -ruN SmartEiffel/tools/system_tools.e SmartEiffel-patched/tools/system_tools.e
--- SmartEiffel/tools/system_tools.e	Mon Jun 16 11:56:20 2003
+++ SmartEiffel-patched/tools/system_tools.e	Fri Jun 20 00:55:23 2003
@@ -387,7 +387,7 @@
                   end
                   i := i + 1
                end
-               s := once "/etc/serc"
+               s := once "@@PREFIX@@/etc/serc"
                if Result.upper >= i then
                   Result.item(i).copy(s)
                else
