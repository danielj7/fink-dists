--- Numeric-23.0/setup.py.orig	Thu Mar  6 11:58:01 2003
+++ Numeric-23.0/setup.py	Thu Mar  6 12:00:23 2003
@@ -20,6 +20,7 @@
 
 headers = glob (os.path.join ("Include","Numeric","*.h"))
 extra_compile_args = []  # You could put "-O4" etc. here.
+extra_link_args = ["-framework", "vecLib"]
 mathlibs = ['m']
 define_macros = [('HAVE_INVERSE_HYPERBOLIC',None)]
 undef_macros = []
@@ -32,21 +33,14 @@
     mathlibs = []
 
 # delete all but the first one in this list if using your own LAPACK/BLAS
-sourcelist = [os.path.join('Src', 'lapack_litemodule.c'),
-              os.path.join('Src', 'blas_lite.c'), 
-              os.path.join('Src', 'f2c_lite.c'), 
-              os.path.join('Src', 'zlapack_lite.c'),
-              os.path.join('Src', 'dlapack_lite.c')
-             ]
-# set these to use your own BLAS;
+sourcelist = [os.path.join('Src', 'lapack_litemodule.c')]
 
 library_dirs_list = []
 libraries_list = [] # if you also set `use_dotblas` (see below), you'll need:
-                    # ['lapack', 'cblas', 'f77blas', 'atlas', 'g2c']
 
 # set to true (1), if you also want BLAS optimized matrixmultiply/dot/innerproduct
-use_dotblas = 0
-include_dirs = []  # You may need to set this to find cblas.h
+use_dotblas = 1
+include_dirs = ['/System/Library/Frameworks/vecLib.framework/Headers/']
                    #  e.g. on UNIX using ATLAS this should be ['/usr/include/atlas'] 
 
 # The packages are split in this way to allow future optional inclusion
@@ -81,6 +75,7 @@
     Extension('lapack_lite', sourcelist,
               library_dirs = library_dirs_list,
               libraries = libraries_list,
+              extra_link_args = extra_link_args,
               extra_compile_args = extra_compile_args) 
     ]
 
@@ -114,6 +109,7 @@
                                  [os.path.join('Packages', 'dotblas', 'dotblas', '_dotblas.c')],
                                  library_dirs = library_dirs_list,
                                  libraries = libraries_list,
+                                 extra_link_args = extra_link_args,
                                  extra_compile_args=extra_compile_args))
 
 
