--- rstudio-0.98.1103/src/cpp/core/Assert.cpp.orig	2015-04-26 16:09:09.000000000 -0400
+++ rstudio-0.98.1103/src/cpp/core/Assert.cpp	2015-04-26 16:11:34.000000000 -0400
@@ -37,7 +37,7 @@
 
    // always log the failure
    std::string msg = "ASSERTION FAILED: " + std::string(expr);
-   core::log::logWarningMessage(msg, location);
+   ::core::log::logWarningMessage(msg, location);
 
 #ifndef NDEBUG
 #ifdef _WIN32
@@ -61,7 +61,7 @@
    // always log the failure
    std::string message = "ASSERTION FAILED: " + std::string(expr) +
                          " - " + std::string(msg);
-   core::log::logWarningMessage(message, location);
+   ::core::log::logWarningMessage(message, location);
 
 #ifndef NDEBUG
 #ifdef _WIN32
--- rstudio-0.98.1103/src/cpp/core/include/core/Error.hpp.orig	2015-04-26 16:16:18.000000000 -0400
+++ rstudio-0.98.1103/src/cpp/core/include/core/Error.hpp	2015-04-26 16:14:24.000000000 -0400
@@ -172,7 +172,7 @@
    
 } // namespace core 
 
-#define ERROR_LOCATION core::ErrorLocation( \
+#define ERROR_LOCATION ::core::ErrorLocation( \
       BOOST_CURRENT_FUNCTION,__FILE__,__LINE__)
 
 #define CATCH_UNEXPECTED_EXCEPTION \
--- rstudio-0.98.1103/src/cpp/core/include/core/Log.hpp.orig	2015-04-26 16:18:09.000000000 -0400
+++ rstudio-0.98.1103/src/cpp/core/include/core/Log.hpp	2015-04-26 16:18:31.000000000 -0400
@@ -49,7 +49,7 @@
 // Macros for automatic inclusion of ERROR_LOCATION and easy ability to 
 // compile out logging calls
 
-#define LOG_ERROR(error) core::log::logError(error, ERROR_LOCATION) 
+#define LOG_ERROR(error) ::core::log::logError(error, ERROR_LOCATION) 
 
 #define LOG_ERROR_MESSAGE(message) core::log::logErrorMessage(message, \
                                                               ERROR_LOCATION)
--- rstudio-0.98.1103/src/cpp/core/include/core/json/JsonRpc.hpp.orig	2015-04-26 16:21:24.000000000 -0400
+++ rstudio-0.98.1103/src/cpp/core/include/core/json/JsonRpc.hpp	2015-04-26 16:21:53.000000000 -0400
@@ -62,7 +62,7 @@
 namespace boost {
 namespace system {
 template <>
-struct is_error_code_enum<core::json::errc::errc_t>
+struct is_error_code_enum< ::core::json::errc::errc_t>
  { static const bool value = true; };
 } // namespace system
 } // namespace boost
--- rstudio-0.98.1103/src/cpp/session/projects/SessionProjectContext.cpp.orig	2015-04-26 16:38:31.000000000 -0400
+++ rstudio-0.98.1103/src/cpp/session/projects/SessionProjectContext.cpp	2015-04-26 16:39:35.000000000 -0400
@@ -353,7 +353,7 @@
 {
    // kickoff file monitoring for this directory
    using namespace boost;
-   core::system::file_monitor::Callbacks cb;
+   ::core::system::file_monitor::Callbacks cb;
    cb.onRegistered = bind(&ProjectContext::fileMonitorRegistered,
                           this, _1, _2);
    cb.onRegistrationError = bind(&ProjectContext::fileMonitorTermination,
@@ -364,7 +364,7 @@
                             this, _1);
    cb.onUnregistered = bind(&ProjectContext::fileMonitorTermination,
                             this, Success());
-   core::system::file_monitor::registerMonitor(
+   ::core::system::file_monitor::registerMonitor(
                                          directory(),
                                          true,
                                          module_context::fileListingFilter,
--- rstudio-0.98.1103/src/cpp/core/include/core/Log.hpp.orig	2015-04-26 17:10:05.000000000 -0400
+++ rstudio-0.98.1103/src/cpp/core/include/core/Log.hpp	2015-04-26 17:10:29.000000000 -0400
@@ -54,7 +54,7 @@
 #define LOG_ERROR_MESSAGE(message) core::log::logErrorMessage(message, \
                                                               ERROR_LOCATION)
 
-#define LOG_WARNING_MESSAGE(message) core::log::logWarningMessage( \
+#define LOG_WARNING_MESSAGE(message) ::core::log::logWarningMessage( \
                                                                message, \
                                                                ERROR_LOCATION)
 
