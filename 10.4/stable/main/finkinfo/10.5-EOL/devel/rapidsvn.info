Package: rapidsvn
Version: 0.9.8
Revision: 1
Description: GUI front-end for Subversion
License: GPL
Maintainer: Trevor Harmon <trevor@vocaro.com>
#No wxmac28 on x86_64
Architecture: powerpc, i386

# Dependencies:
Depends: svncpp2-shlibs (>= %v-%r), libapr.0-shlibs, libaprutil.0-shlibs, svn15-shlibs, wxmac28-shlibs
BuildDepends: fink (>= 0.24.12), libapr.0-dev, libaprutil.0-dev, svn15-dev, wxmac28, doxygen, graphviz, libxslt (>= 1.0.27), libxml2, openldap24-dev, gdbm3, db48-aes | db48, expat1, libiconv-dev, cyrus-sasl2-dev, docbook-xsl (>= 1.58.1), libgettext8-dev, system-openssl-dev

Conflicts: rapidsvn-gtk, rapidsvn-gtk-ssl
Replaces: rapidsvn-gtk, rapidsvn-gtk-ssl

# Unpack Phase:
Source: http://www.rapidsvn.org/download/release/%v/rapidsvn-%v.tar.gz
Source-MD5: 1b49d893027ae83dbcff3d7508b3f42f

# Patch Phase:
PatchFile: %n.patch
PatchFile-MD5: 0ac63fd253cf0a169250b4bb126eba91

# Compile Phase:
SetLDFLAGS: -L%p/lib/system-openssl/lib
ConfigureParams: --with-svn-include=%p/include --with-svn-lib=%p/lib --with-docbook-xsl-manpages=%p/share/xml/xsl/docbook-xsl/manpages/docbook.xsl --disable-dependency-tracking --with-apr-config=%p/bin/apr-1-config --with-apu-config=%p/bin/apu-1-config
GCC: 4.0

# Install Phase:
DocFiles: AUTHORS COPYING ChangeLog INSTALL NEWS README
InstallScript: <<
 #!/bin/bash -ev  # Run as a script so that directory changes are preserved

 make install DESTDIR=%d

 ### Create and install the application bundle
 cd %b/packages/osx  # The make_osx_bundle script assumes it's being run from the %b/packages/osx directory
 ./make_osx_bundle.sh
 strip %i/bin/rapidsvn
 mv -f %i/bin/rapidsvn RapidSVN.app/Contents/MacOS/  # Move instead of copy because the program is useless outside of a bundle

 ### Install svncpp docu
 /usr/bin/install -d %i/share
 /usr/bin/install -d %i/share/doc
 /usr/bin/install -d %i/share/doc/svncpp2-doc
 cp -r %b/doc/svncpp/html %i/share/doc/svncpp2-doc
<<
AppBundles: packages/osx/RapidSVN.app
SplitOff: <<
  Description: C++ API to subversion - Development Headers
  Package: svncpp2-dev
  Depends: svncpp2-shlibs (= %v-%r)
  Conflicts: svncpp0-dev
  Replaces: svncpp0-dev
  BuildDependsOnly: True
  Files: <<
    include
    lib/libsvncpp.a
    lib/libsvncpp.la
    lib/libsvncpp.dylib
  <<
  DescDetail: <<
As part of the RapidSVN effort it became clear that it would make the code
easier to update and manage if the Subversion client C API were wrapped in C++.
This is where SvnCpp comes from. Right now it has the following aspects of the
C API have been abstracted: authentication, logging, status, notification, and
properties. SvnCpp should provide an object-oriented programming interface to
any project that uses C++ or a SWIG-compatible language like Python or Java.
  <<
  DocFiles: COPYING README
  Homepage: http://rapidsvn.tigris.org/svncpp.html
<<
SplitOff2: <<
  Description: C++ API to subversion - Shared libraries
  Package: svncpp2-shlibs
  Depends: svn15-shlibs
  Files: <<
    lib/libsvncpp.2.dylib
  <<
  Shlibs: <<
    %p/lib/libsvncpp.2.dylib 3.0.0 %n (>= 0.9.8-1)
  <<
  DescDetail: <<
As part of the RapidSVN effort it became clear that it would make the code
easier to update and manage if the Subversion client C API were wrapped in C++.
This is where SvnCpp comes from. Right now it has the following aspects of the
C API have been abstracted: authentication, logging, status, notification, and
properties. SvnCpp should provide an object-oriented programming interface to
any project that uses C++ or a SWIG-compatible language like Python or Java.
  <<
  DocFiles: COPYING README
  Homepage: http://rapidsvn.tigris.org/svncpp.html
<<
SplitOff3: <<
  Description: C++ API to subversion - Documentation
  Package: svncpp2-doc
  Files: <<
    share/doc/%n
  <<
  DescDetail: <<
As part of the RapidSVN effort it became clear that it would make the code
easier to update and manage if the Subversion client C API were wrapped in C++.
This is where SvnCpp comes from. Right now it has the following aspects of the
C API have been abstracted: authentication, logging, status, notification, and
properties. SvnCpp should provide an object-oriented programming interface to
any project that uses C++ or a SWIG-compatible language like Python or Java.
  <<
  DocFiles: COPYING README
  Homepage: http://rapidsvn.tigris.org/svncpp.html
<<

# Additional Info
DescDetail: <<
RapidSVN is a cross-platform GUI front-end for the Subversion revision system
written in C++ using the wxWindows framework. This project also includes a
Subversion client C++ API.
<<
Homepage: http://rapidsvn.tigris.org/
DescPackaging: <<
	dmacks (0.9.4-12) make sure dist files are used in preference
	to anything from installed packages

	dmacks (0.9.4-12) svncpp uses svn headers, so make it also
	link against svn libs (otherwise users could link against an
	incompatible-svn's libs later)

	dmacks (0.9.4-12) avoid fink's openssl* (inherit -lssl from neon)
<<
