Package: apt
Version: 0.5.4
Revision: 11
GCC: 3.1
Depends: %N-shlibs (= %v-%r)
Source: mirror:sourceforge:fink/%n_%v.tar.gz
Source-MD5: 274fb64e2e67318b4c9c94599785c37d
SourceDirectory: %n-%v
PatchScript: <<
 sed 's|@PREFIX@|%p|g' <%a/%f.patch | patch -p1
 if [ "%p" = "/sw" ]; then cat sources.list.fink-bindist >>sources.list.fink ; fi
 sh patch_flush
 for i in `grep -rl '#ifdef __GNUG__' .` ; do perl -pi -e 's/#ifdef __GNUG__/#if defined(__GNUG__) && !defined(__APPLE_CC__)/' $i; done
 for i in `grep -rl '#ifdef __GNUG__' .` ; do perl -pi -e 's/#ifdef __GNUG__/#if defined(__GNUG__) && !defined(__APPLE_CC__)/' $i ; done
<<
NoSetCPPFLAGS: true
NoSetLDFLAGS: true
SetCXXFLAGS: -O2 -DEMULATE_MMAP -D__USE_MISC
CompileScript: <<
 ./configure %c
 make -f makefile.wrap
<<
InstallScript: <<
 mkdir -p %i/bin
 install -m 755 bin/apt-cache %i/bin/
 install -m 755 bin/apt-cdrom %i/bin/
 install -m 755 bin/apt-config %i/bin/
 install -m 755 bin/apt-extracttemplates %i/bin/
 install -m 755 bin/apt-get %i/bin/
 install -m 755 bin/apt-sortpkgs %i/bin/
 mkdir -p %i/lib
 install -m 644 bin/libapt-pkg.3.2.0.dylib %i/lib/
 cd %i/lib/ && ln -s libapt-pkg.3.2.0.dylib libapt-pkg.3.2.dylib && ln -s libapt-pkg.3.2.0.dylib libapt-pkg.dylib
 install -m 644 bin/libapt-inst.1.0.0.dylib %i/lib/
 cd %i/lib/ && ln -s libapt-inst.1.0.0.dylib libapt-inst.1.0.dylib && ln -s libapt-inst.1.0.0.dylib libapt-inst.dylib
 mkdir -p %i/lib/apt/methods
 install -m 755 bin/methods/cdrom %i/lib/apt/methods/
 install -m 755 bin/methods/copy %i/lib/apt/methods/
 install -m 755 bin/methods/file %i/lib/apt/methods/
 install -m 755 bin/methods/ftp %i/lib/apt/methods/
 install -m 755 bin/methods/gzip %i/lib/apt/methods/
 install -m 755 bin/methods/http %i/lib/apt/methods/
 install -m 755 bin/methods/rsh %i/lib/apt/methods/
 cd %i/lib/apt/methods && ln -s rsh ssh
 mkdir -p %i/lib/dpkg/methods/apt
 install -m 644 scripts/dselect/desc.apt %i/lib/dpkg/methods/apt/
 install -m 755 scripts/dselect/install %i/lib/dpkg/methods/apt/
 install -m 644 scripts/dselect/names %i/lib/dpkg/methods/apt/
 install -m 755 scripts/dselect/setup %i/lib/dpkg/methods/apt/
 install -m 755 scripts/dselect/update %i/lib/dpkg/methods/apt/
 mkdir -p %i/include/apt-pkg
 cp include/apt-pkg/*.h %i/include/apt-pkg/
 mkdir -p %i/share/man
 mkdir -p %i/share/man/man1
 mkdir -p %i/share/man/man5
 mkdir -p %i/share/man/man8
 install -m 644 doc/apt.8 %i/share/man/man8/
 install -m 644 docs/apt-cache.8 %i/share/man/man8/
 install -m 644 docs/apt-cdrom.8 %i/share/man/man8/
 install -m 644 docs/apt-config.8 %i/share/man/man8/
 install -m 644 docs/apt-extracttemplates.1 %i/share/man/man1/
 install -m 644 docs/apt-get.8 %i/share/man/man8/
 install -m 644 docs/apt-sortpkgs.1 %i/share/man/man1/
 install -m 644 docs/apt.conf.5 %i/share/man/man5/
 install -m 644 docs/apt_preferences.5 %i/share/man/man5/
 install -m 644 docs/sources.list.5 %i/share/man/man5/
 mkdir -p %i/etc/apt/apt.conf.d
 install -m 644 sources.list.fink %i/etc/apt/sources.list
 mkdir -p %i/var/cache/apt/archives/partial
 mkdir -p %i/var/lib/apt/lists/partial
<<
SplitOff: <<
  Package: %N-shlibs
  Depends: dpkg
  Replaces: %N (<= 0.5.4-1)
  Files: lib/libapt-inst.1.0.0.dylib lib/libapt-pkg.3.2.0.dylib lib/libapt-inst.1.0.dylib lib/libapt-pkg.3.2.dylib
  Shlibs: <<
    %p/lib/libapt-inst.1.0.dylib 1.0.0 %n (>= 0.5.4-5)
    %p/lib/libapt-pkg.3.2.dylib 3.2.0 %n (>= 0.5.4-5)
  <<
  DocFiles: COPYING* AUTHORS
<<
SplitOff2: <<
  Package: %N-dev
  Depends: %N-shlibs (= %v-%r)
  BuildDependsOnly: true
  Files: lib/libapt-inst.dylib lib/libapt-pkg.dylib include
  DocFiles: COPYING* AUTHORS
<<
DocFiles: COPYING* AUTHORS
ConfFiles: %p/etc/apt/sources.list
PostInstScript: <<
if [ ! -f %p/var/lib/dpkg/cmethopt ]; then
  echo "apt apt" >%p/var/lib/dpkg/cmethopt
  chmod 644 %p/var/lib/dpkg/cmethopt
else
  read a b <%p/var/lib/dpkg/cmethopt
  if [ "$a" != "apt" -o "$b" != "apt" ]; then
    echo
    echo "dselect is not set up to use apt as its access method. Downloading binary"
    echo -n "package will likely not work. Do you want to use apt instead?"
    read answer
    answer=`echo $answer | sed 's/^[yY].*$/y/'`
    if [ -z "$answer" -o "x$answer" = "xy" ]; then
      echo "apt apt" >%p/var/lib/dpkg/cmethopt
      chmod 644 %p/var/lib/dpkg/cmethopt
    fi
  fi
fi

rm -f %p/var/cache/apt/pkgcache.bin %p/var/cache/apt/srcpkgcache.bin
perl -pi -e 's#direct_download (release|current)#direct_download 10.2/$1#g' %p/etc/apt/sources.list
<<
#
Description: Advanced front-end for dpkg
DescPort: <<
There are three troublemakers when porting apt:
- It was written for Linux/ELF/glibc.
- It was written to maintain a distribution that is in charge of the
  system and hardcodes paths like /usr/bin, /usr/lib and /var/lib.
- There is no install target in the Makefiles because the Debian
  packaging files take care of what goes where.
There's also the usual trouble like not recognizing Darwin and
depending on a case-sensitive file system. All of this amounts to a
big, bad patch.

The patch also fixes some potential and some real crashing bugs.

Oh, one more thing: mmap() is broken for non-trivial uses in OS X
10.1. Luckily apt uses a wrapper class that can be equipped with a
workaround (malloc() + read() + write()...).

The -fno-rtti works around a bug in GCC 3.1 on Jaguar.

Ben Hines - added patch to make apt recognize macosx and darwin pkgs
<<
DescPackaging: Previous versions by Christoph Pfisterer.
License: GPL
Maintainer: Max Horn <max@quendi.de>
Homepage: http://packages.qa.debian.org/a/apt.html
