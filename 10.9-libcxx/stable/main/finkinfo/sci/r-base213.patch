diff -ruN R-2.12.0-orig/Makeconf.in R-2.12.0/Makeconf.in
--- R-2.13.2-orig/Makeconf.in	2011-03-17 19:05:05.000000000 -0400
+++ R-2.12.0/Makeconf.in	2014-09-22 03:35:27.000000000 -0400
@@ -85,7 +85,7 @@
 READLINE_LIBS = @READLINE_LIBS@
 SED = @SED@
 SHELL = @R_SHELL@
-SHLIB_EXT = @SHLIB_EXT@
+SHLIB_EXT = .dylib
 SHLIB_CFLAGS = @SHLIB_CFLAGS@
 SHLIB_FFLAGS = @SHLIB_FFLAGS@
 SHLIB_LD = @SHLIB_LD@
diff -ruN R-2.12.0-orig/Makefile.fw R-2.12.0/Makefile.fw
--- R-2.12.0-orig/Makefile.fw	2010-10-30 15:40:06.000000000 +0900
+++ R-2.12.0/Makefile.fw	2010-10-30 16:05:35.000000000 +0900
@@ -37,27 +37,27 @@
 	  ln -f -s -n Versions/Current/Resources Resources)
 	@## the resulting libR will point dyld to the fat libR regardless of its origin
 	@(cd "$(R_FRAMEWORK_DIR)/Resources/lib" && \
-	  install_name_tool -id "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/libR.dylib" $(Rexeclibdir)/libR.dylib)
+	  install_name_tool -id "@PREFIX@/Library/Frameworks/R.framework/Versions/$(FW_VERSION)/Resources/lib/libR.dylib" $(Rexeclibdir)/libR.dylib)
 	@( otool=otool ; if otool -D "$(Rexeclibdir)/libR.dylib"|grep 'not an object'>/dev/null; then otool=otool64; fi; \
 	   for lib in Rlapack Rblas R; do \
 	   if test -e "$(Rexeclibdir)/lib$${lib}.dylib"; then $(ECHO) "  lib$${lib}"; \
 	    find "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/" -name '*.so' -or -name '*.dylib' | \
 	    xargs -n 1 install_name_tool -change \
 	    `$${otool} -L $(Rexeclibdir)/lib$${lib}.dylib |sed -n -e '2 s/.\(.*\) (compat.*/\1/p'` \
-	    "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" ; \
+	    "@PREFIX@/Library/Frameworks/R.framework/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" ; \
 	    find "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/" -name '*.so' -or -name '*.dylib' | \
 	    xargs -n 1 install_name_tool -change lib$${lib}.dylib \
-	    "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" ; \
-	    install_name_tool -id "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" \
+	    "@PREFIX@/Library/Frameworks/R.framework/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" ; \
+	    install_name_tool -id "@PREFIX@/Library/Frameworks/R.framework/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" \
 	    "$(Rexeclibdir)/lib$${lib}.dylib"; \
 	    if [ "$(Rexeclibdir)" != "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib" ]; then \
-	      $(top_srcdir)/tools/updatefat "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" "$(Rexeclibdir)/lib$${lib}.dylib"; \
-	      install_name_tool -id "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" \
+	      $(top_srcdir)/tools/updatefat "@PREFIX@/Library/Frameworks/R.framework/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" "$(Rexeclibdir)/lib$${lib}.dylib"; \
+	      install_name_tool -id "@PREFIX@/Library/Frameworks/R.framework//Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" \
 	      "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib"; \
 	    fi; \
 	    for rexe in `ls "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)"/Resources/bin/exec/*/R "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/bin/exec/R" 2>/dev/null`; do \
 	     install_name_tool -change lib$${lib}.dylib \
-	     "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" "$$rexe" ; \
+	     "@PREFIX@/Library/Frameworks/R.framework/Versions/$(FW_VERSION)/Resources/lib/lib$${lib}.dylib" "$$rexe" ; \
 	    done; \
            fi; \
           done)
@@ -66,7 +66,7 @@
 	  chmod a+r $(R_FRAMEWORK_DIR)/Versions/Current/PrivateHeaders/config.h; \
 	  find $(R_FRAMEWORK_DIR)/Versions/Current/PrivateHeaders -name .svn | xargs rm -rf)
 	@(install_name_tool -change libR.dylib \
-	    "$(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/libR.dylib" \
+	    "@PREFIX@/Library/Frameworks/R.framework/Versions/$(FW_VERSION)/Resources/lib/libR.dylib" \
 	    $(Rexecbindir2)/R)
 	@(if [ -n "${R_ARCH}" ]; then \
 	  rm -rf $(R_FRAMEWORK_DIR)/Versions/Current/PrivateHeaders${R_ARCH} && \
diff -ruN R-2.13.2-orig/configure R-2.13.2/configure
--- R-2.13.2-orig/configure	2011-09-22 18:06:01.000000000 -0400
+++ R-2.13.2/configure	2014-09-22 03:37:04.000000000 -0400
@@ -3779,7 +3779,7 @@
 
 
 if test "${want_R_shlib}" = yes; then
-  LIBR="-L\$(R_HOME)/lib\$(R_ARCH) -lR"
+  LIBR="\$(R_HOME)/lib\$(R_ARCH)/libR\$(DYLIB_EXT)"
 else
   LIBR=
 fi
@@ -25529,7 +25529,7 @@
 main_ld="${CC}"
 shlib_ld="${CC}"
 shlib_cxxld="${CXX}"
-SHLIB_EXT=".so"
+SHLIB_EXT=".dylib"
 SHLIB_LIBADD=
 use_exportfiles=no
 
@@ -26055,7 +26055,8 @@
     DYLIB_EXT=".dylib"
     dylib_ldflags="${darwin_dylib_ldflags}"
     MAJR_VERSION=`echo "${PACKAGE_VERSION}" | sed  -e "s/[\.][1-9]$/.0/"`
-    LIBR_LDFLAGS="-install_name libR.dylib -compatibility_version ${MAJR_VERSION}  -current_version ${PACKAGE_VERSION}  -headerpad_max_install_names"
+    # LIBR_LDFLAGS="-install_name libR.dylib -compatibility_version ${MAJR_VERSION}  -current_version ${PACKAGE_VERSION}  -headerpad_max_install_names"
+    LIBR_LDFLAGS="-dynamiclib -single_module -install_name ${prefix}/R.framework/Versions/${PACKAGE_VERSION}/Resources/lib/libR.dylib -compatibility_version ${MAJR_VERSION}  -current_version ${PACKAGE_VERSION}  -headerpad_max_install_names"
     RLAPACK_LDFLAGS="-install_name libRlapack.dylib -compatibility_version ${MAJR_VERSION} -current_version ${PACKAGE_VERSION}  -headerpad_max_install_names"
     ## don't use version in libRblas so we can replace it with any BLAS implementation
     RBLAS_LDFLAGS="-install_name libRblas.dylib -headerpad_max_install_names"
@@ -29354,7 +29355,7 @@
 
 if test "${use_blas_shlib}" = yes; then
   ## set BLAS_LIBS to point at local version
-  BLAS_LIBS="-L\$(R_HOME)/lib\$(R_ARCH) -lRblas"
+  BLAS_LIBS="\$(R_HOME)/lib\$(R_ARCH)/libRblas\$(DYLIB_EXT)"
 fi
 
  if test "x${use_veclib_g95fix}" = xyes; then
@@ -29526,7 +29527,7 @@
 
 fi
 if test "${acx_lapack_ok}" != "yes"; then
-  LAPACK_LIBS="-L\$(R_HOME)/lib\$(R_ARCH) -lRlapack"
+  LAPACK_LIBS="\$(R_HOME)/lib\$(R_ARCH)/libRlapack\$(DYLIB_EXT)"
 fi
 
  if test "${acx_lapack_ok}" = "yes"; then
@@ -31096,15 +31097,15 @@
 use_X11="no"
 if test -z "${no_x}"; then
   ## now we look for Xt and its header: it seems Intrinsic.h is key.
-  r_save_CFLAGS="${CFLAGS}"
-  CFLAGS="${CFLAGS} ${X_CFLAGS}"
+  r_save_CPPFLAGS="${CPPFLAGS}"
+  CPPFLAGS="${CPPFLAGS} ${X_CFLAGS}"
   ac_fn_c_check_header_mongrel "$LINENO" "X11/Intrinsic.h" "ac_cv_header_X11_Intrinsic_h" "$ac_includes_default"
 if test "x$ac_cv_header_X11_Intrinsic_h" = x""yes; then :
 
 fi
 
 
-  CFLAGS="${r_save_CFLAGS}"
+  CPPFLAGS="${r_save_CPPFLAGS}"
   if test "${ac_cv_header_X11_Intrinsic_h}" = yes ; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking for XtToolkitInitialize in -lXt" >&5
 $as_echo_n "checking for XtToolkitInitialize in -lXt... " >&6; }
@@ -31185,8 +31186,8 @@
 ## check if X11 typedefs KeySym
 
 if test "${use_X11}" = yes; then
-  r_save_CFLAGS="${CFLAGS}"
-  CFLAGS="${CFLAGS} ${X_CFLAGS}"
+  r_save_CPPFLAGS="${CPPFLAGS}"
+  CPPFLAGS="${CPPFLAGS} ${X_CFLAGS}"
   ac_fn_c_check_type "$LINENO" "KeySym" "ac_cv_type_KeySym" "#include <X11/X.h>
 "
 if test "x$ac_cv_type_KeySym" = x""yes; then :
@@ -31195,7 +31196,7 @@
   r_cv_type_keysym=no
 fi
 
-  CFLAGS="${r_save_CFLAGS}"
+  CPPFLAGS="${r_save_CPPFLAGS}"
   if test "${r_cv_type_keysym}" = yes; then
 
 $as_echo "#define HAVE_KEYSYM 1" >>confdefs.h
@@ -31204,15 +31205,15 @@
 fi
 ## check if Xmu is supported
 if test "${use_X11}" = yes; then
-  r_save_CFLAGS="${CFLAGS}"
-  CFLAGS="${CFLAGS} ${X_CFLAGS}"
+  r_save_CPPFLAGS="${CPPFLAGS}"
+  CPPFLAGS="${CPPFLAGS} ${X_CFLAGS}"
   ac_fn_c_check_header_mongrel "$LINENO" "X11/Xmu/Atoms.h" "ac_cv_header_X11_Xmu_Atoms_h" "$ac_includes_default"
 if test "x$ac_cv_header_X11_Xmu_Atoms_h" = x""yes; then :
 
 fi
 
 
-  CFLAGS="${r_save_CFLAGS}"
+  CPPFLAGS="${r_save_CPPFLAGS}"
   if test "${ac_cv_header_X11_Xmu_Atoms_h}" = yes ; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking for XmuInternAtom in -lXmu" >&5
 $as_echo_n "checking for XmuInternAtom in -lXmu... " >&6; }
diff -ruN R-2.13.2-orig/src/main/Makefile.in R-2.13.2/src/main/Makefile.in
--- R-2.13.2-orig/src/main/Makefile.in	2011-04-23 18:05:04.000000000 -0400
+++ R-2.13.2/src/main/Makefile.in	2014-05-04 02:35:30.000000000 -0400
@@ -103,7 +103,7 @@
 R_bin_OBJECTS = Rmain.o
 @WANT_R_SHLIB_FALSE@R_bin_LDADD = libR.a $(EXTRA_LIBS)
 ## Linked against -lRblas becasue -lR is and otherwise ld complains.
-@WANT_R_SHLIB_TRUE@R_bin_LDADD = -L../../lib@R_ARCH@ -lR @BLAS_SHLIB_TRUE@-lRblas
+@WANT_R_SHLIB_TRUE@R_bin_LDADD = ../../lib@R_ARCH@/libR$(DYLIB_EXT) @BLAS_SHLIB_TRUE@../../lib@R_ARCH@/libRblas$(DYLIB_EXT)
 R_bin_DEPENDENCIES =@WANT_R_SHLIB_FALSE@ libR.a @USE_EXPORTFILES_TRUE@ $(top_builddir)/etc/R.exp
 
 libR_la = libR$(DYLIB_EXT)
diff -ruN R-2.13.2-orig/src/main/util.c R-2.13.2/src/main/util.c
--- R-2.13.2-orig/src/main/util.c	2011-09-03 18:05:04.000000000 -0400
+++ R-2.13.2/src/main/util.c	2014-04-30 14:07:16.000000000 -0400
@@ -1255,24 +1255,12 @@
     return  ((int)mbstowcs(NULL, str, 0) >= 0);
 }
 
-#include "pcre.h"
-/* This changed at 8.13: we don't allow < 8.0 */
-#if  PCRE_MAJOR > 8 || PCRE_MINOR >= 13
-extern int _pcre_valid_utf8(const char *string, int length, int *erroroffset);
 
+#include "valid_utf8.h"
 Rboolean utf8Valid(const char *str)
 {
-    int errp;
-    return  (_pcre_valid_utf8(str, (int) strlen(str), &errp) == 0);
+    return valid_utf8(str, strlen(str)) == 0;
 }
-#else
-extern int _pcre_valid_utf8(const char *string, int length);
-
-Rboolean utf8Valid(const char *str)
-{
-    return  (_pcre_valid_utf8(str, strlen(str)) < 0);
-}
-#endif
 
 
 /* MBCS-aware versions of common comparisons.  Only used for ASCII c */
diff -ruN R-2.13.2-orig/src/main/valid_utf8.h R-2.13.2/src/main/valid_utf8.h
--- R-2.13.2-orig/src/main/valid_utf8.h	1969-12-31 19:00:00.000000000 -0500
+++ R-2.13.2/src/main/valid_utf8.h	2012-03-01 18:02:25.000000000 -0500
@@ -0,0 +1,154 @@
+/* Private version of _pcre_valid_utf */
+
+/*************************************************
+*      Perl-Compatible Regular Expressions       *
+*************************************************/
+
+/* PCRE is a library of functions to support regular expressions whose syntax
+and semantics are as close as possible to those of the Perl 5 language.
+
+                       Written by Philip Hazel
+           Copyright (c) 1997-2012 University of Cambridge
+
+-----------------------------------------------------------------------------
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions are met:
+
+    * Redistributions of source code must retain the above copyright notice,
+      this list of conditions and the following disclaimer.
+
+    * Redistributions in binary form must reproduce the above copyright
+      notice, this list of conditions and the following disclaimer in the
+      documentation and/or other materials provided with the distribution.
+
+    * Neither the name of the University of Cambridge nor the names of its
+      contributors may be used to endorse or promote products derived from
+      this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGE.
+-----------------------------------------------------------------------------
+*/
+
+/* This module contains an internal function for validating UTF-8 character
+strings. */
+
+
+/*************************************************
+*         Validate a UTF-8 string                *
+*************************************************/
+
+/* This function is called (optionally) at the start of compile or match, to
+check that a supposed UTF-8 string is actually valid. The early check means
+that subsequent code can assume it is dealing with a valid string. The check
+can be turned off for maximum performance, but the consequences of supplying an
+invalid string are then undefined.
+
+Originally, this function checked according to RFC 2279, allowing for values in
+the range 0 to 0x7fffffff, up to 6 bytes long, but ensuring that they were in
+the canonical format. Once somebody had pointed out RFC 3629 to me (it
+obsoletes 2279), additional restrictions were applied. The values are now
+limited to be between 0 and 0x0010ffff, no more than 4 bytes long, and the
+subrange 0xd000 to 0xdfff is excluded. However, the format of 5-byte and 6-byte
+characters is still checked.
+
+*/
+
+static int
+valid_utf8(const char *string, int length)
+{
+    const char *p;
+
+    for (p = string; length-- > 0; p++) {
+	int ab, c, d;
+	c = (unsigned char)*p;
+	if (c < 128) continue;                /* ASCII character */
+	if (c < 0xc0) return 1;               /* Isolated 10xx xxxx byte */
+	if (c >= 0xfe) return 1;             /* Invalid 0xfe or 0xff bytes */
+
+	ab = utf8_table4[c & 0x3f];     /* Number of additional bytes */
+	if (length < ab) return 1;
+	length -= ab;                         /* Length remaining */
+
+	/* Check top bits in the second byte */
+
+	if (((d = *(++p)) & 0xc0) != 0x80) return 1;
+
+	/* For each length, check that the remaining bytes start with
+	   the 0x80 bit set and not the 0x40 bit. Then check for an
+	   overlong sequence, and for the excluded range 0xd800 to
+	   0xdfff. */
+
+	switch (ab)
+	{
+	    /* 2-byte character. No further bytes to check for
+	       0x80. Check first byte for for xx00 000x (overlong
+	       sequence). */
+	case 1: 
+	    if ((c & 0x3e) == 0) return 1;
+	    break;
+
+	    /* 3-byte character. Check third byte for 0x80. Then check
+	       first 2 bytes for 1110 0000, xx0x xxxx (overlong
+	       sequence) or 1110 1101, 1010 xxxx (0xd800 - 0xdfff) */
+	case 2:
+	    if ((*(++p) & 0xc0) != 0x80) return 1;    /* Third byte */
+	    if (c == 0xe0 && (d & 0x20) == 0) return 1;
+	    if (c == 0xed && d >= 0xa0) return 1;
+	    break;
+
+	    /* 4-byte character. Check 3rd and 4th bytes for
+	       0x80. Then check first 2 bytes for for 1111 0000, xx00
+	       xxxx (overlong sequence), then check for a character
+	       greater than 0x0010ffff (f4 8f bf bf) */
+	case 3:
+	    if ((*(++p) & 0xc0) != 0x80) return 1;     /* Third byte */
+	    if ((*(++p) & 0xc0) != 0x80) return 1;     /* Fourth byte */
+	    if (c == 0xf0 && (d & 0x30) == 0) return 1;
+	    if (c > 0xf4 || (c == 0xf4 && d > 0x8f)) return 1;
+	    break;
+
+	    /* 5-byte and 6-byte characters are not allowed by RFC
+	       3629, and will be rejected by the length test
+	       below. However, we do the appropriate tests here so
+	       that overlong sequences get diagnosed, and also in case
+	       there is ever an option for handling these larger code
+	       points. */
+
+	    /* 5-byte character. Check 3rd, 4th, and 5th bytes for
+	       0x80. Then check for 1111 1000, xx00 0xxx */
+	case 4:
+	    if ((*(++p) & 0xc0) != 0x80) return 1;     /* Third byte */
+	    if ((*(++p) & 0xc0) != 0x80) return 1;     /* Fourth byte */
+	    if ((*(++p) & 0xc0) != 0x80) return 1;     /* Fifth byte */
+	    if (c == 0xf8 && (d & 0x38) == 0) return 1;
+	    break;
+
+	    /* 6-byte character. Check 3rd-6th bytes for 0x80. Then
+	       check for 1111 1100, xx00 00xx. */
+	case 5:
+	    if ((*(++p) & 0xc0) != 0x80) return 1;     /* Third byte */
+	    if ((*(++p) & 0xc0) != 0x80) return 1;     /* Fourth byte */
+	    if ((*(++p) & 0xc0) != 0x80) return 1;     /* Fifth byte */
+	    if ((*(++p) & 0xc0) != 0x80) return 1;     /* Sixth byte */
+	    if (c == 0xfc && (d & 0x3c) == 0) return 1;
+	    break;
+	}
+
+	/* Character is valid under RFC 2279, but 4-byte and 5-byte
+	   characters are excluded by RFC 3629. The pointer p is
+	   currently at the last byte of the character. */
+	if (ab > 3) return 1;
+    }
+
+    return 0;
+}
diff -ruN R-2.13.2-orig/src/nmath/standalone/Makefile.in R-2.13.2/src/nmath/standalone/Makefile.in
--- R-2.13.2-orig/src/nmath/standalone/Makefile.in	2010-03-17 10:43:22.000000000 -0400
+++ R-2.13.2/src/nmath/standalone/Makefile.in	2014-05-04 02:35:44.000000000 -0400
@@ -120,12 +120,12 @@
 
 test: $(srcdir)/test.c
 	$(CC) -o $@ $(ALL_CPPFLAGS) $(ALL_CFLAGS) $(srcdir)/test.c \
-	  -L. -lRmath $(LIBM)
+	  libRmath$(DYLIB_EXT) $(LIBM)
 
 install: installdirs install-header @WANT_R_FRAMEWORK_FALSE@ install-pc
 @WANT_R_FRAMEWORK_FALSE@	@!(test -f $(libRmath_la)) || $(SHELL) $(top_srcdir)/tools/copy-if-change $(libRmath_la) $(DESTDIR)$(libdir)/$(libRmath_la)
 @WANT_R_FRAMEWORK_FALSE@	@!(test -f libRmath.a) || $(SHELL) $(top_srcdir)/tools/copy-if-change libRmath.a $(DESTDIR)$(libdir)/libRmath.a
-@WANT_R_FRAMEWORK_TRUE@	@!(test -f $(libRmath_la)) || cp $(libRmath_la) $(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/$(libRmath_la) && install_name_tool -id $(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/$(libRmath_la) $(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/$(libRmath_la)
+@WANT_R_FRAMEWORK_TRUE@	@!(test -f $(libRmath_la)) || cp $(libRmath_la) $(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/$(libRmath_la) && install_name_tool -id @PREFIX@/Library/Frameworks/R.framework/Versions/$(FW_VERSION)/Resources/lib/$(libRmath_la) $(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/$(libRmath_la)
 @WANT_R_FRAMEWORK_TRUE@	@!(test -f libRmath.a) || $(SHELL) $(top_srcdir)/tools/copy-if-change libRmath.a $(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib/libRmath.a
 
 install-strip: installdirs install-header install-pc
@@ -149,12 +149,12 @@
 @WANT_R_FRAMEWORK_TRUE@	@$(MKINSTALLDIRS) $(R_FRAMEWORK_DIR)/Versions/$(FW_VERSION)/Resources/lib
 
 ## ?= is not portable make syntax, so we conditionalize this.
-@WANT_R_FRAMEWORK_TRUE@RMATH_FRAMEWORK_DIR ?= /Library/Frameworks/Rmath.framework
+@WANT_R_FRAMEWORK_TRUE@RMATH_FRAMEWORK_DIR ?= $(DESTDIR)/Library/Frameworks/Rmath.framework
 install-Rmath-framework: $(libRmath_la)
 	@(cd ../../include; $(MAKE) Rmath.h)
 	@$(MKINSTALLDIRS) $(RMATH_FRAMEWORK_DIR)/Versions/$(VERSION)/Headers
 	@cp $(libRmath_la) $(RMATH_FRAMEWORK_DIR)/Versions/$(VERSION)/Rmath
-	@install_name_tool -id $(RMATH_FRAMEWORK_DIR)/Versions/$(VERSION)/Rmath $(RMATH_FRAMEWORK_DIR)/Versions/$(VERSION)/Rmath
+	@install_name_tool -id @PREFIX@/Library/Frameworks/Rmath.framework/Versions/$(VERSION)/Rmath $(RMATH_FRAMEWORK_DIR)/Versions/$(VERSION)/Rmath
 	@$(SHELL) $(top_srcdir)/tools/copy-if-change ../../include/Rmath.h $(RMATH_FRAMEWORK_DIR)/Versions/$(VERSION)/Headers/Rmath.h
 	@rm -f $(RMATH_FRAMEWORK_DIR)/Versions/Current $(RMATH_FRAMEWORK_DIR)/Headers $(RMATH_FRAMEWORK_DIR)/Rmath
 	@ln -sf $(VERSION) $(RMATH_FRAMEWORK_DIR)/Versions/Current
diff -ruN R-2.12.0-orig/src/scripts/R.sh.in R-2.12.0/src/scripts/R.sh.in
--- R-2.12.0-orig/src/scripts/R.sh.in	2010-10-30 15:40:11.000000000 +0900
+++ R-2.12.0/src/scripts/R.sh.in	2010-10-30 15:57:53.000000000 +0900
@@ -1,6 +1,8 @@
 #!@R_SHELL@
 # Shell wrapper for R executable.
 
+# export PATH=@PREFIX@/var/lib/fink/path-prefix-10.6:$PATH
+
 R_HOME_DIR=
 if test "${R_HOME_DIR}" = "@prefix@/@LIBnn@/R"; then
    case "@R_OS@" in
