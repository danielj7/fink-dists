Package: libkf5plotting5-shlibs
Version: 5.8.0
Revision: 1
Distribution: 10.9, 10.10
Description: KF5 - Data plotting library
License: GPL
Maintainer: Hanspeter Niederstrasser <nieder@users.sourceforge.net>
Depends: <<
	qt5-mac-qtcore-shlibs,
	qt5-mac-qtgui-shlibs,
	qt5-mac-qtwidgets-shlibs
<<
BuildDepends: <<
	cmake,
	extra-cmake-modules (>= 1.8.0),
	fink (>= 0.34),
	fink-buildenv-modules (>= 0.1.2),
	fink-package-precedence,
	qt5-mac-qtbase
<<
Source: mirror:kde:stable/frameworks/5.8/kplotting-%v.tar.xz
Source-MD5: b8a053219aa6fd8273212b7faa4c39a0
SetCXXFLAGS: -MD
GCC: 4.0
CompileScript: <<
	#!/bin/sh -ev
	. %p/sbin/fink-buildenv-kf5.sh

	mkdir build
	pushd build
		cmake \
			$FINK_CMAKE_ARGS \
			$KF5_CMAKE_ARGS \
		..
		make
	popd
	fink-package-precedence --depfile-ext='\.d' --prohibit-bdep=libkf5plotting5-dev .
<<
InstallScript: <<
	#!/bin/sh -ev
	pushd build
		make install/fast DESTDIR=%d
	popd
<<
Shlibs: <<
	%p/lib/qt5-mac/lib/libKF5Plotting.5.dylib 5.0.0 %n (>= 5.3.0-1)
<<
SplitOff: <<
	Package: libkf5plotting5-dev
	Description: KF5 - Data plotting library
	Depends: <<
		%N (= %v-%r)
	<<
	BuildDependsOnly: true
	Files: <<
		lib/qt5-mac/include
		lib/qt5-mac/lib/cmake
		lib/qt5-mac/lib/libKF5Plotting.dylib
		lib/qt5-mac/share/qt5/mkspecs
	<<
	DocFiles: COPYING* README.md
<<
DocFiles: COPYING* README.md
Homepage: http://www.kde.org
DescDetail: <<
KPlotWidget is a QWidget-derived class that provides a virtual base class 
for easy data-plotting. The idea behind KPlotWidget is that you only have 
to specify information in "data units"; i.e., the natural units of the 
data being plotted. KPlotWidget automatically converts everything to 
screen pixel units.

KPlotWidget draws X and Y axes with tick marks and tick labels. It 
automatically determines how many tick marks to use and where they should 
be, based on the data limits specified for the plot. You change the limits 
by calling setLimits(double x1, double x2, double y1, double y2).

Data to be plotted are stored using the KPlotObject class. KPlotObject 
consists of a QList of QPointF's, each specifying the X,Y coordinates of a 
data point. KPlotObject also specifies the "type" of data to be plotted 
(POINTS or CURVE or POLYGON or LABEL).
<<
