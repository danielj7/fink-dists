Package: wml
Version: 2.0.9
Revision: 114
Distribution: 10.5
Source: http://thewml.org/distrib/wml-%v.tar.gz
Source-MD5: a7c9da3b58f7e40706e3c29c37b4822b
Depends: libpng3-shlibs, perl588-core, gd-pm588
BuildDepends: libpng3, fink (>= 0.26.0-1)
License: GPL
NoSetLDFLAGS: true
NoSetCPPFLAGS: true
SetCFLAGS: -fno-common
SetLIBRARY_PATH: %p/lib
PatchFile: %n.patch
PatchFile-MD5: 7dc1859e73a101e0f093ed241d076b61
PatchScript: sed 's|@PREFIX@|%p|g' <%{PatchFile} | patch -p1
ConfigureParams: --without-modules
CompileScript: export CPATH=%p/include; ./configure %c; make
InstallScript: make install prefix=%i mandir=%i/share/man
DocFiles: ANNOUNCE BUGREPORT COPYING COPYRIGHT COPYRIGHT.OTHER CREDITS ChangeLog NEWS README README.mp4h SUPPORT VERSION
Description: Offline HTML generation toolkit
DescDetail: <<
WML consists of a control frontend driving up to nine backends in a
sequential pass-oriented filtering scheme. Each backend provides one
particular core language. While not trivial and idiot proof WML provides
most of the core features real hackers always wanted for HTML generation.
<<
DescPort:<<
# Hmmm... using the CFLAGS for including the libraries but not setting LDFLAGS
# might be a bit of an evil hack but is required to trick wml's configure script
# without any more patching...
# 
# (if both LDFLAGS and CFLAGS are set, configure breaks. but if LDFLAGS is not 
#   set to -L/sw/lib configure can't find -lpng, hence set CFLAGS to that value)
The vers in 10.2-gcc3.3 was no longer finding -lpng.
Added LIBRARY_PATH and CPATH to fix. (JFm)  
 Be sure to have moved out all the old perl stuff out of the way. A typical 
 build failure would be an undefined symbol _perl_get_sv in p3_eperl
 
<<
Maintainer: Mathias Meyer <mathmeye@users.sourceforge.net>
Homepage: http://thewml.org/
