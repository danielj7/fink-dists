diff -uNr ../kdepim-3.1.4/calendarsystem/Makefile.am ./calendarsystem/Makefile.am
--- ../kdepim-3.1.4/calendarsystem/Makefile.am	Mon Oct 14 21:16:21 2002
+++ ./calendarsystem/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -1,7 +1,7 @@
 INCLUDES = $(all_includes)
 
 lib_LTLIBRARIES = libkcalsystem.la
-libkcalsystem_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 0:1:0 -module
+libkcalsystem_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 0:1:0
 libkcalsystem_la_LIBADD  = $(LIB_QT) $(LIB_KDEUI)
 libkcalsystem_la_SOURCES = kcalendarsystem.cpp kcalendarsystemhijri.cpp hconv.c
 
diff -uNr ../kdepim-3.1.4/kaddressbook/Makefile.am ./kaddressbook/Makefile.am
--- ../kdepim-3.1.4/kaddressbook/Makefile.am	Mon Oct 21 07:16:50 2002
+++ ./kaddressbook/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -10,13 +10,28 @@
 bin_PROGRAMS = kaddressbook
 
 kaddressbook_LDFLAGS = $(all_libraries) $(KDE_RPATH)
-kaddressbook_LDADD   = libkaddressbookpart.la
+kaddressbook_LDADD   = libkaddressbookpart_shared.la
 kaddressbook_SOURCES = main.cpp
 
 kde_module_LTLIBRARIES = libkaddressbookpart.la
+lib_LTLIBRARIES = kaddressbook.la libkaddressbookpart_shared.la
 
-libkaddressbookpart_la_LDFLAGS = -module $(KDE_PLUGIN) $(all_libraries)
-libkaddressbookpart_la_LIBADD  = $(top_builddir)/libkdepim/libkdepim.la \
+kaddressbook_la_LDFLAGS = $(all_libraries) $(KDE_RPATH) -module -avoid-version
+kaddressbook_la_LIBADD  = libkaddressbookpart_shared.la
+kaddressbook_la_SOURCES = kaddressbook_la_main.cpp
+
+kaddressbook_la_main.cpp: main.cpp
+	cat main.cpp > kaddressbook_la_main.cpp
+
+libkaddressbookpart_la_LDFLAGS = -module $(KDE_PLUGIN) $(all_libraries) -avoid-version
+libkaddressbookpart_la_LIBADD  = libkaddressbookpart_shared.la
+libkaddressbookpart_la_SOURCES = libkaddressbookpart_la_dummy.cpp
+
+libkaddressbookpart_la_dummy.cpp:
+	echo > libkaddressbookpart_la_dummy.cpp
+
+libkaddressbookpart_shared_la_LDFLAGS = $(KDE_RPATH) $(all_libraries) -avoid-version -no-undefined
+libkaddressbookpart_shared_la_LIBADD  = $(top_builddir)/libkdepim/libkdepim.la \
 	./details/libdetails.la \
 	./features/libfeatures.la \
 	./printing/libprinter.la \
@@ -24,7 +39,7 @@
 	$(LIB_KPARTS) $(LIB_KFILE) \
 	-lkabc -lkdeprint
 
-libkaddressbookpart_la_SOURCES = \
+libkaddressbookpart_shared_la_SOURCES = \
  actionmanager.cpp addhostdialog.cpp addresseditwidget.cpp addresseeconfig.cpp \
  addresseeeditordialog.cpp addresseeeditorwidget.cpp addresseeutil.cpp \
  addviewdialog.cpp configureviewdialog.cpp configureviewfilterpage.cpp \
@@ -37,7 +52,7 @@
  phoneeditwidget.cpp prefsdialog.cpp selectfieldswidget.cpp \
  undo.cpp undocmds.cpp viewmanager.cpp viewwrapper.cpp
 
-kaddressbook_METASOURCES = AUTO
+METASOURCES = AUTO
 
 noinst_HEADERS = \
  actionmanager.h addhostdialog.h addresseditwidget.h addresseeconfig.h \
diff -uNr ../kdepim-3.1.4/kalarmd/Makefile.am ./kalarmd/Makefile.am
--- ../kdepim-3.1.4/kalarmd/Makefile.am	Sat Nov  9 07:56:54 2002
+++ ./kalarmd/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -2,8 +2,8 @@
 
 lib_LTLIBRARIES = libkalarmd.la
 
-libkalarmd_la_LDFLAGS = $(all_libraries) $(KDE_RPATH)
-libkalarmd_la_LIBADD  = $(LIB_KDECORE)
+libkalarmd_la_LDFLAGS = $(all_libraries) $(KDE_RPATH) -no-undefined
+libkalarmd_la_LIBADD  = $(LIB_KDECORE) $(LIB_QT) -lDCOP
 libkalarmd_la_SOURCES =  alarmdaemoniface.stub alarmguiiface.stub dummy.cpp
 
 DISTCLEANFILES = dummy.cpp
diff -uNr ../kdepim-3.1.4/knotes/Makefile.am ./knotes/Makefile.am
--- ../kdepim-3.1.4/knotes/Makefile.am	Mon Oct 14 21:16:21 2002
+++ ./knotes/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -9,7 +9,7 @@
 include_HEADERS = KNotesIface.h
 noinst_HEADERS  = knotesapp.h knote.h knoteedit.h knoteconfigdlg.h knotebutton.h
 knotes_SOURCES  = knotesapp.cpp knote.cpp knoteedit.cpp knoteconfigdlg.cpp main.cpp KNotesIface.skel
-knotes_LDADD    = $(LIB_KIO) -lkdeprint
+knotes_LDADD    = $(LIB_KIO) $(LIB_KDEPRINT)
 knotes_LDFLAGS  = $(all_libraries) $(KDE_RPATH)
 
 METASOURCES     = AUTO
diff -uNr ../kdepim-3.1.4/korganizer/Makefile.am ./korganizer/Makefile.am
--- ../kdepim-3.1.4/korganizer/Makefile.am	Mon Oct 14 21:16:21 2002
+++ ./korganizer/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -93,7 +93,7 @@
 
 kde_bin_SCRIPTS = ical2vcal korganizerIn
 
-kdelnkdir = $(kde_appsdir)/Applications
+kdelnkdir = $(kde_appsdir)/Utilities
 kdelnk_DATA = korganizer.desktop
 
 rcdir = $(kde_datadir)/korganizer
diff -uNr ../kdepim-3.1.4/korganizer/knewstuff/Makefile.am ./korganizer/knewstuff/Makefile.am
--- ../kdepim-3.1.4/korganizer/knewstuff/Makefile.am	Wed Jun 19 19:07:42 2002
+++ ./korganizer/knewstuff/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -4,8 +4,8 @@
 
 lib_LTLIBRARIES = libknewstuff.la
 
-libknewstuff_la_LDFLAGS = $(all_libraries) $(KDE_RPATH) -version-info 1:0
-libknewstuff_la_LIBADD  = $(LIB_KIO)
+libknewstuff_la_LDFLAGS = $(all_libraries) $(KDE_RPATH) -version-info 1:0 -no-undefined
+libknewstuff_la_LIBADD  = $(LIB_KIO) $(LIB_KDECORE) $(LIB_KDEUI) $(LIB_QT)
 libknewstuff_la_SOURCES = engine.cpp entry.cpp downloaddialog.cpp \
   uploaddialog.cpp providerdialog.cpp provider.cpp knewstuff.cpp
 
diff -uNr ../kdepim-3.1.4/korganizer/plugins/holidays/Makefile.am ./korganizer/plugins/holidays/Makefile.am
--- ../kdepim-3.1.4/korganizer/plugins/holidays/Makefile.am	Wed Nov 20 18:55:05 2002
+++ ./korganizer/plugins/holidays/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -18,7 +18,8 @@
 servicedir  = $(kde_servicesdir)/korganizer
 service_DATA = holidays.desktop
 
-parser:
-	cd $(srcdir) && yacc -p kcal -d -o parseholiday.c parseholiday.y
+parseholiday.c: parseholiday.y
 	cd $(srcdir) && yacc -p kcal -d -o parseholiday.c parseholiday.y
+
+scanholiday.c: scanholiday.lex
 	cd $(srcdir) && lex -Pkcal -B -oscanholiday.c scanholiday.lex
diff -uNr ../kdepim-3.1.4/korganizer/plugins/holidays/parseholiday.y ./korganizer/plugins/holidays/parseholiday.y
--- ../kdepim-3.1.4/korganizer/plugins/holidays/parseholiday.y	Wed Jan  9 08:57:53 2002
+++ ./korganizer/plugins/holidays/parseholiday.y	Thu Sep 18 09:06:30 2003
@@ -68,7 +68,7 @@
 /*** Variables and structures ***/
 static int	 m, d, y;
 int              kcallineno;	       	/* current line # being parsed */
-FILE            *kcalin;                  /* file currently being processed */
+extern FILE     *kcalin;                  /* file currently being processed */
 int	         yacc_small;		/* small string or on its own line? */
 int	         yacc_stringcolor;	/* color of holiday name text, 1..8 */
 char	        *yacc_string;		/* holiday name text */
diff -uNr ../kdepim-3.1.4/korganizer/plugins/holidays/scanholiday.lex ./korganizer/plugins/holidays/scanholiday.lex
--- ../kdepim-3.1.4/korganizer/plugins/holidays/scanholiday.lex	Sun Aug 26 19:30:04 2001
+++ ./korganizer/plugins/holidays/scanholiday.lex	Thu Sep 18 09:06:30 2003
@@ -1,4 +1,5 @@
 %{
+#define kcalyacclval kcallval
 #include <string.h>
 #include "parseholiday.h"
 %}
diff -uNr ../kdepim-3.1.4/kpilot/conduits/JPilotPluginProxy/JPilotAPI/Makefile.am ./kpilot/conduits/JPilotPluginProxy/JPilotAPI/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/JPilotPluginProxy/JPilotAPI/Makefile.am	Wed Jul 30 06:26:51 2003
+++ ./kpilot/conduits/JPilotPluginProxy/JPilotAPI/Makefile.am	Thu Sep 18 09:07:14 2003
@@ -10,6 +10,6 @@
 kde_module_LTLIBRARIES = libJPilotAPI.la 
 
 libJPilotAPI_la_SOURCES = libplugin.c APIEmulation.c
-libJPilotAPI_la_LDFLAGS = $(KDE_RPATH) -Wl,-export-dynamic
+libJPilotAPI_la_LDFLAGS = $(KDE_RPATH) -Wl,-export-dynamic -no-undefined
 libJPilotAPI_la_LIBADD = -lc -lgtk -lgdk 
 
diff -uNr ../kdepim-3.1.4/kpilot/conduits/JPilotPluginProxy/Makefile.am ./kpilot/conduits/JPilotPluginProxy/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/JPilotPluginProxy/Makefile.am	Sun Mar 30 09:38:09 2003
+++ ./kpilot/conduits/JPilotPluginProxy/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -15,8 +15,7 @@
 
 kde_module_LTLIBRARIES = libJPilotProxy.la
 
-libJPilotProxy_la_SOURCES = ConduitDialog.ui JPilotProxy-conduit.cc \
-	JPilotProxy-factory.cc JPilotProxy-setup.cc jplugin.cpp
-libJPilotProxy_la_LDFLAGS = $(KDE_RPATH) $(KDE_PLUGIN) $(all_libraries) -Wl,-export-dynamic
-libJPilotProxy_la_LIBADD = ../../lib/libkpilot.la -lgtk -lgdbm -lgdk
+libJPilotProxy_la_SOURCES = ConduitDialog.ui JPilotProxy-conduit.cc JPilotProxy-factory.cc JPilotProxy-setup.cc jplugin.cpp
+libJPilotProxy_la_LDFLAGS = $(KDE_PLUGIN) -module -Wl,-export-dynamic
+libJPilotProxy_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la -lgtk -lgdbm -lgdk
 
diff -uNr ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/Bonsai/Makefile.am ./kpilot/conduits/ProjectManagerConduits/Bonsai/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/Bonsai/Makefile.am	Thu Apr 18 17:07:26 2002
+++ ./kpilot/conduits/ProjectManagerConduits/Bonsai/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -34,5 +34,5 @@
 #   ListMaker-conduit.cc  pilotListMakerEntry.cc ListMaker-factory.cc 
 #   ListMaker-setup.cc GenericMultiDB-conduitDialog.cc GenericDatabaseActionDialog.cc
 #libListMakerConduit_la_LDFLAGS = $(KDE_RPATH) -L../../lib -L../../../libkcal
-#libListMakerConduit_la_LIBADD = -lkpilot -lkcal
+#libListMakerConduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la $(top_builddir)/libkcal/libkcal.la
 
diff -uNr ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/BrainForest/Makefile.am ./kpilot/conduits/ProjectManagerConduits/BrainForest/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/BrainForest/Makefile.am	Thu Apr 18 17:07:27 2002
+++ ./kpilot/conduits/ProjectManagerConduits/BrainForest/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -34,5 +34,5 @@
 #   ListMaker-conduit.cc  pilotListMakerEntry.cc ListMaker-factory.cc 
 #   ListMaker-setup.cc GenericMultiDB-conduitDialog.cc GenericDatabaseActionDialog.cc
 #libListMakerConduit_la_LDFLAGS = $(KDE_RPATH) -L../../lib -L../../../libkcal
-#libListMakerConduit_la_LIBADD = -lkpilot -lkcal
+#libListMakerConduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la $(top_builddir)/libkcal/libkcal.la
 
diff -uNr ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/ListMaker/Makefile.am ./kpilot/conduits/ProjectManagerConduits/ListMaker/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/ListMaker/Makefile.am	Thu Apr 18 17:07:27 2002
+++ ./kpilot/conduits/ProjectManagerConduits/ListMaker/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -33,6 +33,6 @@
 libListMakerConduit_la_SOURCES = \
    ListMaker-conduit.cc  pilotListMakerEntry.cc ListMaker-factory.cc \
    ListMaker-setup.cc
-libListMakerConduit_la_LDFLAGS = $(KDE_RPATH) -L$(top_srcdir)/kpilot/lib -L$(top_srcdir)/libkcal -L$(top_srcdir)/kpilot/conduits/ProjectManagerConduits/lib
-libListMakerConduit_la_LIBADD = -lkpilot -lkcal -lProjectsConduit
+libListMakerConduit_la_LDFLAGS = $(KDE_RPATH) -L$(top_srcdir)/kpilot/lib -L$(top_srcdir)/libkcal -L$(top_srcdir)/kpilot/conduits/ProjectManagerConduits/lib -no-undefined
+libListMakerConduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la $(top_builddir)/libkcal/libkcal.la -lProjectsConduit
 
diff -uNr ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/Progect/Makefile.am ./kpilot/conduits/ProjectManagerConduits/Progect/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/Progect/Makefile.am	Thu Apr 18 17:07:27 2002
+++ ./kpilot/conduits/ProjectManagerConduits/Progect/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -34,5 +34,5 @@
 #   ListMaker-conduit.cc  pilotListMakerEntry.cc ListMaker-factory.cc 
 #   ListMaker-setup.cc GenericMultiDB-conduitDialog.cc GenericDatabaseActionDialog.cc
 #libListMakerConduit_la_LDFLAGS = $(KDE_RPATH) -L../../lib -L../../../libkcal
-#libListMakerConduit_la_LIBADD = -lkpilot -lkcal
+#libListMakerConduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la $(top_builddir)/libkcal/libkcal.la
 
diff -uNr ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/ShadowPlan/Makefile.am ./kpilot/conduits/ProjectManagerConduits/ShadowPlan/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/ShadowPlan/Makefile.am	Thu Apr 18 17:07:27 2002
+++ ./kpilot/conduits/ProjectManagerConduits/ShadowPlan/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -34,5 +34,5 @@
 #   ListMaker-conduit.cc  pilotListMakerEntry.cc ListMaker-factory.cc 
 #   ListMaker-setup.cc GenericMultiDB-conduitDialog.cc GenericDatabaseActionDialog.cc
 #libListMakerConduit_la_LDFLAGS = $(KDE_RPATH) -L../../lib -L../../../libkcal
-#libListMakerConduit_la_LIBADD = -lkpilot -lkcal
+#libListMakerConduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la $(top_builddir)/libkcal/libkcal.la
 
diff -uNr ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/lib/Makefile.am ./kpilot/conduits/ProjectManagerConduits/lib/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/ProjectManagerConduits/lib/Makefile.am	Tue Jul  9 17:47:33 2002
+++ ./kpilot/conduits/ProjectManagerConduits/lib/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -26,5 +26,5 @@
 	MultiDB-factory.cc MultiDB-setup.cc MultiDBWidgetPrivate.cpp \
 	Organizer-conduit.cc Organizer-factory.cc pilotOrganizerEntry.cc
 libProjectsConduit_la_LDFLAGS = $(KDE_RPATH) -L$(top_srcdir)/kpilot/lib -L$(top_srcdir)/libkcal --no-undefined
-libProjectsConduit_la_LIBADD = -lkpilot -lkcal 
+libProjectsConduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la $(top_builddir)/libkcal/libkcal.la 
 
diff -uNr ../kdepim-3.1.4/kpilot/conduits/abbrowserconduit/Makefile.am ./kpilot/conduits/abbrowserconduit/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/abbrowserconduit/Makefile.am	Sun Mar 30 09:38:09 2003
+++ ./kpilot/conduits/abbrowserconduit/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -25,9 +25,5 @@
 	abbrowser-setup.cc \
 	abbrowser-conduit.cc \
 	kaddressbookConduit.ui
-libaddressconduit_la_LDFLAGS = $(KDE_RPATH) $(KDE_PLUGIN) $(all_libraries)
-
-## The LIB_KDEUI is superfluous, because kabc pulls it in anyway,
-## but to be consistent (and in case kabc changes behavior) we'll
-## add it anyway.
-libaddressconduit_la_LIBADD = ../../lib/libkpilot.la -lkabc $(LIB_KDEUI)
+libaddressconduit_la_LDFLAGS = $(KDE_PLUGIN) -module $(all_libraries)
+libaddressconduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la -lkabc $(PISOCK_LIB) $(LIB_KDECORE) $(LIB_QT) $(LIB_KDEUI)
diff -uNr ../kdepim-3.1.4/kpilot/conduits/configure.in.in ./kpilot/conduits/configure.in.in
--- ../kdepim-3.1.4/kpilot/conduits/configure.in.in	Fri May  9 07:58:56 2003
+++ ./kpilot/conduits/configure.in.in	Thu Sep 18 09:06:30 2003
@@ -52,7 +52,7 @@
   fi
   if test $with_mal = FOUND ; then
     with_mal=NOTFOUND
-    for ext in la so sl a ; do
+    for ext in la so sl a dylib ; do
       AC_FIND_FILE(libmal.$ext, $kde_libraries $libdir /usr/lib$kdelibsuff /usr/local/lib$kdelibsuff $libdir/libmal /usr/lib/libmal /usr/local/lib/libmal,
         mal_libdir)
       if test -r $mal_libdir/libmal.$ext ; then
diff -uNr ../kdepim-3.1.4/kpilot/conduits/expense/Makefile.am ./kpilot/conduits/expense/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/expense/Makefile.am	Sun Mar 30 09:38:09 2003
+++ ./kpilot/conduits/expense/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -14,8 +14,8 @@
 
 libexpenseconduit_la_SOURCES = expenseConduit.ui setupDialog.cc \
 	expense.cc expense-factory.cc
-libexpenseconduit_la_LDFLAGS = $(KDE_RPATH) $(KDE_PLUGIN) $(all_libraries)
-libexpenseconduit_la_LIBADD  = ../../lib/libkpilot.la $(LIB_KIO)
+libexpenseconduit_la_LDFLAGS = $(KDE_PLUGIN) -module $(all_libraries)
+libexpenseconduit_la_LIBADD  =  $(top_builddir)/kpilot/lib/libkpilot.la $(PISOCK_LIB) $(LIB_QT) $(LIB_KDECORE) $(LIB_KDEUI) $(LIB_KIO) -lDCOP
 
 # this option you can leave out. Just, if you use "make dist", you need it
 noinst_HEADERS = expense.h setupDialog.h 
diff -uNr ../kdepim-3.1.4/kpilot/conduits/malconduit/Makefile.am ./kpilot/conduits/malconduit/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/malconduit/Makefile.am	Thu Apr  3 08:23:23 2003
+++ ./kpilot/conduits/malconduit/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -20,6 +20,6 @@
 	mal-setup.cc \
 	mal-conduit.cc \
 	mal-setup_dialog.ui
-libmalconduit_la_LDFLAGS = $(KDE_RPATH) $(KDE_PLUGIN) $(all_libraries)
-libmalconduit_la_LIBADD = ../../lib/libkpilot.la $(MAL_LIB) $(LIB_KDEUI)
+libmalconduit_la_LDFLAGS = $(KDE_PLUGIN) -module $(all_libraries)
+libmalconduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la $(MAL_LIB) $(LIB_KDEUI)
 
diff -uNr ../kdepim-3.1.4/kpilot/conduits/null/Makefile.am ./kpilot/conduits/null/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/null/Makefile.am	Sun Mar 30 09:38:09 2003
+++ ./kpilot/conduits/null/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -14,6 +14,5 @@
 
 
 libnullconduit_la_SOURCES = setup_base.ui null-conduit.cc null-factory.cc
-libnullconduit_la_LDFLAGS = $(KDE_RPATH) $(KDE_PLUGIN) $(all_libraries)
-libnullconduit_la_LIBADD = ../../lib/libkpilot.la $(LIB_KDEUI)
-
+libnullconduit_la_LDFLAGS = $(KDE_PLUGIN) -module $(all_libraries)
+libnullconduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la $(LIB_KDECORE) $(LIB_QT) $(LIB_KDEUI)
diff -uNr ../kdepim-3.1.4/kpilot/conduits/popmail/Makefile.am ./kpilot/conduits/popmail/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/popmail/Makefile.am	Sun Mar 30 09:38:09 2003
+++ ./kpilot/conduits/popmail/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -15,8 +15,8 @@
 # Which sources should be compiled for popmail_conduit
 libpopmailconduit_la_SOURCES = popmail-factory.cc setupDialog.cc \
 	passworddialog.cc popmail-conduit.cc parsedate.c
-libpopmailconduit_la_LDFLAGS = $(KDE_RPATH) $(KDE_PLUGIN) $(all_libraries)
-libpopmailconduit_la_LIBADD   = ../../lib/libkpilot.la $(LIB_KIO)
+libpopmailconduit_la_LDFLAGS = $(KDE_PLUGIN) -module $(all_libraries)
+libpopmailconduit_la_LIBADD   =  $(top_builddir)/kpilot/lib/libkpilot.la $(LIB_QT) $(LIB_KDECORE) $(LIB_KDEUI) $(PISOCK_LIB) $(LIB_KIO) -lDCOP
 
 # this option you can leave out. Just, if you use "make dist", you need it
 noinst_HEADERS = popmail-conduit.h passworddialog.h setupDialog.h
diff -uNr ../kdepim-3.1.4/kpilot/conduits/popmail/popmail-conduit.cc ./kpilot/conduits/popmail/popmail-conduit.cc
--- ../kdepim-3.1.4/kpilot/conduits/popmail/popmail-conduit.cc	Wed Mar 12 18:31:11 2003
+++ ./kpilot/conduits/popmail/popmail-conduit.cc	Thu Sep 18 09:06:30 2003
@@ -42,6 +42,7 @@
 
 
 #include <sys/types.h>
+#include <sys/utsname.h>
 #include <sys/socket.h>
 #include <sys/utsname.h>
 #include <ctype.h>
diff -uNr ../kdepim-3.1.4/kpilot/conduits/timeconduit/Makefile.am ./kpilot/conduits/timeconduit/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/timeconduit/Makefile.am	Sun Mar 30 09:38:09 2003
+++ ./kpilot/conduits/timeconduit/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -16,6 +16,5 @@
 	time-setup.cc \
 	time-conduit.cc \
 	time-setup_dialog.ui
-libtimeconduit_la_LDFLAGS = $(KDE_RPATH) $(KDE_PLUGIN) $(all_libraries)
-libtimeconduit_la_LIBADD = ../../lib/libkpilot.la $(LIB_KDEUI)
- 
+libtimeconduit_la_LDFLAGS = $(KDE_PLUGIN) -module $(all_libraries)
+libtimeconduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la $(LIB_KDECORE) $(LIB_QT) $(LIB_KDEUI)
diff -uNr ../kdepim-3.1.4/kpilot/conduits/vcalconduit/Makefile.am ./kpilot/conduits/vcalconduit/Makefile.am
--- ../kdepim-3.1.4/kpilot/conduits/vcalconduit/Makefile.am	Sun Mar 30 09:38:09 2003
+++ ./kpilot/conduits/vcalconduit/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -16,8 +16,8 @@
 libvcalconduit_la_SOURCES = korganizerConduit.ui \
 	vcal-factorybase.cc vcal-factory.cc  \
 	vcal-setup.cc vcal-conduitbase.cc vcal-conduit.cc
-libvcalconduit_la_LDFLAGS = $(KDE_RPATH) $(KDE_PLUGIN) $(all_libraries)
-libvcalconduit_la_LIBADD = ../../lib/libkpilot.la ../../../libkcal/libkcal.la
+libvcalconduit_la_LDFLAGS = $(KDE_PLUGIN) -module $(all_libraries)
+libvcalconduit_la_LIBADD = $(top_builddir)/kpilot/lib/libkpilot.la $(top_builddir)/libkcal/libkcal.la $(LIB_KDECORE) $(LIB_QT) $(LIB_KIO) $(PISOCK_LIB) $(LIB_KDEUI)
 
 libtodoconduit_la_SOURCES = korganizertodoConduit.ui \
 	vcal-factorybase.cc todo-factory.cc  \
diff -uNr ../kdepim-3.1.4/kpilot/kpilot/Makefile-standalone ./kpilot/kpilot/Makefile-standalone
--- ../kdepim-3.1.4/kpilot/kpilot/Makefile-standalone	Tue Oct 16 18:16:07 2001
+++ ./kpilot/kpilot/Makefile-standalone	Thu Sep 18 09:06:30 2003
@@ -152,7 +152,7 @@
 
 
 %.kidl : %.h
-	$(DCOPIDL) $< > $@ || ( rm -f $@ ; /bin/false )
+	$(DCOPIDL) $< > $@ || ( rm -f $@ ; false )
 
 %_stub.cc : %.kidl
 	$(DCOPIDL2CPP) --c++-suffix cc --no-skel $<
diff -uNr ../kdepim-3.1.4/kpilot/lib/Makefile.am ./kpilot/lib/Makefile.am
--- ../kdepim-3.1.4/kpilot/lib/Makefile.am	Thu Aug 15 17:51:01 2002
+++ ./kpilot/lib/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -23,8 +23,8 @@
 	pilotMemo.cc pilotAddress.cc \
 	pilotDateEntry.cc pilotTodoEntry.cc
 
-libkpilot_la_LDFLAGS = $(all_libraries) $(KDE_EXTRA_RPATH) $(KDE_RPATH)
-libkpilot_la_LIBADD = $(PISOCK_LIB)
+libkpilot_la_LDFLAGS = $(all_libraries) $(KDE_EXTRA_RPATH) $(KDE_RPATH) $(QT_LDFLAGS) -no-undefined
+libkpilot_la_LIBADD = $(PISOCK_LIB) $(LIB_QT) $(LIB_KDECORE) $(LIB_KIO) $(LIB_KDEUI) -lDCOP
 
 kpilotincludedir = $(includedir)/kpilot
 kpilotinclude_HEADERS = kpilotlink.h uiDialog.h plugin.h syncAction.h \
diff -uNr ../kdepim-3.1.4/ksync/lib/Makefile.am ./ksync/lib/Makefile.am
--- ../kdepim-3.1.4/ksync/lib/Makefile.am	Mon Aug 26 17:16:56 2002
+++ ./ksync/lib/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -1,7 +1,7 @@
 INCLUDES = -I$(top_srcdir)/libkcal $(all_includes)
 
 lib_LTLIBRARIES   = libksync.la
-libksync_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 1:0:0 -module
+libksync_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 1:0:0
 libksync_la_LIBADD  = $(top_builddir)/libkcal/libkcal.la -lkabc $(LIB_QT)
 
 libksync_la_SOURCES = \
diff -uNr ../kdepim-3.1.4/libical/src/Makefile.am ./libical/src/Makefile.am
--- ../kdepim-3.1.4/libical/src/Makefile.am	Mon Aug 27 13:19:41 2001
+++ ./libical/src/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -4,4 +4,4 @@
 PYTHON_DIR = 
 #endif
 
-SUBDIRS = libical libicalss libicalvcal $(PYTHON_DIR) test
+SUBDIRS = libical libicalss libicalvcal $(PYTHON_DIR)
diff -uNr ../kdepim-3.1.4/libical/src/libical/.cvsignore ./libical/src/libical/.cvsignore
--- ../kdepim-3.1.4/libical/src/libical/.cvsignore	Fri Nov  9 10:20:42 2001
+++ ./libical/src/libical/.cvsignore	Thu Sep 18 09:06:30 2003
@@ -9,7 +9,6 @@
 icalderivedproperty.h
 icalderivedvalue.c
 icalderivedvalue.h
-icallexer.c
 icalattendee.lo
 icalattendee.o
 icalcomponent.lo
@@ -63,5 +62,3 @@
 vsnprintf.o
 y.output
 
-icalyacc.c
-icalyacc.h
diff -uNr ../kdepim-3.1.4/libical/src/libical/Makefile.am ./libical/src/libical/Makefile.am
--- ../kdepim-3.1.4/libical/src/libical/Makefile.am	Sun May 26 05:09:45 2002
+++ ./libical/src/libical/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -37,7 +37,7 @@
 	-I$(top_builddir)/src	\
 	-I$(srcdir)
 
-libical_la_LDFLAGS = -version-info 0:0:0
+libical_la_LDFLAGS = -version-info 0:0:0 -no-undefined
 
 # Order is important!
 libical_la_SOURCES =		\
diff -uNr ../kdepim-3.1.4/libical/src/libicalss/.cvsignore ./libical/src/libicalss/.cvsignore
--- ../kdepim-3.1.4/libical/src/libicalss/.cvsignore	Fri Apr 27 10:18:01 2001
+++ ./libical/src/libicalss/.cvsignore	Thu Sep 18 09:06:30 2003
@@ -30,4 +30,3 @@
 libicalss.la
 y.output
 
-icalsslexer.c
diff -uNr ../kdepim-3.1.4/libical/src/libicalss/Makefile.am ./libical/src/libicalss/Makefile.am
--- ../kdepim-3.1.4/libical/src/libicalss/Makefile.am	Mon Aug 27 11:38:53 2001
+++ ./libical/src/libicalss/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -17,7 +17,7 @@
 	-I$(top_builddir)/src/libical	\
 	-I$(srcdir)/libical
 
-libicalss_la_LDFLAGS = -version-info 0:0:0
+libicalss_la_LDFLAGS = -version-info 0:0:0 -no-undefined
 
 libicalss_la_SOURCES =		\
 	icalclassify.c		\
diff -uNr ../kdepim-3.1.4/libical/src/libicalss/icalsslexer.c ./libical/src/libicalss/icalsslexer.c
--- ../kdepim-3.1.4/libical/src/libicalss/icalsslexer.c	Wed Dec 31 19:00:00 1969
+++ ./libical/src/libicalss/icalsslexer.c	Thu Sep 18 09:06:30 2003
@@ -0,0 +1,1705 @@
+#define ss_create_buffer ss_create_buffer
+#define ss_delete_buffer ss_delete_buffer
+#define ss_scan_buffer ss_scan_buffer
+#define ss_scan_string ss_scan_string
+#define ss_scan_bytes ss_scan_bytes
+#define ss_flex_debug ss_flex_debug
+#define ss_init_buffer ss_init_buffer
+#define ss_flush_buffer ss_flush_buffer
+#define ss_load_buffer_state ss_load_buffer_state
+#define ss_switch_to_buffer ss_switch_to_buffer
+#define ssin ssin
+#define ssleng ssleng
+#define sslex sslex
+#define ssout ssout
+#define ssrestart ssrestart
+#define sstext sstext
+#define sswrap sswrap
+
+/* A lexical scanner generated by flex */
+
+/* Scanner skeleton version:
+ * $Header: /home/daffy/u0/vern/flex/RCS/flex.skl,v 2.91 96/09/10 16:58:48 vern Exp $
+ */
+
+#define FLEX_SCANNER
+#define YY_FLEX_MAJOR_VERSION 2
+#define YY_FLEX_MINOR_VERSION 5
+
+#include <stdio.h>
+
+
+/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
+#ifdef c_plusplus
+#ifndef __cplusplus
+#define __cplusplus
+#endif
+#endif
+
+
+#ifdef __cplusplus
+
+#include <stdlib.h>
+#include <unistd.h>
+
+/* Use prototypes in function declarations. */
+#define YY_USE_PROTOS
+
+/* The "const" storage-class-modifier is valid. */
+#define YY_USE_CONST
+
+#else	/* ! __cplusplus */
+
+#if __STDC__
+
+#define YY_USE_PROTOS
+#define YY_USE_CONST
+
+#endif	/* __STDC__ */
+#endif	/* ! __cplusplus */
+
+#ifdef __TURBOC__
+ #pragma warn -rch
+ #pragma warn -use
+#include <io.h>
+#include <stdlib.h>
+#define YY_USE_CONST
+#define YY_USE_PROTOS
+#endif
+
+#ifdef YY_USE_CONST
+#define ssconst const
+#else
+#define ssconst
+#endif
+
+
+#ifdef YY_USE_PROTOS
+#define YY_PROTO(proto) proto
+#else
+#define YY_PROTO(proto) ()
+#endif
+
+/* Returned upon end-of-file. */
+#define YY_NULL 0
+
+/* Promotes a possibly negative, possibly signed char to an unsigned
+ * integer for use as an array index.  If the signed char is negative,
+ * we want to instead treat it as an 8-bit unsigned char, hence the
+ * double cast.
+ */
+#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
+
+/* Enter a start condition.  This macro really ought to take a parameter,
+ * but we do it the disgusting crufty way forced on us by the ()-less
+ * definition of BEGIN.
+ */
+#define BEGIN ss_start = 1 + 2 *
+
+/* Translate the current start state into a value that can be later handed
+ * to BEGIN to return to the state.  The YYSTATE alias is for lex
+ * compatibility.
+ */
+#define YY_START ((ss_start - 1) / 2)
+#define YYSTATE YY_START
+
+/* Action number for EOF rule of a given start state. */
+#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
+
+/* Special action meaning "start processing a new file". */
+#define YY_NEW_FILE ssrestart( ssin )
+
+#define YY_END_OF_BUFFER_CHAR 0
+
+/* Size of default input buffer. */
+#define YY_BUF_SIZE 16384
+
+typedef struct ss_buffer_state *YY_BUFFER_STATE;
+
+extern int ssleng;
+extern FILE *ssin, *ssout;
+
+#define EOB_ACT_CONTINUE_SCAN 0
+#define EOB_ACT_END_OF_FILE 1
+#define EOB_ACT_LAST_MATCH 2
+
+/* The funky do-while in the following #define is used to turn the definition
+ * int a single C statement (which needs a semi-colon terminator).  This
+ * avoids problems with code like:
+ *
+ * 	if ( condition_holds )
+ *		ssless( 5 );
+ *	else
+ *		do_something_else();
+ *
+ * Prior to using the do-while the compiler would get upset at the
+ * "else" because it interpreted the "if" statement as being all
+ * done when it reached the ';' after the ssless() call.
+ */
+
+/* Return all but the first 'n' matched characters back to the input stream. */
+
+#define ssless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up sstext. */ \
+		*ss_cp = ss_hold_char; \
+		YY_RESTORE_YY_MORE_OFFSET \
+		ss_c_buf_p = ss_cp = ss_bp + n - YY_MORE_ADJ; \
+		YY_DO_BEFORE_ACTION; /* set up sstext again */ \
+		} \
+	while ( 0 )
+
+#define unput(c) ssunput( c, sstext_ptr )
+
+/* The following is because we cannot portably get our hands on size_t
+ * (without autoconf's help, which isn't available because we want
+ * flex-generated scanners to compile on their own).
+ */
+typedef unsigned int ss_size_t;
+
+
+struct ss_buffer_state
+	{
+	FILE *ss_input_file;
+
+	char *ss_ch_buf;		/* input buffer */
+	char *ss_buf_pos;		/* current position in input buffer */
+
+	/* Size of input buffer in bytes, not including room for EOB
+	 * characters.
+	 */
+	ss_size_t ss_buf_size;
+
+	/* Number of characters read into ss_ch_buf, not including EOB
+	 * characters.
+	 */
+	int ss_n_chars;
+
+	/* Whether we "own" the buffer - i.e., we know we created it,
+	 * and can realloc() it to grow it, and should free() it to
+	 * delete it.
+	 */
+	int ss_is_our_buffer;
+
+	/* Whether this is an "interactive" input source; if so, and
+	 * if we're using stdio for input, then we want to use getc()
+	 * instead of fread(), to make sure we stop fetching input after
+	 * each newline.
+	 */
+	int ss_is_interactive;
+
+	/* Whether we're considered to be at the beginning of a line.
+	 * If so, '^' rules will be active on the next match, otherwise
+	 * not.
+	 */
+	int ss_at_bol;
+
+	/* Whether to try to fill the input buffer when we reach the
+	 * end of it.
+	 */
+	int ss_fill_buffer;
+
+	int ss_buffer_status;
+#define YY_BUFFER_NEW 0
+#define YY_BUFFER_NORMAL 1
+	/* When an EOF's been seen but there's still some text to process
+	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
+	 * shouldn't try reading from the input source any more.  We might
+	 * still have a bunch of tokens to match, though, because of
+	 * possible backing-up.
+	 *
+	 * When we actually see the EOF, we change the status to "new"
+	 * (via ssrestart()), so that the user can continue scanning by
+	 * just pointing ssin at a new input file.
+	 */
+#define YY_BUFFER_EOF_PENDING 2
+	};
+
+static YY_BUFFER_STATE ss_current_buffer = 0;
+
+/* We provide macros for accessing buffer states in case in the
+ * future we want to put the buffer states in a more general
+ * "scanner state".
+ */
+#define YY_CURRENT_BUFFER ss_current_buffer
+
+
+/* ss_hold_char holds the character lost when sstext is formed. */
+static char ss_hold_char;
+
+static int ss_n_chars;		/* number of characters read into ss_ch_buf */
+
+
+int ssleng;
+
+/* Points to current character in buffer. */
+static char *ss_c_buf_p = (char *) 0;
+static int ss_init = 1;		/* whether we need to initialize */
+static int ss_start = 0;	/* start state number */
+
+/* Flag which is used to allow sswrap()'s to do buffer switches
+ * instead of setting up a fresh ssin.  A bit of a hack ...
+ */
+static int ss_did_buffer_switch_on_eof;
+
+void ssrestart YY_PROTO(( FILE *input_file ));
+
+void ss_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
+void ss_load_buffer_state YY_PROTO(( void ));
+YY_BUFFER_STATE ss_create_buffer YY_PROTO(( FILE *file, int size ));
+void ss_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
+void ss_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
+void ss_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
+#define YY_FLUSH_BUFFER ss_flush_buffer( ss_current_buffer )
+
+YY_BUFFER_STATE ss_scan_buffer YY_PROTO(( char *base, ss_size_t size ));
+YY_BUFFER_STATE ss_scan_string YY_PROTO(( ssconst char *ss_str ));
+YY_BUFFER_STATE ss_scan_bytes YY_PROTO(( ssconst char *bytes, int len ));
+
+static void *ss_flex_alloc YY_PROTO(( ss_size_t ));
+static void *ss_flex_realloc YY_PROTO(( void *, ss_size_t ));
+static void ss_flex_free YY_PROTO(( void * ));
+
+#define ss_new_buffer ss_create_buffer
+
+#define ss_set_interactive(is_interactive) \
+	{ \
+	if ( ! ss_current_buffer ) \
+		ss_current_buffer = ss_create_buffer( ssin, YY_BUF_SIZE ); \
+	ss_current_buffer->ss_is_interactive = is_interactive; \
+	}
+
+#define ss_set_bol(at_bol) \
+	{ \
+	if ( ! ss_current_buffer ) \
+		ss_current_buffer = ss_create_buffer( ssin, YY_BUF_SIZE ); \
+	ss_current_buffer->ss_at_bol = at_bol; \
+	}
+
+#define YY_AT_BOL() (ss_current_buffer->ss_at_bol)
+
+typedef unsigned char YY_CHAR;
+FILE *ssin = (FILE *) 0, *ssout = (FILE *) 0;
+typedef int ss_state_type;
+extern char sstext[];
+
+
+static ss_state_type ss_get_previous_state YY_PROTO(( void ));
+static ss_state_type ss_try_NUL_trans YY_PROTO(( ss_state_type current_state ));
+static int ss_get_next_buffer YY_PROTO(( void ));
+static void ss_fatal_error YY_PROTO(( ssconst char msg[] ));
+
+/* Done after the current pattern has been matched and before the
+ * corresponding action - sets up sstext.
+ */
+#define YY_DO_BEFORE_ACTION \
+	sstext_ptr = ss_bp; \
+	ssleng = (int) (ss_cp - ss_bp); \
+	ss_hold_char = *ss_cp; \
+	*ss_cp = '\0'; \
+	if ( ssleng >= YYLMAX ) \
+		YY_FATAL_ERROR( "token too large, exceeds YYLMAX" ); \
+	ss_flex_strncpy( sstext, sstext_ptr, ssleng + 1 ); \
+	ss_c_buf_p = ss_cp;
+
+#define YY_NUM_RULES 19
+#define YY_END_OF_BUFFER 20
+static ssconst short int ss_accept[47] =
+    {   0,
+        0,    0,    0,    0,    0,    0,   20,   18,   14,   14,
+       18,   13,   17,    4,   15,    7,    5,    8,   17,   17,
+       17,   17,   17,   14,    6,    0,   17,    9,   10,   17,
+       17,   12,   17,   17,   16,   11,   17,   17,   17,    2,
+       17,   17,   17,    3,    1,    0
+    } ;
+
+static ssconst int ss_ec[256] =
+    {   0,
+        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
+        1,    1,    2,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    2,    4,    1,    1,    1,    1,    1,    5,    1,
+        1,    6,    1,    7,    6,    6,    1,    6,    6,    6,
+        6,    6,    6,    6,    6,    6,    6,    1,    8,    9,
+       10,   11,    1,    1,   12,    6,   13,   14,   15,   16,
+        6,   17,    6,    6,    6,   18,   19,   20,   21,    6,
+        6,   22,   23,   24,    6,    6,   25,    6,    6,    6,
+        1,    1,    1,    1,    1,    1,   12,    6,   13,   14,
+
+       15,   16,    6,   17,    6,    6,    6,   18,   19,   20,
+       21,    6,    6,   22,   23,   24,    6,    6,   25,    6,
+        6,    6,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1
+    } ;
+
+static ssconst int ss_meta[26] =
+    {   0,
+        1,    1,    1,    1,    1,    2,    1,    1,    1,    1,
+        1,    2,    2,    2,    2,    2,    2,    2,    2,    2,
+        2,    2,    2,    2,    2
+    } ;
+
+static ssconst short int ss_base[49] =
+    {   0,
+        0,    0,    0,    0,    0,    0,   53,   54,   24,   26,
+       42,    0,    0,   54,   54,   41,   54,   40,   29,   26,
+       25,   31,   28,   28,   54,   39,    0,   54,   54,   29,
+       21,    0,   23,   25,   54,    0,   20,   23,   15,    0,
+       23,   20,   10,    0,    0,   54,   31,   30
+    } ;
+
+static ssconst short int ss_def[49] =
+    {   0,
+       46,    1,    1,    1,    1,    1,   46,   46,   46,   46,
+       46,   47,   48,   46,   46,   46,   46,   46,   48,   48,
+       48,   48,   48,   46,   46,   47,   48,   46,   46,   48,
+       48,   48,   48,   48,   46,   48,   48,   48,   48,   48,
+       48,   48,   48,   48,   48,    0,   46,   46
+    } ;
+
+static ssconst short int ss_nxt[80] =
+    {   0,
+        8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
+       18,   19,   13,   13,   13,   20,   13,   13,   13,   13,
+       21,   13,   22,   13,   23,   24,   24,   24,   24,   24,
+       24,   27,   26,   45,   44,   43,   42,   41,   40,   39,
+       38,   37,   36,   35,   34,   33,   32,   31,   30,   29,
+       28,   25,   46,    7,   46,   46,   46,   46,   46,   46,
+       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
+       46,   46,   46,   46,   46,   46,   46,   46,   46
+    } ;
+
+static ssconst short int ss_chk[80] =
+    {   0,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    9,    9,   10,   10,   24,
+       24,   48,   47,   43,   42,   41,   39,   38,   37,   34,
+       33,   31,   30,   26,   23,   22,   21,   20,   19,   18,
+       16,   11,    7,   46,   46,   46,   46,   46,   46,   46,
+       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
+       46,   46,   46,   46,   46,   46,   46,   46,   46
+    } ;
+
+static ss_state_type ss_last_accepting_state;
+static char *ss_last_accepting_cpos;
+
+/* The intent behind this definition is that it'll catch
+ * any uses of REJECT which flex missed.
+ */
+#define REJECT reject_used_but_not_detected
+#define ssmore() ssmore_used_but_not_detected
+#define YY_MORE_ADJ 0
+#define YY_RESTORE_YY_MORE_OFFSET
+#ifndef YYLMAX
+#define YYLMAX 8192
+#endif
+
+char sstext[YYLMAX];
+char *sstext_ptr;
+#line 1 "icalsslexer.l"
+#define INITIAL 0
+#line 2 "icalsslexer.l"
+/* -*- Mode: C -*-
+  ======================================================================
+  FILE: icalsslexer.l
+  CREATOR: eric 8 Aug 2000
+  
+  DESCRIPTION:
+  
+  $Id: icalsslexer.l,v 1.3 2001/03/27 09:34:37 cschumac Exp $
+  $Locker:  $
+
+(C) COPYRIGHT 2000, Eric Busboom, http://www.softwarestudio.org
+
+ This program is free software; you can redistribute it and/or modify
+ it under the terms of either: 
+
+    The LGPL as published by the Free Software Foundation, version
+    2.1, available at: http://www.fsf.org/copyleft/lesser.html
+
+  Or:
+
+    The Mozilla Public License Version 1.0. You may obtain a copy of
+    the License at http://www.mozilla.org/MPL/
+
+ The Original Code is eric. The Initial Developer of the Original
+ Code is Eric Busboom
+
+  ======================================================================*/
+
+#include "icalssyacc.h"
+#include "icalgaugeimpl.h"
+#include "assert.h"
+
+#include <string.h> /* For strdup() */
+
+int icalparser_flex_input(char* buf, int max_size);
+void icalparser_clear_flex_input();
+
+#undef YY_INPUT
+#define YY_INPUT(b,r,ms) ( r= icalparser_flex_input(b,ms))
+
+#undef SS_FATAL_ERROR
+#define SS_FATAL_ERROR(msg) sserror(msg)
+
+
+#define sql 1
+#define string_value 2
+
+#line 465 "icalsslexer.c"
+
+/* Macros after this point can all be overridden by user definitions in
+ * section 1.
+ */
+
+#ifndef YY_SKIP_YYWRAP
+#ifdef __cplusplus
+extern "C" int sswrap YY_PROTO(( void ));
+#else
+extern int sswrap YY_PROTO(( void ));
+#endif
+#endif
+
+#ifndef YY_NO_UNPUT
+static void ssunput YY_PROTO(( int c, char *buf_ptr ));
+#endif
+
+#ifndef sstext_ptr
+static void ss_flex_strncpy YY_PROTO(( char *, ssconst char *, int ));
+#endif
+
+#ifdef YY_NEED_STRLEN
+static int ss_flex_strlen YY_PROTO(( ssconst char * ));
+#endif
+
+#ifndef YY_NO_INPUT
+#ifdef __cplusplus
+static int ssinput YY_PROTO(( void ));
+#else
+static int input YY_PROTO(( void ));
+#endif
+#endif
+
+#if YY_STACK_USED
+static int ss_start_stack_ptr = 0;
+static int ss_start_stack_depth = 0;
+static int *ss_start_stack = 0;
+#ifndef YY_NO_PUSH_STATE
+static void ss_push_state YY_PROTO(( int new_state ));
+#endif
+#ifndef YY_NO_POP_STATE
+static void ss_pop_state YY_PROTO(( void ));
+#endif
+#ifndef YY_NO_TOP_STATE
+static int ss_top_state YY_PROTO(( void ));
+#endif
+
+#else
+#define YY_NO_PUSH_STATE 1
+#define YY_NO_POP_STATE 1
+#define YY_NO_TOP_STATE 1
+#endif
+
+#ifdef YY_MALLOC_DECL
+YY_MALLOC_DECL
+#else
+#if __STDC__
+#ifndef __cplusplus
+#include <stdlib.h>
+#endif
+#else
+/* Just try to get by without declaring the routines.  This will fail
+ * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
+ * or sizeof(void*) != sizeof(int).
+ */
+#endif
+#endif
+
+/* Amount of stuff to slurp up with each read. */
+#ifndef YY_READ_BUF_SIZE
+#define YY_READ_BUF_SIZE 8192
+#endif
+
+/* Copy whatever the last rule matched to the standard output. */
+
+#ifndef ECHO
+/* This used to be an fputs(), but since the string might contain NUL's,
+ * we now use fwrite().
+ */
+#define ECHO (void) fwrite( sstext, ssleng, 1, ssout )
+#endif
+
+/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
+ * is returned in "result".
+ */
+#ifndef YY_INPUT
+#define YY_INPUT(buf,result,max_size) \
+	if ( ss_current_buffer->ss_is_interactive ) \
+		{ \
+		int c = '*', n; \
+		for ( n = 0; n < max_size && \
+			     (c = getc( ssin )) != EOF && c != '\n'; ++n ) \
+			buf[n] = (char) c; \
+		if ( c == '\n' ) \
+			buf[n++] = (char) c; \
+		if ( c == EOF && ferror( ssin ) ) \
+			YY_FATAL_ERROR( "input in flex scanner failed" ); \
+		result = n; \
+		} \
+	else if ( ((result = fread( buf, 1, max_size, ssin )) == 0) \
+		  && ferror( ssin ) ) \
+		YY_FATAL_ERROR( "input in flex scanner failed" );
+#endif
+
+/* No semi-colon after return; correct usage is to write "ssterminate();" -
+ * we don't want an extra ';' after the "return" because that will cause
+ * some compilers to complain about unreachable statements.
+ */
+#ifndef ssterminate
+#define ssterminate() return YY_NULL
+#endif
+
+/* Number of entries by which start-condition stack grows. */
+#ifndef YY_START_STACK_INCR
+#define YY_START_STACK_INCR 25
+#endif
+
+/* Report a fatal error. */
+#ifndef YY_FATAL_ERROR
+#define YY_FATAL_ERROR(msg) ss_fatal_error( msg )
+#endif
+
+/* Default declaration of generated scanner - a define so the user can
+ * easily add parameters.
+ */
+#ifndef YY_DECL
+#define YY_DECL int sslex YY_PROTO(( void ))
+#endif
+
+/* Code executed at the beginning of each rule, after sstext and ssleng
+ * have been set up.
+ */
+#ifndef YY_USER_ACTION
+#define YY_USER_ACTION
+#endif
+
+/* Code executed at the end of each rule. */
+#ifndef YY_BREAK
+#define YY_BREAK break;
+#endif
+
+#define YY_RULE_SETUP \
+	YY_USER_ACTION
+
+YY_DECL
+	{
+	register ss_state_type ss_current_state;
+	register char *ss_cp, *ss_bp;
+	register int ss_act;
+
+#line 69 "icalsslexer.l"
+
+
+
+
+
+
+#line 623 "icalsslexer.c"
+
+	if ( ss_init )
+		{
+		ss_init = 0;
+
+#ifdef YY_USER_INIT
+		YY_USER_INIT;
+#endif
+
+		if ( ! ss_start )
+			ss_start = 1;	/* first start state */
+
+		if ( ! ssin )
+			ssin = stdin;
+
+		if ( ! ssout )
+			ssout = stdout;
+
+		if ( ! ss_current_buffer )
+			ss_current_buffer =
+				ss_create_buffer( ssin, YY_BUF_SIZE );
+
+		ss_load_buffer_state();
+		}
+
+	while ( 1 )		/* loops until end-of-file is reached */
+		{
+		ss_cp = ss_c_buf_p;
+
+		/* Support of sstext. */
+		*ss_cp = ss_hold_char;
+
+		/* ss_bp points to the position in ss_ch_buf of the start of
+		 * the current run.
+		 */
+		ss_bp = ss_cp;
+
+		ss_current_state = ss_start;
+ss_match:
+		do
+			{
+			register YY_CHAR ss_c = ss_ec[YY_SC_TO_UI(*ss_cp)];
+			if ( ss_accept[ss_current_state] )
+				{
+				ss_last_accepting_state = ss_current_state;
+				ss_last_accepting_cpos = ss_cp;
+				}
+			while ( ss_chk[ss_base[ss_current_state] + ss_c] != ss_current_state )
+				{
+				ss_current_state = (int) ss_def[ss_current_state];
+				if ( ss_current_state >= 47 )
+					ss_c = ss_meta[(unsigned int) ss_c];
+				}
+			ss_current_state = ss_nxt[ss_base[ss_current_state] + (unsigned int) ss_c];
+			++ss_cp;
+			}
+		while ( ss_base[ss_current_state] != 54 );
+
+ss_find_action:
+		ss_act = ss_accept[ss_current_state];
+		if ( ss_act == 0 )
+			{ /* have to back up */
+			ss_cp = ss_last_accepting_cpos;
+			ss_current_state = ss_last_accepting_state;
+			ss_act = ss_accept[ss_current_state];
+			}
+
+		YY_DO_BEFORE_ACTION;
+
+
+do_action:	/* This label is used only to access EOF actions. */
+
+
+		switch ( ss_act )
+	{ /* beginning of action switch */
+			case 0: /* must back up */
+			/* undo the effects of YY_DO_BEFORE_ACTION */
+			*ss_cp = ss_hold_char;
+			ss_cp = ss_last_accepting_cpos;
+			ss_current_state = ss_last_accepting_state;
+			goto ss_find_action;
+
+case 1:
+YY_RULE_SETUP
+#line 75 "icalsslexer.l"
+{ return SELECT; }
+	YY_BREAK
+case 2:
+YY_RULE_SETUP
+#line 76 "icalsslexer.l"
+{ return FROM; }
+	YY_BREAK
+case 3:
+YY_RULE_SETUP
+#line 77 "icalsslexer.l"
+{ return WHERE; }
+	YY_BREAK
+case 4:
+YY_RULE_SETUP
+#line 78 "icalsslexer.l"
+{ return COMMA; }
+	YY_BREAK
+case 5:
+YY_RULE_SETUP
+#line 79 "icalsslexer.l"
+{ return EQUALS; }
+	YY_BREAK
+case 6:
+YY_RULE_SETUP
+#line 80 "icalsslexer.l"
+{ return NOTEQUALS; }
+	YY_BREAK
+case 7:
+YY_RULE_SETUP
+#line 81 "icalsslexer.l"
+{ return LESS; }
+	YY_BREAK
+case 8:
+YY_RULE_SETUP
+#line 82 "icalsslexer.l"
+{ return GREATER; }
+	YY_BREAK
+case 9:
+YY_RULE_SETUP
+#line 83 "icalsslexer.l"
+{ return LESSEQUALS; }
+	YY_BREAK
+case 10:
+YY_RULE_SETUP
+#line 84 "icalsslexer.l"
+{ return GREATEREQUALS; }
+	YY_BREAK
+case 11:
+YY_RULE_SETUP
+#line 85 "icalsslexer.l"
+{ return AND; }
+	YY_BREAK
+case 12:
+YY_RULE_SETUP
+#line 86 "icalsslexer.l"
+{ return OR; }
+	YY_BREAK
+case 13:
+YY_RULE_SETUP
+#line 87 "icalsslexer.l"
+{ return QUOTE; }
+	YY_BREAK
+case 14:
+YY_RULE_SETUP
+#line 88 "icalsslexer.l"
+;			
+	YY_BREAK
+case 15:
+YY_RULE_SETUP
+#line 89 "icalsslexer.l"
+{ return EOL; }
+	YY_BREAK
+case 16:
+YY_RULE_SETUP
+#line 90 "icalsslexer.l"
+{
+	int c = input();
+	unput(c);
+	if(c!='\''){
+		sslval.v_string= icalmemory_tmp_copy(sstext);
+		return STRING;
+	} else {
+		/*ssmore();*/
+	}
+}
+	YY_BREAK
+case 17:
+YY_RULE_SETUP
+#line 101 "icalsslexer.l"
+{ sslval.v_string= icalmemory_tmp_copy(sstext);
+			  return STRING; }
+	YY_BREAK
+case 18:
+YY_RULE_SETUP
+#line 105 "icalsslexer.l"
+{ return sstext[0]; }
+	YY_BREAK
+case 19:
+YY_RULE_SETUP
+#line 107 "icalsslexer.l"
+ECHO;
+	YY_BREAK
+#line 811 "icalsslexer.c"
+case YY_STATE_EOF(INITIAL):
+case YY_STATE_EOF(sql):
+case YY_STATE_EOF(string_value):
+	ssterminate();
+
+	case YY_END_OF_BUFFER:
+		{
+		/* Amount of text matched not including the EOB char. */
+		int ss_amount_of_matched_text = (int) (ss_cp - sstext_ptr) - 1;
+
+		/* Undo the effects of YY_DO_BEFORE_ACTION. */
+		*ss_cp = ss_hold_char;
+		YY_RESTORE_YY_MORE_OFFSET
+
+		if ( ss_current_buffer->ss_buffer_status == YY_BUFFER_NEW )
+			{
+			/* We're scanning a new file or input source.  It's
+			 * possible that this happened because the user
+			 * just pointed ssin at a new source and called
+			 * sslex().  If so, then we have to assure
+			 * consistency between ss_current_buffer and our
+			 * globals.  Here is the right place to do so, because
+			 * this is the first action (other than possibly a
+			 * back-up) that will match for the new input source.
+			 */
+			ss_n_chars = ss_current_buffer->ss_n_chars;
+			ss_current_buffer->ss_input_file = ssin;
+			ss_current_buffer->ss_buffer_status = YY_BUFFER_NORMAL;
+			}
+
+		/* Note that here we test for ss_c_buf_p "<=" to the position
+		 * of the first EOB in the buffer, since ss_c_buf_p will
+		 * already have been incremented past the NUL character
+		 * (since all states make transitions on EOB to the
+		 * end-of-buffer state).  Contrast this with the test
+		 * in input().
+		 */
+		if ( ss_c_buf_p <= &ss_current_buffer->ss_ch_buf[ss_n_chars] )
+			{ /* This was really a NUL. */
+			ss_state_type ss_next_state;
+
+			ss_c_buf_p = sstext_ptr + ss_amount_of_matched_text;
+
+			ss_current_state = ss_get_previous_state();
+
+			/* Okay, we're now positioned to make the NUL
+			 * transition.  We couldn't have
+			 * ss_get_previous_state() go ahead and do it
+			 * for us because it doesn't know how to deal
+			 * with the possibility of jamming (and we don't
+			 * want to build jamming into it because then it
+			 * will run more slowly).
+			 */
+
+			ss_next_state = ss_try_NUL_trans( ss_current_state );
+
+			ss_bp = sstext_ptr + YY_MORE_ADJ;
+
+			if ( ss_next_state )
+				{
+				/* Consume the NUL. */
+				ss_cp = ++ss_c_buf_p;
+				ss_current_state = ss_next_state;
+				goto ss_match;
+				}
+
+			else
+				{
+				ss_cp = ss_c_buf_p;
+				goto ss_find_action;
+				}
+			}
+
+		else switch ( ss_get_next_buffer() )
+			{
+			case EOB_ACT_END_OF_FILE:
+				{
+				ss_did_buffer_switch_on_eof = 0;
+
+				if ( sswrap() )
+					{
+					/* Note: because we've taken care in
+					 * ss_get_next_buffer() to have set up
+					 * sstext, we can now set up
+					 * ss_c_buf_p so that if some total
+					 * hoser (like flex itself) wants to
+					 * call the scanner after we return the
+					 * YY_NULL, it'll still work - another
+					 * YY_NULL will get returned.
+					 */
+					ss_c_buf_p = sstext_ptr + YY_MORE_ADJ;
+
+					ss_act = YY_STATE_EOF(YY_START);
+					goto do_action;
+					}
+
+				else
+					{
+					if ( ! ss_did_buffer_switch_on_eof )
+						YY_NEW_FILE;
+					}
+				break;
+				}
+
+			case EOB_ACT_CONTINUE_SCAN:
+				ss_c_buf_p =
+					sstext_ptr + ss_amount_of_matched_text;
+
+				ss_current_state = ss_get_previous_state();
+
+				ss_cp = ss_c_buf_p;
+				ss_bp = sstext_ptr + YY_MORE_ADJ;
+				goto ss_match;
+
+			case EOB_ACT_LAST_MATCH:
+				ss_c_buf_p =
+				&ss_current_buffer->ss_ch_buf[ss_n_chars];
+
+				ss_current_state = ss_get_previous_state();
+
+				ss_cp = ss_c_buf_p;
+				ss_bp = sstext_ptr + YY_MORE_ADJ;
+				goto ss_find_action;
+			}
+		break;
+		}
+
+	default:
+		YY_FATAL_ERROR(
+			"fatal flex scanner internal error--no action found" );
+	} /* end of action switch */
+		} /* end of scanning one token */
+	} /* end of sslex */
+
+
+/* ss_get_next_buffer - try to read in a new buffer
+ *
+ * Returns a code representing an action:
+ *	EOB_ACT_LAST_MATCH -
+ *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
+ *	EOB_ACT_END_OF_FILE - end of file
+ */
+
+static int ss_get_next_buffer()
+	{
+	register char *dest = ss_current_buffer->ss_ch_buf;
+	register char *source = sstext_ptr;
+	register int number_to_move, i;
+	int ret_val;
+
+	if ( ss_c_buf_p > &ss_current_buffer->ss_ch_buf[ss_n_chars + 1] )
+		YY_FATAL_ERROR(
+		"fatal flex scanner internal error--end of buffer missed" );
+
+	if ( ss_current_buffer->ss_fill_buffer == 0 )
+		{ /* Don't try to fill the buffer, so this is an EOF. */
+		if ( ss_c_buf_p - sstext_ptr - YY_MORE_ADJ == 1 )
+			{
+			/* We matched a single character, the EOB, so
+			 * treat this as a final EOF.
+			 */
+			return EOB_ACT_END_OF_FILE;
+			}
+
+		else
+			{
+			/* We matched some text prior to the EOB, first
+			 * process it.
+			 */
+			return EOB_ACT_LAST_MATCH;
+			}
+		}
+
+	/* Try to read more data. */
+
+	/* First move last chars to start of buffer. */
+	number_to_move = (int) (ss_c_buf_p - sstext_ptr) - 1;
+
+	for ( i = 0; i < number_to_move; ++i )
+		*(dest++) = *(source++);
+
+	if ( ss_current_buffer->ss_buffer_status == YY_BUFFER_EOF_PENDING )
+		/* don't do the read, it's not guaranteed to return an EOF,
+		 * just force an EOF
+		 */
+		ss_current_buffer->ss_n_chars = ss_n_chars = 0;
+
+	else
+		{
+		int num_to_read =
+			ss_current_buffer->ss_buf_size - number_to_move - 1;
+
+		while ( num_to_read <= 0 )
+			{ /* Not enough room in the buffer - grow it. */
+#ifdef YY_USES_REJECT
+			YY_FATAL_ERROR(
+"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
+#else
+
+			/* just a shorter name for the current buffer */
+			YY_BUFFER_STATE b = ss_current_buffer;
+
+			int ss_c_buf_p_offset =
+				(int) (ss_c_buf_p - b->ss_ch_buf);
+
+			if ( b->ss_is_our_buffer )
+				{
+				int new_size = b->ss_buf_size * 2;
+
+				if ( new_size <= 0 )
+					b->ss_buf_size += b->ss_buf_size / 8;
+				else
+					b->ss_buf_size *= 2;
+
+				b->ss_ch_buf = (char *)
+					/* Include room in for 2 EOB chars. */
+					ss_flex_realloc( (void *) b->ss_ch_buf,
+							 b->ss_buf_size + 2 );
+				}
+			else
+				/* Can't grow it, we don't own it. */
+				b->ss_ch_buf = 0;
+
+			if ( ! b->ss_ch_buf )
+				YY_FATAL_ERROR(
+				"fatal error - scanner input buffer overflow" );
+
+			ss_c_buf_p = &b->ss_ch_buf[ss_c_buf_p_offset];
+
+			num_to_read = ss_current_buffer->ss_buf_size -
+						number_to_move - 1;
+#endif
+			}
+
+		if ( num_to_read > YY_READ_BUF_SIZE )
+			num_to_read = YY_READ_BUF_SIZE;
+
+		/* Read in more data. */
+		YY_INPUT( (&ss_current_buffer->ss_ch_buf[number_to_move]),
+			ss_n_chars, num_to_read );
+
+		ss_current_buffer->ss_n_chars = ss_n_chars;
+		}
+
+	if ( ss_n_chars == 0 )
+		{
+		if ( number_to_move == YY_MORE_ADJ )
+			{
+			ret_val = EOB_ACT_END_OF_FILE;
+			ssrestart( ssin );
+			}
+
+		else
+			{
+			ret_val = EOB_ACT_LAST_MATCH;
+			ss_current_buffer->ss_buffer_status =
+				YY_BUFFER_EOF_PENDING;
+			}
+		}
+
+	else
+		ret_val = EOB_ACT_CONTINUE_SCAN;
+
+	ss_n_chars += number_to_move;
+	ss_current_buffer->ss_ch_buf[ss_n_chars] = YY_END_OF_BUFFER_CHAR;
+	ss_current_buffer->ss_ch_buf[ss_n_chars + 1] = YY_END_OF_BUFFER_CHAR;
+
+	sstext_ptr = &ss_current_buffer->ss_ch_buf[0];
+
+	return ret_val;
+	}
+
+
+/* ss_get_previous_state - get the state just before the EOB char was reached */
+
+static ss_state_type ss_get_previous_state()
+	{
+	register ss_state_type ss_current_state;
+	register char *ss_cp;
+
+	ss_current_state = ss_start;
+
+	for ( ss_cp = sstext_ptr + YY_MORE_ADJ; ss_cp < ss_c_buf_p; ++ss_cp )
+		{
+		register YY_CHAR ss_c = (*ss_cp ? ss_ec[YY_SC_TO_UI(*ss_cp)] : 1);
+		if ( ss_accept[ss_current_state] )
+			{
+			ss_last_accepting_state = ss_current_state;
+			ss_last_accepting_cpos = ss_cp;
+			}
+		while ( ss_chk[ss_base[ss_current_state] + ss_c] != ss_current_state )
+			{
+			ss_current_state = (int) ss_def[ss_current_state];
+			if ( ss_current_state >= 47 )
+				ss_c = ss_meta[(unsigned int) ss_c];
+			}
+		ss_current_state = ss_nxt[ss_base[ss_current_state] + (unsigned int) ss_c];
+		}
+
+	return ss_current_state;
+	}
+
+
+/* ss_try_NUL_trans - try to make a transition on the NUL character
+ *
+ * synopsis
+ *	next_state = ss_try_NUL_trans( current_state );
+ */
+
+#ifdef YY_USE_PROTOS
+static ss_state_type ss_try_NUL_trans( ss_state_type ss_current_state )
+#else
+static ss_state_type ss_try_NUL_trans( ss_current_state )
+ss_state_type ss_current_state;
+#endif
+	{
+	register int ss_is_jam;
+	register char *ss_cp = ss_c_buf_p;
+
+	register YY_CHAR ss_c = 1;
+	if ( ss_accept[ss_current_state] )
+		{
+		ss_last_accepting_state = ss_current_state;
+		ss_last_accepting_cpos = ss_cp;
+		}
+	while ( ss_chk[ss_base[ss_current_state] + ss_c] != ss_current_state )
+		{
+		ss_current_state = (int) ss_def[ss_current_state];
+		if ( ss_current_state >= 47 )
+			ss_c = ss_meta[(unsigned int) ss_c];
+		}
+	ss_current_state = ss_nxt[ss_base[ss_current_state] + (unsigned int) ss_c];
+	ss_is_jam = (ss_current_state == 46);
+
+	return ss_is_jam ? 0 : ss_current_state;
+	}
+
+
+#ifndef YY_NO_UNPUT
+#ifdef YY_USE_PROTOS
+static void ssunput( int c, register char *ss_bp )
+#else
+static void ssunput( c, ss_bp )
+int c;
+register char *ss_bp;
+#endif
+	{
+	register char *ss_cp = ss_c_buf_p;
+
+	/* undo effects of setting up sstext */
+	*ss_cp = ss_hold_char;
+
+	if ( ss_cp < ss_current_buffer->ss_ch_buf + 2 )
+		{ /* need to shift things up to make room */
+		/* +2 for EOB chars. */
+		register int number_to_move = ss_n_chars + 2;
+		register char *dest = &ss_current_buffer->ss_ch_buf[
+					ss_current_buffer->ss_buf_size + 2];
+		register char *source =
+				&ss_current_buffer->ss_ch_buf[number_to_move];
+
+		while ( source > ss_current_buffer->ss_ch_buf )
+			*--dest = *--source;
+
+		ss_cp += (int) (dest - source);
+		ss_bp += (int) (dest - source);
+		ss_current_buffer->ss_n_chars =
+			ss_n_chars = ss_current_buffer->ss_buf_size;
+
+		if ( ss_cp < ss_current_buffer->ss_ch_buf + 2 )
+			YY_FATAL_ERROR( "flex scanner push-back overflow" );
+		}
+
+	*--ss_cp = (char) c;
+
+
+	sstext_ptr = ss_bp;
+	ss_hold_char = *ss_cp;
+	ss_c_buf_p = ss_cp;
+	}
+#endif	/* ifndef YY_NO_UNPUT */
+
+
+#ifdef __cplusplus
+static int ssinput()
+#else
+static int input()
+#endif
+	{
+	int c;
+
+	*ss_c_buf_p = ss_hold_char;
+
+	if ( *ss_c_buf_p == YY_END_OF_BUFFER_CHAR )
+		{
+		/* ss_c_buf_p now points to the character we want to return.
+		 * If this occurs *before* the EOB characters, then it's a
+		 * valid NUL; if not, then we've hit the end of the buffer.
+		 */
+		if ( ss_c_buf_p < &ss_current_buffer->ss_ch_buf[ss_n_chars] )
+			/* This was really a NUL. */
+			*ss_c_buf_p = '\0';
+
+		else
+			{ /* need more input */
+			int offset = ss_c_buf_p - sstext_ptr;
+			++ss_c_buf_p;
+
+			switch ( ss_get_next_buffer() )
+				{
+				case EOB_ACT_LAST_MATCH:
+					/* This happens because ss_g_n_b()
+					 * sees that we've accumulated a
+					 * token and flags that we need to
+					 * try matching the token before
+					 * proceeding.  But for input(),
+					 * there's no matching to consider.
+					 * So convert the EOB_ACT_LAST_MATCH
+					 * to EOB_ACT_END_OF_FILE.
+					 */
+
+					/* Reset buffer status. */
+					ssrestart( ssin );
+
+					/* fall through */
+
+				case EOB_ACT_END_OF_FILE:
+					{
+					if ( sswrap() )
+						return EOF;
+
+					if ( ! ss_did_buffer_switch_on_eof )
+						YY_NEW_FILE;
+#ifdef __cplusplus
+					return ssinput();
+#else
+					return input();
+#endif
+					}
+
+				case EOB_ACT_CONTINUE_SCAN:
+					ss_c_buf_p = sstext_ptr + offset;
+					break;
+				}
+			}
+		}
+
+	c = *(unsigned char *) ss_c_buf_p;	/* cast for 8-bit char's */
+	*ss_c_buf_p = '\0';	/* preserve sstext */
+	ss_hold_char = *++ss_c_buf_p;
+
+
+	return c;
+	}
+
+
+#ifdef YY_USE_PROTOS
+void ssrestart( FILE *input_file )
+#else
+void ssrestart( input_file )
+FILE *input_file;
+#endif
+	{
+	if ( ! ss_current_buffer )
+		ss_current_buffer = ss_create_buffer( ssin, YY_BUF_SIZE );
+
+	ss_init_buffer( ss_current_buffer, input_file );
+	ss_load_buffer_state();
+	}
+
+
+#ifdef YY_USE_PROTOS
+void ss_switch_to_buffer( YY_BUFFER_STATE new_buffer )
+#else
+void ss_switch_to_buffer( new_buffer )
+YY_BUFFER_STATE new_buffer;
+#endif
+	{
+	if ( ss_current_buffer == new_buffer )
+		return;
+
+	if ( ss_current_buffer )
+		{
+		/* Flush out information for old buffer. */
+		*ss_c_buf_p = ss_hold_char;
+		ss_current_buffer->ss_buf_pos = ss_c_buf_p;
+		ss_current_buffer->ss_n_chars = ss_n_chars;
+		}
+
+	ss_current_buffer = new_buffer;
+	ss_load_buffer_state();
+
+	/* We don't actually know whether we did this switch during
+	 * EOF (sswrap()) processing, but the only time this flag
+	 * is looked at is after sswrap() is called, so it's safe
+	 * to go ahead and always set it.
+	 */
+	ss_did_buffer_switch_on_eof = 1;
+	}
+
+
+#ifdef YY_USE_PROTOS
+void ss_load_buffer_state( void )
+#else
+void ss_load_buffer_state()
+#endif
+	{
+	ss_n_chars = ss_current_buffer->ss_n_chars;
+	sstext_ptr = ss_c_buf_p = ss_current_buffer->ss_buf_pos;
+	ssin = ss_current_buffer->ss_input_file;
+	ss_hold_char = *ss_c_buf_p;
+	}
+
+
+#ifdef YY_USE_PROTOS
+YY_BUFFER_STATE ss_create_buffer( FILE *file, int size )
+#else
+YY_BUFFER_STATE ss_create_buffer( file, size )
+FILE *file;
+int size;
+#endif
+	{
+	YY_BUFFER_STATE b;
+
+	b = (YY_BUFFER_STATE) ss_flex_alloc( sizeof( struct ss_buffer_state ) );
+	if ( ! b )
+		YY_FATAL_ERROR( "out of dynamic memory in ss_create_buffer()" );
+
+	b->ss_buf_size = size;
+
+	/* ss_ch_buf has to be 2 characters longer than the size given because
+	 * we need to put in 2 end-of-buffer characters.
+	 */
+	b->ss_ch_buf = (char *) ss_flex_alloc( b->ss_buf_size + 2 );
+	if ( ! b->ss_ch_buf )
+		YY_FATAL_ERROR( "out of dynamic memory in ss_create_buffer()" );
+
+	b->ss_is_our_buffer = 1;
+
+	ss_init_buffer( b, file );
+
+	return b;
+	}
+
+
+#ifdef YY_USE_PROTOS
+void ss_delete_buffer( YY_BUFFER_STATE b )
+#else
+void ss_delete_buffer( b )
+YY_BUFFER_STATE b;
+#endif
+	{
+	if ( ! b )
+		return;
+
+	if ( b == ss_current_buffer )
+		ss_current_buffer = (YY_BUFFER_STATE) 0;
+
+	if ( b->ss_is_our_buffer )
+		ss_flex_free( (void *) b->ss_ch_buf );
+
+	ss_flex_free( (void *) b );
+	}
+
+
+#ifndef YY_ALWAYS_INTERACTIVE
+#ifndef YY_NEVER_INTERACTIVE
+extern int isatty YY_PROTO(( int ));
+#endif
+#endif
+
+#ifdef YY_USE_PROTOS
+void ss_init_buffer( YY_BUFFER_STATE b, FILE *file )
+#else
+void ss_init_buffer( b, file )
+YY_BUFFER_STATE b;
+FILE *file;
+#endif
+
+
+	{
+	ss_flush_buffer( b );
+
+	b->ss_input_file = file;
+	b->ss_fill_buffer = 1;
+
+#if YY_ALWAYS_INTERACTIVE
+	b->ss_is_interactive = 1;
+#else
+#if YY_NEVER_INTERACTIVE
+	b->ss_is_interactive = 0;
+#else
+	b->ss_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
+#endif
+#endif
+	}
+
+
+#ifdef YY_USE_PROTOS
+void ss_flush_buffer( YY_BUFFER_STATE b )
+#else
+void ss_flush_buffer( b )
+YY_BUFFER_STATE b;
+#endif
+
+	{
+	if ( ! b )
+		return;
+
+	b->ss_n_chars = 0;
+
+	/* We always need two end-of-buffer characters.  The first causes
+	 * a transition to the end-of-buffer state.  The second causes
+	 * a jam in that state.
+	 */
+	b->ss_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
+	b->ss_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
+
+	b->ss_buf_pos = &b->ss_ch_buf[0];
+
+	b->ss_at_bol = 1;
+	b->ss_buffer_status = YY_BUFFER_NEW;
+
+	if ( b == ss_current_buffer )
+		ss_load_buffer_state();
+	}
+
+
+#ifndef YY_NO_SCAN_BUFFER
+#ifdef YY_USE_PROTOS
+YY_BUFFER_STATE ss_scan_buffer( char *base, ss_size_t size )
+#else
+YY_BUFFER_STATE ss_scan_buffer( base, size )
+char *base;
+ss_size_t size;
+#endif
+	{
+	YY_BUFFER_STATE b;
+
+	if ( size < 2 ||
+	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
+	     base[size-1] != YY_END_OF_BUFFER_CHAR )
+		/* They forgot to leave room for the EOB's. */
+		return 0;
+
+	b = (YY_BUFFER_STATE) ss_flex_alloc( sizeof( struct ss_buffer_state ) );
+	if ( ! b )
+		YY_FATAL_ERROR( "out of dynamic memory in ss_scan_buffer()" );
+
+	b->ss_buf_size = size - 2;	/* "- 2" to take care of EOB's */
+	b->ss_buf_pos = b->ss_ch_buf = base;
+	b->ss_is_our_buffer = 0;
+	b->ss_input_file = 0;
+	b->ss_n_chars = b->ss_buf_size;
+	b->ss_is_interactive = 0;
+	b->ss_at_bol = 1;
+	b->ss_fill_buffer = 0;
+	b->ss_buffer_status = YY_BUFFER_NEW;
+
+	ss_switch_to_buffer( b );
+
+	return b;
+	}
+#endif
+
+
+#ifndef YY_NO_SCAN_STRING
+#ifdef YY_USE_PROTOS
+YY_BUFFER_STATE ss_scan_string( ssconst char *ss_str )
+#else
+YY_BUFFER_STATE ss_scan_string( ss_str )
+ssconst char *ss_str;
+#endif
+	{
+	int len;
+	for ( len = 0; ss_str[len]; ++len )
+		;
+
+	return ss_scan_bytes( ss_str, len );
+	}
+#endif
+
+
+#ifndef YY_NO_SCAN_BYTES
+#ifdef YY_USE_PROTOS
+YY_BUFFER_STATE ss_scan_bytes( ssconst char *bytes, int len )
+#else
+YY_BUFFER_STATE ss_scan_bytes( bytes, len )
+ssconst char *bytes;
+int len;
+#endif
+	{
+	YY_BUFFER_STATE b;
+	char *buf;
+	ss_size_t n;
+	int i;
+
+	/* Get memory for full buffer, including space for trailing EOB's. */
+	n = len + 2;
+	buf = (char *) ss_flex_alloc( n );
+	if ( ! buf )
+		YY_FATAL_ERROR( "out of dynamic memory in ss_scan_bytes()" );
+
+	for ( i = 0; i < len; ++i )
+		buf[i] = bytes[i];
+
+	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;
+
+	b = ss_scan_buffer( buf, n );
+	if ( ! b )
+		YY_FATAL_ERROR( "bad buffer in ss_scan_bytes()" );
+
+	/* It's okay to grow etc. this buffer, and we should throw it
+	 * away when we're done.
+	 */
+	b->ss_is_our_buffer = 1;
+
+	return b;
+	}
+#endif
+
+
+#ifndef YY_NO_PUSH_STATE
+#ifdef YY_USE_PROTOS
+static void ss_push_state( int new_state )
+#else
+static void ss_push_state( new_state )
+int new_state;
+#endif
+	{
+	if ( ss_start_stack_ptr >= ss_start_stack_depth )
+		{
+		ss_size_t new_size;
+
+		ss_start_stack_depth += YY_START_STACK_INCR;
+		new_size = ss_start_stack_depth * sizeof( int );
+
+		if ( ! ss_start_stack )
+			ss_start_stack = (int *) ss_flex_alloc( new_size );
+
+		else
+			ss_start_stack = (int *) ss_flex_realloc(
+					(void *) ss_start_stack, new_size );
+
+		if ( ! ss_start_stack )
+			YY_FATAL_ERROR(
+			"out of memory expanding start-condition stack" );
+		}
+
+	ss_start_stack[ss_start_stack_ptr++] = YY_START;
+
+	BEGIN(new_state);
+	}
+#endif
+
+
+#ifndef YY_NO_POP_STATE
+static void ss_pop_state()
+	{
+	if ( --ss_start_stack_ptr < 0 )
+		YY_FATAL_ERROR( "start-condition stack underflow" );
+
+	BEGIN(ss_start_stack[ss_start_stack_ptr]);
+	}
+#endif
+
+
+#ifndef YY_NO_TOP_STATE
+static int ss_top_state()
+	{
+	return ss_start_stack[ss_start_stack_ptr - 1];
+	}
+#endif
+
+#ifndef YY_EXIT_FAILURE
+#define YY_EXIT_FAILURE 2
+#endif
+
+#ifdef YY_USE_PROTOS
+static void ss_fatal_error( ssconst char msg[] )
+#else
+static void ss_fatal_error( msg )
+char msg[];
+#endif
+	{
+	(void) fprintf( stderr, "%s\n", msg );
+	exit( YY_EXIT_FAILURE );
+	}
+
+
+
+/* Redefine ssless() so it works in section 3 code. */
+
+#undef ssless
+#define ssless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up sstext. */ \
+		sstext[ssleng] = ss_hold_char; \
+		ss_c_buf_p = sstext + n; \
+		ss_hold_char = *ss_c_buf_p; \
+		*ss_c_buf_p = '\0'; \
+		ssleng = n; \
+		} \
+	while ( 0 )
+
+
+/* Internal utility routines. */
+
+#ifndef sstext_ptr
+#ifdef YY_USE_PROTOS
+static void ss_flex_strncpy( char *s1, ssconst char *s2, int n )
+#else
+static void ss_flex_strncpy( s1, s2, n )
+char *s1;
+ssconst char *s2;
+int n;
+#endif
+	{
+	register int i;
+	for ( i = 0; i < n; ++i )
+		s1[i] = s2[i];
+	}
+#endif
+
+#ifdef YY_NEED_STRLEN
+#ifdef YY_USE_PROTOS
+static int ss_flex_strlen( ssconst char *s )
+#else
+static int ss_flex_strlen( s )
+ssconst char *s;
+#endif
+	{
+	register int n;
+	for ( n = 0; s[n]; ++n )
+		;
+
+	return n;
+	}
+#endif
+
+
+#ifdef YY_USE_PROTOS
+static void *ss_flex_alloc( ss_size_t size )
+#else
+static void *ss_flex_alloc( size )
+ss_size_t size;
+#endif
+	{
+	return (void *) malloc( size );
+	}
+
+#ifdef YY_USE_PROTOS
+static void *ss_flex_realloc( void *ptr, ss_size_t size )
+#else
+static void *ss_flex_realloc( ptr, size )
+void *ptr;
+ss_size_t size;
+#endif
+	{
+	/* The cast to (char *) in the following accommodates both
+	 * implementations that use char* generic pointers, and those
+	 * that use void* generic pointers.  It works with the latter
+	 * because both ANSI C and C++ allow castless assignment from
+	 * any pointer type to void*, and deal with argument conversions
+	 * as though doing an assignment.
+	 */
+	return (void *) realloc( (char *) ptr, size );
+	}
+
+#ifdef YY_USE_PROTOS
+static void ss_flex_free( void *ptr )
+#else
+static void ss_flex_free( ptr )
+void *ptr;
+#endif
+	{
+	free( ptr );
+	}
+
+#if YY_MAIN
+int main()
+	{
+	sslex();
+	return 0;
+	}
+#endif
+#line 107 "icalsslexer.l"
+
+
+int sswrap()
+{
+     return 1;
+}
+
diff -uNr ../kdepim-3.1.4/libical/src/libicalvcal/Makefile.am ./libical/src/libicalvcal/Makefile.am
--- ../kdepim-3.1.4/libical/src/libicalvcal/Makefile.am	Mon Aug 27 13:19:41 2001
+++ ./libical/src/libicalvcal/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -6,7 +6,7 @@
 	-I$(top_builddir)/src/libicalss	\
 	-I$(srcdir)
 
-libicalvcal_la_LDFLAGS = -version-info 0:0:0
+libicalvcal_la_LDFLAGS = -version-info 0:0:0 -no-undefined
 
 libicalvcal_la_SOURCES =	\
 	icalvcal.c		\
diff -uNr ../kdepim-3.1.4/libkcal/Makefile.am ./libkcal/Makefile.am
--- ../kdepim-3.1.4/libkcal/Makefile.am	Mon Oct 14 21:16:21 2002
+++ ./libkcal/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -5,7 +5,7 @@
   -I$(top_builddir)/libical/src/libicalss -I$(srcdir)/versit $(all_includes)
 
 lib_LTLIBRARIES   = libkcal.la
-libkcal_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 2:0:0 -module
+libkcal_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 2:0:0
 libkcal_la_LIBADD  = $(LIB_QT) versit/libversit.la $(LIB_KFILE) \
                      $(top_builddir)/libical/src/libical/libical.la \
                      $(top_builddir)/libical/src/libicalss/libicalss.la
diff -uNr ../kdepim-3.1.4/libkcal/versit/vcc.c ./libkcal/versit/vcc.c
--- ../kdepim-3.1.4/libkcal/versit/vcc.c	Wed May 16 08:21:43 2001
+++ ./libkcal/versit/vcc.c	Thu Sep 18 09:06:30 2003
@@ -125,7 +125,7 @@
 #endif
 
 #include <string.h>
-#ifndef __FreeBSD__
+#if !defined(__FreeBSD__) && !defined(__APPLE__)
 #include <malloc.h>
 #endif
 #include <stdio.h>
diff -uNr ../kdepim-3.1.4/libkdepim/Makefile.am ./libkdepim/Makefile.am
--- ../kdepim-3.1.4/libkdepim/Makefile.am	Mon Oct 14 21:16:21 2002
+++ ./libkdepim/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -9,7 +9,7 @@
   categoryeditdialog_base.ui categoryeditdialog.cpp \
   kdateedit.cpp kimportdialog.cpp kvcarddrag.cpp
 
-libkdepim_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 1:0:0 -module
+libkdepim_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 1:0:0
 libkdepim_la_LIBADD  = $(top_builddir)/libkdepim/resources/libkpimresources.la $(LIB_KIO) 
 
 METASOURCES = AUTO
diff -uNr ../kdepim-3.1.4/libkpimexchange/Makefile.am ./libkpimexchange/Makefile.am
--- ../kdepim-3.1.4/libkpimexchange/Makefile.am	Mon Oct 14 21:16:21 2002
+++ ./libkpimexchange/Makefile.am	Thu Sep 18 09:06:30 2003
@@ -9,7 +9,7 @@
 lib_LTLIBRARIES = libkpimexchange.la
 
 libkpimexchange_la_SOURCES = dummy.cpp
-libkpimexchange_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 1:0:0 -module
+libkpimexchange_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 1:0:0
 libkpimexchange_la_LIBADD = core/libkpimexchangecore.la calendar/libkpimexchangecalendar.la \
 			    $(LIB_KIO) $(top_builddir)/libkcal/libkcal.la 
 
