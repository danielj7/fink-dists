diff -ru netcat-0.6.1/src/core.c netcat-0.6.1-patched/src/core.c
--- netcat-0.6.1/src/core.c	Sun Oct 13 13:24:19 2002
+++ netcat-0.6.1-patched/src/core.c	Mon Jun 30 22:58:38 2003
@@ -550,7 +550,7 @@
        happening (for example the target sending queue is delaying the output
        and so requires some more time to free up. */
     if (nc_main->recvq.len == 0) {
-      debug_v("watching main sock for incoming data (recvq is empty)");
+      debug_v("%s", "watching main sock for incoming data (recvq is empty)");
       FD_SET(fd_sock, &ins);
     }
     else
@@ -558,7 +558,7 @@
 
     /* same thing for the other socket */
     if (nc_slave->recvq.len == 0) {
-      debug_v("watching slave sock for incoming data (recvq is empty)");
+      debug_v("%s", "watching slave sock for incoming data (recvq is empty)");
       if (use_stdin || (netcat_mode == NETCAT_TUNNEL))
         FD_SET(fd_stdin, &ins);
     }
@@ -596,7 +596,7 @@
 	exit(EXIT_FAILURE);
       }
       else if (read_ret == 0) {
-	debug_v("EOF Received from stdin! (removing from lookups..)");
+	debug_v("%s", "EOF Received from stdin! (removing from lookups..)");
 	/* kill everything if this is a tunnel */
 	if (netcat_mode == NETCAT_TUNNEL)
 	  inloop = FALSE;
@@ -725,7 +725,7 @@
 	exit(EXIT_FAILURE);
       }
       else if (read_ret == 0) {
-	debug_v("EOF Received from the net");
+	debug_v("%s", "EOF Received from the net");
 	inloop = FALSE;
       }
       else {
diff -ru netcat-0.6.1/src/netcat.c netcat-0.6.1-patched/src/netcat.c
--- netcat-0.6.1/src/netcat.c	Thu Oct  3 06:25:16 2002
+++ netcat-0.6.1-patched/src/netcat.c	Mon Jun 30 22:58:38 2003
@@ -27,6 +27,7 @@
 #endif
 
 #include "netcat.h"
+#include <nameser.h>
 #include <resolv.h>
 #include <signal.h>
 #include <getopt.h>
@@ -500,7 +501,7 @@
 	ncexec(&listen_sock);		/* this won't return */
       }
       core_readwrite(&listen_sock, &stdio_sock);
-      debug_dv("Listen: EXIT");
+      debug_dv("%s", "Listen: EXIT");
     }
     else {
       /* otherwise we are in tunnel mode.  The connect_sock var was already
@@ -593,13 +594,13 @@
 	ncexec(&connect_sock);		/* this won't return */
       }
       core_readwrite(&connect_sock, &stdio_sock);
-      debug_v("Connect: EXIT");
+      debug_v("%s", "Connect: EXIT");
     }
   }			/* end of while (total_ports > 0) */
 
   /* all basic modes should return here for the final cleanup */
  main_exit:
-  debug_v("Main: EXIT (cleaning up)");
+  debug_v("%s", "Main: EXIT (cleaning up)");
 
   printstats();
   return glob_ret;
