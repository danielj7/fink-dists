Package: passwd-core
Version: 20131113
Revision: 1

BuildDepends: fink (>= 0.33.0)
Replaces: passwd ( << 20130103-1 )
RuntimeDepends: passwd-configs

Source: https://github.com/fink/passwd/tarball/%v
Source-MD5: 3d2358c4b59f0560f0d59fa141fbfd7c
SourceRename: passwd-%v.tar.gz
SourceDirectory: fink-passwd-2a94113

PatchScript: <<
 sed 's|@PREFIX@|%p|g' <update-passwd.in >update-passwd
 sed 's|@PREFIX@|%p|g' <README.in >README
<<

CompileScript: <<
echo "No compiling required."
<<

InstallScript: <<
 mkdir -p %i/etc %i/sbin %i/share/%n
 install -c -m 755 update-passwd %i/sbin/
 install passwd.conf.in %i/share/%n/passwd.conf.in
 install passwd.conf.in %i/etc/passwd.conf
<<
ConfFiles: %p/etc/passwd.conf

PostInstScript: <<
if [ -f %p/etc/passwd.conf ] ; then 
	reconf="false"
else
	reconf=$1
fi
if [ "$reconf" = "configure" ] ; then
	# Check for AutoUid: in fink.conf
	aucheck=`grep AutoUid: %p/etc/fink.conf`
	if [[ $aucheck =~ true ]] || [[ $aucheck =~ 1 ]] ; then
    	#Auto ID
    	uidmin=`grep AutoUidMin %p/etc/fink.conf | cut -d: -f2`
    	uidmax=`grep AutoUidMax %p/etc/fink.conf | cut -d: -f2`
		printf "Using AutoUID settings from fink.conf\n"
		cp %p/share/%n/passwd.conf.in %p/etc/passwd.conf
		printf "AutoUid: true\n" >> %p/etc/passwd.conf
		printf "AutoUidMin: %%d\n" $uidmin >> %p/etc/passwd.conf
		printf "AutoUidMax: %%d\n" $uidmax >> %p/etc/passwd.conf			
		printf "UIDs and GIDs will be dynamically allocated when passwd-* users are installed.\n"
		printf "To override this behavior, edit %p/etc/passwd.conf as a superuser and change\n"
		printf "The AutoUID flag to 'false'.\n"
	else
		printf "We recommend allocating UIDs and GIDs automatically,\n"
		printf "unless you have specific requirements for UIDs and GIDs.\n"
		read -p "Set UIDs/GIDs automatically? [Y/n] " answer
		answer=`echo $answer | sed 's/^[yY].*$/y/'`
		if [ -z "$answer" -o "x$answer" = "xy" ]; then
		    uidmin=0
		    uidmax=0
		    until [ $uidmin -ne 0 ] ; do
			    read -p "Enter the minimum for the range [600] " test_id
			    if [ -z "$test_id" ] 
			    	then uidmin=600
			    elif [[ ! $test_id =~ ^[0-9]+$ ]] || [ $test_id -eq 0 ]
    		    	then printf "ID must be a positive integer.\n"
				else
					uidmin=$test_id
				fi
		    done
		    until [ $uidmax -ne 0 ] ; do
			    read -p "Enter the maximum for the range [699] " test_id
			    if [ -z "$test_id" ] 
			    	then uidmax=699
			    elif [[ ! $test_id =~ ^[0-9]+$ ]] || [ $test_id -eq 0 ]
    		    	then printf "ID must be a positive integer.\n"
				elif [ $test_id -le $uidmin ] 
					then printf "max ID must be larger than or equal to %%s\n" $uidmin
				else
					uidmax=$test_id
				fi
		    done
			cp %p/share/%n/passwd.conf.in %p/etc/passwd.conf
			printf "AutoUid: true\n" >> %p/etc/passwd.conf
			printf "AutoUidMin: %%d\n" $uidmin >> %p/etc/passwd.conf
			printf "AutoUidMax: %%d\n" $uidmax >> %p/etc/passwd.conf			
			printf "UIDs and GIDs will be dynamically allocated when\n"
			printf "passwd-* users are installed.\n"
		else
			printf "OK.  You should set the UIDs and GIDs in %p/etc/passwd-fink\n"
			printf "and %p/etc/group-fink to be processed automatically,\n"
			printf "or accept the default values.\n"
			cp %p/share/%n/passwd.conf.in %p/etc/passwd.conf
			printf "AutoUid: false\n" >> %p/etc/passwd.conf	
		fi
	fi
else
	printf "Using existing %p/etc/passwd.conf settings.\n"
	printf "If you want to reset them, remove that file and run\n"
	printf "'fink reinstall passwd-core'."
fi
<< 
SplitOff99: <<
  Package: passwd
  Depends: passwd-core (>= 20130103-1)
  Description: OBSOLETE: use package 'passwd-core' instead
  RuntimeDepends: fink-obsolete-packages
  DocFiles: README README.removing-users
<<
## New users are added as separate passwd-FOO.info files in the 'base' section.

DocFiles: README README.removing-users 
#
Description: User and group entries for daemons: core pkg
DescDetail: <<
This package adds several administrative user and group entries to
your user database. These are needed to protect the data of several
daemons (e.g. news server, database server).
<<
DescUsage: <<
Packages that require a specific user (@user@), should set Depends: on 
'passwd-@user@'.  Packages that currently depend on 'passwd' (the legacy 
non-split package) can be upgraded at will to use their needed passwd-@user@
package.

As of version 20130103, the data required for each user has been migrated into
its own package, rather than relying on a central database from passwd-core.  
The format is:

	username 'Real Name' home shell groupname 'Group membership string'

or

	groupname 'Group membership string'	
	
for entries which are only groups.
<<
DescPackaging: <<
20131113 (nieder):
Each user:group is now controlled by an independent package. Packages that 
require a specific user should depend on 'passwd-@user@' and not on the 
base package 'passwd'.

Requires extra hoops besides ConfFiles: %p/etc/passwd.conf because we modify that 
in the PostInstScript.
<<
License: Public Domain
Maintainer: Fink Core Group <fink-core@lists.sourceforge.net>
Homepage: https://github.com/fink/passwd
