Package: ccp4
Version: 6.0.1
Revision: 1005
GCC: 4
Source: ftp://ftp.ccp4.ac.uk/ccp4/%v/packed/ccp4-%v-core-src.tar.gz
Source-MD5: bd3ff43388b58841de79bcc23ebf81e3
SourceDirectory: ccp4-%v
Source2: ftp://ftp.ccp4.ac.uk/ccp4/6.0.0/packed/phaser-1.3.2-cctbx-src.tar.gz
Source2-MD5: e4eee45ca8a299242a1089e35e63c7a0 
Source3: http://chemistry.ucsc.edu/~wgscott/xtal/xtalfink/XCCPJiffy-custom.gz
Source3-MD5: 21568dd2475505929573a3fd452c538f
Source4: http://chemistry.ucsc.edu/~wgscott/xtal/xtalfink/ccp4_i686-apple-darwin8.6.1_libtool.gz
Source4-MD5: e40104835406c75c8aee16471b2dd06e
Depends: x11, tcltk, blt, gcc4-shlibs (>= 2:4.1.99-20060515), fftw-shlibs, %N-shlibs (= %v-%r) 
BuildDepends: gcc4 (>= 2:4.1.99-20060515), f2c, fort77, tcltk-dev, fftw
Replaces: mosflm (<= 6.2.3-2), mosflm-small (<= 6.2.3-2), refmac (<= 5.1999-3), ccp4-shlibs (<= 6.0.1-1004), ccp4 (<= 6.0.1-1004), ccp4-dev (<= 6.0.1-1004), bundle-ccp4-inel, clipper-bin, ccp4-gfortran, ccp4-gfortran-dev, bundle-ccp4-powerpc
Conflicts: ccp4-shlibs (<= 6.0.1-1004) , ccp4 (<= 6.0.1-1004), ccp4-dev (<= 6.0.1-1004), bundle-ccp4-intel, bundle-ccp4-powerpc, ccp4-gfortran, ccp4-gfortran-dev
NoSetCPPFLAGS: true
NoSetLDFLAGS: true
#
################################################################################
PatchScript: <<
#!/bin/zsh -efv
#
umask 0022
# This is temporary until they put the phaser tarball in the right directory.
cp -r ../ccp4-6.0/lib/cctbx lib/cctbx
cp -r ../ccp4-6.0/lib/src/* lib/src/.
cp -r ../ccp4-6.0/src/phaser src/phaser
#
# Now do the patch
sed 's|@PREFIX@|%p|g' <%a/%n.patch | patch -p1
# setup script for tcsh, zsh and bash users
export TEMPXTAL=$PWD:h
#
perl -pi.bak -e 's|/xtal|\$TEMPXTAL|g' include/ccp4.setup*   # build prefix (changed in install)
perl -pi.bak -e 's|/prefix|%p|g' include/ccp4.setup*            # location of tcktk, blt
perl -pi.bak -e 's|/usr/local/bin|%p/bin|g' include/ccp4.setup*   # same
perl -pi.bak -e 's|limit stacksize 65536|limit stacksize unlimited|g' include/ccp4.setup* # same
#
perl -pi.bak -e 's|SW_PREFIX|%p|g' **/configure            # location of tcktk, blt  
cp include/ccp4.setup-dist include/ccp4.setup
rm -f include/ccp4.setup-bash **/configure.bak include/ccp4.setup*.bak
#
# Set up XCCPJiffy wrapper scripts in $CCP4/etc
# These are small wrapper scripts for xplot84driver and xloggraph generated by the patch
 chmod a+x etc/x*
# Fix the dylib install path in configure
perl -pi.bak -e 's|\$rpath|%p/lib/ccp4-%v|g' **/configure
 
 # We need the mmdbold clipper libraries built for COOT:
perl -pi.bak -e 's|enable_mmdbold=no|enable_mmdbold=yes|g' lib/clipper/configure*
<<
################################################################################
CompileScript: <<
#!/bin/zsh -efv
umask 0022

 # These are required for the build environment
export TEMPXTAL=$PWD:h
source include/ccp4.setup-zsh
export DYLD_LIBRARY_PATH=$CLIB
export rpath=%p/lib/ccp4-%v
export RPATH=%p/lib/ccp4-%v

 # The cctbx sub-package requires us to use the system's own Python
export PATH=/System/Library/Frameworks/Python.framework/Versions/Current/bin:$PATH
export PYTHONHOME="/System/Library/Frameworks/Python.framework/Versions/Current"
export PYTHONPATH="/System/Library/Frameworks/Python.framework/Versions/Current/lib/python2.3"

 # gfortran is actually used by default, but to ensure the right thing happens, specify it.
FC="%p/lib/gcc4/bin/gfortran" F_LIBS="%p/lib/gcc4/lib" ./configure --with-shared-libs --with-fftw=%p --with-x Darwin

#  fix some post-configure bugs by getting rid of -lg2c
perl -pi.bak -e 's|-lg2c||g' x-windows/**/*akefile*

if [[ $(uname -p) != powerpc ]];then 
    perl -pi.bak -e 's|%p/lib/gcc4/bin/||g' lib/clipper/**/Makefile*
    # Replace the ccp4 libtool file with one that works and compiles cpirate:
    cp ../ccp4_i686-apple-darwin8.6.1_libtool.gz  lib/clipper/libtool.gz 
    mv -f lib/clipper/libtool lib/clipper/libtool-dist
    gunzip lib/clipper/libtool.gz
    chmod a+x lib/clipper/libtool
fi

( cd x-windows/XCCPJIFFY; perl -pi.bak -e 's|-lgfortran|-lgfortran -L%p/lib/gcc4/lib |g' *akefile* )
#################
make
make install
#################

# xloggraph will fail, but we will link it with fort77 below
#
# Make wrappers for xplot84driver and xloggraph, so rename the executables
cd  x-windows/XCCPJIFFY
cp xplot84driver  $CBIN/xplot84driver.exe
rm -f $CBIN/xplot84driver
#
# Manually link xloggraph with fort77 (fails in make)
echo ""
echo "**********************************************************************"
echo "Re-linking xloggraph with fort77.  Ignore previous error messages."
echo "**********************************************************************"
echo ""
#
 perl -pi.bak -e 's|FC = g77 -fno-second-underscore||g' Makefile
 make -i xloggraph  2>/dev/null
 fort77 -o xloggraph msg_box.o ZDr2d.o EditString.o hardcopy_ctrl.o xloggraph.o log_file.o tom_fortran_interface.o bits_and_pieces.o graphics.o -g -Os -I/usr/include/X11R6 -L/usr/X11R6/lib -lXaw -lXmu -lXt -lSM -lICE -lXpm -lXext -lX11 -lm -lgfortran -L%p/lib/gcc4/lib

#
sleep 10
#
cp xloggraph $CBIN/xloggraph.exe
if [[ -x $CBIN/xloggraph ]];then
    rm -f $CBIN/xloggraph
fi
cd ../..
#
# Cleanup:
#
# make realclean
/bin/rm -f **/*.o
/bin/rm -f **/*.bak
/bin/rm -Rf src 
/bin/rm -Rf x-windows/libjwc/libjwc_c
/bin/rm -Rf x-windows/libjwc/libjwc_f
/bin/rm -Rf x-windows/xdl_view/src
 # remove redundant library junk
/bin/rm -Rf lib/cctbx
/bin/rm -Rf lib/**/.libs
/bin/rm -f lib/ccif/libccif.dylib
/bin/rm -f lib/src/libccp4c.dylib
/bin/rm -f lib/src/libmmdb.dylib
#/bin/rm -R unsupported
/bin/rm -R testcomp* 
/bin/rm -R BINARY*
cd $CLIB
/bin/rm -f **/*.c 
/bin/rm -f **/*.f 
/bin/rm -f **/*.cpp
echo "Compile Phase Completed!"
echo "There are $(command ls -1 $CBIN | wc -l) programs in $CBIN; "
echo "there should be 200"
<<
################################################################################
InstallScript: <<
#!/bin/zsh -efv

umask 0022
export TEMPXTAL=$PWD:h
source include/ccp4.setup-zsh
export DYLD_LIBRARY_PATH=$CLIB
ORIGDIR=$(dirname $PWD)
# Change environment scripts to match final installation
perl -pi -e 's|\$TEMPXTAL|%p/share/xtal|g' include/ccp4.setup*      # install prefix
#
#
 cp ../XCCPJiffy-custom.gz  XCCPJiffy.gz ; gunzip XCCPJiffy.gz; chmod a+x XCCPJiffy
 perl -pi -e 's|5.0.1|%v|g' XCCPJiffy
 mv -f  XCCPJiffy lib/X11/app-defaults/XCCPJiffy
#  
 perl -pi.bak -e 's|/src/fink.build/ccp4-%v-%r|/share/xtal|g' bin/clipper-config
 rm -f bin/clipper-config.bak
 perl -pi.bak -e 's|lclipper |lclipper-core |g' bin/clipper-config
 rm -f bin/clipper-config.bak                                
 perl -pi.bak -e 's|lib/lib -lrfftw -lfftw |lib/ccp4-%v -lsrfftw -lsfftw |g' bin/clipper-config
 rm -f bin/clipper-config.bak                                
#
# Fix path in libfoo.la libtool files:
#  
 perl -pi.bak -e 's|/src/fink.build/ccp4-%v-%r/ccp4-%v/lib|/lib/ccp4-%v|g' lib/**/*.la
 rm -f lib/**/*.la.bak
#
# Now install:
#
 mkdir -p %i/lib
 cp -R lib %i/lib/ccp4-%v
 mkdir -p %i/bin
#
 mkdir -p %i/share/xtal/ccp4-%v/help
 mkdir -p %i/share/man/man1
# set up man pages in a fink-compliant manner
 cd $PWD/doc
 mv rasmol.doc eightbit_rasmol.doc
 foreach docfilepage ( *.doc )
     cp ${docfilepage}  %i/share/man/man1/${docfilepage:r}.1
     cp ${docfilepage}  %i/share/xtal/ccp4-%v/help/${docfilepage:r}
end
# back to build directory
 cd ..
#                                
/bin/rm -rf lib 
#/bin/mv  lib lib-save

 cp -R * %i/share/xtal/ccp4-%v/.
 ln -s   %p/lib/ccp4-%v      %i/share/xtal/ccp4-%v/lib
#
# making scripts for %p/etc/profile.d  
 mkdir -p %i/etc/profile.d
#
 echo "source %p/share/xtal/ccp4-%v/include/ccp4.setup"                 > %i/etc/profile.d/ccp4.csh
 echo "setenv CLIB %p/lib/ccp4-%v "                                    >> %i/etc/profile.d/ccp4.csh
#

echo "if [ -z \$ZSH_NAME ];then                           "             > %i/etc/profile.d/ccp4.sh 
echo "    source %p/share/xtal/ccp4-%v/include/ccp4.setup-sh "         >> %i/etc/profile.d/ccp4.sh    
echo "else                                               "             >> %i/etc/profile.d/ccp4.sh
echo "    source %p/share/xtal/ccp4-%v/include/ccp4.setup-zsh"         >> %i/etc/profile.d/ccp4.sh
echo "fi                                                 "             >> %i/etc/profile.d/ccp4.sh
echo "export CLIB=%p/lib/ccp4-%v "                                     >> %i/etc/profile.d/ccp4.sh
#
 chmod a+x %i/etc/profile.d/ccp4.*
#
 chmod a+x  %i/share/xtal/ccp4-%v/ccp4i/etc/osx_ccp4_mail
#
# chmod a+x %i/share/xtal/ccp4-%v/etc/ccp4help 
#
 ranlib %i/lib/ccp4-%v/*.a
 ranlib %i/lib/ccp4-%v/**/*.a
#
<<
################################################################################
PostInstScript: <<
# Make the user read the license conditions
more %p/share/xtal/ccp4-%v/conditions.txt
<<
################################################################################
################################################################################
SplitOff: <<
Package: %N-shlibs
Description: CCP4 dynamic libraries
Files:<<
lib/ccp4-%v/*.dylib  
<<
Shlibs: <<
%p/lib/ccp4-%v/libccif.dylib               0.0.0  %n   (>= 6.0.1-1005)
%p/lib/ccp4-%v/libccp4c.dylib              0.0.0  %n   (>= 6.0.1-1005)
%p/lib/ccp4-%v/libjwc_c.0.dylib            2.0.0  %n   (>= 6.0.1-1005)
%p/lib/ccp4-%v/libmmdb.dylib               0.0.0  %n   (>= 6.0.1-1005)
%p/lib/ccp4-%v/libssm.0.dylib              1.0.0  %n   (>= 6.0.1-1005)
%p/lib/ccp4-%v/libxdl_view.2.dylib         3.0.0  %n   (>= 6.0.1-1005)
%p/lib/ccp4-%v/libxdl_viewextra.0.dylib    1.0.0  %n   (>= 6.0.1-1005)
<<
DocFiles:  CHANGES COPYING INSTALL INSTALL.html INSTALL.ps README PROBLEMS academic_software_licence.pdf
<<
################################################################################
################################################################################
SplitOff2: <<
Package: %N-dev
Depends: %N
BuildDependsOnly: true
Description: CCP4 static libraries and libtool files
Files:<<
lib/ccp4-%v/*.a  
lib/ccp4-%v/*.la
<<
DocFiles:  CHANGES COPYING INSTALL INSTALL.html INSTALL.ps README PROBLEMS academic_software_licence.pdf
<<


################################################################################
Description:  Macromolecular crystallography package
DescDetail: <<
These are the ccp4 programs compiled with gfortran instead of g77.
The (currently default) g77 version does not work on intel.  The hope
is that this will. (With gfortran-4.2, everything compiles.) Thanks 
to Jack Howarth for many helpful improvements.

CCP4 macromolecular crystallography suite has approximately
200 programs and utilities. This version included Clipper
libraries, and ccif and phaser. If you need cctbx, please
install the cctbx fink package separately.

Type "ccp4help" for a summary listing of all ccp4 programs.
Type "ccp4help foo" for a detailed description of program "foo."

Invoke optional ccp4i gui for the first run using: sudo ccp4i
Thereafter, invoke without sudo.

This version compiles with the Apple Lapack/Blas framework
License agreement is part of configure file -- print out form and mail in,
additional comments at http://chemistry.ucsc.edu/~wgscott/xtal/ccp4.html
CCP4 files will be installed under /sw/share/xtal/ccp4-6.0.1
This revision includes all available CCP4 patches as of Aug 12, 2006. 
and new bash and zsh command completions specific to ccp4. These patches
include the following from the CCP4 website:

act.f-6July2006.diff
anisoanl.f-r1.22-r1.24.diff
cad.f-r1.70-r1.72.diff
chainsaw.cpp-11May2006.diff
contact.f-12June2006.diff
index.patches
make_patch.sh
molrep.f-r1.28-r1.28.2.1.diff
mtztona4.f-r1.23-r1.24.diff
omit.f-r1.12-r1.13.diff
polarrfn.f-r1.45-r1.46.diff
refmac5-r1_42.tcl
refmac5.tcl-r1.39.2.3-r1.42.diff
rotmat.f-17July2006.diff
sc.f-r1.9-r1.9.2.1.diff
setup.fh-r1.5-r1.5.2.1.diff
<<
DocFiles: README CHANGES COPYING PROBLEMS INSTALL INSTALL.html INSTALL.ps ccp4i_installation.html academic_software_licence.pdf  academic_software_licence.ps.gz  academic_software_licence.rtf
Homepage: http://www.ccp4.ac.uk  
License: Commercial
Maintainer: W. G. Scott <wgscott@users.sourceforge.net>
