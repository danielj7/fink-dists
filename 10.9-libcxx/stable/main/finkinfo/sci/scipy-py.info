Info2: <<
Package: scipy-py%type_pkg[python]
Version: 1.0.0
Epoch: 1
Revision: 1
Maintainer: None <fink-devel@lists.sourceforge.net>
Type: python (2.7 3.4 3.5 3.6), gcc (6)
Depends: <<
	cython-py%type_pkg[python],
	gcc%type_raw[gcc]-shlibs,
	numpy-py%type_pkg[python] (>= 1.13.3-1),
	python%type_pkg[python],
	suitesparse-shlibs
<<
BuildDepends: <<
	fink (>= 0.32.0),
	gcc%type_raw[gcc]-compiler,
	suitesparse (>= 4.0.2-2),
	swig
<<
BuildConflicts: <<
	atlas
<<
#Source: mirror:sourceforge:scipy/scipy-%v.tar.gz
Source: http://github.com/scipy/scipy/releases/download/v%v/scipy-%v.tar.xz
Source-MD5: b07961a465964ef3afaf30a91a96d91a
PatchScript: <<
#!/bin/bash -ev
  cat <<EOF > site.cfg
[amd]
library_dirs = %p/lib
include_dirs = %p/include/suitesparse
amd_libs = amd

[umfpack]
library_dirs = %p/lib
include_dirs = %p/include/suitesparse
umfpack_libs = umfpack
EOF
<<
NoSetLDFLAGS: true
CompileScript: <<
#!/bin/sh -ev
 darwin_vers=`uname -r | cut -d. -f1`
 if [ "$darwin_vers" -ge 11 ]; then
   export CC=clang
   export CXX=clang++
   export FFLAGS=-ff2c
 else
   export CC=%p/bin/gcc-fsf-%type_raw[gcc]
   export CXX=%p/bin/g++-fsf-%type_raw[gcc]
 fi
 export FC=%p/lib/gcc%type_raw[gcc]/bin/gfortran
 export PATH="%p/lib/gcc%type_raw[gcc]/bin:$PATH"
 export SHELL=/bin/sh

 if [ %type_pkg[python] -eq 26 ] ; then
 	 export LDSHARED="$CC -bundle -L%p/lib/python%type_raw[python]/config -lpython%type_raw[python]"
 fi

# unset LDFLAGS
 ATLAS=None LAPACK=/usr/lib BLAS=/usr/lib %p/bin/python%type_raw[python] setup.py build --fcompiler gnu95
<<
InstallScript: <<
#!/bin/bash -ev
 ATLAS=None LAPACK=/usr/lib BLAS=/usr/lib %p/bin/python%type_raw[python] setup.py install --root %d

 if [ -f %b/INSTALL_MAKE_CHECK ]; then
   mkdir test
   cd test
   PYTHONPATH=%i/lib/python%type_raw[python]/site-packages %p/bin/python%type_raw[python] -B -c "import scipy, sys; e=scipy.test(); sys.exit(1-e)"
 fi
<<
InfoTest: <<
TestDepends: pytest-py%type_pkg[python] (>= 3.2.3)
TestScript: touch %b/INSTALL_MAKE_CHECK
<<
DocFiles: INSTALL.rst.txt LICENSE.txt
Description: Scientific tools for Python
DescDetail: <<
SciPy (pronounced "Sigh Pie") is open-source software for mathematics,
science, and engineering. It is also the name of a very popular
conference on scientific programming with Python. The SciPy library
depends on NumPy, which provides convenient and fast N-dimensional
array manipulation. The SciPy library is built to work with NumPy
arrays, and provides many user-friendly and efficient numerical
routines such as routines for numerical integration and
optimization. Together, they run on all popular operating systems, are
quick to install, and are free of charge. NumPy and SciPy are easy to
use, but powerful enough to be depended upon by some of the world's
leading scientists and engineers. If you need to manipulate numbers on
a computer and display or publish the results, give SciPy a try!
<<
DescPackaging: <<
The LDFLAGS environment variable is unset, because it overwrites the
link options, including the ones which provide the libpython2.5
library.

The patch script allow to compile scipy-py with the suitesparse
package installed. See:
http://thread.gmane.org/gmane.os.macosx.fink.user/28476

Originally packaged by Jeffrey Whitaker.

Build against gcc-6/g++-6/gfortran for darwin10 and earlier. Use
clang/clang++/gfortran with -ff2c on darwin11 and later. Note that
the Accelerate framework has single precision rounding issues starting
with darwin11. All tests passing under darwin14/15.

Set SHELL (%v >= 1.0.0) because fink-bld's shell is /usr/bin/false and 
several configure test programs require a real shell.
https://sourceforge.net/p/fink/package-submissions/4930/#467b
<<
License: OSI-Approved
Homepage: http://www.scipy.org
<<
